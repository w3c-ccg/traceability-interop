{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6bea5785-75d5-491b-ae2c-c8e0319acc74",
        "name": "Clear Cache",
        "item": [
          {
            "id": "62fe1653-eb1a-49bd-8776-fcf2039df660",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f3a7390-bdd8-4178-8447-d4f740107d42",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c6be011e-3c23-4ab3-97f2-16302f002112"
                }
              }
            ]
          },
          {
            "id": "33f58e95-2aeb-4656-bf1e-06a084692a0a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e518673-d2e1-420f-ac9b-80ec196e6654",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "83c85264-d7cb-4519-ab01-78b77c98f8f1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b35c15b4-4615-4054-8d2f-8bb75ca08e44",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c9691b39-3de2-4f7a-9176-676e8d24d8c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e608c85-df46-428c-bb32-32f756c6e841",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99c99513-7d20-4464-a5d4-e205b2b78a96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38d4ce6a-a716-4d07-8447-53398fe16012"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57fad9e9-637b-42af-a343-283b85d81355",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83000dfe-5d7d-45eb-b40a-a8e17642d3b6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b8031684-410e-4445-886f-207d0d58d2dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "afa0bbf9-fee4-4803-acce-119c82a4b4ed"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcae3443-f4a4-4206-be8b-38068d0ef3d3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "92beb9de-659d-4c40-aae0-5cad3612d702"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bf2ea27-fea3-4ed9-af8a-f0ac3083a000",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "166f0860-e269-40e1-86fd-1c6035a6c88f"
            }
          }
        ]
      },
      {
        "id": "d3ac1e2e-2d27-49c0-b7c8-339cebfb435a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "75d3d645-4d5f-4f5f-9909-7d9ee40e8219",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63f085d8-7c2a-452b-80e2-08236fabdf53",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2c4ceb3e-d892-4aee-b5c0-b8beb42c9793",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac89898-23bf-4f67-b2a1-04cfdec81d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c0814ad-7ddc-4c80-b0a0-e1618fb20daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2aeaa3-a8eb-4f2c-9923-a72b2b5d30de",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05ee4a7-d21f-470b-b234-bdaa06057071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fdbd182-3231-4f46-8a33-024a37590cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e43fb90-323b-4099-98e0-a7b65b0c22e2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546b54bb-8eb5-4f2c-8d0a-9b0e6187ee55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76928e93-9106-4eef-8d42-ef0d4d39c1a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c49480ee-fa9a-4a7a-9fed-53f1550dbfb7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5f29f04-d26f-4963-84a4-444a6f9f6b7d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e4d58d-b3ef-44ae-8761-80679cc4c571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a7dc4c5-a484-471b-9e1d-1b9401afe87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a799fd8e-6bc9-4f82-b01c-f43c264996d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856f05df-9472-4b64-9976-a1f4d5a3b0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69b768a-5cd6-4520-8c78-90869f9978be",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648266cf-3211-4542-9422-9477a27a4178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd287390-9047-4195-8cea-8bdf1db851c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04efe5d1-98ae-4ea1-a7d8-21d838abab96",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "1e91cb72-d016-4f11-b488-613a563285e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b2a87fab-5ade-41bc-9717-a04ad64c7749",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7db1d60f-1dff-49b3-a004-fae3d4e92e3c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec85c6c2-81b0-4f03-89c2-1882682fd3e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4dfe1d21-cfbb-4b46-9384-5079e4c93d78"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae27a134-2baa-4c8e-bc3e-df9e0cc2ff90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "b066261f-d730-4741-9827-8f1db7516000"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f64cb53e-2f4a-4ca7-b360-2ccf05af4a8d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16d15713-481c-4d99-b9a7-f1c7e5f56570"
            }
          }
        ]
      },
      {
        "id": "fdf1fac3-0115-4a9b-a304-2065b6923b1f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "02e648e1-8c34-4778-8b38-540bd3847ce6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b41a6046-5206-4f1f-ac8f-1716e510310a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b066005d-d4a7-404a-af89-f8f08721336e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2c3759-16ed-44b5-922e-f0c0617f5a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4dff44-1711-4243-b519-f35010a8c2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6c6963-61db-4923-a9e3-41a365b7af8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "579df3bb-b0f8-414f-8c37-ae23c59e863e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dddb33-010a-4e5b-ac84-80007327305a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c0282b-4641-4715-890c-2d9475e693a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14be4ada-1ee2-43bb-a555-76dd30a8536c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f2c7ab-7ea1-4aaa-a4f4-dcb022079809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c9e4bca-844e-44ba-9f5b-538e1fd366cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1c633a-75c5-4d66-a841-35845803f784",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cfc1c8-5d59-4033-bbb2-3696bf936c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5c91d2-2cb6-402f-acdf-70c47b63b184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd794d7d-2c9f-463a-a324-f69a8a1043c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee873844-4c62-4c13-9fd4-ea6e7d1fef84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394c7e57-ef43-49f1-85f1-3f2443b681c2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a934ca-668f-4df2-8640-5d3e0fa800ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30255ea-5319-4ecb-92f5-f47b23e08f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1206cf5e-a186-48be-8073-c7175fb56287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7014be72-1eef-4c96-b8f8-67b8b4546217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a413cd-270b-404f-a26d-3089fe17d3f3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81bd37e-bb71-4a54-9316-cc357e1bbe97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62795f78-209f-4ee6-94fa-d552f64e0713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeed0e78-2a23-44d7-8836-c6bb891c3e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbe6aa62-70a0-421f-ba95-d4f16dae2f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cda528-b191-4810-8076-a1873284d02d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9458ff8-818f-4c46-a57c-3683a795c979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61a502e-05f4-49be-9000-7b3741f82b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b25044-7064-4412-8218-073ba837d747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf2ef889-07af-4aa1-bd90-ead6f33901da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08aaaca7-eead-48d0-b409-91f9f49b502e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57ea137-7052-404c-9114-f4b8c4c3f73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e863a6-5371-4cc7-86af-f8e5088fc3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dd291c-97e1-48b4-b237-4dd161c1d45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b315424-fe28-4a63-90b8-bcefc5c9c9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b2267e-55ef-4f6c-b133-9fffeed46489",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e266cbd-fa45-4e35-bdf4-3dbb8a7bc639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2fa75e6-0229-423a-8fa0-dd1ce36a49af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9b3040-08ee-4dda-a9da-e9487fe6e483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4098a52-ad3e-4010-a594-7e428ed24150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3613a9b-7435-45fa-8137-86e1297898e8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2684943e-3aed-4b7b-91d8-27d887402d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a129c378-ec36-46fc-95d0-263141228c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36be19a8-0480-404b-84d0-c82ee5e4f470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6516208-e4a3-40a4-bef2-ebf9b6d65e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0316df-f8d8-47bf-a8b3-5fb16a44052d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49149cb0-ae20-4256-9ec1-e0d7f4e13365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1bf59c-a33d-41ad-b121-0d85b39306c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4d3cd3-65bb-4b39-a577-c8cafaf02ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5008629-91ea-4e9e-9ff4-1735ce23e6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d810cf4-56d8-4b5f-b7e4-4095d7fd0710",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0393513e-c6c7-42d9-aca3-92be94849b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce3e621-dfc7-4e2a-b4cd-a64ea3947e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bb8a32-24b6-4b3f-acd4-f0fc9e418f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1131359-0a4c-48e7-9146-9d928456e448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cf2cd5-3481-45dc-a323-aa22143cfb31",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c412b61-8677-4f18-a341-74d25f9d9edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b233e55-ffea-4128-a1c6-d8f70ce19a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf7a0d4-af08-4183-9642-2b04f292ddfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bb86e8f-422f-458a-925b-73fb5987f8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd07b99c-a281-4537-b819-9bb2b4dceb34",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ec5848-6943-4c6d-a1c9-06344273ea76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f41c7cc-789f-44d0-9790-d8e2538df989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a77bfe-1e57-4c34-bbe7-7e9ce050562f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb6fcf25-2ad8-4a61-a24b-dc7213dd5646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea65bd9-1ae8-4475-8bf0-e0a3e66c0f9d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b3789d-d84a-4c2d-a34d-ee121e47ddaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdcacd7-9162-41c1-8f18-e118bf49aa61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accb60fd-dafe-42c4-a9f9-468e0655820f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5415b7b9-0c25-4f7a-b9bb-9c55a961d107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacf33d8-904c-4e8b-b6f2-a5aa3f2b15ee",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725e9a37-36f7-48a0-ac50-3102d7fdaf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd6073b-d9f7-4b57-a840-b558d3c9d766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95e4c34-87ef-4ff7-bb8c-a2ae52917035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2270a103-30bf-4e0f-b2df-33b50c8c42e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fdfa59-daff-49ab-856b-c61803ab5398",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7f933c-d421-4dc7-8a45-7f62b0969883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1de481f-35b9-443f-b55e-b56c5f228d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd5d1ea-22e9-4979-8c53-035122c0144f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09faa0a6-22ea-4a52-ad7b-f2907327acd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cbdf2d-61bd-44a5-bf7d-cc0b94274030",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df808e1f-4072-4ce3-8560-05e7972b7894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9f2b8d-e3f6-4bef-8110-9cf5d892140b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5a5cd8-e411-419b-9b63-d7e45f9df9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8d700a5-be9f-4a74-b0f6-7e5a3ce9126b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5806af4e-6350-4c70-afae-e91ee60864b4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37b8e24-2c1b-4479-a258-e5d42502b5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c169c2-cf08-41c3-a22d-ac956c040b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e7519c-442c-4500-8ad9-a4ee93840a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "518ae151-38ef-4a17-8f67-8a5acd7c336b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe25dea-a3e4-462d-9b86-55472df31e7a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc36b30-2952-48bb-9dfc-5d265df8f282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4963cba0-a1c4-4f6b-896e-d0aa4c7c3ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1632e860-9f7e-46f6-a228-13b9f195dc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "924822d3-c165-49dc-9754-58029507ef44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227476d8-a336-4be6-95b9-afc07f07f3fd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a921ff-6971-47f8-ac8d-a9e5a8c63bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3072b96-ab7e-416f-aa43-c6801365b3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3965b3fa-cb9f-46be-9afd-a1076184234e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0bdc4c-6609-4dc2-a610-9325d95e4b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6512b73-8fe0-4e4c-9fee-d5f36b001d0f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4b6228-f41f-4ad6-aa7f-0d9d066c387f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62cec8a1-1d54-43d8-a3fe-9bbcc33f513e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058eedd9-283c-4ad5-8a07-f674cde4e5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a19286b3-3ffa-41e8-9c7f-edbf0f224817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d4ba06-73f4-49da-ac61-ad17758f90ef",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cdb8a4-cb2e-4c63-8c9d-ce3e15be51b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38bb1911-2d4e-490f-8b48-013d49e71523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704af84e-3635-4640-b957-7b381700dec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "791b1f36-eb2f-41ef-af18-8b74a0b839c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3930b963-c0a5-4a30-9c54-8b2ffa52a4af",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6413fadc-595b-450d-be94-9a9226c47c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2044ad8b-85c8-4613-927a-6afa6a80c1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863d2dbd-ffb8-4b5e-b65e-b84d1d4d4090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d008a702-7579-4093-9efb-ae61b5547e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba27253-f726-4695-bc62-00b584d934fe",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7477f7-8e65-44ca-8070-9d682f65effc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354c7236-6746-431b-8b17-ded37c058416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e251ca86-635a-40ea-8c2e-3735961b3a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c57a4a55-f060-4cbe-82a8-f6faa4f6185a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acab2c82-2918-4cdd-8533-1b03eb840402",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35f0bf4-e5ac-438a-a6f7-f79c78f24c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16861cb6-36ed-4f93-bdd6-ace36644e00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5164d20b-df94-4043-83fc-c6338ed29fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f80d9d50-565c-4658-9e7a-febf2552dd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa965be-fcd6-4215-ab34-8efdafab9265",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05970dbc-c3cf-4d58-ac94-1af24e50b712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ca76d3-8bf8-4b72-ae41-0eed27770529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c753d1-04e2-4ad3-b95e-5d31940d4681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "901f7116-0280-4331-b06f-bb1fef65dedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f820808b-e5ab-452e-a6a6-f7c6f1f3c2e6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eda6c58-1ffa-4d74-87d2-4ddd1655d4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6557e01d-37be-4e8a-ad1f-cd65dfa11fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee82c864-631c-4c99-9d90-4e73e087b7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb1c36b-8d41-4b26-a693-bc3698f9d146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f11a5bc-c6bf-4511-b3f9-d14a6df72f9d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900f62b6-ff19-409b-adfd-ada9d4e27c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1aaf6ba-ac7a-4394-985e-0922767863f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bad354-f301-423e-bef5-e09962dcf159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b506ffc-04ec-4050-a818-7290b167aea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4e47cb-a7c7-4398-8036-17fa24b2527e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be9316a-6216-4916-ad0e-ead639bd268a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a95d0bf-6e41-4466-a872-0d8f874bd4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589f9286-f957-4701-83e6-cb52e779e273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04923b89-d405-4668-a93c-555af278ad9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c78fa2-bab3-4bf1-a9d1-8ea54ca54bec",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70af175-a9a0-43bb-8c9f-c3c80d7136c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988af7da-a353-4be3-a068-58c1a3c84817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97b8371-d2d5-4799-bf5d-4b5be840cdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e06dceac-9c89-494e-8139-5f2e49b67a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54de08a1-7a70-4668-a8c1-1b4707dd3e5f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae364355-e910-49fd-aad6-a2dc55b7d468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c587ca-da3d-47bc-a4cc-fecbc86d2595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a0e11c-6f81-4e1e-aa96-dbaf29d30241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4cb03a-bf50-49c1-81a6-1c10045b7b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15578b7c-0688-454f-b408-1bf50dd5e636",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f568f7-6531-4a32-9560-ef6df293a9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de11ba54-afa2-4e6d-8187-ed4fcd8e14bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6331f273-bb38-464c-8ab5-84fd4d37a030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17f1ec62-586c-4ec5-8e45-bbeec2b4342b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0336c7-8b73-43fd-b2e5-87c492a5e471",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab8cfb4-9283-417b-aed0-a43139fe93ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83439dc1-eb7a-40c3-8fd5-bc84ec9987e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53e7ac2-b76e-418e-a43c-eeabad77687e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "480ef28d-8413-4e96-a638-727de4df73b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f54365-9ffe-4a0d-a996-8af610649101",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0f3dab-c9cc-4181-86f8-0238a73e9ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9489581a-e37d-4ce6-be92-56e64c18035d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b473b042-e3e2-4540-bbd5-c919c6fbb2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd782836-15cd-4023-84ea-1d9abc0996fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93eb7f6-9209-442d-b35e-15ee531bb92e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf6bf60-45ac-437b-906f-6b625cfa4fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f82839-3392-49b1-ac31-e425b1441ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc14f9a-e625-4361-8907-2dc951df0f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "de2df03e-0946-400f-96cd-c6c710055f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd242cb-d2ca-4985-bb4f-0bd99d34213a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6050cd7b-1381-4308-afad-a72e3458268f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf647aee-f366-4ca3-85b5-32b9024fd165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806cd68f-32e3-47c8-b674-d073e04770b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a414c59-cf27-4a42-98c8-211b3296ad8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff01a532-dd29-47b9-b918-2d66209c7925",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b49c4e-6c61-4f1e-b905-5800e899492a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0202728-eff1-4aa9-8ad3-2b653aafb738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2017bf56-3727-43d7-9302-050c3e1b7743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2bb815-5f1b-4c42-9272-c826cae32f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92721c0d-52c5-4c52-ad25-8eb5f5e968f0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ac025e-cb7b-467d-9fe7-ee3eb1a10c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8d89c6-8f60-42ec-9e70-2c1f0c08498f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8e4731-27f1-438e-b95b-fccd63f9551e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebfefe4f-477d-4a06-8402-b84df1a4a750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7211c899-01b3-4a7f-be4c-d2d3c21e1b3f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b4461f-73b2-43b2-9c32-09e53d311985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02e43de-da6f-474a-bf5d-60a194318edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16d4c9f-ba4b-45de-93bc-29a362681821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00049897-c50c-4afd-bc30-eaac409664eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e72051e-3ae3-41b0-b3f0-d76a4b4c126b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a569dc-ea94-4009-b332-cdf523b1a605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3cb91d8-df2b-46e2-88c4-5e44fa28a05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe2e481-6409-4607-b48d-ebfaf7b6a57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e810b223-e863-4867-b334-386da6589681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc397885-eb80-4746-ae1a-0565421a786d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f77b52b-97a2-40a2-aa75-3af8b1a6583d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82ed50a-197f-4af1-b6cd-67f64a07c5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a475faf-7b90-4881-a957-1485364010d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d200248-bac5-4f4a-a4df-defa5767308d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5558561-1ba5-4d70-a73e-8768c0e796d3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6320dce-fab6-4df8-ac9b-7c796a88cbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa609f3-f974-4edb-b5a4-fd4197d3703b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42198614-151f-4c86-92cb-7103a4b823b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0157c392-e555-4310-85f1-fea0d01a3f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2ca6f1-9442-40a4-a608-de3ed4ce82fb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ed9944-afc8-426c-a233-1ebbc9735f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c5036c-2ee9-4ca4-8f90-c48ddef8fa42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb014141-12b7-4de3-b77b-28b40ebdd378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0976f1f-1122-4d4f-952f-30c90916a1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f4e7d4-bc2c-45df-bb7e-c94bc7c1f51f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b14213-4e70-438e-9ee2-941f763d6f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee494f1a-0ce5-4889-ac42-6b490aaeae22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caa2ef2-574b-4937-bb6f-ff760a76d777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c939d7f7-b0a2-46b4-8cd7-b28628a5c56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bb7209-d48b-40aa-867b-048c54bb752c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a67f4ab-97e8-4ade-8ead-0e996865ffa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2738ec-55dc-46b8-8bc0-fad160e5e8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3c2558-12f2-42bd-9d56-de6adfb7af89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c76c63ba-6f53-4cdf-ab62-5e1b880df024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466eb217-d974-4290-9279-a77b7645ac9d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed547aa-8d28-4f41-bc45-b3a3199f834d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9c5d3a-5064-42f5-b34b-05eeae74aff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d2cccf-68b5-41ed-bab3-02bbf28e2532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "705783f5-2509-4aa7-a34f-70110fafabe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7a3a5b-d442-419b-8f41-74b7ae2a8b4f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd5ec7f-943c-4ec9-abed-83b7c02207f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7203e772-61c5-4d3d-a20a-1ca55b8c438e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475d2cbf-531f-40d4-a92d-7cb348d227ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fca9ce0e-6a68-4fa4-ae02-99ffba4dbb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b66e38-068b-4a2d-b3f0-d79a52635976",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec49ac16-f616-47d3-a436-f886f9d1c798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110e8601-c956-4626-83c4-ba8583fe7be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993a71b8-ebcd-453e-9c59-82ef2c24c2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "900a7116-6ec8-4168-bbbf-0e5bd8427c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1038f2be-a77f-4138-8625-525803b008c9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fd0dc9-4f5e-4782-a363-fd5306d975c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8755a0-acae-441f-bd52-d6f4ccb151ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ad1c01-41ce-4e36-a576-d81d3886de98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd7ca97-8484-4c09-8a91-934997c19571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db653470-b7d4-43e6-8747-7480b23e6ddd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189f977d-4011-47d9-ab28-6a3bbe660d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585464e8-9f17-4e51-81bf-23da6584ecaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa23fe7-49b7-4294-81b4-f348b71d7010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d67a93b2-45bf-4214-980b-0836f625cdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba396e4-d5b4-4eb9-8565-6cc52d855050",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5714bc-7277-48de-a2a4-d1577841c4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399d23f5-8e88-4ad9-9590-e196d4612879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f2ff03-ae41-4372-a5c9-bb6d7af33de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed50b1e-af8e-4b63-b6bf-19bcc7b87a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602caaa4-ccec-45cf-b925-75a366247738",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfcc4bb-1ba0-43d3-8404-3ac3e36c74c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98a39b7-6f26-4ad6-b8a3-3c0fb7f7d324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd475e1-7598-4cb7-a053-ae3ead133708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "141e7b7b-923f-48e5-b9b9-bad36c4dc29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ac1f3a-c176-4765-ab45-4fd5b261e2f1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9d1995-46e5-421f-9cb4-98a0c41a919e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f7d920-e934-4a0f-922b-1db18701e05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c4f9a7-9604-4db7-9856-3f4be93618be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8932cabe-49fc-460f-8db7-4842aa0f5217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9ab43a-b984-4263-ab09-17960e439995",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d5809e-1e14-44a1-90b2-431f069edf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928fa354-97d6-4f2f-8b08-803e7d73d7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae74e104-7ed8-4fdf-8f2b-e96987f59d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37703f4e-1ba7-4e18-93e6-7bec2dfb0a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb767726-eaaf-4938-abaa-a933c4dcd0e3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e21353-b5a6-416f-b1d7-db9062bf0617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e10663f-292b-4d35-acf3-217b88988bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ee578d-4acb-43c3-9821-8a05fc6c32a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d71c6141-9092-47c7-8758-ba1d4c923d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0455f5ff-0c19-4fb1-8144-4c9b64e3e701",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f139246d-7eda-445b-9711-f73535ffdcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf56435-4812-4548-bfbf-2dcfb8ebac24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584bab87-b3a5-459b-aa24-560ed0953791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "589b532d-efdb-42c1-857d-ff337b9c53de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c044f2-e5a3-48f6-8d2f-39594b8ef70c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6d676a-d7cc-48f2-9a9a-45fd1661b788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ead17af-df99-4efd-9b72-5d293360bfc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7343e63-e65c-48af-9251-bea713d091fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "929aa9e6-8802-44af-99c4-9c755c6a0a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254f5cc1-252e-4e36-a53b-be507866eabd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c92ee8d-53ca-44f5-b968-3dd48f242e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e238fe4b-221b-4ba3-a520-730e6257938b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a797d6-6908-4040-9ea9-230426de7b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8beac9f1-5933-41b5-86b6-44090b76afee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d370839-f66f-4139-96bf-a7006d9db4a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a109e40-0f31-4b2b-877f-3a304d91f5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21aeb5dc-9a01-4253-ad23-d82442290c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad25970-d291-4994-87ab-221bdbc1d152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "81109375-98c0-4dc1-8f8b-1a4f9f4ba2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365a7733-e6f9-491f-9b61-6f15ca0682aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d848ae-e78f-4ba5-8512-805b8b94c15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3449bc4-e9fa-47eb-b2cb-ada578e27ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2771a3-eb45-46a5-aff0-5191e9c45c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5f0cdc-b5de-47e8-be6c-e5f996b07620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9569c83b-21f2-4274-91f0-1914e29d3f1b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566d1007-dbd1-4078-b985-46f30e00a285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae52794-5413-42cb-9825-d1d39bb38aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e49707e-5310-4c71-8548-3dfa394f315b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a800d499-b7a2-40de-982d-fff09575ad65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b27109-e433-4caf-9c5f-d5eb22f0c9e4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd70d9a8-3f49-4347-9495-8af198ac2f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d443d4-58a4-4856-b1ec-6b9ae8eeab96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1640b4-501b-469a-90df-52670a57f30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "218ac614-1155-4529-80e7-3c3e8c9491b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65843306-8adf-4a4c-ab6e-25bd7759f40e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9213fd86-5f1f-432a-81a8-12683a958094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6d6e54-be43-48fd-b852-afe67b025828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c42ed3d-4cc3-4ff1-a23f-ddc652b9bf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "758c2145-645c-4436-a19f-583827711375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5cf933-d5d4-442b-b83b-cf818df5101f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c16cacf-83a1-4fb3-b248-5f7703b3b290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b3c253-d6f7-4a5a-8b2d-3480788b1da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726416aa-48a4-4124-bc5c-a0900d6e86ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35d26ccf-2ea3-4ebd-aa12-10deb1c31b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba8b2e9-491e-44e2-8767-e10174838e7f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd6ff5b-e1af-46d9-9242-2e87024cb9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea37617-d2d5-4af9-a408-566f091143ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a11cd7-329a-4366-93fe-e059df691d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37b3d2ea-bb63-4194-9cbf-1445136ee641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4f71db-89d0-4a30-9bdb-caeac994d320",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5600c607-5d62-4f43-a190-3609d92d46ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a29de7-761a-4d0e-8b18-0083352b64e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a78734c-b79a-46a6-b92f-f1d5fa59f3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "706a3e87-96a4-4e46-87ba-b6a297c2006d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b24868e-f524-477e-a807-18909e0a9002",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d362eb-4126-4fdd-935a-51b0fc6a57ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e067d6-ca70-4796-be1f-e7710826e2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee1089d-e286-4dcc-a026-96b8d80457dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40732ea8-a49c-48da-aedf-647babae1268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c1ffe2-75ae-4c6b-a1bb-e654341695a4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75d00f7-e443-43d9-89b9-eac7702c5f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cd99dd-0060-4213-961d-0bf6d725ea0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf06577-6f45-4724-bfea-abcb63cd15cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "75934f47-968e-4142-82c4-6bfaeaf07b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c39d67f-b444-4c2f-b2c5-3d84cb1c5316",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2769b21-2e25-4906-89d5-82fd3b4396ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b513b09c-cf6e-4575-958a-f410ae974837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ac86da-e8eb-4500-88ba-8980f6c2d670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fde0bf2-1f8a-4327-bfd3-a266396ed6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c34d3f-b326-495d-9b70-78f3fd6a3139",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e3561b-1d48-434d-b8e1-011e66f08b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81063f9-0ec8-4d1a-807f-3629d37738b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c983f0b9-ef65-45f5-93ee-a3214980a2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e705137-27f8-4b28-84d6-c761fae8a98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2914ad-915d-4797-993b-23ac46810490",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f870e160-4ce0-4960-9d04-54dca45be0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71be8da-8123-4258-961b-414ec11e0672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa09f206-77ab-440b-a16e-9819ad99371c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "934b9385-44ed-4b0b-aa4b-fb24e8155848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68713eed-1fd9-432e-ae66-d3f1f3893c60",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9d5c49-06fb-4fcd-a217-215ab09ea3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195f543d-9e1a-47ee-b38c-8be4577af4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0f9a88-72b8-4bf4-b826-e787a789ed26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf45de2-c58e-4cea-9e01-c4c0524ae008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76a5f12-24aa-401c-b433-5b2a4f66ac2b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316a57da-aa36-4e56-baeb-accf15266fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54278f9e-bda5-4500-860c-1368112a4f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9a7127-13e9-4fba-be9b-87845d3ecce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ec4975-89ef-490e-b811-c17e7401411b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9424b794-7413-4893-a9e9-f7ed8c28e657",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790610be-cec4-45bd-89ea-636f7828c8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36dd9d09-77cb-4e8d-9b66-90d0ca145bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8ada2b-c1a8-47ae-a175-42a26a0ba004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e37076c-f47e-48fe-a1c1-9bfe49754ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8532a6db-8f20-4dde-9731-20e7acc2d200",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aab7684-2a2c-4e83-be18-3d39105d3dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f375c672-e2e9-42b8-aed9-9b8623c585d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54941a4e-ac15-4d47-8889-3322bb0f37f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b504d86a-19b9-4cab-ad3c-dcc7f9207f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912cd1ad-2c26-478d-8471-bb0f5955c0ea",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2b9965-e49a-425c-8b3f-cd2c6b5dedaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0333f71c-7a26-4e82-8ae4-28f4f3866772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0896d0f2-628c-456f-9284-874ddc396de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4af724d-6da7-48a3-8794-57f018692eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6415afa-777b-464b-84f9-12dd41ecfbf4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e3e462-fe6f-4210-a3b3-fc709375b212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9800a1dd-ed2d-4ec6-8c08-6126bd889c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5f96f2-e95b-431c-9a4b-ace76b27f80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b68ff8b-f7db-404b-b20e-81c627be1432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c397371-d5a1-4850-a3e8-cc1623b3c753",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca73c028-017f-48c3-92c1-94652db7c3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205cb9ce-9798-4064-9f3e-722e87553c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d742ad57-36cd-4744-acc0-2af0e54ce2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "997f0998-6824-460b-bf9a-d028b54df87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1161006a-9067-429b-8d55-3511744b4d70",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dbc3fa-1766-4a48-a972-443349340456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2206840-fa51-4091-8826-4b91a64f1485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b586bf56-8829-4c51-823d-2c56b02fb07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39d0db8b-b09c-4164-aee1-fbe3c17ae111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e4dd2a-31c5-41c3-8f38-b9cde1729829",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a604053-4abc-4045-8bba-a4fd8c90664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99d4851-bf81-477b-96d0-f173a77db400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38145ba0-830b-4561-ad59-5f29216a93ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8556ae6-2bba-4b38-a014-212dc1e28e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22cf3df-a8aa-44f0-8145-f8c02ab95881",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0d9968-8a45-4dcb-8f1c-cbce95cdc546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c96eb5-e8fe-41bf-8aaf-a028bfe68568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b48539a-9343-4591-aad1-4ea051d36bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ef4086-0c89-4e1d-993e-350ef6b10ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dc576a-db2d-4065-8a04-c2af22ed35e2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5530b5d8-fc45-4b23-b21f-4ece15bc853f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdbdae6-c643-4215-a577-92092a3df896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8b6c17-f11b-4d9a-bf9d-2afe6bce179a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33444b61-d77a-48e3-a035-9c78d65962a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c299fc22-5072-402a-b9ca-daf6d1794a48",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0484bf8e-9c20-4d45-a7d5-b8035821fff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0caaf299-881b-470b-8aad-f87b4f17ba26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126594ed-3832-4551-9904-b01a3a093402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45e727ec-a5f0-4fe2-84ef-1172013d7acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27051c85-1690-4c98-a6cb-f9c661c1cf0f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c711fb6c-fe6b-4738-8ed3-aa4bf7e5d319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca05671d-39ec-4367-9730-1b8faca4e306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7945b72f-f025-4f6d-982c-b33f0113507f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "110bd794-ac65-4876-b207-8dc96d2bce41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08560368-853e-4337-8b64-267df75148e8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54c101d-9bbe-4622-91a2-caa570384706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6edbab-4e04-44e8-b0ad-334ea180526a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc3a28e-c7e3-4e36-b8ae-b4e3e0c31c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a417752-16eb-4964-a786-49430b0af583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee090fd-db93-41ab-be5f-9e1f100c7066",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00436614-b784-4502-86c8-54a8b13f7141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7327eaa3-1024-4e37-a920-73df583a77a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b889fe-f6e8-4f6f-840e-fde7be36652f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe47ab2-27d1-42ef-adb8-e0e9a1796f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a6e1b5-a8aa-44ef-8714-4ba384efb602",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddddb9d-bc6d-477a-8f1f-419c6b4ca1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000f39de-03b9-45bc-a1c5-8e5029e751ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0360e43-7c57-40aa-b0b2-e1629d6241e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8733dab9-9695-4ad1-9cfd-b392c3ff3b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11cfbc5-94be-4935-9a7e-daeba202e9ae",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29b14ba-7329-43f1-b013-6acc0207e2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f1ed72-5e6c-47ca-a8ba-d9e7b64649ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b3edef-2f9b-4cf5-adaa-846cfd2614dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "59fb6fb5-963d-4212-97e6-a78d954e9f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd093c5f-483c-4744-a393-4d0fe1bc7836",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54dfd1ae-d86d-4fef-b25a-dde5c9e6bf27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab0c879-70ba-4f5f-81cd-64b94b6623e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c53bb6-1ef3-45b0-9191-383972d77377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "561aea9f-7531-4a29-9408-08d84b1965b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ba529d-e79f-4c64-8bd2-ff0c9398b5d7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bc53f9-cfe5-4bdd-9df5-b74359328ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3f4694-5fdd-4d8f-8590-9f0edc78f047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcd4187-038b-494c-a275-17831c66c663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "578767d8-b60f-455e-9acd-f62009b39b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe4bf8d-5cd6-422b-9eee-262cb97c4dc2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d4ae47-879c-41b0-acc6-aeb76114054d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5384b221-6477-455c-8124-7a9403e21cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e151bd0a-52e7-4f0b-bdcb-f229cec08c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e22829a-f7fe-4832-ab9b-60eead78519e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a577332e-a12e-4599-8b16-ccf4e526a9ab",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72301fc-ba4f-4612-8263-3fa1b921483f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "461cf9ca-a299-405b-b413-f7e0b4ce3bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c49f97-e350-4685-8112-e6af8974f249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9fb883-8eba-4a01-b839-940c9fdf53ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ab5b8ec-6de6-4ab6-bd50-1863bdfd59c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e9597a7-52a2-4f89-aed7-fc410b44f530",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36719735-2a17-4881-8ed8-a8ba3fb9c1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa05764e-5041-4a4a-baa2-9306c6b228b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218a61cb-9bfe-4100-bfca-acf1af821f0e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94273883-de14-4f2c-852e-aef092d08906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d25c45a-8aa7-4fe1-81f2-5484d1d2dc44",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5e6aca-df16-41cb-ac05-c9768f03c13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "078cfe04-577d-47a1-80c6-9e0dbc3cc338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a27c65-7ace-4fe8-abf3-dde32e17501d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "079e3cf5-7b6a-4728-92d4-ba18b7e84d51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e017603c-1590-4cc5-a071-8947a195c6de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "958c56e7-cde9-4d45-a9d0-ac86f2766d03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cae6b28a-5d62-4b14-9345-da6d64ac9f2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8991708-1ab6-4e8a-ab95-a953a4cf1d5d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2780a5ca-f2b7-4ed3-bffc-180f6dfdffa4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8dcf166-b446-4afb-8951-1f541bd92a39"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "03e9bf71-697e-4a4e-ac02-5d41883f15d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3cde3f4-e841-4694-8187-3c075fee2257"
                }
              }
            ]
          },
          {
            "id": "488d5634-86cc-4a90-8306-86e7bf15339b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f67a92f0-da91-4ddd-8b75-f939e7270888",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd5f5c4e-09ca-433e-b6a0-ee2df842f09f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8051f95e-d1ae-4804-84b9-c2609fe29189"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8042cc19-9e14-46b2-8080-2482f908d085",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "23c1c546-38e0-4359-b734-54aa87fddcff"
                    }
                  }
                ]
              },
              {
                "id": "3ee5187f-7671-4ebc-a66e-653b3314e93f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5245d015-d488-433d-a047-3a860d2793aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2209a042-cb15-48c9-8883-e0a73e8dc772"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d82b541c-0b56-4555-a7b1-fc01949e2e1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b66b90d-8923-40e1-96c5-24459bb40d13"
                    }
                  }
                ]
              },
              {
                "id": "f1062173-3bab-443f-bb56-edc768fc6699",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2789b1c0-c39e-4a70-8529-602f234a72b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b527938-d773-454a-b6c0-a502456f4fa9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e874b7f0-e11b-495a-b625-797990c4b28f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "24813128-1d72-4e23-a501-972b8cdd492b"
                    }
                  }
                ]
              },
              {
                "id": "e70a1be7-e6c7-489e-aad5-374f022d5f3d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db62a8b2-3818-46c8-9127-dba5b6a92891",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9590822c-64c5-4e78-b5f3-7199847dd4f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "984bf386-0c10-4d91-8b88-7a87374a5405",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "88516409-77ff-4a86-bb42-196b348c97c0"
                    }
                  }
                ]
              },
              {
                "id": "17a7314e-53d9-4f3f-85a8-d1106b872a6e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82b528ad-cb82-449b-968e-4240d06785d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ed336d1-6981-4dce-96f2-b86c86d2085d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25ae80b7-4681-4f3f-a7ec-ddfe762e18d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d89dcd43-3728-483f-9cde-1586df4bb633"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07c69a9a-03f3-4c5a-b681-23aaadec6b2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a8b8e511-0aa9-4f1c-a62e-431c38959544"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9c36ba69-8c93-49cd-9ee4-3db803645206",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2d71838-2731-452a-b033-7a6c4653d01c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "815daabb-1390-43d7-a1eb-36465847efc9",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ad99f4a8-825e-42b2-88d3-50ca70232f9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad004626-6176-40db-a794-f52d580d7dcd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f05c372c-b4de-404d-8b6e-01b5d669a6bd"
            }
          }
        ]
      },
      {
        "id": "fd1198b2-b760-4390-b988-f473b42a64f9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "af7dad99-f268-41b7-b8f6-db84a32e5d7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3b0f99c-100b-4772-85eb-ac2329174f18",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d0915124-4296-45a7-8714-4a4ce2bfc310",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc5423e-f1b3-409e-8cf6-098f61b70767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d4eae1-6ed5-49f5-a481-32a60020e059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319bb077-6e3b-4424-8bbc-95dec41ee1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2d09de-bc51-4f32-97a5-c4d0d261338a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e602e3b-c135-44ba-808b-903ef58c1d0b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79220b15-4df9-4a4f-bf30-3d6b5f493b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efce3925-f018-4dc1-87f0-3bc1b25f0a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9650e1bb-dbb7-4e61-9ce8-661f0e919c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6279f9b-272f-4669-ad05-cc023338247c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506bf1e0-e12f-4e26-8541-6bad2dd50fd7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bac626-7e2d-4a55-a7d6-8bf8b9971218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764bd9c0-e0a1-4169-adef-6cb8f25a2ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fc760a-c97f-4778-abe4-25fbc996a9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "192ce32e-cb09-4a1f-96e7-a2d4449d8e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc34ecb-d72a-4bb2-bc11-b53850e0aa92",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be54a5d7-9372-4307-a1fc-e1b03dabfb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474c6cbb-eb46-4c7c-ad31-c7640e6ee42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5225009b-1c33-46c0-ac65-c2e8d20048d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c245881-e8a8-4553-9705-f84a7aa46a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8917b2f5-e58d-4fdf-9140-b77e70b753d3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbced34-e1af-46a8-bfe0-ae6eee026fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7f9526-cce6-4d4a-936a-f32ac0a9c46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abb128c-9e6f-40d1-bf27-bee5fc7fd1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c09bf217-894c-4f1a-b63a-3068bb929afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e36e99-e3f1-4a43-abf4-e9f6c48cbfde",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f27962-8377-43f3-aea1-d3f6e63205da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc44dcd-ae44-4e9d-bbbd-1e3869ca243d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c894b93-7efc-4e95-ad6a-e54c1c993f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63c52dec-5695-4710-b9dd-a7f72b42c6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d008a6e-f98d-4a43-b6ff-2410ad408f70",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2145de82-a3ea-462c-824b-5b01116f8945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026241b7-189f-45de-882d-942c403ef651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34d46f2-d7b9-455c-abd6-c1a0b0c98ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cad60a6-7642-4aa2-8080-b8bd5fe8cf61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef83cea-2daa-4fa2-8a07-9fa552641332",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c1f4a6-49f5-477f-a149-f2bc5024cb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00255750-2d26-4d34-a7ad-2ebf047cc8fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b358c2-497b-4565-a847-af14af714abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38902de0-88a2-4bdc-9fa6-60b2965c1707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ade7b3-e98b-497d-b256-b90ce704d987",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7870b6c5-7fdd-4c67-bbdd-4972ad7a9fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cec24e4-e233-4b57-86b8-d9b80cb30728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a21202a-7b01-4c83-ae6b-f76c7f820ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "219d4c56-88f8-436e-89b6-f895f2cc60ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bde68ce-8495-455e-8a27-a69b87a1d76c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc99404b-e2c3-462a-926a-489762604804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41da9b2-079e-41fb-9895-79995eb70e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1201f3-5826-4a9e-9ef1-212c4bde7fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "109bf25b-bda5-4946-ae7c-3ee6cd365cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e7fd47-e59c-44e0-940e-0fe7b84e2f7f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cd41a0-8e6d-49e1-9d57-733978b1d60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb6d6eb-0e87-4ca9-bfc4-254d7b7fa44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529b3f0a-4037-4f58-81c1-09afe9e02466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9aab76-670d-46d4-9165-2a32dcc6face"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e42315-0e6c-468a-be35-5ac1894427b5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c10b31-3722-428a-a248-1316c064d45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fab1b3-4568-476a-b5e3-4382ce4fe6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e587f4d7-9421-4b74-9333-fe6169e791e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "799a75bc-77ce-4957-a10c-12fb6aa7cc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585fb96a-9749-4136-a85e-8ee1735de3a5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690473ed-e08e-4db2-90d8-dad193c098e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219e070d-4088-42fa-8d03-a258675ef734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022b67b5-3e56-44a3-8425-90e4af0b76f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e32b9e2c-699a-4c61-8651-b14c470575ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b45bc5c-0f02-4730-a51e-b18675986371",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe20c5f9-cbf7-4b0b-8b33-cb6494c1ee35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee3f61f-b0d1-4901-9600-56b5291fb5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0415b32-d4ac-4bae-9434-7b836d622799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df08ba8-11a1-4801-b47e-b53e80b55499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f153c347-ab6f-4b0e-a052-0b29928dc271",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec451bf7-abaa-4795-bf4b-093a746bf53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16126385-32aa-4a72-9fb3-533f11593056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42afc47a-10d7-483b-8000-8395ca5f88f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8eaf5d5-bccf-4c47-9683-e9874dcbf49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c387f31-a9b1-45dd-8f1b-ed617d99dd1e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cf2117-2301-408a-bac1-5f4704578fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965ce0c7-7dea-47b4-9732-d4955bcc3449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94f7815-1302-4d18-b57d-c59b6b30abd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bea2152-8229-4de6-9de3-ac5c857d482d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307068c8-a739-4ab9-af96-6b4b24ec09c1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c89ac9-7d71-43a8-8090-8fd42be5ff88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea7eb32-e367-47a2-9441-c39080e00a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d479dcc-3425-481f-86f8-7dc4dacf3d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "224f3a7a-742a-4f98-adb3-b0faa073bde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df2f6a4-c3c3-42e1-ac93-21d65098fe64",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92c19da-5835-49b0-8754-7281c3e1435b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed7912d-3720-4523-b7d0-55b72fcbad13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219aeb34-9d74-46d0-b407-abf420bec50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "843b8e05-cacd-48d4-af8e-71d5d736db72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd95d63-c5b0-4415-aec3-a94c72fceb75",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f36ed15-5012-4270-a2cf-1450e05bd195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39861ccd-f666-49a1-9aed-7c1f4ce332a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7424907f-6381-453b-810d-42ca65769600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70b20b2b-8e4d-4742-9b66-d74db6b825b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55df1980-1bdd-493e-9176-95749f543ec8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0948e3d-a41b-4060-8d33-24708bcef02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c1fcc1-378f-49eb-bc0d-9892442611bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14b6807-2afa-4292-a676-1c9385e7e356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47ccd88a-fca4-4fda-8665-68572dec7f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0904c523-6d3b-4c01-b361-454298158a54",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b458d1b-f8cc-4265-8f53-95c2eb308031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9058cf2-a628-4e19-83de-3e6370e20990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ce4cb6-6c9f-4310-8ef1-111e0d7f1650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6982fd-45f8-4b13-9421-3b348c9dafef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a554c0-927f-4c10-bd06-33ccd9388349",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd90664d-9d05-49a9-b30d-b5fe6a4e76e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99022ab5-5465-43d0-a921-01acfcf57a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44a4890-f2d9-4faa-9bc4-6868671c0608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "830022ed-88b9-4ecd-8d22-c50fdccde055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfdd61d-bae4-46de-a072-8b6935c7a6a5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1058dc-c254-4867-8cb0-ae7e7519e055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8999a0ac-c2da-4b5b-935a-96f058cd5204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026df8d9-ce9b-49a3-b373-e8ddbce71e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd44566-55ba-468b-83c0-b32c486453d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb807183-e9a9-4e47-8ab4-ee827a2625ea",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54559c3b-586f-41f2-a0de-2845a6d9ed60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2157e0-108b-43dc-9148-63153b091c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f78f8e-2adf-4d9f-b797-e9f802352471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2921120-c60a-4dbe-9aee-e91797f5f4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e566810-df15-4bfd-a054-e74274c8323f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cf6bde-f8dc-4178-9e9a-95aee037aba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6e0642-e215-412c-8b0e-545e3f1743ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a126c2-e6a5-4c9e-b38d-54060a265a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fd4927-893b-40bc-8176-8b069c928d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4618690f-be10-4db9-9a91-e7cf3c4433a0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8494bd2b-a16a-43b4-b269-66e97561e3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef680475-5068-4b6b-bacb-163458a23e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fce27d4-4bba-483d-85f5-720b2de66e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e34e1fe0-07de-4cfe-836e-607479626d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d016e3f9-b7a2-45a2-8e78-4df4ffeff545",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db422bf9-99e4-4fb5-a766-5e6119d6b39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8e0323-3bab-4e53-932b-7af4b9e10569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b94a0d-f6fb-4f7d-857a-854dbf6a66ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8653ee8e-be0a-407f-a889-ff6faf7bf155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633d77f0-2a44-49a9-9abd-03514ae5a9c0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa6654f-0da7-4991-a77e-4f1980f2f79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63301723-9e0e-4125-a5ca-b1325ebf8979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2b8856-2b11-4b8b-9312-834e4a418a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cde80ec4-3601-49ee-aa4f-466990322050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9922f0a9-99d6-40ff-b398-c8bc8060cb57",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fd799e-495f-4550-ab61-34a278ecfcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb6c2b9-c00d-40b3-87db-7a3349b44eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078ae567-e1c9-4311-b4bb-29af2383104e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64967624-0b21-45ff-bad5-0396f373c5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179c39bc-0f72-448b-b0de-1a79ebce63e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043979fb-c9b6-46a1-a9fd-c202f43e480e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5203f2-3854-4d57-9252-13b39b38fda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6d9cda-ea76-44d2-a1de-b2fed2117679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53d8005e-406e-45c1-a8c4-1ee98cadb530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53190bd5-4a02-4b87-b450-bee1d9aefa07",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9990a277-16f2-4b7f-a614-192554c0660b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce19481-33d9-4d1f-8fe6-339155b3dd0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c916fe-7872-4e77-964c-6c45b8eb82b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8e892d-f417-4daf-9b02-b6627eae80c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078519eb-f43c-4e0f-b66c-4d937f74d6f7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e5fc92-d06d-4da2-9c62-d24320bf744a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a6c2b6-591e-4d0e-96a3-0181c34e2765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c9e95f-8468-4892-ba1f-97d33cbae896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1cde6e-c602-4d65-9042-8b946399cb2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e5f6ee03-4546-403b-a7d8-952ec519a5d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9826fc3c-4e6e-461d-8141-dfd11f9556b8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc17ec7-e619-4160-93f5-801bb3c12077",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "44715330-957d-4a53-beda-ece56efd3d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a002ef4-7bc6-4bc7-a0d6-6a9f67d17236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f482d30-bff8-4bef-adfe-849583823652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f9a447-062c-4698-945c-59041133c853",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086577ea-e8f2-4b24-88e1-598baba3d7d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d671b593-9b66-4df7-8e6c-f0791421d650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66f969d-b100-4d52-ae43-07a8ed12fe2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f4d3b8e-8e43-4718-af48-d567860997c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f98f7e1-1dac-46cb-a49c-1f85d13405d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e4707d3-83d8-40d5-9416-c64efb20cc44"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "783ea4fe-b046-401d-8866-90fc9e562862",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "581b9f5d-59f5-4cb8-acc6-777302569906"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ece2d9b-48c8-42e6-a245-c87aaff34cbb",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0ed46e18-629a-4d67-830c-2a9b95c12256"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e16070a-94ac-422d-b7ca-cd7d295f295f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "819c84fa-96f3-41a5-aaa4-b080d637288f"
            }
          }
        ]
      },
      {
        "id": "317947ce-383e-4b58-a9e0-fbfe3146f6dd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "384e48c8-8129-4693-b5c1-7774433e935a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f26d096d-5ec7-4dcd-b927-008f9a52dc9d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b900a950-fe17-4164-9a9b-9cc6905ff4ea",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082a572a-33c0-4e04-9460-54a1bf6861f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a0595f-b785-4fcd-af64-2962f71b97bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb43528-aa1d-441b-ae6f-5e89a2dfb542",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0055ed95-52a3-452b-87f5-e70d0b7635f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63069187-9315-4b27-9792-cdd321212139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac20fb1c-2175-4f0e-9943-d18107502a0e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181b09ee-f9f6-45b9-b7cd-3bfb67056b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09da11ae-6e87-4e87-bc7e-b62c037e3f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fd8686-9f91-456d-b87f-e38062906c14",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d800c69-35c6-4684-9844-d0acfff5143d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f7e9f3-1947-4386-84dc-2a6bdfd827d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7147813-dd66-405f-9def-790ef103fb0a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063d86a3-28a8-4748-9a20-7f958dd0648f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b3436f-62c5-45a4-ada3-5687d125969e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b51491-882c-44eb-9abd-1ea8bc9731d8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38776858-b6aa-4a85-96f1-e82d34ea34a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f3d670-701b-4fe7-ba17-53920a6efeab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c23f66c-2472-4dce-bab6-993727d9294c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95346bc-8fb8-4aea-98ec-5372583a1c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715aa702-9302-42ef-a0f0-6881ab748562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6d4fad-666d-47a5-81bf-6a190ce3ceef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e6cfa8-04b5-4444-8e3c-c3781522d596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942e6c4f-394c-4bfa-844b-e04dc92a31cf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd7da7a-83c0-4ca2-b785-5411568b688d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "284b005a-cc85-48da-bab6-cf450f873012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fde43cb-6041-41c6-8dcc-b57be0880648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c69c985-f824-46af-9bd4-e6e64abd8ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e12521-95d8-4755-817e-8aaa5b058c02",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48abeee3-cbdf-4a7e-97b7-212cf02aa29d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2514215-66a6-47af-a76a-2a0d6a1963ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f52df66-fda4-4fff-811d-5ea13fea7aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949da356-863d-456e-8a1c-b50ce0510a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87027fd1-5727-4b12-87a4-5a22ef208024",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ed0c84-5b0b-4d33-816e-85680ee6ad89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2a3999a-2807-422c-89fd-baf48e2b7c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2ada13-a679-47b3-8106-371fd10729a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4fb2937-d552-4a83-9334-149121a95318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c26f211-22c7-47de-8d92-44530b7b0ce9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517eba3f-59d0-41f7-a3a8-60dff24493b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f8c105-0c78-441a-87c3-8442982518f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4c52f7-9d30-46f1-b95c-4a192ef80953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2285f786-caf6-4b2e-816e-a0be7ec57e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a93e26-5cff-442f-bc6b-f823c7fe7c39",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a451430-f58a-4b03-98a6-f10e37e183dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba60ff5-443e-4915-a1f6-33c0dfeff900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975f1602-0811-4a73-acb1-fdb59d8bb6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0074be5c-d169-4111-96d0-ca20bc71f5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad2259b-c699-4c95-91fb-0ac20429063c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a85f62-34d7-4100-8f58-f58b4dc9dd09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cfa642c-d0ac-4183-a6eb-95084456e94d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8568987-8fe7-4bf2-b18b-42ba444053e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b78ea7e-3ac1-4519-b376-fae70c38f3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f333aa72-e5f9-4161-b0be-e4002b0c6a4d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d48db7f-e949-4f56-aafa-4317c999b9a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34dd8601-be52-480b-816f-3e5cb8d3bbd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d299abf-00fa-4a5c-a8ab-d2f745be77c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44de0aa-d7c4-4a9e-9c5b-b5cd9fad227b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e00a381-2558-4478-833b-f5eee9688011",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241d0de5-88fa-4faf-98b0-4596c3e24f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c8da6c-be1e-4253-a484-6d92c613861a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "538711a7-6792-4624-a825-7664147a0342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945e905a-b4a5-4227-82d8-e5156710c05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211250aa-5aca-4f65-9364-717e9e7e8a09",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3195b2-57f1-417c-a21d-ae78705ed4c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ec964f-0b96-440a-b59c-b06bae4c5d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0484bf4-9e14-4e0a-b1ee-8231f4f605db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4469b86f-e3a5-402a-a064-222d3bfebb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e42692d-f2e8-4cf8-be94-dfbf9f66dea3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6290b7ef-991f-4e68-9b2e-946bd7293390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0619b9-49e2-4cca-a2bb-b8f664b26b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ff478e-0436-47f7-8e5a-a17a3acc56a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7b6c58-4bf6-4648-9dd3-870f58c13f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ee59f4-f56c-48ef-9743-39633dc34c20",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4407a2-95f0-4130-ae79-07d88f284baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce834c6f-6ccb-46f2-8c64-acfdc4c1c4e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405c259b-0b77-4568-8ebe-b3828ea17573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db72c12a-3e8c-4b58-b5c4-a5536fd4b6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b4c5b4-1120-4db7-971f-f7903c9a5d31",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdf5949-46c7-43f1-a083-c78e5cf1b3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33e4060-5487-4625-a948-59fd16a866b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4fad5d-3e3e-4a3a-a907-7f625c047a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9443892a-e030-4774-a859-df3f216c1a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8385b046-e6e4-4fe1-bfa1-ba88c288f1e7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025fcd3d-5d84-4262-94d4-1f5a2a144059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b5dac6-2671-4071-99c3-673b4ece39e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fc597e-d71d-488e-8f62-82ae6b4dd5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071e3a22-699f-4a33-8dec-63a88dffea90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27569c9-db3e-4143-989b-2aa7d1c1882a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45428295-1b79-499d-9b20-9232b8859976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8df9793-1b6e-4d52-9893-3ff55ee97960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5c8543-617c-4d17-bc01-337364161ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ab79de-cc9c-4584-8b87-e66fcc9cc810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d7009a-77b1-4c8c-85c0-faceb21444b2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82546a40-13e1-448d-8bcb-667703c62449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7294e77e-dfe1-4052-b649-023b844611eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fc533e-f6ef-48d5-b034-0851cdebefd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd8950e-9b8f-42f9-b2b3-031b930469dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be6fd3e-046e-48fe-87c9-a2429b17b3f3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d8ec6e-68d0-44f2-8ced-2ab8741e2c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6632a7e8-3d8d-4d41-a877-5ab66400feeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc6bcb0-66c3-4564-bcfc-bf722bf8ef1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291047c1-f8c9-4de8-944d-3a64afeff372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd487f3-5a38-4665-972a-5385cbf2973b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195bc0e9-36f0-4eea-bb59-1b5ec9897f5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69ee0938-734b-440b-b49f-b00d2e7e0c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebf5d22-5c66-4248-ade2-c7b19e7dbecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d8920e-2e8a-4c04-92ca-d4e595bada7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a253ff-a70e-4084-8b8f-3a0c165f63f5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0b9947-3adc-437f-a574-4d0f57c745a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd6937f-3c32-4f55-b588-eaa38d9aa1d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e64096-cf1a-45d0-85b9-e712d6c7e0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d055c3e2-1600-4a5a-86f5-5e5b2abe2feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf085a5-36ac-4a21-aefa-9082e6e822ac",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a79cf1-564c-45b8-ab96-3e6b5497f187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1579660c-2574-4ead-9cfb-136327cffeb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7753f2bd-49d2-46f2-a87b-f4106f0aa38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a0ddd9-0de3-48ba-b116-e781a4c1aae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df93f6c-6dae-4f26-b516-d4ea6750860b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcb61bb-4793-4cd0-b029-3354f4f67d62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff78c34a-d168-43a1-847c-0b2cca6e8e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a7710b-3d24-4c80-be71-86d3310fb02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59564c8-bc7e-4e37-8c4a-4d8486fab327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49902488-8888-48e5-8479-e5b58dd5a381",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf9dacf-7e2c-49e3-949c-a277e27b3702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0753067c-6781-4dbf-8d99-c4757ff8e24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efaa4cf-d7c0-4ae8-9cfd-09dc237c8119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a424027-86cd-4875-88db-8922bf25bea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea68dfbf-3666-4feb-a276-d616cc0734e5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46560bd7-892a-471f-92fc-8c944ec26b6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f437702-c6f5-4d6a-af7c-89e523860a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ab7167-b93b-4113-85dc-c3e67cfedb4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ff9b7d-4edf-4a1e-8b5f-a7d0543c602b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc555c35-1d3b-457a-9b06-3207b763a2e7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5d9e3c-7986-43d8-9aab-9a64afe2b393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d87fda5-654f-440d-a2a7-253b6893681e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faeb99e-ec3f-4df7-92c8-c93f0fcef6fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cef2a54-6d9a-48c5-af05-a64721445058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4159272-fec4-4090-99f5-470ac27dccb0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0681b996-4d8a-4182-9ff2-c63df97f8653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f345ac16-d0f9-48c4-9010-4e3817f8ca40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfa511c-d4af-4a0f-b94c-09340f423352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8bda85-a20b-4899-8d92-6435ff313afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d31a63b-317f-4cd8-8e70-0c35007f3640",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1f8519-b275-441e-8c7e-e6b5e4bd6382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a1c06de-2df5-4a3e-b0a6-d562fb6bc1ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349638b8-246b-476e-a5f6-f91e17667291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd321cf-2cd5-4678-ae2f-322d2e61a83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cf5c61-8840-4483-ae38-71a3cda19485",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860d275c-f6f9-4b81-a187-fbe8c655ae7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f3dbdf9-bb5a-4ea5-8708-042e366e0e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a00fa0-87d0-4a5c-85b2-7c04bb630414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ec3fcf-ed46-4406-b6c7-da7fd0627ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df71f519-5aa8-43c5-9d15-79ca256eeda1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d7d4e9-23e4-4f1e-adc3-a33aff23f73b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29995dc8-7fa1-4012-8a61-2aaf5e4ae00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5055e4-0934-4941-bf55-f6cb34a41f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ec7e1d-8d43-4152-97e9-5be2eac8976b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c301c5c7-964e-4a2d-bc1f-0250ea2cffd6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2ed6bd-4268-40de-9302-9bb9a899bae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fc2dfa-d199-4cff-a20e-3be9204f736f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d514da-50b0-48cf-9372-d24eebb07eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf0c43f-c2f4-4aed-9b68-d50dbdb65be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21abc213-bbae-4b88-9ec4-54e9f3032518",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b6f6e5-319f-48e0-ae5c-b963f43116d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10de09b0-586b-4a3b-8444-6be4e035fb70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f9a7b2-c323-48bd-9a96-654839997511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66eb700-eee9-453d-9a43-e918e6687790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f33a0d-20b8-4cb9-a8a0-c44bc8894553",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345e86c8-4012-476b-83c3-3ab68c0e684a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d8153b-2368-417a-a0a9-79753afa8732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cb6bda-f691-4eb6-97dc-239088516e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5394ed28-ed77-4ffa-9f68-e1c8a0b322eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87be124-a12b-4252-a2fd-745997b3f311",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32116d5f-3cf6-43a7-9af0-6c855141e7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3dc523-99cd-4464-aafa-0c81b5d0c221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0253374a-45e6-460f-beb9-4d3ceedb2024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8384b5c7-93e4-42c4-93cb-bf220f4968f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b8bff1-b9b6-42e4-b8f6-958d5f30f91c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bad8fd-dc28-4474-9947-419d91979cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80cde83d-e421-4542-b8d2-06331ef93d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0754941d-bf5d-4d94-bc94-8507fdb38d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a171777b-c34e-4b0f-8357-9ecdaa52c3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1169e3eb-a9dc-44fa-bbd6-e758568dca2f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414276bb-6028-4f38-931f-a44985d3f0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6372c1b5-562e-4e50-a2bd-c119ca972ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a0d20e-6478-4087-aebf-6e3916f47506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bfa1bb-8153-4dfd-b766-1e62c1323206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db93a5d3-0c9b-461e-b0c2-1c030dd67278",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af439bd0-f98c-45b8-ac72-15c1194bd0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a402664-fab5-469d-9a9a-3df494ab573b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fbed35-3444-4196-8eac-e37a706e1daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf67a2a-fbea-42db-87d8-ba977a4c1ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25952913-ab38-4be2-93c6-f78eb6d6d671",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb8fc12-1b5f-4415-a172-8a9e03f9ed87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb62ec3-3eae-4cbb-94ed-7408bff35452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a770ad92-4d1e-457c-8f99-840873214c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d12591e-2839-4d93-8cde-87d9717dd6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452e4c65-0d63-4418-a896-94f654772578",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75238b7d-95a6-4179-bd45-d2b91625a86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b24ce69-709d-4e80-bf7d-787b02e1d669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae95125-eaab-423c-88e0-38d82fcd820f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ef16b8-8ba6-48c3-a7e2-1ccadd747e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b202e2e-67a6-4428-af12-f8d5f0329913",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d237246-6666-4812-b2ee-b2492d307f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260e0629-9555-4bfc-874a-aa5677370f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b1d0c1-60a9-4dbb-b4e2-dc080a8a94d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8741a3-442c-4e15-b914-90443831237b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d6abd6-861c-4084-b5cf-bde65f1ac23c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae09205d-ce46-41fb-86ba-ab65465a6c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaba15fa-a898-4a40-ad48-a18caee114a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c054b6-2fe8-49cf-874c-e014c4be090f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfc4cc9-0339-4a91-8a38-72f19ef6a2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56972607-a1e4-4f7b-b4a2-8cd6e0fbc4fb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26df577-ebe9-4cca-961a-3350edddf4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a7af7c-ee2d-4885-be4f-526abdb37972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5712d7-5f71-4298-97c9-4efe38043ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d28989-146c-4e46-9eef-0c0e254fac55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be33d7c-cca2-4dff-8f82-bfc0a49802e4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8e2d42-7e44-4412-a5b6-6d1613c07d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a2e359-6e02-4b15-9eb3-533ba5847a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7f42e8-5b40-49e8-bc86-2bb471b66ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715ebbfb-97ac-4622-a2bd-bb3623c874e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7e3615-7c5b-43f1-82ca-9d0d55b20100",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acff24e-4acc-414a-9a9b-7281ddaff793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d1aace-9600-4aec-8cc3-6b99e5424660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae6e1c9-29af-4f1a-bfcd-49f91dfafa10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed7713d-44cf-45f7-a407-ab46b57adea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5228ff5-582c-4430-a5de-a8a41f4acdf4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d554c7-2f0c-4a2d-8a86-d38ba0ae7025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dbc6b85-d7b0-4690-8cd1-38e9b00d3712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844a8030-3369-4de2-9215-9adcf92a5734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb634e7-b6a3-49fd-9401-0751dbdd420e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1334311a-759f-4a79-8a24-a7393e06ce9c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0ac2ea-396c-4781-9dce-1a2668bf4881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f863f63-d22c-4a1d-a419-2618b126986b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f1feef-c898-48f3-8d6b-dbe3485e0fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58611a95-288b-41f5-ae98-8f4374f3bb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73634db-6cec-4f44-8893-abd2f91bd2de",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea50d7c-2bf8-4019-910d-7291d6797347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d420a70-c930-482a-b522-c062f945c7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315266eb-23d3-4345-8a56-3081988c0cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67015a0-58e6-4777-84db-1c53b651e0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28d00ff-1e01-4357-9a2e-a5c873a5dd7a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174cdb21-a701-468a-9e44-c00814131b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325dbef0-2baf-49e2-9a63-e7f12d2637c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622e16b6-5e9c-4263-920b-acadbac64b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c429ada7-7cc2-48b1-936b-ff6721d6d575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e133d5f-9b86-4bea-81ce-8d19091ab3dd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8fdddd-176c-485f-af5d-c762c4a4c6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4c2848-0917-4943-af3b-7a7afe9c68ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89dffe2-8d2b-40ac-9df5-00552a094b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a050fc6-e99c-4274-83d4-8c1ec0303cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331a98b9-4c3e-484e-b7c3-1cf19250dc6f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fa8250-dea6-430d-b6df-5835c0712719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b38bdc-0291-494a-939e-6f41fea419f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4502a2-6e28-48c8-a832-138d6bc7d671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cacfed98-5a4c-4dab-bb10-0744b68d749d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf079e67-3456-4844-adda-fd85f7a099ec",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f683e4-0b64-4d62-bba0-e829b9a07dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9931de-1a71-4ea2-8080-e92602e497e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe620c66-e8d9-4a42-b38a-1d5f9844eed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d548140-f083-4369-9b0d-5358c7f29965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1204ea-e131-487b-807d-23d484c10fa0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1bb8ed-6559-45d0-85cc-3c3aa893c08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec252105-6833-4b83-acf8-8bda8af1ca31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42cf463-a348-420f-89c0-7bb58132ad34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c223e75-df9d-4996-9b67-e9337dee4751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0a6ca2-f794-4140-8b8e-912150245a6c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbebab7f-ed39-40b1-8d06-91746a4c6dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2f808d-c577-4197-9efc-132f283b1c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a21abf-8e85-4bc3-a003-edc092f319cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a274aa4-3419-46a3-ae75-63611955c119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8af9f6-ad65-421b-9046-0716818ce419",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99609dc-b8d8-4904-864b-6d45b4b1cf58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62be9627-8e26-41ad-a65f-ecf719368f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b94e735-fa7f-4fb5-bb76-85334de0f3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4639e804-670c-45e9-b9bc-22c7de378e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b155cbd8-a233-4185-9c32-3e02fb1159a7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f88bee-4be6-4378-adda-92dcf6e71765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75134e41-3c5c-499c-a0e6-f7d5c8e92ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7eaa4da-4c73-4e91-aef6-4e93bf3783e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b36891-5a3e-4005-ba22-82e26994252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c688bc-0ee2-4759-ba11-236ebf4f16a9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4466c661-f221-4ecb-a9f9-f9a7220f1376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa50c564-33c6-4a01-9ea0-169b38b5bed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bee612c-8f26-4a9d-b01e-0603bb479fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f10c1d-6400-4c67-8f96-6396bfaeb56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d6a2b5-e56d-43b9-8e8d-9572c7dec936",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c517616-8711-497f-a195-c27c263624ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4afa62f-3ea7-4f85-8bc4-b3c2067e1b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14145500-6f94-4f1f-ab4c-67994b9b5bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c70d821-dd01-4bd4-9ee5-8281e49a64c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27eb1349-b3cc-42eb-bbcd-5a0a49716b17",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c26ae01-26d1-44ee-b72a-17a6fafa21f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0d7050-af79-4a6f-a21c-55e4b5a5ab72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc5ab42-c372-40b9-afb1-48ac6d0b4d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb9c73e-b651-4705-addf-901d4e5471a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56b061c-468c-4616-ae1d-08ad5a41c437",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a81f0f8-ee61-4033-9a0e-bc44b0158a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12896ef3-9eef-410e-9245-392cf82fe687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a6282c-a2e8-4904-aea2-9b44b94a7baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73079b6-ec47-4643-9e8c-156b3dc23a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d6a978-0c53-4258-9c9c-00ff93e93d8e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb331d4a-215d-4128-8f2a-166bca9c9eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af32780-8742-4322-86d0-054419637001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da753e6-1981-4cbc-840b-fd08cefaff13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740f8f38-a856-4cd9-96c6-07116dfdffb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0769d36a-6e12-4eb9-b42c-c3e2c7e959a5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a53516-f893-4f6f-b0b1-c51ab772f3fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "256f0223-b8ea-41eb-b574-32cd5cdbb177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f1cfda-9579-4d4a-be2e-b15491e8373e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ffe74c-b4fc-4050-9766-dad9829c0559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f0b5fc-941a-477a-a5b7-1ca0a352cc6a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ad75b2-78d3-4670-937b-bd6cbba547dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2d0c5e7-02b1-438d-8b3f-004faad3efb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3f995d-e7d9-4deb-81f5-a73a54bf8e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f315336c-5d62-4b51-8c4c-7935c7812885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adf2567-ef75-4f04-8cc6-c82fc74dad8a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2b5b85-8f7c-42da-a267-76f5f8a9dabc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac4cd381-4eb4-40d7-b5fa-2f7825304b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12275b8d-c05d-4a0f-8375-96c9c0554d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679af546-d0f7-4690-ad57-20e355208410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac4abc4-c709-4ae4-bee8-55b6f1193527",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ed715d-c064-4338-b7dd-b6b99459e377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2283a2a-a5e0-4959-9b61-2d116bbd9921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd17b62-1511-41ef-8ea4-50617cfdc13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fe7f43-563b-423f-bc07-8d0bde6b1645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cce4d5c-0418-4d31-8b45-2f08e34ad1a4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab89515-53e7-4f0e-a789-dc42d8246532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd690c2-53da-444d-b698-e19724762a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "440e3bff-c47f-478e-8045-b2f3b83dd6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6adb287f-63fa-4222-9ac1-f6f65d861795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f3bf98-fc0e-427f-9597-55db1c52ad18",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6165c615-d451-4995-86ad-061a572f0fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb77e903-c884-4ffb-b3df-3c35a49c6ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76a03ed-d66c-45c7-ba51-62407e0cd06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7338cc-397e-4c94-ad05-41a2e62c26ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2414e27b-bf38-40bb-864e-54ecabe88b52",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421f60fe-de20-4310-aed9-357320f6e728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1092226b-2107-4ced-a80c-9147c32b0c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27064cbc-c233-43a3-a303-7f6775d293d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb3ccd6-9481-4c2a-890d-f177c9c34ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639b4f83-40df-460e-80bb-8963afed9641",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0240c830-2889-491f-a1b5-b0347ffe44f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "581b9da2-4f3e-4247-987a-f7e4837b7820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd606310-a740-4455-921d-87392ee138ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3968e5-8231-451b-a988-d03e24bdf97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff756d0a-1a91-4612-a5f0-f92f17753391",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676ebda0-5a6e-4274-ab02-c660fb80d752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f64d7a2-ed0c-483f-8233-fc81964f42b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60078ef9-922c-41ee-8979-09c2045cfea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb164fbd-d5f8-4e21-8dfd-fe16c0a0df52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3613a4e-85ba-49d4-a356-1be45e78a875",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4112e5-cdcf-42b5-80d6-e3da3dd28880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ddd485-c867-485d-bbed-4ff443a733cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a07cee-d5b1-4b71-864f-3019d4995435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd694cd-2f27-4671-9675-d5e8ee6c3870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2e60b9-5bd4-412a-810e-83cc3301f9af",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeeaea18-36d0-4a11-946f-e8402e4a70bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2c12efc-6cf2-43a3-bd55-03aa2ac632dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06bedba-5aa8-4de7-b2d7-86b2478ee806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6635e9f8-3ea2-4dc6-8b46-ed04f0f8c731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301029e5-5b43-4f40-844f-06810d954dce",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726a0309-1e1f-46bd-9a43-2391427b4365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de92e43-89aa-4b63-89e0-257f946aa4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac6b41c-fe91-4699-9bd3-d51dce34696b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc930e40-98d4-4f00-8055-e54df5ad1339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119b5b5c-4332-47ce-b56d-644f775175a3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd38c54a-8c9a-4e2b-a3e1-876de58823a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8061c1a1-4b74-456a-aeda-92a1e42055ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a2d4c9-b6db-4b6f-b2e9-4a90b38cb1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0304c7-8245-48c5-9f0f-d4c8db4d582f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa74901e-f229-4d65-8902-853cf71475ab",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917986a8-af3a-4d67-97ae-69b49c565b6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c05fb7a-c46e-493b-bfce-4270ec749ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285ca3bc-74f0-4764-be5c-ab9d3a1a46a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db52b63c-603f-47fa-afeb-b633b1c9d199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5628694-e201-4310-97a4-f0aa41124479",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e420663-c0ad-41af-b835-da4d9069d494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e098a5-3e42-4049-b673-bea59591708d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d41cc6-5cbe-411b-868d-d44380f044e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cde9022-5874-4483-b6ff-0d5075d79a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd31857-6417-4a98-8111-3c851f464fcf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57821f81-1e74-427d-a181-c23882ba9674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f14e2d8-96b2-4ae9-9ef9-5423393e7c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093b64c3-45ea-4a25-8548-c7603383279d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a159be6-4da6-4b27-9547-efe751ff9eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f131173-c5c6-46be-92cd-0292428d2927",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d85d5a2-7380-4520-b878-84cdfacc743d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a99ccf5-c361-4769-b294-0aa410645291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7161d375-bb17-46dd-b780-e1377e15f7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f627afc-bf3a-47ae-8b58-4ac0b33441d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e371460f-b1f1-4468-9a1f-ebd50bf5d022",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6d178a-ad6a-4a75-9aa1-2d7e84f52f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a6103f9-4555-4cfe-8f70-980c91732f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b50e248-4349-4353-bb7b-f53b3ff08be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d918e46-fd79-466a-b5f9-ab514bb51294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0de67a-bae3-492e-9fda-da5561df1405",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12be0234-9c3a-43de-872d-b3ff106dec8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "482f3e0e-5e5f-4cb6-aaab-2f1013526817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d6fb3a-71ca-464c-bf84-66d95bb8ffd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d158a01-1ea4-4923-b83e-e501b0940239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75671f55-0efd-4279-aa28-477f15f99afd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08593b93-45fb-4724-b3c8-3b8b7f52cd00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3ffd143-2c65-44d2-b271-2e327102a646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adc69b6-0ae8-4c24-b058-4100ec096ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15fa271d-e90d-4ea1-8228-a18ef2cae891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1daaa0a8-d219-41fa-8252-4b3e6d768771",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5198c3ef-4f9d-404d-913f-cbbbeb5bb899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8164a4d2-42ed-4e5d-a1d1-0471cde5db4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9eccae0-7e88-4efe-a842-d97dcac9c7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5685a013-06b5-48aa-a163-b2588af547df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775d982e-e7cc-4c4a-adb1-6649807e7cb1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cc8eb7-de73-4685-a2b0-55819c4a7751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc01f713-1b8a-4c54-87c8-aadf0fd39440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59715773-729b-4126-bf38-702d11f357a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1f027f-3dd9-4228-9ce5-53c83830e88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6ca152-5555-435f-a826-bb61d249b02e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3f404e-ab98-406f-a906-2525c4293fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd8abfd-e9f7-43ab-84c4-fda9a48d2f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbae6217-ec78-4ebd-855e-9d2b20368610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4499b763-99b2-4ace-8d26-5cd68bd5bca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a70375b-28bc-4445-a7eb-c48c08332fd4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8968513c-0334-4bbc-bc01-27e6c9258b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc66a2e-4daf-480a-ac53-e0dfc852bf03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93451d0-92c6-4e4d-b05a-2819a8c6e3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6a7b42-ed4e-4431-8dd5-a871a66a9601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3648cdbd-5e34-4b5c-bc37-42e02f73b9a8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ae8a4f-9925-4538-9d5b-80a67ab069c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c4714b-1d26-423e-b79e-c4fc5d7449cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdc19ee-4295-4b97-aec6-801708dc78ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b5a933-4cbb-405a-a02c-2ba5c685d29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ad86f1-fa0e-4429-906b-63ae517172f5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835d51f0-1886-4ce6-a76b-9f671da922a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "802ef2f7-decb-4ab9-a5d3-f3ba5a0f54e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b89e845-3bc2-4cd6-bd08-38e42a94eb1a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363fef24-812d-4216-8043-e5a0b8a7c63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2273b51b-882c-49f4-bae3-804f84bca54b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c625f434-d5ab-4d36-b3a5-cd43b706a06e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aed4ef57-5839-4cff-8c33-38d314808c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc99c51b-5d7d-44f9-a8df-fb2d3ff09185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8ec5ae-498b-430d-8cf6-1243d9dc06b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731047ff-dfce-4533-9501-239866703fee",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a60c12-10ee-46ca-99d7-ce7ac7443bca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fae73f6-5cff-43d5-a48c-017bd74ba302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c245a6-150f-410e-b74e-c76f4b5561e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0b8a82-b882-48ae-ba6e-01549ceb02ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb72848-9321-4f49-a0dd-5ec481f01692",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac344bc1-e3fe-4434-ad45-1adec51dff60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48620186-b65d-4cc4-bed4-9e7d4faa6694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b050f3aa-7cba-4e66-8215-26769c4f1cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e732ea0e-6ab9-4b5a-bee3-a836bd5d3158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d404a004-117d-4fd4-8a3d-db61d2400f23",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c51a364-3627-4531-9d19-1b5cbd381b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17fa4b74-f3d6-40f7-8dbe-15b45f2a1b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba77592-7ed4-410d-93cf-2506d82f0e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df6d9db-1bcc-463d-b338-0dc016fb1de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a19988-5d7b-43ab-8e09-ddbc094ab78b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d24b7bd-54b6-4897-a179-1e22b4850407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c31fb0ef-6e97-4cfb-8bf3-b635cdf7cc95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274406f2-4ccb-4908-af8d-d656d34c74b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7498d540-4853-4758-b9d6-e9e6bfb64b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b11b8de-63bb-4479-beec-98e0774a459f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e7dc81-e2ab-4513-aac9-a305a4d36ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a363aad-4a00-4848-a160-969cd45cedbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a9513e-80ba-4c4e-86ed-df508210bd24",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5481a183-7089-43b0-9552-7ebecdbbd6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7b2680-a21b-4ced-afc5-8f9f113e3c8b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f0040c-fa54-4a10-b945-9a0564f531aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b39df1e6-502e-4615-a929-280f06e3a792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8796e427-bd52-4d5e-a501-c2e320226220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330ae5be-327f-4e6d-9584-171ecbe8932d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88686b23-6f4b-4486-a0b0-f2dbbe12f307",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66357f80-646d-4dca-86b0-ad7da9295b4e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76417556-b500-46be-9094-8c05368743d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4408a619-672a-4383-af86-6d3fa148c261"
                    }
                  }
                ]
              },
              {
                "id": "25531a2c-d1e7-4745-ae1d-781aa913f3ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46e2e386-6300-49c6-99f1-768429a46446",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e61da7b-f50f-4e8c-b357-8f6ddc70749d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fa1e6142-2307-4c7b-ba01-570104dd166d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985e2f9c-a42c-4280-a69f-0896c77a9c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b854483-e375-481a-acd4-614f5229c3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc98b9d4-ba0f-4521-bda4-d080a54791eb",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250a4371-3b87-4912-9f3d-2334b62f8e84",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bcaec418-a7f4-42ce-b676-45a3392b6eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d6e8a9-bb56-4882-81e1-c433640dbab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8cfe054-3379-4bb9-9f20-a444d3ece06a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21270b12-ff38-4758-ae58-4ecffa53f859",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a252bb5-2b8d-410a-baae-50252c88da7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cc01026-81d4-4d71-ad93-6c1d9f939d2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb6917b2-f7e8-4816-8a04-889e174d6751"
                    }
                  }
                ]
              },
              {
                "id": "92222c47-347a-4e20-81ea-2b0d788b3e66",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3b3d7030-b4d1-4c7c-82b2-34f6190ffd8e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bfe0c8-df55-4569-b48c-757b42bb8fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "07621670-8bb6-43b6-bf36-6bbfd70da881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0145a1b4-388a-4444-9d81-79063dc698b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d575cdcc-c22a-46bf-bd80-e1345c2e4624"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5f3e3d9f-d66b-4e5d-aecf-2878a59610de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "159c914c-578a-4d20-9c1a-04c775766438",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68dd93b4-0067-4394-b7cc-fa0e284c60da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ff4a6823-54bc-4272-89bb-46ee0be4dbbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51bd15e2-f8c2-4163-aea1-86738014f1b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c769dc6f-b484-4a44-8de0-56bb2503ddcc"
                    }
                  }
                ]
              },
              {
                "id": "d3ea04dd-d2da-4097-8f64-c19a3350562c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4535d247-5894-47f6-a5fd-e798fb8a9c47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ad0e0a7a-83cb-4d4b-9579-94ca1cca1c58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba2fe502-b202-4052-be55-3e9573521226",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a54ad6ec-6f7a-4cd8-a450-00479e7a75d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10bedeaf-d43a-4c6e-af19-90f3918f6b19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3cc75700-46c3-475a-a065-38632cd7a50b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "914fae8c-c71d-43fa-9e16-0caaa33e488c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1eccf81c-3d6b-4573-8248-53e2fc1678b3"
            }
          }
        ]
      },
      {
        "id": "874df758-68f0-47e0-ba10-a0a5f36425bb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ef2736b0-e18e-4304-b62c-ead3334bffbe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30a37a8e-2d24-4a72-b2ed-4473969c930d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c89766e0-231c-4201-9b23-c2a026baf32f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bdca21-8e28-4a16-aebb-c501686d6b2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d6728d20-7df9-47ee-ad98-5d7aa5f250d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299bbb6b-22a4-4597-957a-2b8b86f003da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92047d15-03f4-488f-a969-e96e52cab1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2a1632-8ac3-4dd7-9824-32c279678682",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4733497d-3cb7-4edd-8b3b-02c332d41105",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4192c582-bed8-4ef3-88cc-cd6d02e7bd7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4879d6a-7637-4fe5-b3ea-26abbc964c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5684ff8b-23c0-4802-be34-94baa08c83bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cdef738-d65d-4443-99a2-70dc869a023e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1188acbd-cbb6-4342-a1a0-ab0bdf9475e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4831015f-637c-44de-905e-dd83f3479c02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33acc067-7ce1-43e0-aecc-0b168a01842c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47b01783-ffd5-41b8-b612-26e2f33672de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "91299efd-b0dc-4ea1-b56c-5856cb3a858d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78b8b18a-74e9-409e-9583-7170b1c671e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a638902b-a77f-492e-929f-a6723b4291e8"
            }
          }
        ]
      },
      {
        "id": "f8136821-fef9-424a-86ef-8982792990ae",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dc555664-50ec-4af0-a05c-b5bb3ae66d4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cfc16890-5511-46e5-b875-8fd45c6ee947",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fe5dd09-1baf-4c02-b553-43fd8c0931f9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fdeaf8-0f52-4e77-908f-764f983612dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ad02db7-2731-43ca-8874-7993311791a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a27afba-a31b-41ec-884b-7d16d41fa223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54471620-968f-48f6-ae19-7b5e14e8e9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2174d691-e566-4bf4-aa9f-af39a2459091",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e642c160-f1ac-4cf0-b21c-6507d3127e4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa18913-88e4-4e17-9c2a-0def177f4629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148a8dd4-a009-4515-8723-4746e41b8524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edadaaf6-b709-4c74-a5c0-96887ddb05a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4911c3a3-b3a8-4cc2-96ec-67f1623aa0f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78e9c344-4d25-4b84-b4d0-6fe63e557745"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d5d4b0b-8e77-4781-89fa-e5fb9efa7cb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "921d1731-5320-4d4b-8b40-9dd28f384d0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "585192d6-d396-46e0-9e28-f091767589f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d391ec40-cbc2-4844-9e01-f13d8ff553b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82197abd-c1ae-4f24-a30f-58e45cee5fc6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d2e26d8-c61e-437d-a9e9-f6465f731db7"
            }
          }
        ]
      },
      {
        "id": "e639dc9c-cb81-456e-a50c-2c05174c6fb3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dbcdff74-9ab3-478f-a942-6f529612c8c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4cf4dd8-5580-4bfb-8c69-562342daa4e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70d94b74-ad96-4f66-92ab-6c8005164910",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268095bf-b67e-4ee8-a604-a12e4d5428b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f3d7d3d-ef62-4ca8-9a81-01cbe5c1d0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3ea262-96ed-40c0-acdf-3c22510593dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "689a24cb-bb76-45ab-9305-f513c368e50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351ead2d-587c-4e8a-8451-55137a6f5563",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be72722-16d4-452d-abbe-4296d21bdb4e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e193cf76-5614-42a6-990f-ae9f63a6a62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3816883b-5b36-4401-b83b-2da3c1f9c417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f967f8cd-ecae-48ec-bd9f-b7530cc52473"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3bd5d5b-272c-4aec-9404-c7274529034a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f646870-4d22-4f81-a03e-3e096bfd8d24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c0cc23c-baa5-4688-8871-bc853c713ac9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a08bae66-cece-4382-b186-23c5136f7e67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0eb6816-b722-4a65-be81-673cf99b15ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b1b5d37b-5768-4801-9a13-fb5562300848"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a5c3c7a-e378-4973-9362-bc0999af6ffd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c4e4dff-70ac-4082-ba10-dccd1e60f52a"
            }
          }
        ]
      },
      {
        "id": "5f872530-d559-4f5b-a424-eeec11f614fe",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d226e188-ecb6-4f76-a8d4-74d01e568d1f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59bfb73b-2fdb-4de4-a1b4-cb477b085f69",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ee1e3f10-fa6d-4ea6-bf30-b125f0a890c7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6f3b6a0-f7e1-445a-9ff2-06a9f81856f8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fe51196-dd9a-4b7c-9890-638454d5336f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 657.3127413127413,
      "responseMin": 20,
      "responseMax": 5250,
      "responseSd": 612.0435851059294,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677977366345,
      "completed": 1677977547076
    },
    "executions": [
      {
        "id": "62fe1653-eb1a-49bd-8776-fcf2039df660",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2aab77bf-ca19-482c-9f41-f8f8581a4c6d",
          "httpRequestId": "94e49f87-966e-4dce-9339-fcbfc49bcb29"
        },
        "item": {
          "id": "62fe1653-eb1a-49bd-8776-fcf2039df660",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a300d94f-01e9-435e-9d21-5f2567e8509d",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 0
        }
      },
      {
        "id": "33f58e95-2aeb-4656-bf1e-06a084692a0a",
        "cursor": {
          "ref": "542485ea-e611-44a0-84df-69d772600334",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f3fb1809-8379-43dc-a4da-4a0ae802b593"
        },
        "item": {
          "id": "33f58e95-2aeb-4656-bf1e-06a084692a0a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "feb3f652-ed5b-4963-9eb8-d6fe5a8fca7d",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "8e608c85-df46-428c-bb32-32f756c6e841",
        "cursor": {
          "ref": "1063eafa-8bfa-4490-ade3-7484ea2ae94e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f0dd7a10-0e54-4d34-a21a-65b8e8e96e53"
        },
        "item": {
          "id": "8e608c85-df46-428c-bb32-32f756c6e841",
          "name": "did_json"
        },
        "response": {
          "id": "69e100d9-806d-4477-bae1-332aa6696242",
          "status": "OK",
          "code": 200,
          "responseTime": 699,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4ceb3e-d892-4aee-b5c0-b8beb42c9793",
        "cursor": {
          "ref": "b94f2f97-33b6-471a-ba5b-62b4fd1d5728",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "36b76cba-4414-4ab3-904d-5405b1cc876c"
        },
        "item": {
          "id": "2c4ceb3e-d892-4aee-b5c0-b8beb42c9793",
          "name": "did:invalid"
        },
        "response": {
          "id": "7f3200ea-42df-45bd-b6fe-a2b4ed66b677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4ceb3e-d892-4aee-b5c0-b8beb42c9793",
        "cursor": {
          "ref": "b94f2f97-33b6-471a-ba5b-62b4fd1d5728",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "36b76cba-4414-4ab3-904d-5405b1cc876c"
        },
        "item": {
          "id": "2c4ceb3e-d892-4aee-b5c0-b8beb42c9793",
          "name": "did:invalid"
        },
        "response": {
          "id": "7f3200ea-42df-45bd-b6fe-a2b4ed66b677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2aeaa3-a8eb-4f2c-9923-a72b2b5d30de",
        "cursor": {
          "ref": "2a9b3f79-0356-45a7-bc5c-cfb90db2a2f4",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e8a72816-4ee3-41e3-aa0e-3e4690c262e0"
        },
        "item": {
          "id": "1f2aeaa3-a8eb-4f2c-9923-a72b2b5d30de",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ec6df321-f85e-4d7d-aa3c-2773579c803b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 682,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e43fb90-323b-4099-98e0-a7b65b0c22e2",
        "cursor": {
          "ref": "b857b9d3-868d-446d-825b-0996a07b3f5b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d051f8be-8059-4875-bc1a-da55742ae295"
        },
        "item": {
          "id": "1e43fb90-323b-4099-98e0-a7b65b0c22e2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4cada3e5-37a2-4da7-93f8-f87c5985e59e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 684,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f29f04-d26f-4963-84a4-444a6f9f6b7d",
        "cursor": {
          "ref": "984196cb-38b3-4247-a054-1ef35a46ccad",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a5fc62f1-da1e-493a-b0f3-6f9be65def19"
        },
        "item": {
          "id": "b5f29f04-d26f-4963-84a4-444a6f9f6b7d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8aa20f84-2d85-472b-9e24-fc0da6a93c09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69b768a-5cd6-4520-8c78-90869f9978be",
        "cursor": {
          "ref": "6991e1da-ef50-454c-a873-004ba3421804",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fd9e44cb-3111-453e-83b4-2bc8d5f492d1"
        },
        "item": {
          "id": "a69b768a-5cd6-4520-8c78-90869f9978be",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3a905a2d-9e39-4b65-a6ea-57dc031b6d01",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 573,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69b768a-5cd6-4520-8c78-90869f9978be",
        "cursor": {
          "ref": "6991e1da-ef50-454c-a873-004ba3421804",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fd9e44cb-3111-453e-83b4-2bc8d5f492d1"
        },
        "item": {
          "id": "a69b768a-5cd6-4520-8c78-90869f9978be",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3a905a2d-9e39-4b65-a6ea-57dc031b6d01",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 573,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db1d60f-1dff-49b3-a004-fae3d4e92e3c",
        "cursor": {
          "ref": "c2a92891-71d9-4f1d-a529-94f8f409841c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "de5ee498-f6d3-4bba-9bdb-7d9931bedea1"
        },
        "item": {
          "id": "7db1d60f-1dff-49b3-a004-fae3d4e92e3c",
          "name": "identifiers"
        },
        "response": {
          "id": "eaa26645-63fd-4a3b-8741-f942ed2eb1e0",
          "status": "OK",
          "code": 200,
          "responseTime": 1016,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b066005d-d4a7-404a-af89-f8f08721336e",
        "cursor": {
          "ref": "336e27e2-b8f3-4c6e-9ceb-328b23a2e082",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "74db1a94-2ac7-44d4-9bd5-cb483f825305"
        },
        "item": {
          "id": "b066005d-d4a7-404a-af89-f8f08721336e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "059f39b2-a8f3-4881-807a-7b69dc057847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b066005d-d4a7-404a-af89-f8f08721336e",
        "cursor": {
          "ref": "336e27e2-b8f3-4c6e-9ceb-328b23a2e082",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "74db1a94-2ac7-44d4-9bd5-cb483f825305"
        },
        "item": {
          "id": "b066005d-d4a7-404a-af89-f8f08721336e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "059f39b2-a8f3-4881-807a-7b69dc057847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dddb33-010a-4e5b-ac84-80007327305a",
        "cursor": {
          "ref": "7fe9fbc6-b26e-4703-9c7e-6e5e4e3cb6ad",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5516930f-2efe-4346-bd7b-da8a8cabe0f7"
        },
        "item": {
          "id": "c5dddb33-010a-4e5b-ac84-80007327305a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5daafc04-257b-4a72-b1ef-95fbc9dec787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1c633a-75c5-4d66-a841-35845803f784",
        "cursor": {
          "ref": "2a018485-6739-4bc8-bbb7-37bb0c2966a2",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5ce256cb-8aa7-477d-b2c8-20cfda6aa35b"
        },
        "item": {
          "id": "3b1c633a-75c5-4d66-a841-35845803f784",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e1ddf7e0-ac71-43d0-8ae1-bd672e53d202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394c7e57-ef43-49f1-85f1-3f2443b681c2",
        "cursor": {
          "ref": "e436f724-2776-4577-9fcd-cae7effec794",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5fe4f3ba-5a10-4578-b841-e19d40a4e062"
        },
        "item": {
          "id": "394c7e57-ef43-49f1-85f1-3f2443b681c2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "960b1f5d-114b-4d3c-b753-bdff125883f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a413cd-270b-404f-a26d-3089fe17d3f3",
        "cursor": {
          "ref": "fa9a2154-dca9-486a-84f8-bbf830a8bbe2",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4780822e-2867-46df-9266-f201016c24d9"
        },
        "item": {
          "id": "d5a413cd-270b-404f-a26d-3089fe17d3f3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "00dfdda9-5b2c-46e4-850b-a567018f6067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cda528-b191-4810-8076-a1873284d02d",
        "cursor": {
          "ref": "a1b03f86-1130-4262-8cdc-84d346cb497b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d16a9e54-6a57-4d01-8e29-b8b2f0c8670e"
        },
        "item": {
          "id": "24cda528-b191-4810-8076-a1873284d02d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f29548dd-1225-4753-87e4-cee4d279a0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08aaaca7-eead-48d0-b409-91f9f49b502e",
        "cursor": {
          "ref": "756ae385-3edc-4073-9d87-a2aa4cd9c9fe",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b2e6c456-0394-4c54-9233-23047595dc54"
        },
        "item": {
          "id": "08aaaca7-eead-48d0-b409-91f9f49b502e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9afbc612-48ef-4448-a5a7-8925d1c59fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b2267e-55ef-4f6c-b133-9fffeed46489",
        "cursor": {
          "ref": "aa738c15-9bb9-4f7c-887d-366c11437e16",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e6219e72-8227-48ba-8a95-40191c3ab324"
        },
        "item": {
          "id": "10b2267e-55ef-4f6c-b133-9fffeed46489",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c30419e0-8104-4a20-bcf9-d285d4fadcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3613a9b-7435-45fa-8137-86e1297898e8",
        "cursor": {
          "ref": "f519da56-8fb2-4e47-95b3-cbd8093ab162",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f74821b9-70a0-4feb-b1e4-9e268668f4fa"
        },
        "item": {
          "id": "c3613a9b-7435-45fa-8137-86e1297898e8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "49b70828-59ac-497e-af44-c0100f812189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0316df-f8d8-47bf-a8b3-5fb16a44052d",
        "cursor": {
          "ref": "8a3b1be8-1e8b-4130-8845-cd2657beccdf",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "621a76bd-8a72-48c5-a3d4-818ab9437ad6"
        },
        "item": {
          "id": "cd0316df-f8d8-47bf-a8b3-5fb16a44052d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0e80aa87-0ef4-4b9e-b272-eaec15720933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d810cf4-56d8-4b5f-b7e4-4095d7fd0710",
        "cursor": {
          "ref": "622ba372-1c53-4c3a-b394-d5cbd02c562b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e91e65ef-a047-4089-b80b-3959f2796638"
        },
        "item": {
          "id": "9d810cf4-56d8-4b5f-b7e4-4095d7fd0710",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0c2d7e23-dcfe-42e4-8aae-0bdeb5b353a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cf2cd5-3481-45dc-a323-aa22143cfb31",
        "cursor": {
          "ref": "2e56af79-8f69-40b8-a66c-faab8b84ceea",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c1aa201c-0e96-4b1f-a1e2-319eb5180c20"
        },
        "item": {
          "id": "f2cf2cd5-3481-45dc-a323-aa22143cfb31",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f8031161-806c-401c-a859-6aea5c2b117b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd07b99c-a281-4537-b819-9bb2b4dceb34",
        "cursor": {
          "ref": "a8670d04-8258-481e-8562-c03e539c8fa8",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fd4d92d7-3080-4b91-a770-34ea211a43cf"
        },
        "item": {
          "id": "cd07b99c-a281-4537-b819-9bb2b4dceb34",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e0cf0f46-7825-4bc7-aa09-bf87da93f82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea65bd9-1ae8-4475-8bf0-e0a3e66c0f9d",
        "cursor": {
          "ref": "91e7a740-e8d1-4440-9db6-5f06a8565090",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1c60c59c-1c9d-42f7-a2b3-42d759df0750"
        },
        "item": {
          "id": "4ea65bd9-1ae8-4475-8bf0-e0a3e66c0f9d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e2fbad02-9da7-42b7-b4a4-fb33a05657ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacf33d8-904c-4e8b-b6f2-a5aa3f2b15ee",
        "cursor": {
          "ref": "e3f75d69-e5fb-44aa-bc48-a83e82af9943",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "117bf6a3-74dd-45ab-8ed9-b4596cfd3e8c"
        },
        "item": {
          "id": "aacf33d8-904c-4e8b-b6f2-a5aa3f2b15ee",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f526f8c1-acfe-458e-ba63-4664f9ced5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fdfa59-daff-49ab-856b-c61803ab5398",
        "cursor": {
          "ref": "2265b037-3f84-4f41-912c-f928afcc447c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "07a1a224-8251-4470-a7d9-c1ff2faac53d"
        },
        "item": {
          "id": "f9fdfa59-daff-49ab-856b-c61803ab5398",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1ccea6c6-cd17-4697-b3ff-aba765c8bd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cbdf2d-61bd-44a5-bf7d-cc0b94274030",
        "cursor": {
          "ref": "cb280cb9-cab8-441e-9574-99f13fd42c64",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c4b12ecd-a61f-4d72-babc-a73abba15998"
        },
        "item": {
          "id": "60cbdf2d-61bd-44a5-bf7d-cc0b94274030",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ccca09da-52ee-49b4-bef7-53598e233505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5806af4e-6350-4c70-afae-e91ee60864b4",
        "cursor": {
          "ref": "8de2e3e3-135a-439c-b933-5121981b3f21",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3d337cc7-d59b-4698-b504-b9a3dc8fc6bc"
        },
        "item": {
          "id": "5806af4e-6350-4c70-afae-e91ee60864b4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9f7154dd-2e95-4542-a11f-3ca135f48d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe25dea-a3e4-462d-9b86-55472df31e7a",
        "cursor": {
          "ref": "85ce1d96-f1bc-4d90-8185-ec5e370c719e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "eb5815ec-74d8-46d6-bc89-9590d2afee19"
        },
        "item": {
          "id": "0fe25dea-a3e4-462d-9b86-55472df31e7a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5e1ef239-a799-4491-bb51-ad53578b221c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227476d8-a336-4be6-95b9-afc07f07f3fd",
        "cursor": {
          "ref": "f34d5f2a-5ff3-482d-a40a-56dcc9abda6d",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a35d7f92-8c19-4cee-8022-3d6bc933f1b6"
        },
        "item": {
          "id": "227476d8-a336-4be6-95b9-afc07f07f3fd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "25f7c88f-dce9-41e4-a3a6-1fe911272922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6512b73-8fe0-4e4c-9fee-d5f36b001d0f",
        "cursor": {
          "ref": "df4ca418-641c-4724-9502-5128c4d35e4a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5cbd0782-2d38-43ce-99e8-08ae993da935"
        },
        "item": {
          "id": "d6512b73-8fe0-4e4c-9fee-d5f36b001d0f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9135e860-4ffb-4f7b-9acb-a91fa2365469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d4ba06-73f4-49da-ac61-ad17758f90ef",
        "cursor": {
          "ref": "d544ebd9-4cc5-4fe4-8ca7-063dc58a859c",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4edb27eb-b9f1-4798-a9b3-b73080b110c8"
        },
        "item": {
          "id": "47d4ba06-73f4-49da-ac61-ad17758f90ef",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cbc448ca-2585-4974-8bd9-afa4933301f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3930b963-c0a5-4a30-9c54-8b2ffa52a4af",
        "cursor": {
          "ref": "3798e41f-401d-48f9-8cd5-f7c3b1c87fa4",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c61c7276-4b11-46c8-8c0c-475b862c3f1c"
        },
        "item": {
          "id": "3930b963-c0a5-4a30-9c54-8b2ffa52a4af",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a01cfe08-ead6-42a3-8cf9-0c3b931068a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba27253-f726-4695-bc62-00b584d934fe",
        "cursor": {
          "ref": "f1382da9-7d92-47a0-a458-19a433724bb8",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9d2caf69-e23a-4e50-b042-190ab7e19ce2"
        },
        "item": {
          "id": "2ba27253-f726-4695-bc62-00b584d934fe",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b80567a1-ca84-48c0-8280-8b8939eebd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acab2c82-2918-4cdd-8533-1b03eb840402",
        "cursor": {
          "ref": "6c44ae18-9771-4cbc-8ced-4e0db435f4c0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f4235371-a483-4cc8-90e2-af7aed770c56"
        },
        "item": {
          "id": "acab2c82-2918-4cdd-8533-1b03eb840402",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "667e5c4a-1032-4d21-b1ad-c3553b20f23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa965be-fcd6-4215-ab34-8efdafab9265",
        "cursor": {
          "ref": "7d9af819-7f38-432c-a9d3-ab2012672215",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "396652a1-c340-4c59-b0a3-eb8e1d9d88bd"
        },
        "item": {
          "id": "ffa965be-fcd6-4215-ab34-8efdafab9265",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "705001b5-4bde-40c0-a99b-eac0c9c8c2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f820808b-e5ab-452e-a6a6-f7c6f1f3c2e6",
        "cursor": {
          "ref": "3d2fd73a-7b25-4ca4-bd0d-b90b07d66b20",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0aae04de-ffec-456f-b80d-9d0a23552c44"
        },
        "item": {
          "id": "f820808b-e5ab-452e-a6a6-f7c6f1f3c2e6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d8fd0a8b-94ca-4bb6-bda6-1b63c3d21fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f11a5bc-c6bf-4511-b3f9-d14a6df72f9d",
        "cursor": {
          "ref": "762b78c7-f0fd-4c27-9691-79e706e7d97f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "99a6d18f-4a77-43f7-8666-8bc3ff745cae"
        },
        "item": {
          "id": "0f11a5bc-c6bf-4511-b3f9-d14a6df72f9d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e89d48fa-23db-4037-9c57-2d84a3985cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4e47cb-a7c7-4398-8036-17fa24b2527e",
        "cursor": {
          "ref": "fdc28fe7-faa5-4d79-afd5-ccf87ebcef30",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9e44422c-55a5-4302-a2f4-3e50f22af779"
        },
        "item": {
          "id": "5b4e47cb-a7c7-4398-8036-17fa24b2527e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e3976550-eb6e-4f2a-ba5e-b30c30cc61ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c78fa2-bab3-4bf1-a9d1-8ea54ca54bec",
        "cursor": {
          "ref": "e726a420-1432-42fa-b950-0bf4f0cdd811",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a26ad1d8-06d5-4e30-8013-205fd86e29aa"
        },
        "item": {
          "id": "e2c78fa2-bab3-4bf1-a9d1-8ea54ca54bec",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f509bfc2-246e-4cdb-87ae-3baaca7ff919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54de08a1-7a70-4668-a8c1-1b4707dd3e5f",
        "cursor": {
          "ref": "016159d7-57c0-42e8-bc32-3192ad8890f9",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1907a3d8-92ea-48bb-818b-fa1bd236f5ba"
        },
        "item": {
          "id": "54de08a1-7a70-4668-a8c1-1b4707dd3e5f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d18966f1-6870-46bb-a730-7025d5beb4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15578b7c-0688-454f-b408-1bf50dd5e636",
        "cursor": {
          "ref": "98f16f51-7ba4-4bf3-aea6-b2a3b77fa6ba",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3a584756-70b6-410d-a9c4-b7de9900e3de"
        },
        "item": {
          "id": "15578b7c-0688-454f-b408-1bf50dd5e636",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9de081d8-6faf-445b-ac10-e3d54b403337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0336c7-8b73-43fd-b2e5-87c492a5e471",
        "cursor": {
          "ref": "fd3ec049-d8cd-4827-ac30-8d0758621c29",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c1301c29-203a-4f37-a264-93d2513773cc"
        },
        "item": {
          "id": "3d0336c7-8b73-43fd-b2e5-87c492a5e471",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e52cd5eb-a38f-4b6a-ba05-7b53f61b5695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f54365-9ffe-4a0d-a996-8af610649101",
        "cursor": {
          "ref": "b8b3fd5d-b14c-401e-a212-9570d4deeb99",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2f3bd554-0276-44a3-ac27-88094a4413f0"
        },
        "item": {
          "id": "87f54365-9ffe-4a0d-a996-8af610649101",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c93d5d92-ee5d-465d-8c3f-db1b66dcf687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93eb7f6-9209-442d-b35e-15ee531bb92e",
        "cursor": {
          "ref": "2d676bfe-30a8-4f5a-a90d-2bf0c613eb21",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cd5e58a6-d833-461c-9ccb-d3de54a57091"
        },
        "item": {
          "id": "d93eb7f6-9209-442d-b35e-15ee531bb92e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ff77ef2d-f3f8-4fe0-9e63-6f867aa4c81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd242cb-d2ca-4985-bb4f-0bd99d34213a",
        "cursor": {
          "ref": "5d4a84dd-ae26-4a3d-a251-8e641cc8a1f7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3fa7ea86-0606-48b9-a02c-61cf30fdb99c"
        },
        "item": {
          "id": "2cd242cb-d2ca-4985-bb4f-0bd99d34213a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "56adc875-5a40-44a5-9fac-120f4c95c644",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 689,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff01a532-dd29-47b9-b918-2d66209c7925",
        "cursor": {
          "ref": "339cd4f5-49a9-4bbe-a4c8-59a8dcaa0319",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8606af38-6a4c-4fb6-ad86-2895a5f07a7a"
        },
        "item": {
          "id": "ff01a532-dd29-47b9-b918-2d66209c7925",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "42d78114-4751-4c86-b81c-f6c04c09dca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92721c0d-52c5-4c52-ad25-8eb5f5e968f0",
        "cursor": {
          "ref": "d8ba6ab1-7d26-4e4e-9c06-e9f3309b4eeb",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6a5caceb-d200-4c21-bba9-8e799c508d72"
        },
        "item": {
          "id": "92721c0d-52c5-4c52-ad25-8eb5f5e968f0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "652c270f-c8d0-48ee-b059-a4f58a9e1128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7211c899-01b3-4a7f-be4c-d2d3c21e1b3f",
        "cursor": {
          "ref": "2916a21f-2115-419c-9a6b-785b5867dbb4",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "be7b5f2d-0ef3-4e9b-8eef-5737fa771205"
        },
        "item": {
          "id": "7211c899-01b3-4a7f-be4c-d2d3c21e1b3f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "198aa217-5c30-4222-9652-20f11f3e0a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e72051e-3ae3-41b0-b3f0-d76a4b4c126b",
        "cursor": {
          "ref": "df507c65-479c-4857-9cf1-8e9c0cf4424c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "087e9631-42f1-483c-9800-c27fd85fd52c"
        },
        "item": {
          "id": "2e72051e-3ae3-41b0-b3f0-d76a4b4c126b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "83a78d05-5a91-4b98-a19a-5f45ca1a6fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc397885-eb80-4746-ae1a-0565421a786d",
        "cursor": {
          "ref": "6db90b20-0fb7-4e5c-a939-674a36a3c21c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "229ea644-d8b9-4044-be7f-4e5a6d0838c7"
        },
        "item": {
          "id": "cc397885-eb80-4746-ae1a-0565421a786d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4a5069c7-fbbd-4e7d-af3b-2406353abb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5558561-1ba5-4d70-a73e-8768c0e796d3",
        "cursor": {
          "ref": "8f4f77f3-a027-4390-bd01-33677445fdd0",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "52cd8346-b173-4c84-85f2-5cbfcf306eca"
        },
        "item": {
          "id": "a5558561-1ba5-4d70-a73e-8768c0e796d3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d4f979e3-06f7-4df9-bb81-584c47875e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2ca6f1-9442-40a4-a608-de3ed4ce82fb",
        "cursor": {
          "ref": "03fea012-84f1-403e-b3ab-15e36566c820",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1491412c-38f1-4c3c-ac42-223d93c9c45f"
        },
        "item": {
          "id": "9e2ca6f1-9442-40a4-a608-de3ed4ce82fb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7843d063-0dea-404a-a1a5-e91ec4aee7b3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 698,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f4e7d4-bc2c-45df-bb7e-c94bc7c1f51f",
        "cursor": {
          "ref": "66ff1f88-78fc-41e5-8c5f-fb11071f73bd",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bdd85833-4b33-4c56-983b-0d607e647898"
        },
        "item": {
          "id": "72f4e7d4-bc2c-45df-bb7e-c94bc7c1f51f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7ef21c74-3f6a-4414-aede-9eec04ba3acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1338,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bb7209-d48b-40aa-867b-048c54bb752c",
        "cursor": {
          "ref": "475b971c-f768-4017-b232-8b1d031ae716",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "43ec395a-fad2-4f41-b30f-3a480a9146a3"
        },
        "item": {
          "id": "c6bb7209-d48b-40aa-867b-048c54bb752c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "008ea787-6c4f-4dae-95e3-db7998369dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 935,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466eb217-d974-4290-9279-a77b7645ac9d",
        "cursor": {
          "ref": "55fef4d7-3965-43a7-bc51-e6e5fe45283c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9a1f6774-ab8f-4ff7-bcc7-d77153e087c7"
        },
        "item": {
          "id": "466eb217-d974-4290-9279-a77b7645ac9d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2a822c03-30c7-498e-adf1-552ac65e892a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1214,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7a3a5b-d442-419b-8f41-74b7ae2a8b4f",
        "cursor": {
          "ref": "c88f5853-5f5a-463f-aa91-a8c60470d56e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ec3f1d2f-de76-4a46-bb2a-b1e0349384e4"
        },
        "item": {
          "id": "ed7a3a5b-d442-419b-8f41-74b7ae2a8b4f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ae473747-5f08-45ec-8132-6fd701050ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b66e38-068b-4a2d-b3f0-d79a52635976",
        "cursor": {
          "ref": "e7123170-41e8-45bb-bf7b-aae4834bad73",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "950b6a74-0c92-432a-95d6-afd1160d5e45"
        },
        "item": {
          "id": "35b66e38-068b-4a2d-b3f0-d79a52635976",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1c2b53a2-09e6-4941-9c1c-947d08043f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1038f2be-a77f-4138-8625-525803b008c9",
        "cursor": {
          "ref": "89fcbb09-efae-4e1b-9153-6ac2ce138a2b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "84b4c80d-11f4-4a11-b78f-69a38481360f"
        },
        "item": {
          "id": "1038f2be-a77f-4138-8625-525803b008c9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9d0301f6-9db7-4ad8-9d63-a1a6efeb0345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 978,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db653470-b7d4-43e6-8747-7480b23e6ddd",
        "cursor": {
          "ref": "9b1d575c-217a-4494-8e90-66170fbb14fc",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "65f17dfb-39d5-4b06-948a-c5e47ce79efc"
        },
        "item": {
          "id": "db653470-b7d4-43e6-8747-7480b23e6ddd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bc7463e7-7104-447b-8625-e180cf3d02f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba396e4-d5b4-4eb9-8565-6cc52d855050",
        "cursor": {
          "ref": "3fdd2397-fb21-4f40-a703-3f8a118405ab",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c62b1d60-34ca-4c9d-bff9-7ad8ff3abc36"
        },
        "item": {
          "id": "fba396e4-d5b4-4eb9-8565-6cc52d855050",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c45380ca-af1e-416e-9a4e-f1825dc1711f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 954,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602caaa4-ccec-45cf-b925-75a366247738",
        "cursor": {
          "ref": "50ea39d2-9b27-4438-a37f-3df255819e37",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8b58ef15-6893-467f-a71e-e5e9f0c33f75"
        },
        "item": {
          "id": "602caaa4-ccec-45cf-b925-75a366247738",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "48b147d9-8661-4c03-8014-08b42c1110fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ac1f3a-c176-4765-ab45-4fd5b261e2f1",
        "cursor": {
          "ref": "bedb3aef-6457-41c5-a044-5ecee185a161",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1fa14561-76b9-43a1-b627-1526e6ace7c8"
        },
        "item": {
          "id": "59ac1f3a-c176-4765-ab45-4fd5b261e2f1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a071e0a4-a356-42d2-bc51-ce6729b03003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9ab43a-b984-4263-ab09-17960e439995",
        "cursor": {
          "ref": "5840c0bf-9f45-488d-be83-26c15dbe0c15",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b30ec6c6-a682-4007-81f6-d0e8fd1c5b12"
        },
        "item": {
          "id": "4b9ab43a-b984-4263-ab09-17960e439995",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1f526438-76ed-4bd0-87bc-3a7671883a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb767726-eaaf-4938-abaa-a933c4dcd0e3",
        "cursor": {
          "ref": "658d5708-5829-4303-89e1-b28b9f42a404",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cc059155-6f4e-414e-8c8e-c3c7033f423d"
        },
        "item": {
          "id": "cb767726-eaaf-4938-abaa-a933c4dcd0e3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "86d4cef2-6aba-426f-948a-a893c4d20e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0455f5ff-0c19-4fb1-8144-4c9b64e3e701",
        "cursor": {
          "ref": "9100c0c1-83ac-4433-beb5-74ec33b9c2de",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "def881d6-da64-4916-9b00-1ccb439bfdd6"
        },
        "item": {
          "id": "0455f5ff-0c19-4fb1-8144-4c9b64e3e701",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6d355c91-b84d-45af-a2f4-a17a51e929eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c044f2-e5a3-48f6-8d2f-39594b8ef70c",
        "cursor": {
          "ref": "33b858d9-b9b0-4f89-a1e9-fb8d031c1b1a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "51dd889a-77b3-4023-9ba9-25f9aab49c83"
        },
        "item": {
          "id": "a4c044f2-e5a3-48f6-8d2f-39594b8ef70c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "620871f9-ce9b-4e5f-9305-1d6649157e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1222,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254f5cc1-252e-4e36-a53b-be507866eabd",
        "cursor": {
          "ref": "cbd165b2-f3ff-414a-99cd-04d8c4e6eb1b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "78dabdf3-c481-4cbd-901b-6f6fcd13d2e0"
        },
        "item": {
          "id": "254f5cc1-252e-4e36-a53b-be507866eabd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "753bd9ce-c5cf-4418-93c9-2e425aeb0de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d370839-f66f-4139-96bf-a7006d9db4a3",
        "cursor": {
          "ref": "9ab4834a-7585-43f3-9b02-fccda4e6d688",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8308c623-a8fa-4fff-9d2c-44c549b9b82d"
        },
        "item": {
          "id": "1d370839-f66f-4139-96bf-a7006d9db4a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "db166656-dadb-4461-9a8a-9d4ee07ebf92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 937,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365a7733-e6f9-491f-9b61-6f15ca0682aa",
        "cursor": {
          "ref": "3d9ba2cd-da1e-404a-8743-fe36638e2e4d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "43bf9839-9e86-40cb-bf8c-86f8629d5936"
        },
        "item": {
          "id": "365a7733-e6f9-491f-9b61-6f15ca0682aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7248b85f-1cdb-49a5-9a91-34f30398bed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9569c83b-21f2-4274-91f0-1914e29d3f1b",
        "cursor": {
          "ref": "41327d41-aa7a-4b29-b1c1-91fac1e06975",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a1e6b12c-e9b6-4876-9cc3-ae5a38aff642"
        },
        "item": {
          "id": "9569c83b-21f2-4274-91f0-1914e29d3f1b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "045df260-7783-4ae1-9a1c-2cf9b2a707e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b27109-e433-4caf-9c5f-d5eb22f0c9e4",
        "cursor": {
          "ref": "16fb7d81-dce6-4924-a638-79fc72c435a6",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d83589a6-0861-4729-add0-83bb82c04606"
        },
        "item": {
          "id": "a7b27109-e433-4caf-9c5f-d5eb22f0c9e4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3a9fc27c-d497-4c32-8986-96dad0798035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65843306-8adf-4a4c-ab6e-25bd7759f40e",
        "cursor": {
          "ref": "48e3e304-20b3-4eae-b8da-9a39a8fc7512",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9dd96126-1ba2-48d0-99e8-e9654696097e"
        },
        "item": {
          "id": "65843306-8adf-4a4c-ab6e-25bd7759f40e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1f719f4b-229b-40be-846b-63e199ee27ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5cf933-d5d4-442b-b83b-cf818df5101f",
        "cursor": {
          "ref": "5757ff0a-0031-4798-ae88-7b575b53db28",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "81869388-8820-41e7-845d-a4deeb910a3a"
        },
        "item": {
          "id": "9d5cf933-d5d4-442b-b83b-cf818df5101f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "392fd7f2-8030-48d1-8bc2-31bcf8a9d8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba8b2e9-491e-44e2-8767-e10174838e7f",
        "cursor": {
          "ref": "29a1458f-cb1e-49b7-b23f-47514d95a231",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c2c4c0c5-6714-4aab-8bfa-45ec0f210efe"
        },
        "item": {
          "id": "fba8b2e9-491e-44e2-8767-e10174838e7f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5bed226b-42c4-43b9-a337-8a7e3d53b77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4f71db-89d0-4a30-9bdb-caeac994d320",
        "cursor": {
          "ref": "621a8fd7-e001-437c-8f3c-5c25e9898f2d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8dd79577-2c46-49ed-b7de-7f2aef7378fa"
        },
        "item": {
          "id": "0f4f71db-89d0-4a30-9bdb-caeac994d320",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "671426a8-f02c-42e3-9758-00566252ac60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1069,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b24868e-f524-477e-a807-18909e0a9002",
        "cursor": {
          "ref": "b153b499-38b5-4314-ae10-a782857ab20a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "54852539-46bd-428f-9948-e2617aec9aae"
        },
        "item": {
          "id": "2b24868e-f524-477e-a807-18909e0a9002",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fd68f8ff-b8a4-47af-94c1-ccd301846306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1028,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c1ffe2-75ae-4c6b-a1bb-e654341695a4",
        "cursor": {
          "ref": "7ba2d840-3f89-49c8-a326-228cf7e4ae8b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d7f4dcb5-cae4-481e-8a2f-c89de4b3c2cf"
        },
        "item": {
          "id": "e1c1ffe2-75ae-4c6b-a1bb-e654341695a4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dd1f12ac-404a-49f2-9eea-de2f10432ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1130,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c39d67f-b444-4c2f-b2c5-3d84cb1c5316",
        "cursor": {
          "ref": "b2fe8c68-7e49-46ee-bbb7-360f0bbc39fd",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "719210ed-5973-419e-a810-3319c0688164"
        },
        "item": {
          "id": "7c39d67f-b444-4c2f-b2c5-3d84cb1c5316",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "12c42460-f659-4585-9aa8-2dab4e2a905f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c34d3f-b326-495d-9b70-78f3fd6a3139",
        "cursor": {
          "ref": "3d0287d5-f6d3-4726-a3a6-595c7874dab5",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "68afbef5-998f-43fb-a15a-c4b69e0f7cc4"
        },
        "item": {
          "id": "41c34d3f-b326-495d-9b70-78f3fd6a3139",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2723797d-e673-4c3f-9f13-82001c893476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2914ad-915d-4797-993b-23ac46810490",
        "cursor": {
          "ref": "d1f30cad-4361-492e-a575-e376f96452d8",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "92fcd560-46ce-4c6d-997a-11fd69546ba7"
        },
        "item": {
          "id": "8a2914ad-915d-4797-993b-23ac46810490",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c7ddfb6b-aee4-443b-b85a-67ec2f4b9eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68713eed-1fd9-432e-ae66-d3f1f3893c60",
        "cursor": {
          "ref": "5845edd3-3953-4b03-9d66-0c853b36d8e7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5312df5d-5c64-478b-93c5-4bf38a35f3d4"
        },
        "item": {
          "id": "68713eed-1fd9-432e-ae66-d3f1f3893c60",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "144d1972-5cda-47fe-a71b-ec2f02f353a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76a5f12-24aa-401c-b433-5b2a4f66ac2b",
        "cursor": {
          "ref": "1833a450-1b90-489b-8ad5-94a1466bb77b",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4a694177-bd9d-42de-b7fa-56de5377d128"
        },
        "item": {
          "id": "b76a5f12-24aa-401c-b433-5b2a4f66ac2b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a09a52a5-c771-488d-bd00-eefd4a11e6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9424b794-7413-4893-a9e9-f7ed8c28e657",
        "cursor": {
          "ref": "176cbe18-ba2f-45cb-9a1a-795792c471ac",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a1805091-8ab4-4806-85ab-f61f9cdc415f"
        },
        "item": {
          "id": "9424b794-7413-4893-a9e9-f7ed8c28e657",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8a6967db-56eb-4abb-87d5-e729af3fd375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8532a6db-8f20-4dde-9731-20e7acc2d200",
        "cursor": {
          "ref": "7b223106-9da3-4106-a680-1456dcffc1d7",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "914da394-973f-484b-b91e-b134d67878e5"
        },
        "item": {
          "id": "8532a6db-8f20-4dde-9731-20e7acc2d200",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ac12d057-e523-4303-8f83-330b9511f113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912cd1ad-2c26-478d-8471-bb0f5955c0ea",
        "cursor": {
          "ref": "9c7aea1c-5e0f-4e3b-a796-8ba6c306b14d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a351539a-4fcd-4d61-a2b9-3dcb9a346714"
        },
        "item": {
          "id": "912cd1ad-2c26-478d-8471-bb0f5955c0ea",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0db2b24f-d1a5-4b37-8d89-c38ba7257568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6415afa-777b-464b-84f9-12dd41ecfbf4",
        "cursor": {
          "ref": "be6f8178-990f-41c9-ad07-bff70648f690",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ba7e3a4c-5263-4086-9317-4dc8a5647bef"
        },
        "item": {
          "id": "e6415afa-777b-464b-84f9-12dd41ecfbf4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "88fdcb25-42dc-4ff2-b59e-ecdfc627707e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c397371-d5a1-4850-a3e8-cc1623b3c753",
        "cursor": {
          "ref": "d46cbf66-5eaf-44a3-b533-258d70151352",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c692cfb1-5870-4e69-b6fc-e7f763fb09b5"
        },
        "item": {
          "id": "0c397371-d5a1-4850-a3e8-cc1623b3c753",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e6151e1c-4853-4d27-87e9-374cfc9f4f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1161006a-9067-429b-8d55-3511744b4d70",
        "cursor": {
          "ref": "2815cc30-dbd6-40a4-9f33-e48dd90c7b97",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aadf62cb-973e-4a10-9ac7-316af0db1e2a"
        },
        "item": {
          "id": "1161006a-9067-429b-8d55-3511744b4d70",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5e05fdb0-dc9e-4008-bedd-7736a156a376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e4dd2a-31c5-41c3-8f38-b9cde1729829",
        "cursor": {
          "ref": "a6cff41b-d542-4ced-91aa-485973407178",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1e9eb4e9-fbd6-4dc0-b81e-e277152ea117"
        },
        "item": {
          "id": "80e4dd2a-31c5-41c3-8f38-b9cde1729829",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "afb542ed-cfb6-47c8-bb25-3ff86345b4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22cf3df-a8aa-44f0-8145-f8c02ab95881",
        "cursor": {
          "ref": "702ec801-d7a1-4cd3-a8e1-feffd40ac966",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c2a7c789-d78e-40a1-8f66-c3bf4e3a5ec0"
        },
        "item": {
          "id": "d22cf3df-a8aa-44f0-8145-f8c02ab95881",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f76c049d-e713-4a51-bc80-b067819768a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dc576a-db2d-4065-8a04-c2af22ed35e2",
        "cursor": {
          "ref": "5be0890d-2567-4f5b-b829-7fcba056cf51",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1e6bb21d-ff39-43c8-a9f1-90411163b9ea"
        },
        "item": {
          "id": "c5dc576a-db2d-4065-8a04-c2af22ed35e2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f925dd95-4b3d-4591-8496-75e6aea6bc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c299fc22-5072-402a-b9ca-daf6d1794a48",
        "cursor": {
          "ref": "1dd914f2-86fc-4e60-8f4c-27c6572da73e",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5df9b4a1-3df2-4a35-b436-fe26fff252b6"
        },
        "item": {
          "id": "c299fc22-5072-402a-b9ca-daf6d1794a48",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "78e7f29a-86be-4373-b475-bfe0fbe94677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27051c85-1690-4c98-a6cb-f9c661c1cf0f",
        "cursor": {
          "ref": "cabab3c8-b8dc-4a64-a468-3e386378ec49",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4bab2a40-4e9e-45e3-b030-4fd9ef1784f4"
        },
        "item": {
          "id": "27051c85-1690-4c98-a6cb-f9c661c1cf0f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f194a865-6456-48b4-8aac-06b56934b314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08560368-853e-4337-8b64-267df75148e8",
        "cursor": {
          "ref": "bd4362f4-f7e1-4af3-8983-03dafdbd4d63",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dc9a7d31-594e-4005-b21e-b841d080efc4"
        },
        "item": {
          "id": "08560368-853e-4337-8b64-267df75148e8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "23906895-afbf-4136-849c-dde2a199e244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 980,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee090fd-db93-41ab-be5f-9e1f100c7066",
        "cursor": {
          "ref": "a7e9d93d-9800-4b81-be7f-23c5ec69547c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "88d06777-1170-44b3-97aa-3a9da0b23259"
        },
        "item": {
          "id": "5ee090fd-db93-41ab-be5f-9e1f100c7066",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9f4d36bd-8701-4649-a019-052f76dcaab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 897,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a6e1b5-a8aa-44ef-8714-4ba384efb602",
        "cursor": {
          "ref": "f46a461a-3304-4611-bb1c-52126f9e1627",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "068f1939-c249-4cd9-9b46-b673ebdf502d"
        },
        "item": {
          "id": "09a6e1b5-a8aa-44ef-8714-4ba384efb602",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "32e8fdc0-2e50-4a0f-ac17-e18b0535d794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1048,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11cfbc5-94be-4935-9a7e-daeba202e9ae",
        "cursor": {
          "ref": "0ffc7158-d535-4a75-ba35-24735099e6d3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "13a966e8-7831-4faa-adf9-e4dcc9df86e3"
        },
        "item": {
          "id": "e11cfbc5-94be-4935-9a7e-daeba202e9ae",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1c320c8c-5e60-4b07-b4b0-56a0821a8387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd093c5f-483c-4744-a393-4d0fe1bc7836",
        "cursor": {
          "ref": "8759b0a0-4d89-4895-9e33-7ef1af6271b7",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "91847cc2-d0dc-42d4-a63b-d9245aaedc24"
        },
        "item": {
          "id": "fd093c5f-483c-4744-a393-4d0fe1bc7836",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a43ab72e-9d0a-4abf-9685-6c121d6045e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ba529d-e79f-4c64-8bd2-ff0c9398b5d7",
        "cursor": {
          "ref": "90232605-fbfd-4f45-ab8b-376e6b754962",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8bb9d16e-0d6b-4175-b2a7-2b4ad9ee9c7f"
        },
        "item": {
          "id": "70ba529d-e79f-4c64-8bd2-ff0c9398b5d7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "94cf9108-5df6-4eb3-b928-4a7d50e26ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe4bf8d-5cd6-422b-9eee-262cb97c4dc2",
        "cursor": {
          "ref": "fd8c9cd3-e23c-4122-9afe-264c9fea22e1",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ab72cb50-85a9-41a6-b287-7f3369cda9a8"
        },
        "item": {
          "id": "2fe4bf8d-5cd6-422b-9eee-262cb97c4dc2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2710ce70-bd50-417d-b8a5-d83db632e8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a577332e-a12e-4599-8b16-ccf4e526a9ab",
        "cursor": {
          "ref": "2b3dc0cc-1be6-4da9-8edd-d09582e064c7",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6fc30f98-6d55-4740-aa46-7998562abb0d"
        },
        "item": {
          "id": "a577332e-a12e-4599-8b16-ccf4e526a9ab",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4f20841f-7f70-4ad4-8275-6ed2ff3e04b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9597a7-52a2-4f89-aed7-fc410b44f530",
        "cursor": {
          "ref": "0eb1c9c7-9ac2-436d-8ac8-a9a303abbbd9",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bebde951-8e77-4ead-820a-b3713d99f3cc"
        },
        "item": {
          "id": "0e9597a7-52a2-4f89-aed7-fc410b44f530",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b6e78496-10f5-41f2-ab52-590b42bd429f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d25c45a-8aa7-4fe1-81f2-5484d1d2dc44",
        "cursor": {
          "ref": "c2508027-2e94-45bb-92fc-de6c61e6d94a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "08c6817b-ea23-46d3-8f69-3f861aa5d82d"
        },
        "item": {
          "id": "5d25c45a-8aa7-4fe1-81f2-5484d1d2dc44",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c190a6ab-ae59-4495-ab34-571fd1b57ec4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 629,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67a92f0-da91-4ddd-8b75-f939e7270888",
        "cursor": {
          "ref": "b00b1c3d-a3ec-4408-ae9d-8624b5108fca",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "70a1e969-09a0-41a2-9b66-f04b035801f2"
        },
        "item": {
          "id": "f67a92f0-da91-4ddd-8b75-f939e7270888",
          "name": "credentials_issue"
        },
        "response": {
          "id": "06dd35b1-7bea-41f0-85d8-a3cd9400777b",
          "status": "Created",
          "code": 201,
          "responseTime": 4624,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee5187f-7671-4ebc-a66e-653b3314e93f",
        "cursor": {
          "ref": "4edcbbe6-2a29-4bc1-bb05-e71c8a850d45",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9bb5aa22-2730-4f10-ab51-121049e5246c"
        },
        "item": {
          "id": "3ee5187f-7671-4ebc-a66e-653b3314e93f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "747d690b-abdc-4579-9246-1414615ad2bb",
          "status": "Created",
          "code": 201,
          "responseTime": 4435,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1062173-3bab-443f-bb56-edc768fc6699",
        "cursor": {
          "ref": "1afcf79a-41c2-466a-8df0-50eeee9614ad",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e046dd7f-345b-438a-9457-369955b5f100"
        },
        "item": {
          "id": "f1062173-3bab-443f-bb56-edc768fc6699",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bc5d7149-8e33-4f89-bd4f-f4c339aa3407",
          "status": "Created",
          "code": 201,
          "responseTime": 4415,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70a1be7-e6c7-489e-aad5-374f022d5f3d",
        "cursor": {
          "ref": "f7361644-e336-40af-bf03-fe6d0542f2e1",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bb2f2636-c0db-4ba7-bd9e-cb1e52918e39"
        },
        "item": {
          "id": "e70a1be7-e6c7-489e-aad5-374f022d5f3d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6aa9538b-80d7-4f19-bb61-ab6d87bc814d",
          "status": "Created",
          "code": 201,
          "responseTime": 4651,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a7314e-53d9-4f3f-85a8-d1106b872a6e",
        "cursor": {
          "ref": "17135ae7-7bb1-46e1-91d0-6c08ba85ae2a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8a061a70-5d26-479a-9702-1eedf74434ca"
        },
        "item": {
          "id": "17a7314e-53d9-4f3f-85a8-d1106b872a6e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c0060a2e-3c97-4f55-921a-027dc9810328",
          "status": "Created",
          "code": 201,
          "responseTime": 5250,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0915124-4296-45a7-8714-4a4ce2bfc310",
        "cursor": {
          "ref": "3063cf4d-d7db-4ca8-a977-d00fe42722c3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bd218f2b-3467-42ff-be2f-9f367ef3885e"
        },
        "item": {
          "id": "d0915124-4296-45a7-8714-4a4ce2bfc310",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fb1184b9-d0dd-47e6-a738-9883ca4685f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1010,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0915124-4296-45a7-8714-4a4ce2bfc310",
        "cursor": {
          "ref": "3063cf4d-d7db-4ca8-a977-d00fe42722c3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bd218f2b-3467-42ff-be2f-9f367ef3885e"
        },
        "item": {
          "id": "d0915124-4296-45a7-8714-4a4ce2bfc310",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fb1184b9-d0dd-47e6-a738-9883ca4685f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1010,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e602e3b-c135-44ba-808b-903ef58c1d0b",
        "cursor": {
          "ref": "8e32a981-df4d-4540-9701-b1791959d340",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d0e18eff-bb32-442e-b800-51a7153813b8"
        },
        "item": {
          "id": "6e602e3b-c135-44ba-808b-903ef58c1d0b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dfabf473-83cb-4ed2-9bb7-02f680c1eb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1094,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506bf1e0-e12f-4e26-8541-6bad2dd50fd7",
        "cursor": {
          "ref": "b839df97-034b-4d36-b7a6-cb5c41f63b8c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5ff3c47f-8723-40a7-8ef5-aab30ffccc4e"
        },
        "item": {
          "id": "506bf1e0-e12f-4e26-8541-6bad2dd50fd7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3ab12344-11ce-4251-903e-be78d40fb9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc34ecb-d72a-4bb2-bc11-b53850e0aa92",
        "cursor": {
          "ref": "732a7ca3-9223-4896-8272-b3e6eba68ebd",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "734e2220-ad43-4260-a702-e75ad51d1df4"
        },
        "item": {
          "id": "6bc34ecb-d72a-4bb2-bc11-b53850e0aa92",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "65ee93b3-85fc-4e42-9b09-d5487ef900ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8917b2f5-e58d-4fdf-9140-b77e70b753d3",
        "cursor": {
          "ref": "b944f451-97d0-468b-b51c-af2e9481bab9",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d0703508-c0d5-4a4c-9972-ac20e8f70668"
        },
        "item": {
          "id": "8917b2f5-e58d-4fdf-9140-b77e70b753d3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "96207107-9e26-486c-a41b-6f139dacb455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e36e99-e3f1-4a43-abf4-e9f6c48cbfde",
        "cursor": {
          "ref": "d80b2a0e-d19d-4234-ab50-62a13ddc5ad8",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "805f0e37-0970-4d80-886e-ad9477f5fe1c"
        },
        "item": {
          "id": "96e36e99-e3f1-4a43-abf4-e9f6c48cbfde",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b463bdf0-31b6-45ef-b673-fcbfc4d14c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d008a6e-f98d-4a43-b6ff-2410ad408f70",
        "cursor": {
          "ref": "fe9cab2f-1151-492a-8965-6a783e6da7ea",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "aa4ae6a5-0ffc-4a6c-b58b-4ac8ab0f1133"
        },
        "item": {
          "id": "0d008a6e-f98d-4a43-b6ff-2410ad408f70",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "74b55c91-596b-4396-8594-762947fe7171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef83cea-2daa-4fa2-8a07-9fa552641332",
        "cursor": {
          "ref": "3812079b-edf7-4207-9a22-6afdd94e8ebc",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6f7dbcad-595c-4348-b6f6-9d2b0268f892"
        },
        "item": {
          "id": "eef83cea-2daa-4fa2-8a07-9fa552641332",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a0b450a6-63e8-4bb2-811f-2503a8a1f238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ade7b3-e98b-497d-b256-b90ce704d987",
        "cursor": {
          "ref": "9c652fab-7f2d-4430-9bce-cd8a1ce8719c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "597166b9-1763-426e-8404-75cc0a1f600c"
        },
        "item": {
          "id": "23ade7b3-e98b-497d-b256-b90ce704d987",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2f880e1c-34c9-4584-9725-e102e737953d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bde68ce-8495-455e-8a27-a69b87a1d76c",
        "cursor": {
          "ref": "0e41c62f-37be-4d6f-b129-38e05ce388a4",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0645bc4c-1d58-4533-8c9d-b02b837a87eb"
        },
        "item": {
          "id": "1bde68ce-8495-455e-8a27-a69b87a1d76c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3375c340-5f03-4a02-85b7-32b7af07ecd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e7fd47-e59c-44e0-940e-0fe7b84e2f7f",
        "cursor": {
          "ref": "54bbe3f0-f868-4486-910b-e3f9d2768c14",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b39f584e-b5cb-4388-962c-34afd71d7857"
        },
        "item": {
          "id": "11e7fd47-e59c-44e0-940e-0fe7b84e2f7f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6361d7ae-fd6e-4775-99f5-0ac7baeb9d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e42315-0e6c-468a-be35-5ac1894427b5",
        "cursor": {
          "ref": "4e2152d7-d4b2-4779-9a37-98e76877d28f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b68f5bf2-64b2-462d-badd-a53d4282fcda"
        },
        "item": {
          "id": "a5e42315-0e6c-468a-be35-5ac1894427b5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f7e1dc12-5326-4169-8589-69e46145d18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585fb96a-9749-4136-a85e-8ee1735de3a5",
        "cursor": {
          "ref": "c3479fe4-3da8-4ddd-b7bb-d09dc272c171",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "90db9de7-a198-41ad-ac46-d9624d663158"
        },
        "item": {
          "id": "585fb96a-9749-4136-a85e-8ee1735de3a5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c9b2dc9d-3726-4404-b5eb-837a922b74c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b45bc5c-0f02-4730-a51e-b18675986371",
        "cursor": {
          "ref": "9dba3135-ab93-410b-a0c0-3be2f5d29d29",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ba3ccfd0-e6c0-41b0-85c4-84937c54bbb4"
        },
        "item": {
          "id": "3b45bc5c-0f02-4730-a51e-b18675986371",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7756d8a8-94df-4fba-94ac-19d9d82694ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f153c347-ab6f-4b0e-a052-0b29928dc271",
        "cursor": {
          "ref": "e1719171-66ed-4051-be55-519feab77f4f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0ed4c24b-1b07-4eaf-8fd4-7f0edf079e6f"
        },
        "item": {
          "id": "f153c347-ab6f-4b0e-a052-0b29928dc271",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "11f95131-ec65-455d-9eb0-a1c76331e7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c387f31-a9b1-45dd-8f1b-ed617d99dd1e",
        "cursor": {
          "ref": "680ee837-31b5-4660-896e-8e98c9ee52fd",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8bea1fcb-19ce-4320-ac37-ecbe9d4f9def"
        },
        "item": {
          "id": "0c387f31-a9b1-45dd-8f1b-ed617d99dd1e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b74527bc-84c4-4fd4-a81b-2c701d15809e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307068c8-a739-4ab9-af96-6b4b24ec09c1",
        "cursor": {
          "ref": "be0dfb47-093f-40c8-a354-c1db78d7d404",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "26d6a9d7-0561-4ae7-b8ba-1c6c0a22e103"
        },
        "item": {
          "id": "307068c8-a739-4ab9-af96-6b4b24ec09c1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4c46766b-2263-447c-b62a-0073ba4f5be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df2f6a4-c3c3-42e1-ac93-21d65098fe64",
        "cursor": {
          "ref": "4f09d74a-a766-4049-90ab-eec99e071a03",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9280de93-b3ae-4303-b639-b8506ae13680"
        },
        "item": {
          "id": "1df2f6a4-c3c3-42e1-ac93-21d65098fe64",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6ee33bf7-6b04-44cd-9677-d40e38ca26ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd95d63-c5b0-4415-aec3-a94c72fceb75",
        "cursor": {
          "ref": "dfacccec-8752-4cff-9ada-29fd248a8b7e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f8feb3e2-93b8-4ec3-b2df-8f876b65881a"
        },
        "item": {
          "id": "0cd95d63-c5b0-4415-aec3-a94c72fceb75",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e5bf5a48-d2a0-47d1-a541-d661ec473df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55df1980-1bdd-493e-9176-95749f543ec8",
        "cursor": {
          "ref": "644a9fda-4740-4d19-a404-8f6f6f2f2ff9",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d2f3bca9-1fb9-409b-8cf6-1c25d99a4cd7"
        },
        "item": {
          "id": "55df1980-1bdd-493e-9176-95749f543ec8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "59f014d0-bea3-473c-adb4-a777b9949ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0904c523-6d3b-4c01-b361-454298158a54",
        "cursor": {
          "ref": "7772ba8b-3439-4898-900e-d148212f8704",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b58a3985-b4c3-4261-bb57-f06af68579ca"
        },
        "item": {
          "id": "0904c523-6d3b-4c01-b361-454298158a54",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6b83e158-0020-4c76-ac2d-c160e4504119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a554c0-927f-4c10-bd06-33ccd9388349",
        "cursor": {
          "ref": "ad9227ba-5198-4fef-a48d-7da0bda55ce4",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fcb853cd-f854-4cb8-b2d3-5793d17a26a6"
        },
        "item": {
          "id": "51a554c0-927f-4c10-bd06-33ccd9388349",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f8fd8093-8962-4332-9327-4c6a47aab94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfdd61d-bae4-46de-a072-8b6935c7a6a5",
        "cursor": {
          "ref": "37903a93-2b52-4e58-b634-ba9033c2902a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "68d6faee-0edf-4378-900f-beef00eeac7c"
        },
        "item": {
          "id": "0dfdd61d-bae4-46de-a072-8b6935c7a6a5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f283f7c2-3e83-4fea-b1ec-43cb8524a373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb807183-e9a9-4e47-8ab4-ee827a2625ea",
        "cursor": {
          "ref": "a938ace5-222f-4c05-8aee-b7824af4a8f1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8289113f-6cb9-4743-81d2-db2adbbe8588"
        },
        "item": {
          "id": "fb807183-e9a9-4e47-8ab4-ee827a2625ea",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a4b6c5c7-fc1d-4ee6-ae84-40bfce13b82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e566810-df15-4bfd-a054-e74274c8323f",
        "cursor": {
          "ref": "b14bf25a-a235-4ff5-b40b-5de5b6b73732",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cddcb9d1-ebc5-43da-a25e-ea9f721684f4"
        },
        "item": {
          "id": "4e566810-df15-4bfd-a054-e74274c8323f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2dc0d764-a167-4ff5-811f-c4803b140f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4618690f-be10-4db9-9a91-e7cf3c4433a0",
        "cursor": {
          "ref": "0a618c35-8dba-4804-9a6c-7a156d78b50a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "62b93731-5b7c-4a75-866b-fd856138857f"
        },
        "item": {
          "id": "4618690f-be10-4db9-9a91-e7cf3c4433a0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9337c958-e85c-43f7-be29-611fa2bc0d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d016e3f9-b7a2-45a2-8e78-4df4ffeff545",
        "cursor": {
          "ref": "22d2c9b7-f7d3-4345-997d-1dcfb3fa9339",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e3056d60-36ae-4b80-bedb-29309f5bb780"
        },
        "item": {
          "id": "d016e3f9-b7a2-45a2-8e78-4df4ffeff545",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6bb111b9-f109-4736-827a-cd31ba8387a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633d77f0-2a44-49a9-9abd-03514ae5a9c0",
        "cursor": {
          "ref": "d26826bf-6bc8-45c3-8280-46d0dfe2bbbb",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "76ef908e-4fb5-4538-82d4-f53770393e97"
        },
        "item": {
          "id": "633d77f0-2a44-49a9-9abd-03514ae5a9c0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dbaac480-a562-400d-972a-eaa487f5277a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9922f0a9-99d6-40ff-b398-c8bc8060cb57",
        "cursor": {
          "ref": "2c59a280-48ae-4e89-9449-e7bfdefef521",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3ef1397b-c3d6-403a-bf5d-9952af56f442"
        },
        "item": {
          "id": "9922f0a9-99d6-40ff-b398-c8bc8060cb57",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "84fb19f4-ff23-44c1-ae26-17f8f482ef98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179c39bc-0f72-448b-b0de-1a79ebce63e6",
        "cursor": {
          "ref": "70cfc73a-bc7a-43f5-9b47-bca5fca03b8e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "afd00229-ff3b-4d38-99a6-8cfd1bbbd4fd"
        },
        "item": {
          "id": "179c39bc-0f72-448b-b0de-1a79ebce63e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5614d44d-1cd0-4a1c-871c-181a40d0611c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53190bd5-4a02-4b87-b450-bee1d9aefa07",
        "cursor": {
          "ref": "7a7ddd82-1645-4ce3-92eb-dd74ef0ad96d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5b8e166e-a39e-4ade-bc29-43536d9f648a"
        },
        "item": {
          "id": "53190bd5-4a02-4b87-b450-bee1d9aefa07",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "49cc0e00-2bee-4dec-8c51-9abaa6305cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078519eb-f43c-4e0f-b66c-4d937f74d6f7",
        "cursor": {
          "ref": "8958550c-2096-475b-9c1b-5657a5f8757e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0da60df9-ec51-4943-9d11-099b25ff422b"
        },
        "item": {
          "id": "078519eb-f43c-4e0f-b66c-4d937f74d6f7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fe1d501a-e29c-49e5-8ff4-2509d4b820ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9826fc3c-4e6e-461d-8141-dfd11f9556b8",
        "cursor": {
          "ref": "64b2b012-0017-44ea-9182-7eb1164dd038",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f02aef13-5b96-4f54-8b6e-abbb18eedf42"
        },
        "item": {
          "id": "9826fc3c-4e6e-461d-8141-dfd11f9556b8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "71584842-4f41-43e6-aa2d-e2c69c451467",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f9a447-062c-4698-945c-59041133c853",
        "cursor": {
          "ref": "2dcdc500-6264-47b8-86ff-4ae8137cfe4a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "37f2cf95-6868-4c4e-870c-a6e2d6d74a73"
        },
        "item": {
          "id": "d0f9a447-062c-4698-945c-59041133c853",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "88f38ed5-c35a-4de8-8f64-dba738098cd0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 575,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b900a950-fe17-4164-9a9b-9cc6905ff4ea",
        "cursor": {
          "ref": "abd8bd05-bc14-4fd3-9734-249e8ebb7298",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "30b4d49d-a2fd-420b-9bce-3793a71aad9b"
        },
        "item": {
          "id": "b900a950-fe17-4164-9a9b-9cc6905ff4ea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1758c5f6-3281-40a7-aefd-6160ee98ec5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b900a950-fe17-4164-9a9b-9cc6905ff4ea",
        "cursor": {
          "ref": "abd8bd05-bc14-4fd3-9734-249e8ebb7298",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "30b4d49d-a2fd-420b-9bce-3793a71aad9b"
        },
        "item": {
          "id": "b900a950-fe17-4164-9a9b-9cc6905ff4ea",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1758c5f6-3281-40a7-aefd-6160ee98ec5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb43528-aa1d-441b-ae6f-5e89a2dfb542",
        "cursor": {
          "ref": "0eab25d5-559b-460b-affa-7543342e8efc",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "537e7696-8c43-4b63-b343-de0409e059ba"
        },
        "item": {
          "id": "ceb43528-aa1d-441b-ae6f-5e89a2dfb542",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c49fd578-a15c-48e9-b177-79e61f2d9f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac20fb1c-2175-4f0e-9943-d18107502a0e",
        "cursor": {
          "ref": "869daa5b-993f-494a-995a-d1cda49af2f5",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9b3883c5-6480-4c29-adaa-a0573ec1da3d"
        },
        "item": {
          "id": "ac20fb1c-2175-4f0e-9943-d18107502a0e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9049dba0-8fd6-461e-88a7-c342c119c0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fd8686-9f91-456d-b87f-e38062906c14",
        "cursor": {
          "ref": "e77d1f1d-cc0f-4440-b2c9-592d0aecbb6f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b7a35c68-27bd-4b13-9357-f3ac9533e041"
        },
        "item": {
          "id": "81fd8686-9f91-456d-b87f-e38062906c14",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f80caa6f-49be-4863-a4c4-b8f44abd055c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7147813-dd66-405f-9def-790ef103fb0a",
        "cursor": {
          "ref": "3f0127e1-b896-42fb-8223-66ed5461a559",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "47cab4f2-ebb2-427f-93e7-5d9cfacd16c8"
        },
        "item": {
          "id": "d7147813-dd66-405f-9def-790ef103fb0a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "42de7392-bd6f-40b6-9d6c-a558019e15d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b51491-882c-44eb-9abd-1ea8bc9731d8",
        "cursor": {
          "ref": "4e002a9b-c868-4c38-b631-b2c3fc2beae5",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ce33d821-57f3-4898-b331-db8ba7fc380f"
        },
        "item": {
          "id": "72b51491-882c-44eb-9abd-1ea8bc9731d8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "137c9511-90a6-45fb-9797-283ab8c3a18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c23f66c-2472-4dce-bab6-993727d9294c",
        "cursor": {
          "ref": "e8e1632f-1657-4688-8b19-cd5433149134",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "456ed636-5679-491a-9a9d-2130b7a89a4b"
        },
        "item": {
          "id": "8c23f66c-2472-4dce-bab6-993727d9294c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a14a4757-0634-4038-8abe-106d65c58826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942e6c4f-394c-4bfa-844b-e04dc92a31cf",
        "cursor": {
          "ref": "745d41b3-e08e-4ffa-976a-213680ef3648",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f1a275f8-b431-48ef-ab82-f5c8e57b3cb0"
        },
        "item": {
          "id": "942e6c4f-394c-4bfa-844b-e04dc92a31cf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d8afd88b-0ed1-45bc-a870-da67c51b5263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 893,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e12521-95d8-4755-817e-8aaa5b058c02",
        "cursor": {
          "ref": "5d9ce848-4120-4e6a-9067-1fcd955b70c2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "733afb77-137d-4aa9-9f00-ec24bfe3768d"
        },
        "item": {
          "id": "f2e12521-95d8-4755-817e-8aaa5b058c02",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ca5fdc3f-d804-4736-9c1f-3f1539578ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87027fd1-5727-4b12-87a4-5a22ef208024",
        "cursor": {
          "ref": "cf40e540-9200-4ee5-9986-7c487a133f55",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6302f64b-db72-4160-9bd8-2eab2236245b"
        },
        "item": {
          "id": "87027fd1-5727-4b12-87a4-5a22ef208024",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "55f98d00-afee-47f7-b707-5fba96ec32c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c26f211-22c7-47de-8d92-44530b7b0ce9",
        "cursor": {
          "ref": "ad9c55e2-6a04-46fb-b97d-a40b181f4362",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8ec38d9d-2cb2-48e4-babd-3b919abe0fee"
        },
        "item": {
          "id": "2c26f211-22c7-47de-8d92-44530b7b0ce9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "73cd4e3e-eab7-4f5e-a958-16851ea7a6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a93e26-5cff-442f-bc6b-f823c7fe7c39",
        "cursor": {
          "ref": "cfbe6267-78c6-4c66-8cd6-722942da55b0",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1485d909-95ad-4aa4-86be-f79892bcfcdf"
        },
        "item": {
          "id": "b5a93e26-5cff-442f-bc6b-f823c7fe7c39",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "734397a1-7cee-45b3-8499-2341c3f08563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad2259b-c699-4c95-91fb-0ac20429063c",
        "cursor": {
          "ref": "d49dac8f-b3e1-450d-863c-a2a4b32db3f6",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "117b7ca5-2547-4a6f-b2e6-48a16c3c17f1"
        },
        "item": {
          "id": "bad2259b-c699-4c95-91fb-0ac20429063c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2a2703c1-1a4b-4c11-b83f-8efde096a248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f333aa72-e5f9-4161-b0be-e4002b0c6a4d",
        "cursor": {
          "ref": "450a0712-718b-40e0-80aa-e5e669a360ff",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "80d38302-6e66-495c-bd41-1bd75235389e"
        },
        "item": {
          "id": "f333aa72-e5f9-4161-b0be-e4002b0c6a4d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "25f023da-222d-4afd-9db6-90b908b43bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e00a381-2558-4478-833b-f5eee9688011",
        "cursor": {
          "ref": "5d13889f-f518-4d5e-beeb-5b45414e956e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a6753f26-e5d3-410b-8d78-1242d5f4e622"
        },
        "item": {
          "id": "6e00a381-2558-4478-833b-f5eee9688011",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "10a9b237-808b-4758-9b2f-6cdc5e20cc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211250aa-5aca-4f65-9364-717e9e7e8a09",
        "cursor": {
          "ref": "8247f3e6-b79e-4a03-b3d1-7619de8d5625",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5a7dcdc0-7ff8-46d1-9453-c3e07f7adf7e"
        },
        "item": {
          "id": "211250aa-5aca-4f65-9364-717e9e7e8a09",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "74cd1ec1-3a70-4a6f-9338-610b3c64516f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e42692d-f2e8-4cf8-be94-dfbf9f66dea3",
        "cursor": {
          "ref": "15ad5e2d-5bde-4c81-af75-96d4361e584f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6f9b71bb-22de-4073-b6ea-3b76aad86aed"
        },
        "item": {
          "id": "2e42692d-f2e8-4cf8-be94-dfbf9f66dea3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d67105d9-a045-4750-962e-1d1a03e96007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ee59f4-f56c-48ef-9743-39633dc34c20",
        "cursor": {
          "ref": "5fb64e48-6904-4dac-8664-138a4f60f9e9",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cb4dfaaf-1b8a-4d18-8146-f81b61c89230"
        },
        "item": {
          "id": "d9ee59f4-f56c-48ef-9743-39633dc34c20",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4891fc5f-e5f5-49b1-b55f-f4d28ec526d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b4c5b4-1120-4db7-971f-f7903c9a5d31",
        "cursor": {
          "ref": "2b751097-6891-4cf7-98c8-9ce2b621ad93",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8f7987bd-978c-4d64-be1a-b499dae1a991"
        },
        "item": {
          "id": "49b4c5b4-1120-4db7-971f-f7903c9a5d31",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c794e070-093e-40ec-893c-d44c6ab396bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8385b046-e6e4-4fe1-bfa1-ba88c288f1e7",
        "cursor": {
          "ref": "763f4ab6-2a41-4a3c-b1fe-8d6c565c6180",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "034ebd5a-a518-4ea1-8899-3a02224547ba"
        },
        "item": {
          "id": "8385b046-e6e4-4fe1-bfa1-ba88c288f1e7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3dcf36c1-c113-4e35-8d94-8ff2b82e1ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27569c9-db3e-4143-989b-2aa7d1c1882a",
        "cursor": {
          "ref": "d826ed76-1be8-4fbe-be60-395127301696",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "31698fb0-909c-401d-9cc1-2371ef436aed"
        },
        "item": {
          "id": "c27569c9-db3e-4143-989b-2aa7d1c1882a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b68af6f8-8f0e-4feb-88ff-3d082f4e13f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d7009a-77b1-4c8c-85c0-faceb21444b2",
        "cursor": {
          "ref": "ad02d7c0-2b53-4c84-b527-960a28ec4e2e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "229622e3-ae68-4417-8595-70bd02f6eac6"
        },
        "item": {
          "id": "d8d7009a-77b1-4c8c-85c0-faceb21444b2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8c0df8ca-209c-40f6-963c-8468440aa4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be6fd3e-046e-48fe-87c9-a2429b17b3f3",
        "cursor": {
          "ref": "6b4e5efd-3644-4d60-9552-56eeddcc6ec5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2a37621c-f747-421e-baac-9f8d0fca92aa"
        },
        "item": {
          "id": "3be6fd3e-046e-48fe-87c9-a2429b17b3f3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cb9208a8-5863-4b2f-a8e1-5b4bcd86e8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd487f3-5a38-4665-972a-5385cbf2973b",
        "cursor": {
          "ref": "fa9688e7-bece-4db3-8bd1-0df8ffe14781",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "eba57fe2-507f-4c8e-be31-2c5dbafb5450"
        },
        "item": {
          "id": "1dd487f3-5a38-4665-972a-5385cbf2973b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d48f307e-c713-4fee-880f-516ae0d747cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a253ff-a70e-4084-8b8f-3a0c165f63f5",
        "cursor": {
          "ref": "e368b7b3-5dd2-4b67-b897-d7e9c6ee4242",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "85f237ba-b499-4012-a722-cbe11f0fd965"
        },
        "item": {
          "id": "88a253ff-a70e-4084-8b8f-3a0c165f63f5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fd850232-8b1b-4a9c-a982-8a9345b7c836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf085a5-36ac-4a21-aefa-9082e6e822ac",
        "cursor": {
          "ref": "2f287170-6a73-469b-83e2-da0fcb930ff4",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "55136b10-3f87-4151-9f34-23b7f127d76e"
        },
        "item": {
          "id": "3bf085a5-36ac-4a21-aefa-9082e6e822ac",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "89af8117-5f3f-4e0a-8e1a-b5b5c904d5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df93f6c-6dae-4f26-b516-d4ea6750860b",
        "cursor": {
          "ref": "c64da861-73a1-41c2-bcb9-5ab2641a6e52",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "30a9f72e-792c-49d2-9e3c-844e0023a321"
        },
        "item": {
          "id": "4df93f6c-6dae-4f26-b516-d4ea6750860b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fffc5af2-f2b1-41a3-948f-dd44eb685f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49902488-8888-48e5-8479-e5b58dd5a381",
        "cursor": {
          "ref": "252ff1c2-a830-46f6-8705-865fb33eb185",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0f6c7eac-f813-4e67-bb78-eca1cc5efc99"
        },
        "item": {
          "id": "49902488-8888-48e5-8479-e5b58dd5a381",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9d2467b6-ce32-465c-92fb-3c41c172ff54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea68dfbf-3666-4feb-a276-d616cc0734e5",
        "cursor": {
          "ref": "b45789c1-8178-4f1f-8e75-bc36639754a4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a0ee8a03-79eb-473c-9203-5127cca18bea"
        },
        "item": {
          "id": "ea68dfbf-3666-4feb-a276-d616cc0734e5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "503f559a-d0aa-4a90-bfb3-8a584565ce7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc555c35-1d3b-457a-9b06-3207b763a2e7",
        "cursor": {
          "ref": "68752685-8116-47d7-98c9-6f23a60f6786",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0d8d135f-df1b-4927-93fb-b6e51515bb62"
        },
        "item": {
          "id": "dc555c35-1d3b-457a-9b06-3207b763a2e7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cf796de7-d270-4bc1-ba9d-20512867d53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4159272-fec4-4090-99f5-470ac27dccb0",
        "cursor": {
          "ref": "72cef3e9-4eb6-4195-845d-665514036a65",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cf6bc22c-7be6-4f65-87db-3e13b224b030"
        },
        "item": {
          "id": "d4159272-fec4-4090-99f5-470ac27dccb0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4cc7514d-98c9-47a2-8e6c-051935dc7845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d31a63b-317f-4cd8-8e70-0c35007f3640",
        "cursor": {
          "ref": "073e7c47-1d15-4107-86d0-28875f0a45e9",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bbd30964-e997-4bdd-9cdf-1cc5d78cc565"
        },
        "item": {
          "id": "0d31a63b-317f-4cd8-8e70-0c35007f3640",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "22941bab-3215-4d4d-be63-c690a3299575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cf5c61-8840-4483-ae38-71a3cda19485",
        "cursor": {
          "ref": "230b4d42-64d3-44e4-97ba-1edaadf659f7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b435f88b-3217-4358-8a78-4ff7d4a23f0a"
        },
        "item": {
          "id": "39cf5c61-8840-4483-ae38-71a3cda19485",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e3f7e801-f5d2-46f9-ae35-97020b83bde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df71f519-5aa8-43c5-9d15-79ca256eeda1",
        "cursor": {
          "ref": "ff3f99e9-e0d8-44a5-a092-eee97d4d0b08",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9c88bb3c-b0ce-445c-8bcb-136dd76f05ca"
        },
        "item": {
          "id": "df71f519-5aa8-43c5-9d15-79ca256eeda1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "92d52218-437f-4b49-8263-32949da69283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c301c5c7-964e-4a2d-bc1f-0250ea2cffd6",
        "cursor": {
          "ref": "f2fd1abb-354e-4f5a-a112-d66991a4dde1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "33dacc8d-a506-472f-a85c-126ebaa7bd9a"
        },
        "item": {
          "id": "c301c5c7-964e-4a2d-bc1f-0250ea2cffd6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3b45f8b5-8f32-419d-a4f3-393dea7e657d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21abc213-bbae-4b88-9ec4-54e9f3032518",
        "cursor": {
          "ref": "a86c52b7-38d7-4dc8-8bb4-842d76d19984",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8b4db142-9784-4e25-9390-afb1aa06b9bb"
        },
        "item": {
          "id": "21abc213-bbae-4b88-9ec4-54e9f3032518",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "aed823f5-d355-4bd6-aa0b-b4f302549912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f33a0d-20b8-4cb9-a8a0-c44bc8894553",
        "cursor": {
          "ref": "88bc32aa-0ff7-47e5-9f5c-007cf009baf2",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "06d0409c-40b3-4178-a129-ece328e85c5c"
        },
        "item": {
          "id": "53f33a0d-20b8-4cb9-a8a0-c44bc8894553",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "921b88ee-916b-4f7b-82b0-64203389915a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87be124-a12b-4252-a2fd-745997b3f311",
        "cursor": {
          "ref": "552878b2-b8b8-4a87-bcf4-7d06688d934a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e09a9d82-9afc-4bc5-9312-4fd28083e625"
        },
        "item": {
          "id": "a87be124-a12b-4252-a2fd-745997b3f311",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "30fc62a9-1a89-4ec1-a530-8dbf83027c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b8bff1-b9b6-42e4-b8f6-958d5f30f91c",
        "cursor": {
          "ref": "0524ec2d-4480-4e1f-9e3b-3e25940a5af6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ea50b12c-9a62-4fea-b3ca-d1f61ae561ce"
        },
        "item": {
          "id": "a9b8bff1-b9b6-42e4-b8f6-958d5f30f91c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2cdb9417-a888-4876-a86f-2916f2c707ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1169e3eb-a9dc-44fa-bbd6-e758568dca2f",
        "cursor": {
          "ref": "ba01a473-67fe-4ec7-8c51-d87ae8f5f837",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f65e8a04-13e2-4a44-93a6-106de04a24f2"
        },
        "item": {
          "id": "1169e3eb-a9dc-44fa-bbd6-e758568dca2f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "42836238-8823-4812-afe6-93e247e9ea85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db93a5d3-0c9b-461e-b0c2-1c030dd67278",
        "cursor": {
          "ref": "b794f663-a9b5-46f9-ba6a-10ab38f3b8b5",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "288c69c2-8334-4c2e-9458-948e226d9cf0"
        },
        "item": {
          "id": "db93a5d3-0c9b-461e-b0c2-1c030dd67278",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9ec0fab9-17bb-409b-b765-d8b0c7012154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25952913-ab38-4be2-93c6-f78eb6d6d671",
        "cursor": {
          "ref": "83e153c2-f2c5-4b4a-a49e-973d2cebd5ac",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "195105c8-ebbd-4f07-b1f7-d7978086cf74"
        },
        "item": {
          "id": "25952913-ab38-4be2-93c6-f78eb6d6d671",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d078024e-8223-4554-825c-72d48426c9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 918,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452e4c65-0d63-4418-a896-94f654772578",
        "cursor": {
          "ref": "73086aa3-149c-4d0d-993e-296a64712ef3",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f66d7588-6e0b-4c83-b937-5c5fd3470c11"
        },
        "item": {
          "id": "452e4c65-0d63-4418-a896-94f654772578",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bbc85c6f-ad7f-4801-bc8b-04473b10a420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b202e2e-67a6-4428-af12-f8d5f0329913",
        "cursor": {
          "ref": "a8580436-c1d0-4b80-863b-3ecacf05660a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3d4495c5-1ec2-42d1-a632-03de79221086"
        },
        "item": {
          "id": "0b202e2e-67a6-4428-af12-f8d5f0329913",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8c894762-6278-4805-ae8c-b56b9d12ad80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d6abd6-861c-4084-b5cf-bde65f1ac23c",
        "cursor": {
          "ref": "8fd29db0-ccff-44d0-9266-952a785b9d6d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "271ec204-9a71-45e7-a908-08c26ff91f95"
        },
        "item": {
          "id": "e1d6abd6-861c-4084-b5cf-bde65f1ac23c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8bdd7bfe-3c41-4216-98e9-6094ca431d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56972607-a1e4-4f7b-b4a2-8cd6e0fbc4fb",
        "cursor": {
          "ref": "94d08843-6a02-4d97-8884-705947c9435b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "766e2a71-fb63-4260-a492-b0a1fefedda0"
        },
        "item": {
          "id": "56972607-a1e4-4f7b-b4a2-8cd6e0fbc4fb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "990e0d0a-ccc5-45c1-ac0d-da22b5e35be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be33d7c-cca2-4dff-8f82-bfc0a49802e4",
        "cursor": {
          "ref": "80fe0b7a-6878-4914-8903-26d271d6d68f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6b866750-ee82-472e-a083-e12c7c1e54e3"
        },
        "item": {
          "id": "2be33d7c-cca2-4dff-8f82-bfc0a49802e4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0a61d7ca-f6ef-42c9-9a48-48be3aeda8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7e3615-7c5b-43f1-82ca-9d0d55b20100",
        "cursor": {
          "ref": "ba2b2e35-194a-4660-b615-8cfecbac3e76",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "994d257a-fd34-410a-afdd-d6888860d9f9"
        },
        "item": {
          "id": "ab7e3615-7c5b-43f1-82ca-9d0d55b20100",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6a0237e4-a2e0-46d1-a0bf-983e2429141f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5228ff5-582c-4430-a5de-a8a41f4acdf4",
        "cursor": {
          "ref": "6bf8f3f6-554a-49e9-bb5a-613d3f6148a8",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c2edacd3-3e48-48f1-ba75-faf5a4d53470"
        },
        "item": {
          "id": "d5228ff5-582c-4430-a5de-a8a41f4acdf4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "78253bec-9afd-4f3d-9f9a-50d8da6f5c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1334311a-759f-4a79-8a24-a7393e06ce9c",
        "cursor": {
          "ref": "7ce578ae-ea0a-40fb-a80b-c17546985b37",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "51058257-f2cc-4ee2-8adf-f35ec7568f2b"
        },
        "item": {
          "id": "1334311a-759f-4a79-8a24-a7393e06ce9c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "13c92c14-b23f-426a-ba31-b698029a1677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73634db-6cec-4f44-8893-abd2f91bd2de",
        "cursor": {
          "ref": "ff74b139-32a7-4288-ace3-93931123cfab",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d031df1b-8c3f-47c2-a880-095887a2fca3"
        },
        "item": {
          "id": "d73634db-6cec-4f44-8893-abd2f91bd2de",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3e434248-14af-429a-9dac-a539abc39bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28d00ff-1e01-4357-9a2e-a5c873a5dd7a",
        "cursor": {
          "ref": "8be46e89-0e64-4770-be22-083a9dbfb7f8",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bf00cf3f-8c65-42a0-84d4-ebd0a61d1a08"
        },
        "item": {
          "id": "b28d00ff-1e01-4357-9a2e-a5c873a5dd7a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ef78d1cf-8fdb-4097-ab3b-bafe4f4c0be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e133d5f-9b86-4bea-81ce-8d19091ab3dd",
        "cursor": {
          "ref": "ceb9ee37-e4a6-4cda-93a3-3de5801a8b69",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6dba01f1-1678-468e-bdbb-13d337443192"
        },
        "item": {
          "id": "4e133d5f-9b86-4bea-81ce-8d19091ab3dd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "986b2b52-c3a0-4810-9071-c626b228e7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331a98b9-4c3e-484e-b7c3-1cf19250dc6f",
        "cursor": {
          "ref": "c7db4e26-a6fc-481a-a67c-01e69bfb1656",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1f7f003b-389b-4d28-99e6-5c96831f04d1"
        },
        "item": {
          "id": "331a98b9-4c3e-484e-b7c3-1cf19250dc6f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ab235a71-1fa5-4705-95a3-6f51ca14f040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf079e67-3456-4844-adda-fd85f7a099ec",
        "cursor": {
          "ref": "4316574d-68e2-460a-bda0-47193b6a9dbf",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d50b800f-0c39-49f8-a638-ff1b07bd3f79"
        },
        "item": {
          "id": "bf079e67-3456-4844-adda-fd85f7a099ec",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f9d6a669-e74a-495b-8964-ede6dab0d5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1204ea-e131-487b-807d-23d484c10fa0",
        "cursor": {
          "ref": "18f2fe59-991d-4745-863e-c623dc1d28da",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "979ce69f-306c-43de-8d1e-28a4dce9c686"
        },
        "item": {
          "id": "bb1204ea-e131-487b-807d-23d484c10fa0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7c6b61a6-8d90-44cc-b0bf-d47b8112ed32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0a6ca2-f794-4140-8b8e-912150245a6c",
        "cursor": {
          "ref": "4d04abe9-857d-427a-a623-c1ee900c968b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c0a55037-9794-4986-af4d-126367c0f24f"
        },
        "item": {
          "id": "7f0a6ca2-f794-4140-8b8e-912150245a6c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "16d609fe-b3ec-4848-a999-436edee627a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8af9f6-ad65-421b-9046-0716818ce419",
        "cursor": {
          "ref": "edbce141-ff3d-4120-b3f7-44f6a5f6c2ea",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "dec00101-a14e-42ac-9d84-91dfc3df5946"
        },
        "item": {
          "id": "3b8af9f6-ad65-421b-9046-0716818ce419",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "23b8c106-43bb-45a6-8c93-a8362774533c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b155cbd8-a233-4185-9c32-3e02fb1159a7",
        "cursor": {
          "ref": "5afb1a7d-571a-47c6-8324-5bcbebdf9c19",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b0637bce-fcb7-45a9-aa4f-42fc1c3b8a2c"
        },
        "item": {
          "id": "b155cbd8-a233-4185-9c32-3e02fb1159a7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "52f254be-6e2c-411e-8a86-b779af21b28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c688bc-0ee2-4759-ba11-236ebf4f16a9",
        "cursor": {
          "ref": "e39307f7-f84a-476f-8884-187b7a85f55b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b3e81174-29e7-4961-b4f3-952a08fac1c1"
        },
        "item": {
          "id": "94c688bc-0ee2-4759-ba11-236ebf4f16a9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0c508654-b533-440b-bd29-0b110e9b35f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d6a2b5-e56d-43b9-8e8d-9572c7dec936",
        "cursor": {
          "ref": "d2eddfa0-7f2e-4d36-98d1-215c08a177cc",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3add8f9f-13fb-4527-8d9a-e5bcc9f266b4"
        },
        "item": {
          "id": "39d6a2b5-e56d-43b9-8e8d-9572c7dec936",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ff12cbe7-170e-4528-bdf0-115bbbdaae39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27eb1349-b3cc-42eb-bbcd-5a0a49716b17",
        "cursor": {
          "ref": "1f131485-df74-477c-a94d-50e3735d1ee1",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2457d2fe-7e2a-4011-b7ec-7f149db03cf9"
        },
        "item": {
          "id": "27eb1349-b3cc-42eb-bbcd-5a0a49716b17",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c9af0aa7-0b9f-49d2-b015-3e386092e3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56b061c-468c-4616-ae1d-08ad5a41c437",
        "cursor": {
          "ref": "6f37a045-fab3-4085-8c27-072b8d9b6db6",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "04fd7936-9551-405e-81c8-f829b1859c9d"
        },
        "item": {
          "id": "a56b061c-468c-4616-ae1d-08ad5a41c437",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "66bbe8ad-b876-4f23-a151-2c26dacbceff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d6a978-0c53-4258-9c9c-00ff93e93d8e",
        "cursor": {
          "ref": "7d8ce152-71e9-4b06-94c2-74f0d175130d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0547342c-7064-4a95-aa72-29c6366a8362"
        },
        "item": {
          "id": "75d6a978-0c53-4258-9c9c-00ff93e93d8e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9dabf146-1f31-4ae2-9468-69144246f21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0769d36a-6e12-4eb9-b42c-c3e2c7e959a5",
        "cursor": {
          "ref": "0b6d7e4b-b1d2-4ea5-bf65-471719212423",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "962a9855-57a0-4005-8ec9-7628b19d8c06"
        },
        "item": {
          "id": "0769d36a-6e12-4eb9-b42c-c3e2c7e959a5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5df61bc9-e314-4198-906e-91456ad737ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f0b5fc-941a-477a-a5b7-1ca0a352cc6a",
        "cursor": {
          "ref": "c586221d-d412-4026-8d6a-456ce4c56641",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "405f423f-8991-40eb-8eea-32f56d0edcf1"
        },
        "item": {
          "id": "88f0b5fc-941a-477a-a5b7-1ca0a352cc6a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bb2b881c-ded6-48c4-9b78-d44c7cf130a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adf2567-ef75-4f04-8cc6-c82fc74dad8a",
        "cursor": {
          "ref": "e383a3ff-c790-4a10-9aff-3cec6b1d76a7",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "89c03c90-f986-4e65-b539-48a1205b094a"
        },
        "item": {
          "id": "9adf2567-ef75-4f04-8cc6-c82fc74dad8a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b79c4630-5844-45a2-afa4-3dc89d0b2420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac4abc4-c709-4ae4-bee8-55b6f1193527",
        "cursor": {
          "ref": "41ff2c48-aaa0-46c2-9465-0fd828890670",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "712868d8-331f-46cb-801c-cc141d4e98c0"
        },
        "item": {
          "id": "2ac4abc4-c709-4ae4-bee8-55b6f1193527",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bd972128-37fc-4c5b-9618-148027ea4678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cce4d5c-0418-4d31-8b45-2f08e34ad1a4",
        "cursor": {
          "ref": "f3d2b1c3-bf0b-437c-9374-7c24f7611626",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5e8141ad-9973-48b8-924c-319b67a3d6b0"
        },
        "item": {
          "id": "2cce4d5c-0418-4d31-8b45-2f08e34ad1a4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4bc9f4d6-8726-4ddc-8834-293510c7f4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f3bf98-fc0e-427f-9597-55db1c52ad18",
        "cursor": {
          "ref": "c564b47e-ab96-4798-acc2-1c2221389e9a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "22d73057-4139-47a4-88dc-8f8368652f77"
        },
        "item": {
          "id": "71f3bf98-fc0e-427f-9597-55db1c52ad18",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ec330c08-ce13-40f3-b2e5-2862aef54a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2414e27b-bf38-40bb-864e-54ecabe88b52",
        "cursor": {
          "ref": "b0eaf644-c8c1-4acd-b22a-ba45f453b7b1",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8ceaab96-46da-4806-8f89-d22dad786319"
        },
        "item": {
          "id": "2414e27b-bf38-40bb-864e-54ecabe88b52",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e4a93d3b-654f-49bf-bf0c-b89f519ce0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639b4f83-40df-460e-80bb-8963afed9641",
        "cursor": {
          "ref": "60de648f-c4da-4e59-a841-d5a85ad63f95",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fc3369b2-4839-4896-98cb-f7c75bdb701e"
        },
        "item": {
          "id": "639b4f83-40df-460e-80bb-8963afed9641",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a1c54f81-7bb5-4439-ab87-16288b547c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff756d0a-1a91-4612-a5f0-f92f17753391",
        "cursor": {
          "ref": "8a56c5c5-b99b-42f8-8277-226ae5486b6b",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "00188405-a4cc-4e10-ac03-a3dc0077e6df"
        },
        "item": {
          "id": "ff756d0a-1a91-4612-a5f0-f92f17753391",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c0bfd2e4-8e6e-457f-8c5b-5f37e337838c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 885,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3613a4e-85ba-49d4-a356-1be45e78a875",
        "cursor": {
          "ref": "ca9ab12b-90db-4fae-a283-05f144eaeff4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b85985c9-b5df-44b9-9baf-fa245ae022b5"
        },
        "item": {
          "id": "e3613a4e-85ba-49d4-a356-1be45e78a875",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3f1ca3f6-96e4-4fb7-8c0c-f6bfb71d49ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2e60b9-5bd4-412a-810e-83cc3301f9af",
        "cursor": {
          "ref": "8df61e61-004f-4069-aece-1e90b0fb84e1",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "03aadf4b-3bd8-4779-84ac-1a066d6d66b0"
        },
        "item": {
          "id": "6e2e60b9-5bd4-412a-810e-83cc3301f9af",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7375346f-15f9-4b0d-8b4c-3fa6367df16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301029e5-5b43-4f40-844f-06810d954dce",
        "cursor": {
          "ref": "c8a288b2-8439-4aa9-b910-71f4acf27afc",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f1865051-bfd1-43cc-bc2c-e2e6e607b4f4"
        },
        "item": {
          "id": "301029e5-5b43-4f40-844f-06810d954dce",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8af2d8a7-03a2-45ba-91e6-3835f76f6e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119b5b5c-4332-47ce-b56d-644f775175a3",
        "cursor": {
          "ref": "f32a18ea-534c-4dc0-ab61-da675337321a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5aab70bb-39c2-4c2b-bd6a-8b2761090212"
        },
        "item": {
          "id": "119b5b5c-4332-47ce-b56d-644f775175a3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "44c74a0f-475c-4fe6-85e3-ca6752be6cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa74901e-f229-4d65-8902-853cf71475ab",
        "cursor": {
          "ref": "54d18299-1ae5-40f6-80f1-538616f8c890",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3178d81f-60a1-4067-814c-5d244c0cfeb3"
        },
        "item": {
          "id": "aa74901e-f229-4d65-8902-853cf71475ab",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "70999b00-f66d-4814-8694-da7dfa1d8819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5628694-e201-4310-97a4-f0aa41124479",
        "cursor": {
          "ref": "c97c6420-62b0-46ea-ba56-a89ba71ffbe1",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1735bc3c-4987-432c-ad05-68a72120ae61"
        },
        "item": {
          "id": "f5628694-e201-4310-97a4-f0aa41124479",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "51051e17-c6c8-4309-8a59-10022ebd8b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd31857-6417-4a98-8111-3c851f464fcf",
        "cursor": {
          "ref": "24df6010-487b-462b-befa-dbaad8a655dd",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ff8b1a2b-52a8-4a69-ab20-ff958feda9a0"
        },
        "item": {
          "id": "dfd31857-6417-4a98-8111-3c851f464fcf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "71ff1e9b-6616-4fb7-bf72-c2bde61f88bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f131173-c5c6-46be-92cd-0292428d2927",
        "cursor": {
          "ref": "fcdcf2dd-cf2d-4416-a900-04e545de744c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c60cecc5-33ed-44ab-8ed1-69edef543f22"
        },
        "item": {
          "id": "7f131173-c5c6-46be-92cd-0292428d2927",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "421e4e93-a76f-4101-a1f7-c4f77b102c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e371460f-b1f1-4468-9a1f-ebd50bf5d022",
        "cursor": {
          "ref": "9199829d-bccd-4476-9773-ed44aecd776f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3a95e2e1-54ce-4f7d-a8db-efa1547f3bba"
        },
        "item": {
          "id": "e371460f-b1f1-4468-9a1f-ebd50bf5d022",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dea754e8-3843-45e8-97b2-62b3d1ad0a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0de67a-bae3-492e-9fda-da5561df1405",
        "cursor": {
          "ref": "9ef44f28-9125-400a-ab54-d0a2091762ce",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8ee2c4bc-892c-40a0-ac18-45a5e5c43775"
        },
        "item": {
          "id": "1a0de67a-bae3-492e-9fda-da5561df1405",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d164c4b2-6bed-4560-8e52-b3e87d333a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75671f55-0efd-4279-aa28-477f15f99afd",
        "cursor": {
          "ref": "e9f357c8-3ebc-4af6-8823-046f56151217",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "aa1cea21-5dbd-4d9e-8a6e-3cb77746468e"
        },
        "item": {
          "id": "75671f55-0efd-4279-aa28-477f15f99afd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9f694425-8179-44c3-92cf-366297acfec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1daaa0a8-d219-41fa-8252-4b3e6d768771",
        "cursor": {
          "ref": "7ef804b8-27f4-4ff4-869a-fb568bc6ba85",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "50bb1e75-a064-4bb6-aae4-ad1b78842575"
        },
        "item": {
          "id": "1daaa0a8-d219-41fa-8252-4b3e6d768771",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "41b8e305-f24f-4b22-b723-16b584b2f62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775d982e-e7cc-4c4a-adb1-6649807e7cb1",
        "cursor": {
          "ref": "ee5bfc94-bf83-4aa3-95ed-4650ff0d2a60",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d2071e34-104f-4304-a170-a2a1b038011b"
        },
        "item": {
          "id": "775d982e-e7cc-4c4a-adb1-6649807e7cb1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "366980cb-6752-418c-baa2-79b2e6880338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6ca152-5555-435f-a826-bb61d249b02e",
        "cursor": {
          "ref": "91e0848d-2b43-49e4-a4ac-48a68cf2e396",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8e9884e0-86b8-4f5c-ba1b-2be1c351baca"
        },
        "item": {
          "id": "da6ca152-5555-435f-a826-bb61d249b02e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f18e24d6-7e54-4287-86f6-9b0903fa9381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a70375b-28bc-4445-a7eb-c48c08332fd4",
        "cursor": {
          "ref": "99b84a5c-d0db-4f80-b687-1a68cc8e0cdc",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "814ab1b1-b817-43a5-9058-12923e18782f"
        },
        "item": {
          "id": "4a70375b-28bc-4445-a7eb-c48c08332fd4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ae694148-ee92-4127-8a04-cabb755b87bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3648cdbd-5e34-4b5c-bc37-42e02f73b9a8",
        "cursor": {
          "ref": "0e8b0d41-69d0-4076-af01-3e745751185f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "597d24bc-0dbf-4968-8c4f-7fec8dff8d58"
        },
        "item": {
          "id": "3648cdbd-5e34-4b5c-bc37-42e02f73b9a8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "dd5cbfd6-ff14-4d9f-93fe-d12ef21f928f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ad86f1-fa0e-4429-906b-63ae517172f5",
        "cursor": {
          "ref": "3590a13f-7df8-4fd3-8a0d-f8a03e60272e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d679b17f-2090-49e1-a528-8a3b4842a361"
        },
        "item": {
          "id": "95ad86f1-fa0e-4429-906b-63ae517172f5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "97290b1e-bbb1-4fee-9e43-7dcfa85da292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2273b51b-882c-49f4-bae3-804f84bca54b",
        "cursor": {
          "ref": "9c9a52f0-c75b-4f86-b7a7-77d91d463eea",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "20652b70-9500-41e1-b1a5-b6a9e3b5816d"
        },
        "item": {
          "id": "2273b51b-882c-49f4-bae3-804f84bca54b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c2143624-92d8-4e54-b2c0-7b78a68e1855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731047ff-dfce-4533-9501-239866703fee",
        "cursor": {
          "ref": "b6f59d11-de01-4740-b124-d71a8d6c1a0d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "eb60f010-1fc1-4f80-9263-2d62bf0ceab3"
        },
        "item": {
          "id": "731047ff-dfce-4533-9501-239866703fee",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9de20350-ae81-4e45-8b01-6fa0afbd1ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb72848-9321-4f49-a0dd-5ec481f01692",
        "cursor": {
          "ref": "e487cd10-af2e-4ed5-8efa-9fd683a24218",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "407cae16-9a28-4d18-9013-9af790197c27"
        },
        "item": {
          "id": "ffb72848-9321-4f49-a0dd-5ec481f01692",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2c8b41df-8514-4ac0-a33b-328cf3a132e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d404a004-117d-4fd4-8a3d-db61d2400f23",
        "cursor": {
          "ref": "6e7c6ada-48a5-4ae2-a49a-9be15d3328d0",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "382f24df-37f7-4c11-bb53-e82bcddf7d8f"
        },
        "item": {
          "id": "d404a004-117d-4fd4-8a3d-db61d2400f23",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7532c165-2b2e-442a-9d87-dba8b87444ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a19988-5d7b-43ab-8e09-ddbc094ab78b",
        "cursor": {
          "ref": "ce907c4b-62d6-4ab2-8b0f-305139589464",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d50016b1-a115-4354-8a3b-554557b68d32"
        },
        "item": {
          "id": "14a19988-5d7b-43ab-8e09-ddbc094ab78b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "833ab8af-8f05-4c09-ad9d-9776e597cbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b11b8de-63bb-4479-beec-98e0774a459f",
        "cursor": {
          "ref": "aa84fa5c-f536-4596-aba5-f585bf4aafdf",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7ca114f6-8e86-40b1-8e3d-c9a363333536"
        },
        "item": {
          "id": "7b11b8de-63bb-4479-beec-98e0774a459f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f1db1ce5-0edf-4ee5-8497-6ad8c9cbe7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7b2680-a21b-4ced-afc5-8f9f113e3c8b",
        "cursor": {
          "ref": "c24b1ef0-74ba-4386-921a-2dd8d534cf67",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1bc52683-14fd-4bcd-8da8-b6c7240827c2"
        },
        "item": {
          "id": "6a7b2680-a21b-4ced-afc5-8f9f113e3c8b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "46511adb-68e0-484f-8acc-387d417a0364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e2e386-6300-49c6-99f1-768429a46446",
        "cursor": {
          "ref": "31ed76dc-7e82-4640-ae89-933f4bd00b46",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9f5e8357-0178-46f7-b73a-f17d777a2675"
        },
        "item": {
          "id": "46e2e386-6300-49c6-99f1-768429a46446",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "41751d79-3975-4656-82d2-d0af20774f65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc98b9d4-ba0f-4521-bda4-d080a54791eb",
        "cursor": {
          "ref": "b110261a-08d3-4a1d-969b-197385bb438e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e03f5d5e-df30-437d-aa04-1a3f4dee844c"
        },
        "item": {
          "id": "bc98b9d4-ba0f-4521-bda4-d080a54791eb",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ba9d61dc-a6e0-4c36-b08b-8669f1c70933",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 416,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3d7030-b4d1-4c7c-82b2-34f6190ffd8e",
        "cursor": {
          "ref": "c48b5cbb-ec57-424b-b7fb-76f5141045c1",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2ed6d9c6-db9a-4fd3-9e0b-a4432d6d5359"
        },
        "item": {
          "id": "3b3d7030-b4d1-4c7c-82b2-34f6190ffd8e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0404d4c6-41c5-4573-b67b-b61d4b50c7d9",
          "status": "OK",
          "code": 200,
          "responseTime": 449,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "159c914c-578a-4d20-9c1a-04c775766438",
        "cursor": {
          "ref": "d89ddb9f-15a4-4e9e-a58b-b472b553bb0f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a5a74d28-13f4-41e9-b444-35eb5377041d"
        },
        "item": {
          "id": "159c914c-578a-4d20-9c1a-04c775766438",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d9c467a2-3d0d-4d3e-9cf2-61958b5c8715",
          "status": "OK",
          "code": 200,
          "responseTime": 1743,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ea04dd-d2da-4097-8f64-c19a3350562c",
        "cursor": {
          "ref": "a74edb8b-2940-4e42-bc1b-4e8533e74e27",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "87ec4a48-ce19-4de2-87bf-5f9ca25f6ecc"
        },
        "item": {
          "id": "d3ea04dd-d2da-4097-8f64-c19a3350562c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a732c6f2-5ca8-4516-baea-42659d5800bd",
          "status": "OK",
          "code": 200,
          "responseTime": 2074,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89766e0-231c-4201-9b23-c2a026baf32f",
        "cursor": {
          "ref": "5850c2e6-531b-455a-814e-937c7a335e1b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eb17113a-1303-4275-b327-fe95b71b634d"
        },
        "item": {
          "id": "c89766e0-231c-4201-9b23-c2a026baf32f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50eb80e4-e2e5-402e-a77a-1e98533079c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89766e0-231c-4201-9b23-c2a026baf32f",
        "cursor": {
          "ref": "5850c2e6-531b-455a-814e-937c7a335e1b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eb17113a-1303-4275-b327-fe95b71b634d"
        },
        "item": {
          "id": "c89766e0-231c-4201-9b23-c2a026baf32f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50eb80e4-e2e5-402e-a77a-1e98533079c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89766e0-231c-4201-9b23-c2a026baf32f",
        "cursor": {
          "ref": "5850c2e6-531b-455a-814e-937c7a335e1b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eb17113a-1303-4275-b327-fe95b71b634d"
        },
        "item": {
          "id": "c89766e0-231c-4201-9b23-c2a026baf32f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50eb80e4-e2e5-402e-a77a-1e98533079c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2a1632-8ac3-4dd7-9824-32c279678682",
        "cursor": {
          "ref": "130ab096-9772-4b08-b088-d2377f57b625",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2540465a-6ddd-477d-a8d8-7528630629d9"
        },
        "item": {
          "id": "8f2a1632-8ac3-4dd7-9824-32c279678682",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "9d00bb13-c6ea-44bb-9399-f2b974abe82c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 388,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe5dd09-1baf-4c02-b553-43fd8c0931f9",
        "cursor": {
          "ref": "00419fb8-3ff5-42b1-84ec-f3cadf49141b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b16cac4b-03ca-4517-8928-b9392c6c8ac2"
        },
        "item": {
          "id": "7fe5dd09-1baf-4c02-b553-43fd8c0931f9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8e7c3a18-6e93-4c50-96ae-11427f8d15ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe5dd09-1baf-4c02-b553-43fd8c0931f9",
        "cursor": {
          "ref": "00419fb8-3ff5-42b1-84ec-f3cadf49141b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b16cac4b-03ca-4517-8928-b9392c6c8ac2"
        },
        "item": {
          "id": "7fe5dd09-1baf-4c02-b553-43fd8c0931f9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8e7c3a18-6e93-4c50-96ae-11427f8d15ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2174d691-e566-4bf4-aa9f-af39a2459091",
        "cursor": {
          "ref": "515c3a1c-54f0-47d3-8ce8-a9b1f273ee22",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f73ad403-79e5-4201-bfa3-df0ee36aa985"
        },
        "item": {
          "id": "2174d691-e566-4bf4-aa9f-af39a2459091",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "026bca44-f61d-445b-bd96-73f3dbc072a4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 615,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d94b74-ad96-4f66-92ab-6c8005164910",
        "cursor": {
          "ref": "7e184ea3-1f90-4ff0-9f8c-325ca44812a7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7d36e6a8-9dba-42a8-87e3-d977b6e620a4"
        },
        "item": {
          "id": "70d94b74-ad96-4f66-92ab-6c8005164910",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c00f8d8f-ef5e-43b6-a421-864031e29316",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d94b74-ad96-4f66-92ab-6c8005164910",
        "cursor": {
          "ref": "7e184ea3-1f90-4ff0-9f8c-325ca44812a7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7d36e6a8-9dba-42a8-87e3-d977b6e620a4"
        },
        "item": {
          "id": "70d94b74-ad96-4f66-92ab-6c8005164910",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c00f8d8f-ef5e-43b6-a421-864031e29316",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351ead2d-587c-4e8a-8451-55137a6f5563",
        "cursor": {
          "ref": "4122a775-6fb8-4cfa-8b2c-8dca0218f450",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e3502b35-974b-487e-be60-ea1a6bf0027d"
        },
        "item": {
          "id": "351ead2d-587c-4e8a-8451-55137a6f5563",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "a5e32596-fc17-4489-b01d-8615aae0411b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 588,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}