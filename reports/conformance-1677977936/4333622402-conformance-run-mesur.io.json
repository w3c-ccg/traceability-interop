{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f6d8924e-6e75-48de-bd4b-492b5dcee698",
        "name": "Clear Cache",
        "item": [
          {
            "id": "30ccdd05-835e-48fc-874b-3baa8af4dfcf",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f8845c5a-d24c-41da-af17-67cb876d9425",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6caf9312-ca85-4627-a474-bd04ef7a9dbb"
                }
              }
            ]
          },
          {
            "id": "619f2457-d29a-4070-a34d-789ddf78edae",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "582133c2-beb8-4ad5-b891-0f9e66d29782",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e6a3f614-6f2b-4498-9577-475d921ed156"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8472605f-8e01-4e84-b038-ccb3afe57007",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c47b76c2-a14d-4b29-a63a-d8675bfd3e8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "03c88d7e-cdda-4593-bd51-07543506f636",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b48551a7-d41a-464e-8789-f234b896d850",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1fea6db7-645b-421c-8c1d-291e8d02cf2c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5b77cee-c73a-427b-82cb-93f40e9c1e92",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46d1b73f-2566-49f7-88e4-48430c333035"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c1cd4e4a-0dae-411d-a7b6-eb01e227a4ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54e3e473-42da-43e9-91ed-6a8f884ed3ce"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a946b0e-fb83-4a45-bdfb-2989397715ee",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "42d63d0b-3b5d-4d3d-b1d3-936b0f60c9bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca69d54f-f5e8-431f-a22e-107fb3feda2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b0625b6-faa7-41c5-80b7-45764c0a4a98"
            }
          }
        ]
      },
      {
        "id": "5f617dca-d120-40ee-a596-b8496eabb883",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fb56a10e-d371-41d7-b708-fe506f4d43fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "400b2400-97f4-4836-80d3-7d3c63c6f60d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f449a7fe-42ef-4c4f-b6a3-b0b114798922",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e44571-d02f-4b9a-a3f4-6f42af63557a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea179a7b-a179-48ed-8c08-2d9354843117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effe0ce9-7933-4a4d-b94c-9d35e8884a13",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329475bc-51af-4cb6-aa56-b20504f0c6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6781f625-d26f-4d18-b183-044944562e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a28292b-4cfe-42ce-bc1a-9cfc57437b2a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dec390-620d-4f7a-a896-7c36bb37bb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d410ef44-c1c0-4358-bad9-9804713f6025"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c176f23-7188-4fc2-84bf-6d54b06288f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4f7c5e9-c7f6-4f21-b755-7db5b9b08686",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e55f7e9-b65d-4ecc-8fd5-36a8ceb669d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0862b535-01c6-4ba8-8fa3-7480d486d245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc57871-e5b0-4925-9306-d9fe36385fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763de2c6-30a3-4551-b782-92523ce27ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de93d2d4-3682-4320-8293-8819344ab488",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc049c8-1453-4fc3-a388-86704499b04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f75623e9-325a-49dd-aef9-353d9346423f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b71b48b-f343-4c4e-807f-1757feb80b13",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "dec5814d-dea3-4342-8c2d-63e1da286bab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dac6e0ff-98b7-4f2c-824a-2888c154f8cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ca821f0-077b-4ad4-9b00-c5fc39309fd3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5958966a-29f1-47d4-85fb-a1513fd703a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9d592ae8-14f3-4597-8c77-6290401dacf1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e287242-a8c9-4620-8731-53ca90c57af7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "63e2143d-2879-4952-bbe4-35cbf649a845"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f153456d-629f-480a-854e-f526a51ecf6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6b03899-9db8-4074-bed0-9349f0296036"
            }
          }
        ]
      },
      {
        "id": "5429f42f-4046-4152-b893-beaee84ef86e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f56ef7e7-4ce2-4e40-8fb3-686a06c7708f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d34b59c8-c74b-4078-8cf9-662e8e0bcb1a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f036b4a5-faef-4770-9de4-2886e816e4bd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9327bd-1e0b-4256-a696-18493ff2dc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d44e3a9-4526-4adf-9069-2da74591ada8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ec5e25-1d16-439d-9f64-5939f07cc5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bafc5ce9-1164-4eb7-aa5a-1484b919e7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea5c1ef-b815-4a90-8e7e-db019ee6012c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7d3014-7bc6-4998-b3ad-448904bb6e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1899b12-ea87-4278-9ac8-1bf4668f688c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb990b4b-a004-4f47-a5a9-8ed9e069c94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b979f170-6e05-4288-b6fd-6e9435b90ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6fd4ef-c0ee-4868-96cb-edbbea9c1878",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06125b8-66f0-4f8a-8ee4-049d12373bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3174734e-67ba-4298-bfff-f86f9edec697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e689f3-7341-48a3-9a95-da67f099ceac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "250330b8-9992-42ed-865b-7ef3663bcf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becdb0da-bdde-4e91-8d1e-4dd4028fff08",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a2f989-3a62-43b4-a941-414f5b29e7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6e133e-bf8e-45ce-b23b-b20d3b0309be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cece4c-b990-4f20-8f82-7a01efc3150c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fac1b41-4245-48cc-8501-8137c73c2842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a7ffc9-fffe-4d4a-81d6-741af63591f6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb558d7a-0cae-43c3-aca1-9d059070eca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8671ca1-24a7-4889-a1df-a62eda1e527f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfe9346-ffb1-4849-baf1-1ce2ab2e71cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6bbff68-6d30-4206-b2b1-769a971bc48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba28d73-d2f1-47b7-a9dd-56d13ec175ae",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1a155f-f052-442f-a571-1a8fdca1067d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1648438-b785-4b08-b069-4d54ccaf83ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a39b575-1df1-4f3d-94f5-2341c2c0f51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c5bd937-a3e2-44ea-8226-b808c13bd58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6b3065-bac6-4e38-9a62-f49c5dc9b76e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cbe569-8522-4879-9bbb-c570d77694aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef433d5-1b04-4f85-91a8-7335e69709e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a10302-9f2f-40f7-be74-fb21cf9682a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90800015-1a68-418a-a108-ee5b89158abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cfae1e-d8ae-4344-afe7-bb7ac0ae7544",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8073515e-990f-4722-95ed-f99a2a0399aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53ca54a-28e8-46b6-a52e-0f008c36ca65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e769a23b-19a0-4f76-92f0-c479305772d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4be63dde-977d-468d-96fb-28f8c528888e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ae94e3-ec08-4de4-9b59-3c063027b979",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3056d13-fce5-4d8c-8b9d-a31d004a6a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281a1db8-991f-4cb8-9281-60b5f18fd84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ecb7d2-c1aa-463c-9f96-12f1fc90353f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00bcad6b-cb39-4ded-96eb-8ded801bd789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07677554-6e8c-4772-8b5f-3152fff466dc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca22295-8c33-4158-857f-7747b97267c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23b6d6e-1ecf-4ddd-a13d-0837138e1a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ecd4a0-9bb6-48fa-a547-a57446d5809f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e2cea19-d5de-4bb5-a381-17ee84eb6b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e1704e-3af4-4e5d-b726-f2a8412c07bb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ff02b5-bcf9-4487-8e9a-e7ba4e360821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a3552f-61eb-43da-9179-f444c6bb710c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d67fd3-38f2-4066-ae31-55f5d85833eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "352ccae4-3c3d-4a15-b3fe-6c2455f78bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb00426c-3ad3-4b8e-b8d2-2580061b2559",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b90bbbc-eee4-487d-bb57-b3b7c579a120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9373d36f-0172-491a-9893-b4bbad3c6f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8c9157-9350-448a-b9de-50af424ebaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1e09e4c-bee3-47bf-b979-6a7d39fb29de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952f0548-852b-43fe-a61b-5ec90100875b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70614fbf-c33a-4279-8a65-dd9da911b6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1550c6ec-94d0-43e6-86cf-1b27fc623025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a40009d-3ae0-4f7e-86af-fd72360c0c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "605adba9-d770-471a-afd6-16e0a041f0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e32b1a8-5ee4-4b86-8ae9-b86fafc567ec",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69980c2-23df-4131-8fc5-a0417df6a5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9197174f-97e5-418e-b5f7-39e80d4dab6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d35820-963e-42c5-9067-684e8dd7cee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbd9cfec-659b-4cf7-8bcc-9ad2fb4e65ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bed1228-6165-4ab8-a20e-37efd0b77dd7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2c632b-dfc6-4c76-838c-8f8fe94fd828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6fd57b-54a6-4409-a8fc-95bb414911e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520dd038-baa8-4816-8cae-086963db3c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "495a4d1c-901b-42a2-bcec-08840ff6cc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30307f1-a856-4622-b561-36a56239d672",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fde04a1-eee4-45aa-8cc3-25ac206495fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6435e6-6159-473c-a31b-56c97b2c45aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75ad976-7cff-4d2c-874c-d2419fb20fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ddaf612-0ac6-4289-838c-dbf8332b258d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e6b757-f077-4f08-93e3-b7e60f95cfa7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170756ff-f1e9-49c9-8335-60c368758980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d4dc2f-4e02-488f-b6b5-05417bd1b6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b065dda1-5248-4df8-bf21-b765e1fdeda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "921cb55b-4aee-496f-add9-db22d82edb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55581f36-ebb5-42ea-aa9f-f015fdb97ba3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89dab8a-67e3-4f74-b68a-bad8cd573460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea89a342-ae4f-46be-99c9-ae09ce304753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22558e0-054c-4ffb-be65-6af48d9e184c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "17031557-1b2a-4361-bf68-a14b5a25f3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d07e4d6-5a8a-4346-80b7-94b8049264e5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507ebfa1-dea0-4529-9b3c-71e447469cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886bbee2-dbb4-4fa0-b62d-968ea98a3a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f49ff3-c0bb-4e21-803d-8cae7976d0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f942d8c7-9a25-4a36-85f4-1d32891b5626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fc776d-02a1-480f-b19a-f3bd34b3aa55",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de29ee1a-7119-4549-85fd-f6ab18fe0191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438919ab-8860-46ee-9dc4-a1f710dff419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be994fb-3efa-407b-b19a-da33e0f23b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5fc98e-0f97-45dc-9e22-0f81a2b3c36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69b25ec-025c-4027-a3bf-e8e06f4a2176",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83a958b-31bd-4e40-8ecf-bfcb7436fa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2731ffa8-d1ae-4542-9d08-b646b8c255eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87be5a7b-55b0-46c0-bea6-ab8bbfc4ea68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9228d646-e674-49df-9d5d-b7fddc01f8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e45523-1cd7-4315-860d-65b81c6a3c15",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691ea4b7-2498-4b3b-a2e8-36a65f072f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9d9966-8277-4529-98b6-92e7427c2c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7e44fb-9f17-476c-9066-58e2a73e7332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30bb1ad9-a174-417e-bab4-0c25a5f0d136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646a9dc9-c734-4ed9-918e-69430d6bb4fe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8abc807-24f5-4bf8-8ffb-7c3053f0bfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a89d774-d1f0-4151-973c-98642700069f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9281bd17-7c89-4233-be9f-e3988fe0593f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90553194-b138-4eca-b28d-3686d745dc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bfd4a2-9b32-405b-b9db-fa2b4ccb20dd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c102ea91-9052-4fae-9b1d-8447fd95b86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f6b052-2f55-42b3-90dc-0782ef628b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff325ee-6caa-4c6b-bcbb-d90e0c17787c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4d5092-666c-41f8-86e4-10f39bea7537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4351afd-e758-4991-87ef-117c56c1e061",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a60915d-31ee-4f05-af02-2fc645a4dc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e7a68f-16d5-4708-8ccf-bc0fb99427c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f0359b-cf0c-468d-acb5-efd80a9a21d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75fdf7a-e039-4239-aa7e-33e754bef436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80a0e12-a37d-4bdd-a991-754c037a5942",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0805d493-2be0-4fca-81e8-690b758acbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f3f92b-a5b5-4411-81bb-531db725987a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1835d6b1-acd9-4331-9fa7-7d25947d2d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49908f01-0d9d-458b-babb-f4e9337882d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f16503f-270c-44a6-a8da-4564340cdc84",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25605ad-effa-4f4c-bc26-82c61546ca95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712592ee-c2ca-4a7e-a873-37199b682c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b16475f-294e-43d9-8d14-5719dc47b21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09b62584-4cd5-4935-9398-e5bc41956139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b51c7f4-6943-4029-910b-097bad2bd116",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd542f0-ef73-42dc-bcdc-0af52ea12260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9b1f43-3a55-4d8d-acdc-fec52562d5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a3b25e-55a7-4607-8de3-00a5f10c6cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe4cd17-a42f-43ad-82d3-b34a40f4478d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ed1862-7566-42a5-8e3d-d0492997060b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2620c51-8ddb-447c-857e-93d9b1754cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d7400e-9e62-43f4-921b-8b919056b4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dfb84d-2767-4679-8d52-7136f742cf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8457c0d7-1f27-46bd-a46e-dccd1ca1803d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbb14ff-ab2d-4ff5-b2e3-10427fbfac5c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bbfd7b-7e76-4c3c-a2ba-d9103823d64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1376cc9-6640-4d92-bbc9-b2563853769d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1e304c-7d43-4e4e-8c53-ae3ac56b4651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b340d67-6d7d-4319-9060-9cb7094f4fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd29229b-9e56-49c0-805b-99c6ea9fcd47",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f22473-68d6-4d73-94d9-82825ee8edab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117df2ac-c6de-4ad0-aa7f-7f03be90ef8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57904bc-404a-4eb9-b017-26136d006cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "226b7f1b-e545-4bc5-95d2-7ab3c4e99dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4686afee-8a6f-4885-916e-2d11fbe00ae0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0e649e-3c3c-4fab-8c97-30f0480b22e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569b88d6-4cf7-4cd2-a853-6abb4bfe73e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b915459e-79fb-41d9-816d-62108450be0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c56dcb-1122-4679-8645-237fc8a097bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3ec207-dad3-419a-b792-8de7d4190092",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811e09c2-50bc-4cb2-a69f-0c9bf5c9d81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11300b5-2f2f-4b5a-9c2f-c50c9cc6c539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193a5ddf-7e3d-4dcf-a0ba-f09a1aaaa915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1172296a-4e84-46f5-a4ed-f4a546129153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c38e33-1104-41f5-bfc1-cf828276d62a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f8b3a9-8201-4207-8760-67f55c3102d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7017c59-25ca-464e-b872-5c060bfb8d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31489a4-074e-4867-9637-b6adf034b62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a99fc35-2991-44e5-92b2-efc69c0d047b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c860e218-ad38-44f8-9cef-5647da456f5d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a460a7-ede0-4496-b3ba-f435c77a295a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63c9623-9b35-451a-84b9-9654627bd647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c99b023-459a-472a-8a8f-ec080c4157c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1b5206-552a-4364-a98a-8971f8c8cfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738f5777-cea0-4f93-8bc8-b50f1a77fd22",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b9e92f-89c8-4fb1-b250-568747d565d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fdf893e-d88f-4ed3-b204-e652547b02e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744bbd73-57f6-44d6-afe6-b6ac2ad20161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0505548-5ed4-4c3e-9c25-a7395d10b52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4dfe7af-c5a6-4a54-bd7e-e074bc3d358d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5227a6f2-5548-4655-8e04-260f79110756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d40590-61ba-4312-8bc8-fdb71d8cf4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5328769b-320b-48e3-ae10-a4914a1523a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb139e4-eaa2-49a9-93d8-3ba1aebea34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb7610b-fdf8-4c91-8438-f4af4f160298",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16f32cd-2484-463b-82e3-b2ef7afb309c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5beb12e2-5e6f-4cd0-a9a8-4d81cadcdde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99e0693-6524-4b41-a8e6-979de7d2efd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aee994b4-d0dc-40c7-a09b-a3b6952c58f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633b4841-487e-4c76-8da8-6c2dee6fe7a0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648c2e83-2eca-4f2d-ba53-c24f315d9621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2422d0fa-24be-46ef-a64d-064d222f4c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8983f7f5-7735-4774-9f71-114d8acf85b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc5a778-d1cb-4fb3-bf00-2684c8019456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca4b4b4-91fe-4ec5-8c71-6aac64dee5cb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b870c52c-c4c4-4e64-b9d3-099b72715311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80707aa-4174-44be-a616-4ad5a905e2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a80424-a8e6-4873-91fe-ff8b62f8a7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c853e36c-0969-4525-be00-858155976f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48725642-bd48-4d2c-857c-10b886348318",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa39e8b-695e-45db-86fa-3dcbdeb87a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb286330-76e7-43e7-973d-7ca5c5599111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fcba0e-b97b-4225-9029-592b83d97e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7076a281-fdcf-41f3-a4fc-3582c6ba7b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67294d94-c66f-407d-bce1-8de6788c3958",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c4af6b-97f2-46c8-a359-0bb58daaa811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14044ff-0516-44e4-a79d-87f20eac91d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b31380-f477-4f83-9158-fca6b3705b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5c660527-8806-447d-b6ee-bc6e7537712f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa97779e-0df1-4ae5-a946-3eeb1f08b777",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5ca6af-7d9d-4a73-b689-0c9365670b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42ce999-44e2-4437-b58d-04f3f00326f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220d681c-6bfb-420b-bca8-41946e1268e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e84c68-e3a3-47ed-a6c7-20c0798486d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c225c9-1c52-4560-995a-74b9b9a16c17",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ee9405-423b-4e3c-9d50-1947c6cd6eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72180eb6-6758-4875-8f5b-019700437d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf910318-5afd-4b6f-8330-de012b2192c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "33e7463c-63fb-40f8-9693-30bb4c31cfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164f0c17-ffc6-4098-a0cf-d16595e36cc1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6be812a-3741-4019-9e2a-35daf2b6f1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f1f09a-c564-4c1b-9443-44d6ad0ca6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6d9e00-0ade-4e38-bf7f-db6503075135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec8413e-dcbd-4ab0-b574-4fcb1998cbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e138059-fcae-49a1-84c6-ffae20143e72",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24b6ff2-7c72-4b0e-af81-c70810ba6cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f572fd1-a1a4-429e-ac33-e9d73fbb1178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b02782-4c55-4b7f-97c8-2dffeb6492e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e51722ae-704b-426f-a1a4-f759de408419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76af3951-c3c7-4778-a3f9-ebfbb81303fe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbf02f3-c3b9-4fc8-aa0e-3a15a6036d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e639ed78-16c2-4426-90b5-94bb79b3d5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171f7b95-c3d5-4cb0-8af5-dd2c152bf8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d70ba67-54c2-42df-b9de-46318238fa18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e8b115-fc8a-4d1b-aac7-9c685aa2642b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3814cfd8-f3a5-4280-b8b0-c8905330fb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c49462-ab52-4bf5-9053-f6c8d60e2722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e82456-2a16-438d-8dd7-08610a5d65e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e88fa6ce-f635-47eb-abcf-c31b06f5c843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc12b0f2-5c6e-4590-947b-f0a25a4c4dab",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ddefd1-c9a1-47a0-8f79-c94ce7a2151f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c190a74b-efee-4d88-ae8f-1dfff09702e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba74f325-aeb0-4ee7-983e-a43e9d641ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb5ff74-2a34-40b5-b593-a174199965ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1725e236-59ed-437b-8075-1611d77e7907",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53741c1-ec6d-45f7-8a5f-3dc966c131d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb991ce5-d9c3-45e0-b5a0-670b7bfdca72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21ea71d-0f14-46f8-bd98-9c7d0b6bf2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69cff92c-94ff-428d-b530-6bc025e04b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7060cb9-ae72-4a6e-b09c-b43001a39a25",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478570e0-5693-4723-bc26-59c6dc1ee05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbdd16e1-e91e-4ff6-8dc2-baf0487b1fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbdec05-cb62-4409-9735-4e561450faa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0459297b-6561-4356-86d8-47e4525e0200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86161f13-377f-4617-8174-ba874a5a912c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f671a1a6-e7ba-4eb2-a627-dadb2da8c56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45348d2-d2f7-4984-a369-3b61be3b6856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578c0397-1ca2-46d9-b471-09396f197dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cada1a2f-1c26-45a2-a8dc-0cb16ee340e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1f92da-49f8-45d1-86dc-40191c41a173",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aace9d6d-9f09-43b3-8ab0-c635e29f79ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cdf794-12c6-47aa-8b86-a589b10ca2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5e3bad-f2d4-456b-975d-ed4b19a1c9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca9b1ef-b371-4b6a-849e-94be39157af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c5c420-3f87-48d8-b857-b111062c5251",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5447f6-ddc4-4bfa-839b-bd7350a67cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7fd706-f3c0-4b11-a8bb-5313531ce450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e9dd81-ba45-4e80-b953-2278db1e5558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4895da5e-5d27-4ae5-8c38-62c20988d08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebe48d9-0a12-42b6-9018-0cbcf32614e4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c36fa2-486b-4240-8b16-fd0a282fb620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcc59db-6416-465e-a45e-cfe11691afbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf9abbc-1dc8-48c8-895b-44c5e1db6af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "415afce6-93e0-42e1-bfbe-2792c6b4952a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf51e06-2e62-4a49-97c7-aaf0d253abc3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c09ed1-9b21-4272-a742-7016bef4b8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822e5630-88df-41ed-93be-0923d3cb9076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f402bc2-2aa0-4903-8b95-09800afe2280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "135cdc91-dec5-4c3c-a1ea-22eb835c8282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7fdef2-453d-4705-b281-cf0f3b419f3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1db818f-5a03-44d9-bf66-2d254c74cfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62796726-54b5-4600-9125-c38b60072089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7c72f7-7740-4975-a02d-3696d822b2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b28d658-d1cb-4666-9e5f-618ec2212ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dab16d-f4fd-4a5c-b9e2-0129f5b1e2e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3473572-e664-4900-acaa-a8c3769142df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799e962d-675a-4281-b4a0-cd0aee11abc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d004ca21-ba2b-4b20-a303-6294ac5a94a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "05d90514-1d33-4964-84f9-076519e7b867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bb26a9-cef2-410d-b53b-ded79f8a8961",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a77358d-280a-44d3-a3c4-04d40ab19eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e3e362-296b-41ff-9ad7-5e3d1e85748f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e819efd3-bf20-41f3-a178-68f8d6fea8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b081cbbb-f2f5-4611-9cdc-83d08e3c1ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da0d9f9-6b83-457d-a402-05a677153ffc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ca3414-a72f-402d-89f8-f001d7939030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b45135-188b-416b-9e7c-90910c4fd364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed669330-5ee6-435a-96aa-f9b0fb9b02e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c92af17f-75ef-4953-b148-8044b8f141db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20c0d0b-e6d8-449d-be66-8a24a0ab12b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb09a2d-027f-4c80-a0ae-157cc3dbd74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3ef5b5-dea1-45dc-a291-81da96e1f4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043b68fa-3044-439a-a647-56356dc6c1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "337d0c2f-5b8b-41af-b4dc-9f7635b93071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a46d70-fb0c-4e8d-a2ec-58ccac310129",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accefe14-8e59-454a-b5f8-af41dc35da4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10de0e29-c42b-4ea7-9056-06a03cb9a1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1e1556-c74f-4cc1-9856-40eede2b4db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "11ed0aee-6662-43d2-83b8-fd01f1409714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12600856-15a0-44c9-870a-64ebce370ddb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4592ad8-c73b-45f6-8813-d3137cbc69cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641acda9-cbee-4a3a-a7cb-4ac8c572cfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae9e61e-cc1e-458c-8a29-618340838654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "758f2bfb-41d2-408e-bfb7-786a4cbfbff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6618e07a-70a8-4746-bc8e-7746fb26b84a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f1d1d3-5b66-4448-9977-1d995b0dd90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a621127d-7812-4d08-ad3f-d85eae0e084b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9649aab3-3322-4911-b05b-20b1bf57acc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20668f96-7a0f-45d4-8e49-e26e3edd836f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8c5037-9f66-4dcc-84f4-86f1c8269381",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "015f5817-19e7-40f9-81e3-54282d5976b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee5af51-5a20-46a7-814f-00af61949271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d6ff3d-c726-401b-8670-5eddcd76048a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72d5bc77-17fc-4645-b52e-c1458aab6e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c523d9-7024-45e7-a69b-690df17c97ad",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ec0ef7-2755-4f17-a57e-ac4fa0aee6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136c42fc-8c3b-4a16-a777-2f3cf566827b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2956c729-ca20-4400-9237-63953f6a2ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "286ca6af-3818-45df-84af-309b0e3be318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984075d7-58cf-40d5-ad83-078e3d8bdc67",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965e8b01-d8c3-4600-8c51-7916c86f2d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9225781-c13e-418f-9cf0-3b3efd311abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f62468-b035-4ee9-8d1d-bffb41efb6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c71144-ac57-4ff8-a38b-59e70c160b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0a1efc-b1db-451e-b7ec-f457510038bf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbefadfd-2874-4f2d-ad62-f5590d4ab1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5036ff31-e4da-4aec-a54a-0a7e896aab43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2248408b-b175-4be5-9db3-3f9c42e4884c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8f63f3-0614-4a8e-902c-40f66f0512a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2e0a49-6d76-4f9d-a4da-32d72e65f4ef",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b442f7a-b734-42fe-8f0c-04b722c13bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7991455-ec72-4876-90c5-305effedd251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7a3e8e-c367-4a97-a625-696addc4d1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d857656a-3705-4692-808e-82779eee7c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e633d5-6f76-4b76-b5f4-29559f293394",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ae3b1d-4740-4852-971e-020cadfbf265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a130dbb0-6cd4-40d7-91fb-a2991843c387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f0e25f-8e2d-4942-bb90-6a8d9ce16433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee489e2-a4f5-4ad1-9dd2-331bfd93363e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c383f58-cb52-4835-8a53-0f206b14263c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3a49ed-2ad3-46e9-ae28-97bca6c5eb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d11482-eba7-4bad-8c2a-ba66c0338f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c69229b-801d-418b-a6fd-0726324f52e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7482c723-8f9d-499b-aa90-ae672e7d4cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70aa0b8d-c9f9-4524-8b4c-9ed05b5ee05e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169f8a18-7bee-4252-8afb-d2b494e7c78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818daaf6-91a0-438d-8f6b-e28420b46026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53e3323-e1b8-4bba-ae13-fea8551548ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b44565-8cfe-47c0-863c-e166eca28d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62726e48-784c-4f83-8837-69b2e4941c6d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6016741b-b5ac-4f42-865c-f4fb5e21537b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b344faa-7ac4-43a1-b1e4-cd7f84410f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42ab1ec-a3a8-4d41-a3a5-00ec030e30e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "270ff0e3-1c9b-41a9-9ece-fca916d23a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395c8c7e-b1bc-4de6-b536-258c41a055d1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2de306-29b8-42bd-8327-e3560ee5a543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47d9517-98ce-4b20-968d-2c7fb5970a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a251b495-c065-499d-a415-8292ce95c1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1854de-9dbd-405f-bf45-0723178c7245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cace011-0ba6-4adf-88c5-c5fd46bd8337",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452283a2-3330-4124-a079-bb569c6b9394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e01d87-8a54-4d0a-bb43-98108dc77c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b6832b-a6fc-4430-a2bf-3040ff108f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd317dc-da4d-445f-8204-17aa4e2790ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736881dd-96ac-4cdf-a5ca-a5f737209ed8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d28b445-45e6-4347-aead-3998d99ae211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389026d7-c78a-4948-bc8f-d6bee2c1be4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ad7dd5-a862-4844-9da2-5c3807a2b1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82c3f81b-2086-4475-9e66-dd64d2e56951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286d78e2-0726-43e7-a59a-32ca9f547f6b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d24a922-079b-4e51-8ee4-a40fbab96b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cbc3b18-d03e-45e7-983a-546006aee42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2c7ee4-d4f4-4711-bce8-26600a1aabe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "989269a2-c90a-4ed8-a0aa-c937c4280af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dbe691-2a88-497b-90e1-e80622d451c3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849aa449-0adb-4cad-804b-1cd2e113bc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e5b1df-aa49-44a3-a891-6b32d23b4465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d9eb26-e9a2-48a1-b610-8034be05a4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3aa3ff-2286-444a-a8f0-77a46b6b9c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bade24a7-774c-42b7-8fa1-dd3f31d1e6b1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee9dac6-5eac-46e2-85ea-5eb87e11a1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6e1305-ce69-4f5e-95df-afb7759acd52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54166fb7-1503-4c47-a2bb-fc2ac9c77996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be112c7d-ab34-4fb6-b354-816c4a568463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8471b4f-b146-4d13-807d-bb5527505842",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05322c66-d20e-458b-bcbf-c3f35f4ec1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61af4019-d668-4a2d-a4d5-af6e0f83c5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17861a7-185b-4048-98c2-de8a088a63ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8704cfa-747a-4f44-b4c3-8852d1788c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33c1ee3-3fdd-4876-8171-a1c4551692ac",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b807a88-73be-47bc-9efc-d6d6c5bf77fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97368a86-4f38-4d0c-8bc2-56262d41e659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fee458-55f7-4fd0-8eea-c0ab53dcd3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "93536f05-a065-477b-9a3d-f3821797efa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871c520a-58a8-4f0d-80bd-b47986ecc715",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06b6735-f6b1-4414-8813-87c7074efe01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e6d8f7-550c-4f50-8aae-54d0b0cfae43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8021a2f5-5e46-4c09-8c36-490d593ebe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6a1c4c-237d-426d-8464-1b13fdeca83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f14845-2ace-4def-8210-9f1f47b6b432",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26964cdd-e4a9-47bf-b688-e3ce90279f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52655bec-13e9-493a-9db5-adc673d06cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac7c041-1293-4a43-ae75-b34c36727795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88518b1b-9a5e-48c7-8e4b-24061112d93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7bc547-b563-4b7b-8879-eb3e93de9c43",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255c9fd1-3e8a-4335-b9a1-6583e6a21e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85c69f0-5c35-4eea-978d-81e0585d478e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017701e3-aced-4500-8c8a-c4db71d27b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e90bbe3-1091-400d-89bc-589df9b8821d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf37c22-6cd9-4564-8b01-c62f9a42e7c1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc9ecc5-a023-4eb8-9a50-63ee1da3dd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f13899d-87f9-4b42-9a1b-bb4db8a8941a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a1460c-c9ce-4b20-8b37-0fdfdab783d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50fb1d98-7ffe-42b3-a59d-69d0233f8dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd82015e-61ab-4aa7-bdeb-f080ca475fa8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79be4ad-1ca3-4da6-b5cc-d5955bc6a8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee9be3c-34b5-4cdb-9ec1-654d5207d9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3395dc-ca14-4d18-b392-9c9d79ff8f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c85fbd4-da40-4207-97c2-c6e92f785e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a316768c-fa8f-40dc-83c8-5d00ef3a809e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5847e87b-5fb7-4f53-ac84-f129c5a7e05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776f9575-6e5e-440d-a766-90fdd6fad794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6201a89-6a57-4520-bc5b-6378a9099080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a88ff71-739b-48e0-b9ad-a87c6e78c02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2657ab70-33c4-4dc9-a897-ba7e7185526c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6e54c0-45f2-46c1-a816-a4b48b5b3f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4a239f-6b91-42e5-94cd-145893b1dfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a63a817-d17b-4669-9858-ba950af863db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "542a33fe-39a5-49d5-9d9f-9817af8141b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f783a6-5472-4292-b295-e78b7915c3b5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6817c82e-6cfe-40a0-bcf0-67c68aafe541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beed696f-9313-41b9-8ed3-9bfaf50d50b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1fd4e9-9d89-4703-ab89-e2e67e0eb1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "313bd256-e79e-49ef-9dcc-955265c15256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abed508-b955-40de-bf48-8a963af39bcb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3959044-a25d-44c5-93d6-d16141171629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604867a4-feed-49a4-bc03-3e075e1f8048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6adc90a-0f1a-4bf4-a058-910d81434bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "df33f7b0-a761-4f93-b8e1-0469816f07d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bccf64-d86e-4e8b-914f-58b2bc22efa1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83ed1f7-13e5-4e88-acd0-6105dcc114c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0b41b2-16b1-49d9-8471-b4cf2236c76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961b9b5f-1de4-4286-a3c3-eb1cafe32a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a23bc9a9-3aad-4fc2-8489-0c0ecf8c1816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fad1a4-1fda-432c-a532-4bccb7486fdf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59ce450-93b6-4f94-ba69-33e2e460e2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cca93e17-b74b-482c-8077-5040f017caf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158cc91b-9380-4a07-86a9-7d256498e628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "93647129-ae0d-4c22-b1a1-c1ac47f96e35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70602545-2309-49f6-b3ca-c2e9945a5bdc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86fec1e1-3aba-4bc0-892e-9b0a4542feba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117352dc-4734-47c1-8b81-1f8b398622eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b5dea9f-54e8-4fcc-b478-d8fe8dcec7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de3e50f-1ec1-443c-9583-5dcbb4480a90",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89c4d13c-d046-40c6-a4ad-8633caf9fcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0eb900-1bc0-4826-a693-bf5ed6186369",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db735de-fbb8-482b-b9e5-ad9dc9431308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57afe06d-1705-4431-b8fa-a399a9877c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de498e7c-eb7f-46b6-aec7-7b4dfb20e431",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03ef7f48-1e14-46df-8843-bcb2abcf82c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "892be64a-3a1d-4e77-9ae0-0e84a0fe1a0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86e39fc0-22ac-4b4a-acbe-6ddfd5a2e6f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80be706a-ec03-4f74-8e06-ed4ea20e2467",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d22733e-6b89-4a9d-b6d8-a4d917f6b859"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "248cdc40-4949-4da7-9025-2f0270dd2ee9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e49ec054-b6b4-4378-9326-9f4d5d64fac0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "adb52b53-7acf-4bc8-b385-1d42c9f02e68",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "704e9b69-b041-4cd8-aac1-b0acb6e9c064"
                }
              }
            ]
          },
          {
            "id": "d1cb0460-117d-4b89-843b-4ea6c29eaa35",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15bdf147-37b8-4f57-bd39-cf9e80ae314c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4375d880-de43-4577-822e-a7188cfb0e98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "610dfb6d-30c9-4350-b38e-0e2b67e529d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55e63d62-39de-4bc5-85b4-b657d3431083",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aae50802-cfc9-4df6-93ca-ed1a13790eff"
                    }
                  }
                ]
              },
              {
                "id": "65a8eac3-43c7-471e-a281-00008989bcbf",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75c5cb0c-65e3-4704-a2ee-7c3dc31404b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f02a44f-bb3e-450f-bae7-69208e6432f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78a85cbd-832e-4468-8563-11f334b179df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb46da6f-c8bc-42a1-a140-cca67bdc89cd"
                    }
                  }
                ]
              },
              {
                "id": "2b62a0b3-1bcc-42d9-af10-aae541c207ee",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5292b88-ad70-4c11-96f9-6786924effa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84baf860-cd0e-4124-8cf3-b07f708a3906"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a435df8-7f68-449c-b985-5185513e6ada",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "53e4dca6-bfb9-4bc6-8abf-597d3d41e956"
                    }
                  }
                ]
              },
              {
                "id": "5537cd76-e3c5-4f31-bfa7-b49e995be4b6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "924ddd2a-93f4-488b-a8b0-e963a9e47ecf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3384dbf0-ad2a-4cc5-bd17-f1978939272b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13dbb329-df73-4a61-8e25-9745b415b782",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a3c94eda-c6d7-4cf8-8fdc-815933427edf"
                    }
                  }
                ]
              },
              {
                "id": "4443b4d2-bbb5-4a9c-a49f-937d38097b8e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b7afdaa-6010-4605-8cca-72d174cdbbcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bea33352-44e7-43cf-9074-515a96b30f07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d0ec6ca-8999-4eea-8aeb-02540968d569",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e03246cd-a254-4e95-8fd3-4a51ce3c81e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8c2ed45-f303-4c56-a9a6-6717f39cd368",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9326d2a0-54cd-46bf-9130-93e9dc91a6db"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3bdd76f7-7bb5-470a-8d93-e94bab08ca42",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9427cf70-e669-4433-b8b1-50670942a13c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c94cfee2-8649-4724-8111-3818b841c873",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6a254646-7bc2-4eed-a76b-e0b5a2a35743"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a8767cc-5296-45aa-8480-94742e060651",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45eb11dc-ff2a-448e-93c5-6b4c07cf5488"
            }
          }
        ]
      },
      {
        "id": "4ae63b6c-bd89-4b42-89b0-07706c680b7f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bbd70708-fc68-499c-89a0-0a542d38cfed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77055e7f-9660-46e9-9d30-24d0a6c6832c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4231f147-00ee-4b1c-8814-a6f36b35fc33",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b91050f-7749-4fb9-8c2f-3b26b546516c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2355b9-e415-4c1b-b489-1234f093e50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc981de8-eb0e-4ecb-84d5-9dc3b4447626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ead411b-e85f-4629-9faf-e13405b4b9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611e3e35-5884-4dbd-b569-46bb3acab46f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2a9a9d-1c8e-4177-8124-4a5b146144a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa622044-b256-45aa-ae26-9d6fb218f73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07774262-bd7f-4871-ba5c-d56f877bd71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01f0b67d-f841-4718-b145-b7c203ec5250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09025107-2e3e-4e71-ba56-f8b538fc0e61",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0c2ab2-d336-43c4-8f57-ad2f9191b736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ed0469-aea9-4fb4-a265-19ca179b1054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4f1614-7654-4782-825b-f704f61ea635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9609534a-5a4f-4195-a172-43c06176b1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a24c09-be47-45eb-95d7-863d1983063d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358f670c-81e5-46e9-aa4e-66302073c78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c9e7cc-ae03-4a41-98ee-3da57c956218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01361440-ffa7-418a-bd2f-8188b34499c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c83071-ae45-42c4-9d48-f9098f0a53a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353dcb89-44e1-48c3-8288-b55e3cb9fae2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f281af-de37-43e0-a2ef-5a5aa838aca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62810667-aeef-4152-bdf4-09d07702390a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b4d44d-7089-4765-b6a1-330d7559d5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "007296a0-5dd9-481d-beb4-20befb8a38c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d862e7e5-5f3e-48a1-bf4a-7945ca3783e8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f772a4-ace2-49fe-b640-5e0698f2c15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae992cd4-636d-4243-b094-b054503edfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47e5477-821a-4946-8692-bd96cfde6755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f39277a7-b753-452e-b7ad-aefa884a1b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64af685f-37ec-44df-ab8d-751a38927601",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8003ebc5-0097-4648-8db0-765fa85358a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f01946-2585-4e57-afa6-8464a257e2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98648f96-ad2f-4f0f-aa6b-cdd57cf9bc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd91e2e5-a2e0-4202-b247-486d1569f7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7f7a4e-6fe7-4313-b73a-cd0fdeb190e4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dd8cf0-4d7f-4c4f-8449-152f0ad35c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f293fa-8e4b-41ac-bba3-26233872bca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754187db-8e2b-4b12-a86e-86bf64ab4d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ce4384-feed-4b42-8011-722ae63e2ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6583d8a2-6842-4ba6-9840-e6a0dc08e290",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03626b97-c4a8-4fbc-9a01-b221410ae4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bd7591-795c-4d8f-ac6f-cf4c37a495eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b503077d-03df-49d8-953a-1eebb44837e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "835b5818-445d-44ea-9063-d1c44731c663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78073995-6600-485c-8635-d76cb4c36756",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d3f2d0-4560-4f01-a3fb-498efa9d78da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1b0766-8aed-4e8d-8568-44a624e443e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8313c13a-73f0-450a-afd5-0203612a17d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7f9289-52b1-40eb-a9fc-dc56b40d90f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3656d9f6-49ae-445e-a09d-48ba1781e008",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99751d1d-98b2-455c-a774-63f77fe6942a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b795ea0-9750-4b6e-8a62-7dd092e05507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b39bac-8f3f-47a5-9ea3-84fba00bf993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ad191d06-52f8-4c7a-8767-9a518bb092d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4568b4f-0084-4933-8ac1-6ec4df37a45a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad5ce8a-8267-446c-b59c-9d9ca4c315e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11543503-a222-4e98-9389-d26a18f0ca46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fb0ca7-4f5f-4b7a-aae3-e8f1d18d80b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5430d074-a952-412f-80cf-1976d9eb6541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84239977-1996-4538-bd09-254d2e61eca4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9225e129-b7f1-45d3-b7a1-53af4bf2b260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51473594-8a53-4250-aace-3e7fc4a935bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66da5c4e-1e92-4575-b4b8-f2a32813067a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a53902-04d5-4bb1-ba33-0720aec8a87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a5ff9e-20d5-437f-9377-c77c6544906f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75021cd2-b704-460e-b206-7fcd9368bfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fd4734-6ee1-42c3-8c01-3ccc69379a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60780f7-1e6f-411e-bfbb-6e6c3b5e15a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "35dbb653-aaf8-4399-b78e-04f4daaec61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad4c98a-14bb-4173-b2d5-3bbb8dda781a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36e7b13-ab5c-41e3-a138-c1fc54d1b5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276dfbf7-0bb7-400b-9640-496972bb6957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbe0aab-93bc-4c51-acb6-1ae067aedd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "795b321c-6206-47ba-97ad-3e731762a338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6969fd7a-fa42-42c0-b519-d0abe5e76caf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8277cd-2e8f-44eb-a4dc-22ced7741f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd6d28b-47e9-4c73-b81f-ab7e97b7c8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f814e6d9-53aa-4103-8e34-eefaedb97d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a60acdf-5250-456f-b63f-e4b5483e0a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ae4834-bd92-42ed-97cd-cf90124addfd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c362c32e-1031-448b-a76e-bc2e6710a3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2dd263-2fae-474a-a106-450af295ae0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3e980d-876e-493d-8b79-5e8ca274425b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb89969-ecf8-49d7-922e-c745415709b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4f3963-2b88-4ff1-9141-3c9ffae9d945",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77ff79d-b552-4ea8-b053-d1a242de5227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed338ab-2a77-46b1-b87a-eb90ec723373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d77aa27-6cdf-41aa-9c8f-42e2adf60e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf163f7-ffc0-4358-a185-e498ae608156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef98571-8b30-4216-a844-b006041ed757",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830fe96f-c9ba-4a0e-a0a0-654d278fd2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53232a76-24fd-4a98-96a6-70fd0b79a6e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3b64af-07c2-492c-a8e8-7bfe4207a7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f85e34-2716-46ae-9dbd-eaeb9a2cec38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d133656-a959-4a30-8b37-1ea67f4e4c20",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71db9ecb-2304-4e62-8c62-3e3a9cd86b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2de5e9a-3050-473a-b192-ec082448e820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d24ba3-fca0-4b4b-af88-cfb6cf859439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddbd6eb-8f89-4748-b249-073a63f022e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224fdce4-ef6d-4457-a171-4fc9983d22c1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fca36d-f6b4-4869-a2c5-ca9b762f90fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5e5cf1-94f7-4380-82ae-c27f24626b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c229b14-410e-4fc8-b553-f6a8a6c1d26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b16639b9-4811-453a-b732-92e181e44599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5047d45-8525-4578-a5ce-2978e3e68680",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8922386-6d0d-489d-a74e-604598f5e4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4012de-91bf-4093-8abf-b1cf262f990a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fb4688-a017-4c78-a215-f27c4548aa39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99ec6584-8d21-4735-9d60-fbee4aff1ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0302458f-f07b-4b89-8601-293458fe9dc9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9b1384-24c2-45d9-9b1e-5a5ce477b9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ef025d-12ac-4c1e-96de-8051610437b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6f60f7-896a-487b-b69d-148e63a1c11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a17a1466-6116-430d-a733-a309a23f7947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78b5e67-5074-4ce4-8656-f7eec34259b6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9ff180-6da8-439c-9859-472222c72e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c3f557-a268-4d1c-9045-aa0f11ffe78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb40a498-46e0-48ea-9731-d7497843945b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9696e556-c3dc-4023-885f-558bf12ee850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bb1ce7-42e6-4f0c-8822-fe5eb80da9cb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e912133-a41a-43b6-ae94-4f53100246b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636c54b1-8aa6-41de-8794-33b8dc6a1e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8683119c-b435-4a57-8e01-1802fcca8165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14513890-5bf4-4238-bc8f-ed528a8900d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9c8c1d-a34f-4f17-a796-c1b995f7f5b9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8d2399-067d-4282-a279-07aae6aec51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efa690f-0ccc-48fb-841b-2c5cda1a7cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69489678-f4dd-42a5-8af4-0a568b10f2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfdf09b-6f3d-48a5-a332-9b4f65366210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1655498c-a94d-4b1b-91a3-cc6a6b8fa569",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22933c36-a2f2-494c-87d2-49de4dff4708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127e5b5a-2a08-4650-9e03-f1f604d9b98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734c5c5b-e924-4a41-815c-b862fe82d701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb6cdea-e115-408c-8341-bea135fd6fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7815d2ee-e6be-4f3c-b282-fab7bfebba10",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef468cb0-2b37-455f-a219-a5bed005b3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa1afbd-4958-45e9-a6f5-bf22ab2178f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcadf26c-4d6e-4a5f-9940-5985df2810a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d386b7a4-cd99-4bcb-96dc-047898b4b672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c810f55-c2d0-418c-bd15-fe9609c081a2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f77e81-aabc-44fc-8121-64bd358a6630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac81b99-ef12-4f58-b0e7-8ca26ae4a5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0072ea3-8c73-4786-8250-60d2561cfc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a827626-4249-44a3-b5fb-5e4efadeb365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04ed6e3-3581-4728-bce6-2a5210473266",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6c1bb7-c15c-4e31-8252-401eee271ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89663083-fce0-461a-8b0d-913019a40ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed7b5af-83d4-4b19-b978-8a9ea51c330d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d217cae-4c73-41a6-badd-9543a9a66709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ef9248-42b4-4afd-852c-0f1d09670bff",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3899617-728e-4151-9571-f0f762ee0aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4435cd61-e591-449b-a629-6c4ba768c528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aeb24af-c175-40f9-a7dc-40407d32fcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11a01455-8347-49fb-8c73-5df3500902c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33d978d-f67e-4a47-ba0c-11c711fdfb38",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40543766-24a9-44da-a80e-bfb998153842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f45f752-1059-4a33-ac53-b1903980a830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a57712a-94ad-4acb-9ee4-5e227d7ad756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd570b36-c091-4766-b474-e4d51902d03e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "065783e2-d352-41d7-8910-6be8ad11db51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "993b950a-971f-4708-a8ff-584d14ceecb9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cb615f-6b26-482c-81a4-a915a705d904",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "df11d6e4-c054-473a-9e98-4b51ab468a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e88930-e30a-4b85-9176-2afe46dbf475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "634bbdcb-8d68-4ff1-b86c-01a8f10d11f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca79b75a-6a06-419c-a8eb-9ab78fb3c854",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbeede2-0d8b-479d-b41f-001342b1d879",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4315bcdd-37ae-4810-829c-e9c164123498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf5ac26-0e43-4833-a25b-8968bc01cfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abf71b65-6a51-4896-ab66-a17b0dff968e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2de5f46-31c8-4288-ac04-63445b576b18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15bd664d-9a62-45b3-af94-8da9250c10c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa1376f2-be5b-45c0-9d57-0039ac533d2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43c95197-0ec3-4cb2-aa8c-32f66b7d59e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30fc2ebe-dab6-4015-b5f4-ca8d455898be",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e71b04c1-6a96-4d61-8c21-b4eb0fbaf660"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fac05a3-1573-4b96-888d-7e5da32387ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28e29f73-c9e3-47f1-9242-5a91ac05e404"
            }
          }
        ]
      },
      {
        "id": "6b1911ac-b7ba-4f56-a109-0e102c1779ab",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0e9d3cd6-d555-449c-8e5b-20a642388a63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84fcf7c5-c7d0-458a-819e-f82a0fbe527d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "01c53adc-80b5-4997-8b89-c03f6003e6f6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda7ca73-4632-4e3d-82bc-938ac3199997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161cd583-753c-438a-a0e4-7ae83f117a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2924c3db-55f6-4dcb-83d2-aef072adb813",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccca3e2-bc99-4039-8289-9022227ed3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898b4f9e-e226-4e80-91e0-329f3c6cad07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5052e1-bb12-4b03-8969-9f61b263bff9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d07b41d-493a-434d-af03-9be06fa2c4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27abaabf-1610-40ba-9e8a-5e7d292718e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8517e1f2-8b99-4b9e-96ca-4388790d96fc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586c2ffc-f40b-4f6e-bfb5-ea81b2b76d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395cb636-77c0-42df-9974-759705b9fdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bc1db0-0ed3-40ab-8cad-d3b8b196da03",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd111aa2-52aa-40e3-bdc7-d221fb721920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1483a2de-245e-4d43-b65d-3b4b0be76469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293d8f77-7416-47ac-872d-bdaa34696712",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198c2d08-6aa5-482b-99cb-c631d338b874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2610379b-bdd7-4a43-be4b-964111c8d482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38092449-3182-4db9-820a-97ce48bad2b5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21283f8a-af49-4c48-b47f-dcb96cc15eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b22b57d-dcef-4a4e-ac67-70822e99cb38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b2e1f5-ed7a-499d-b8d2-a37d6577617b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa69d5b0-c61c-4272-ad4e-13ce046f6163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc66a65-780f-45cc-814b-e6c85bbf1d94",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47741975-9fc2-408c-9895-f1f9e64cd0b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e516162-5845-4070-b31d-7273425bed3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f0096a-e233-4e01-bf25-f269df6d6803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85987bd6-6004-4b09-afb5-d01bfc58d6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9152b524-2af8-4c62-98ab-386f5cd42984",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f49bfb-c143-4626-b056-e8bcbb89e83d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75181dfa-1082-4956-be1a-44478355f832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbd0bf4-49e7-40b4-9ee2-4cb75bc62e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c6ac39-425e-4765-986a-210a8646596b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc905c0-e042-4403-8d9d-e1140a0c236f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a919423e-0da8-4d13-b47a-64be29b8d73e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57cc93a-db72-443b-8cc8-367621e7a4f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec44a0ce-f484-4296-9f1c-c15f4d84bb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b399e821-efb7-45ae-a375-e2d75845a8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60581a4-64da-415f-b717-23381eb835bd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e82e397-865d-45a9-9299-b2f8dbfc2448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99ba8ff-5bc3-45d4-a603-92fae0cfb08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e39ec0e-0456-4035-9ede-2fb688268da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374003a6-7b6e-4789-9de3-96e4f6150792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174ecd35-73c1-4e19-a018-18237504c07a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c38fa2-677a-4513-a5d6-44cc961d2353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082cd37e-53db-4014-a016-12e1fb7f9e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29801a3b-1fcf-4f35-9a3c-7ee5d6385159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a61a0b-a582-4fa3-be97-a56629aaa89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97951576-54ee-494f-9b00-78c11bbefed9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42849903-b408-44ea-8e47-0e0d65800928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b087a7c6-071a-4ade-bac2-0c510258569d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9289d9-a72b-4fec-9b7f-3df725256937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498c0684-3ee7-4202-a084-545fbeec4a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94c696a-56ea-4ca7-9f7d-a0c74e9e6e79",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9636f5d-b17f-47fd-9ce5-aaa916d5cb83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de2b80f9-525a-476f-a402-033b503069ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebca8987-e0e5-4b18-8d31-e4f2240ee1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396e965e-b074-4c9f-b7df-22216ff8f53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4b89bf-8575-4012-b595-7aeda020ffbb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2b4db2-deaf-4bdf-82f2-33287ec6f407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36da97ad-b493-4553-b5b2-236bb0f0dac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cf1580-a73d-467f-859b-859f3054c01e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3115611f-e5a9-49ca-a15a-69470b3c4b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adecd8da-2131-40fb-b7f5-0a168b8244fa",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f34371-8cba-4a11-a15f-7b589684e1d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7157e96c-6b31-45ee-8850-158e047afff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40110d32-b590-42c1-a649-7cb21a0edd8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9046ef3-3e6d-4eb5-981b-485d793aeb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bcd3db-5fbc-449b-a3ea-44597f79063d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bd0a3e-387c-4430-8475-90571c4b1f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697884ad-a25e-4aaf-88f3-1953ccd8b249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5882edf7-b01c-4cc7-bdbe-7f41f12f4993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295033c6-add2-4d03-910f-a6b574ea28fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861efd3d-aee2-455e-88f0-a3b706ba561d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d79d645-844f-48c3-8d79-95c1799f2044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbf2ead-0d54-4c3b-8c8e-3bd25037c636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb65e19-5787-43ec-b442-fee23c9a57fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd2b24e-616f-414b-ba81-7566337feb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab451655-8d0c-44fc-b082-8e355217d437",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235ea072-8507-4079-89a3-dc453e2d827e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f26b34-e6e5-4199-a0d2-f0d8b7bf190b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e61fe1-61fc-48f5-9a24-a0685319de15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c59598c-df96-4d6d-8e9d-3f2d22755ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bca8f53-11d6-4c33-8243-4e0b5a284afb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fb1763-8959-4fd9-9dbf-e6d851a72962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0a7b38-2aa8-4cec-8ee9-2e4c350f15df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162a349c-e006-44d5-bdc0-afc9557ec864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454d34f1-43f3-46d8-953d-8a34a584ea44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5ff07d-16b9-4180-9c94-56c77b64f72c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f42049-34be-4f30-9129-55ad6a7b52d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e40f5cd-923e-4c27-b48f-21e5ee9e41da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51965b6-b962-4364-8b0a-4c06af84b7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac5a469-6a37-4367-b213-de0458062e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cff1ef-c808-48fb-aed9-b8cb5d24003c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5aec04-d46a-439e-a24e-60b46605135f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3deda5ef-1469-4363-8c41-214d3b118bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6129adaa-b8ba-496b-8c58-6142815b2f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1515ba-f893-44a0-b194-5a0862bf0ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ebd6ae-64b8-490a-a85b-7a547e1de543",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46367f9f-e5c6-4bb4-ad32-09b53691314f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30306c1b-67ab-499a-9a42-6a80869eb63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa0b8f6-436d-4f66-b685-158802777494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f612f1d5-f3bf-49c0-8d17-e469e6959ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e96b58-8225-4414-9a9e-0c9fb0a8829f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416e8c35-93bf-4421-8eef-96ace2c96c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ba0eed8-b4b5-4225-a68b-f0e41bcbc2a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87701286-86c1-434b-b372-018a853131f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7442e475-954d-4e72-a0db-c72a0a925192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e3c0e7-4361-4b10-9a55-2d72ace0d9c6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1487019a-c2a9-4df4-8efa-6af49e67e121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34bb096a-9035-44ad-8d95-320ce1266296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c41e661-d7c3-4477-9c2b-973677a1ee71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48c3004-6669-4145-ad37-66ae705481d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa5b8f3-ad81-4526-a1d1-f38a7f6a610b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2b5d47-bd00-4d09-a061-0896cb03880c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "983d0139-344d-4cff-89b0-3913331dbf76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75386b8d-a226-4521-bbf7-5778798a651a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aed4ed9-93d4-486f-9e5b-eb396ab8df29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847ed8c1-262a-4a96-a8f5-b1ce67db351f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a25067f-a3ad-45b3-9bb8-705794133215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1dbc2f4-a8b2-4cae-992a-bb0c21a6af58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2e61b8-882e-4d0e-ae21-a79b6f955f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8927fb-f2e8-484d-a326-6c8815c8fb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5980cd09-9bd6-428e-9481-d86aae68833b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405c97ae-8d7a-4e3d-b6f8-8896b9f5b97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c532d7-e4c8-4cf3-b1bc-ef26ee0bf0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59643169-254a-4bd6-a9e2-6e50ec400be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d37414-3f79-4ffc-a228-1a4447db3f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6713091b-011a-440e-adf1-a7485fe1a016",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef418f2d-ab3b-45fb-9128-db974fe70bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ccdc5c9-fa15-4677-8e7d-bf390d92c4f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08108de3-c5ee-40eb-9a62-6ea8e1c2e241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d01c546-1fec-4ded-b50d-5acc51b293ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec673da-3cc0-4766-bde9-03c1abbed4bb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7580983-08a9-4d01-aa01-48c62084f9dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c14a5271-26f9-42ef-8d31-8d971e45e7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9d7815-13ff-4c49-a166-714da055fae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd880b6-96d8-4242-9c5f-f7d8c96ad8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541e9281-73b8-4777-b941-8756f638f071",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7de2130-86fe-4388-b569-255873eaef18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d00736e0-66a0-4d83-b4ef-c9f76d4a1b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32919e6a-e990-478a-8b66-479f9f0d9aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3101ca00-cead-4f28-8286-3ed26924f71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e81e0d3-b43a-4288-a2c8-073a4921b229",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736a39e7-4c64-48cf-a664-903d8d75ab40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c79daea-585f-4a8c-99ae-386592523bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2863e6b6-d864-40ea-8339-9fcc62448ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c24569-af0a-40f6-87cc-dd04a73db607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2565219a-b01d-4b0c-a70c-410c58bc7793",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe543b50-f4d2-474b-9a3c-dfe5b022a782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef7fcb5f-60cf-4cca-b4d8-69d8a042e39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088c210f-a6c4-4c9a-99ad-25b562dee669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b893fe4-d3e7-461b-9e29-0be81adf9632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016705ef-a2cc-45cb-b036-7b0f00351445",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57399d2f-bbd8-4b80-bbe2-8941309f45f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87fea295-7a62-402d-9e83-88ed725429e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f0bf04-0564-477b-a80f-8da2fe99ead4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c87eea-6e1e-457d-9b3b-9e3222945140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60f101d-2cde-4ca6-aad1-51e952283db2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2304c2-6be6-4b0f-9222-12284ba6ac73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a5d6bf-7c55-44f2-a608-b6dad7be0d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7e4d2a-fe0f-4a08-8693-71d56b863df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07a67c7-b38f-49ee-a311-f8b38ae64fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35b1163-625c-456e-bd31-3b604d8f64df",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659094e2-cd1c-46e0-a259-831d99175705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8455f4-3268-491c-b206-a448a15fff8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1e8d5b-4be6-4318-b999-3941fb418776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f724425-009e-4b24-8984-f67473f687f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb661569-bc56-4fcc-b333-676da9332a79",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39981abf-20e8-42c4-b449-16c6d0c0390b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0fd1ef-5110-4a91-8137-81a1c13e1f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67886544-518a-4069-bc58-52e59a14d4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2bed739-baaf-4880-a377-0d60899faddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d32dd9-eb4d-4e4b-9f7f-1cdd815f13a9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa6cfba-0fa9-4139-a0e7-61128eb6e824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675cf34a-3ef4-4985-9e50-2e4f34bcfdaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e8f2a2-2431-4896-ad7e-d478230fab43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b154932-7598-43ca-aeb0-506d5a68f8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3ed56c-d1a2-4281-bb52-74a69b08a30a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb76e01-48ef-4fbf-a587-3b1e57c07c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d895e6bb-4661-4c8c-afe9-2319e07a246a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a2d189-5d4c-48c1-963e-53cdff466653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de203d8-787a-4d75-8223-43bb511b6b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d59fa04-7d81-4325-a041-540408e83ff4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0737c41b-3a51-4521-9ec5-6aea90ed67eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebeb382b-a448-4adb-af5b-363f535d7396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b89c12-546f-44e8-a4f4-15f27ad38c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c2ae24-25f8-4554-b39c-d403f62f5c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd38b63-b8d4-4c85-a1d9-65a6b1e5effe",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c652fc45-f619-4909-9267-4b54b0268b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c253f54-1b54-4891-8d52-704f996c188e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c77bbc-e89f-439b-9954-df2be62d6b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78fc65d-f992-4af0-b9e2-1afaa17daf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac5bdfd-df8d-4c92-8e11-5674d935b134",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2c8987-a12a-496a-8210-dcdc7e7939b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9844282-372f-4979-8de9-b2ff4ea82f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb57791-55c2-4351-b1f0-d0e7d00e8a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a91452-41ac-4fea-b44e-39f49fe1a786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c947fa-99b7-49d4-9bf7-3eb836bdd856",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c159bc0-269c-47bf-affb-208d99b7ea09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8540913d-c80f-47b8-ace9-f88cc77d0d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b733335-b883-4137-991f-c1863525de2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51808541-96c9-49ca-8325-cff5c086f8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeb4c53-8a72-417a-b70b-98c2ff8cc2e9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398d8806-94c9-4ac9-84fd-4bccb8c64637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a198c9db-376e-43b4-b315-85c479ce56a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8360336e-6b14-407e-936e-2de0eae4d506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28470de9-268e-4d68-87df-b66bea015098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b812ea0b-2f5e-4719-a380-1d543db0ec88",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d8ca71-34b6-4bf8-b7cf-599bd82b64b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f038d961-54b0-47b4-9efc-a4f1c53ae579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b19353-63c1-46ee-be4a-a38c50280df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331ad4c0-7c86-4cff-baa2-9bda512b0f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb9c696-627a-4153-b601-071226c94584",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db2a187-1153-4894-8219-43e6fb6773c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93bd4401-4aed-4c79-9eb4-4df81c30e2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1e32ad-f4ca-438d-a530-54bf85b5f9e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53b6ae8-80fb-413f-aae3-24ad105bb146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b45c81b-55a6-44e2-9894-e584e48bdca3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2a9f69-1d05-409b-a262-419e5ab6702f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40bc753-75a3-4468-9862-46f01ca1c3fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a5f258-c4e1-469f-8c47-0f1103fc4321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfff703-e96d-4a1f-8c1d-46674ff5c536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d09b95-f810-4225-a67e-d99a6d6007b8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ec908c-a4e5-4929-8521-95e30a19e4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf311c28-bebb-4117-935c-4e6584cc9a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b034cc81-3532-4320-9cb3-f5df5ead3eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71164978-7c4c-4d0a-8488-59dcf43ccd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b001ccf-b133-41d1-acdc-4bdd35f54f90",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9985d9c2-6096-45ca-8760-412517851a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b5d060-f728-41de-8432-0aed80b54f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c769d525-ff13-4a1a-a711-a2ae2e3b13aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971da85b-d089-4750-9043-f839cb13e683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d69cb1-ba23-42ad-ad9b-a059679294cc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391ee0af-75c5-46d5-8c61-db9884a01c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126cfd17-b842-405c-8859-caa0d88ec12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "134d543a-5831-4998-90f2-ac6174ecf0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab661f7f-c2fa-4a7c-a383-3e04ead17796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1400f5a3-2b51-40f8-a22c-44687f30b0ac",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66137bb8-869f-4239-a1ff-e75b6d84ab48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd410bc1-3f36-4d51-bae1-0f5d39228eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e848c77-b610-418b-93d5-df25a6e6f167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8628745f-68e4-439e-ab27-e993ecd61337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba463b54-240d-473b-becb-ab038ec79cbf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2e5bcd-667d-424b-940e-72b8f58b1daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43875b14-507f-4047-a7df-2f4cb846a465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c07ef4d-103d-4bdd-a3f9-3afea29a1556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3567c8f7-6668-4c9f-9360-84a783664014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12426ad-60a0-4bcd-9718-6bc667b435f2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a93066-ebf5-46f2-8399-9a3c061e06b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40990856-d5ca-44d3-84b1-a68f668b97c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47da8b5-e1b5-4f5a-8f8b-426fae09ae59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a4f86e-4726-46a0-89c4-3d425a01aee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1c481d-99cf-44e3-8805-b7ecbd3aaf88",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531f0db3-eac3-4ff2-a139-34b637a4879b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45615b3f-1bc0-4fe8-97cb-4b13e285d1aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6df9c49-c69d-4fc8-b2d8-e9c20f9ce4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faca6f09-32b4-40f8-b0e4-b70eb6322d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820aa5d4-5228-4474-9dea-a4a9d20d54bc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe282258-77bb-4db5-ba92-7e7914ed3866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2780c4-f795-485d-b31b-83cbab960786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b0a5d4-2f91-4b62-a8b2-953b0ec6ba6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4bc04b-ec7a-4df3-81c0-d05b02c5e622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160b3a0c-624d-49d8-8454-054ef4026398",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe5820e-d704-4e46-8a18-023326a6e20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9634637c-1608-4b49-903a-f9edcb725210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d408db-9caa-4b5f-b9cd-de80f323805a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e246bb7e-1922-4c6e-98d5-4cc7ea607e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c85abdc-4dba-4466-b437-a4ccce249936",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ec2bf1-ea29-42a4-834f-2f55642d97ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d207fe85-1a4d-41a3-a452-3e7927f0b992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b95ee28-a2ee-43ab-bb00-630222d2629b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276e1e49-b303-4a2e-91d2-baa92148ae97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7debf44d-abf6-49ed-8531-fe03e3142e6d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959a9cfe-7cb3-4f4c-b029-a234d3c7f0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1cb880-ea5d-4ad1-accc-0276134157d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23707052-69a2-421d-8f8e-bb4b24b10486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ff8e71-d246-4d95-83f4-3e4b9888dc07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6484665-a8ae-4837-87e0-fdbea78cd1dc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52db6ae-588f-4509-a072-d45324d707ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d9c62f-1833-4784-82a9-a562b49bb84a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b234e61b-eb5f-456d-b3ff-ee3e4f2bd12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8f2853-df73-43f6-82dc-69fa63c84c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fe1ddf-0843-4b7d-b42d-5285b314b46e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1db05c-ba90-4c29-b7fc-69c6b7aae52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87458da-8c44-48ef-9952-daede9a5ab80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b8a759-ddaf-4bc3-bf87-0a477ae45130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81ac6fa-0b0d-4381-9876-e00cae5671af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddee8a4-95b2-4202-a90d-eb63b0074d99",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2594ac-aa60-4bf8-995e-41db4370df62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25880d18-c9b3-423e-949b-f18157d8020d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccb5370-5759-41cc-a557-9a8207a86448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d3bfa4-3cd5-4a57-853c-52a145de536f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640a9cf3-eeda-441b-945a-0c4e02d52830",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b733aa06-8f62-47ac-b6ba-58f2cc815830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e727e2-725d-4ab5-9d62-9617cf3cc3a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee70541c-e53d-45e7-a03e-cc87d340a686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14f59e7-9e5c-4b95-93ce-a34062f0c873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9195b2-86d2-4a1e-a714-956499a4246a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb82580-80c0-4f70-8b58-79a13c196272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee64684-b72a-4304-a4d2-25d28e91f6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadabf57-539f-42b2-ad09-d6c79a381133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565e79d7-2d1a-46b6-8e07-72e1fbd6ddee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34f32de-4412-4b06-b29c-bfccb5e178d6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b65450-b1cb-4b54-8061-30a2e4d0d0f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45be66ac-99e7-43aa-ab33-de730ef36f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dba5b1-4930-4dde-9b46-0c21f2e4860e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2a3af8-25f5-46c0-a100-6a107f85df5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf28cb28-6646-4a1e-ba27-e6559d2be67d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e3fe37-147f-4e9f-91bd-5c8cbdb64fc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c72c78-128f-4359-9ec3-58c3204f4d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1173e706-cfab-4221-b26c-af8c801f9d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78f63b5-cece-4996-bb97-43ae201dc1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89369d72-8a84-4bcc-80ac-d06d7b1b5dd2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225ff251-664a-41b4-bdd4-e19831676f76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e436edb-6d30-4d8f-b0f5-6a47e85d148b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65040de7-3a8a-446e-b061-81c1dd3dc0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b7c4cb-3b63-4497-94fd-7f7b17538dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd895bd0-5182-4932-a14a-f134fdc3a5b6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8288bd-78b4-43c7-8c26-a46e0913cc86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1319afa-e23f-41c9-a970-5266916ad504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a84ab6-2413-43a3-a6ba-576605fa3945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371216c0-fbcd-4bba-8738-d67d9fa1af74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a298947-e4c4-4202-b8a0-8c7666b23d12",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ddcfbb-1042-49ed-a5b5-3ee3d5947bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce829836-723b-4aed-a9d9-641f8772bacf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faca6c2-fd70-474a-93c4-7ac8efa79dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e936a63c-f8c7-4a4d-8c75-14abe21925dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a21e8d-08cd-45ad-8c5f-af19ae8bd622",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c644ff9a-c175-4a93-a0e8-18caaab117d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eaa628d-4aed-45be-8f6d-e188c9b5dd3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a54595-a5cd-4888-aa79-cf87d07d80a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53b6b89-324a-4255-b9e6-1a205c74bff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16e7d98-5313-4946-b981-5927c04e54e2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca98b78c-43b5-4693-b438-d0448fb93143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be96eb2f-c427-4bee-b598-5608e7dbb514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc080b98-4bba-437d-bfe9-ece288ba7775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e56e4a-e052-4a8e-b3cd-3de1b56857b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb432e7-f82c-4ca7-bcfa-8786cddd4b69",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45922752-d1df-4e0b-a30f-cc286f3e4e22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcf7e324-1638-4ec8-8364-595113d54aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de64eb17-ef58-4123-97d3-90d807ebadd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1580a0-c902-432e-9fec-c8d90d9b054b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa41981-fdab-4274-a63d-3b24041feab9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca52dcf-c9da-4b19-93ae-e131b6e6f6ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5eba562-fb55-478a-bef0-022962440159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1cc4d5-5b7d-45d2-a73c-0108d2d9f9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45c75fd-ede5-468b-baf8-e115b9b591d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f49fd7f-e4e5-474b-b7fc-cb844f666614",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2ee80d-5939-43b0-9ab3-49e35dec9c86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c7426e7-d211-4562-b512-5f3d32f2a5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e39f70-746c-47db-9b99-cf0d037ec334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fac0e0-d730-47fa-ad32-fb7e5fe0d7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193b1a9b-da42-4b48-b2c2-7870d9a71940",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e24729-a4b6-46cc-a2f2-a6071370cb17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4315d98b-b563-403c-b51a-f05262b46d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0720547-6048-4a98-bab3-5afe59225a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ebc267-ad58-4326-abc1-16e7027ad299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44f7fc7-fc3c-4ea1-8a7a-54f83c5e6084",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9818600d-e9ed-4562-bcd8-8adb5b6a80b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc3aa66-c5dd-4e93-8ad5-ad9882aad106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5e8dbb-5a13-451c-b598-5d2c3efc2bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3b83dc-fc3f-4fe0-aec1-365f8408e94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ed4b49-dac2-40aa-a8af-1c652e716aae",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9835d52a-3d08-426f-8f08-b5e96e15f300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb1362c7-b771-4411-b988-5d0a9317408f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aaaf97f-df1a-49d7-8951-aa9f20597dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1908c5a-6518-4e9d-9e72-02448b51db43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735eb1d4-f289-4f33-8056-5ab37a95f20a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4538398-d901-43a8-b00a-86dec6dd1797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6524f1cb-4100-43c5-be90-7d0854a1c1dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85e1577-9b60-4dfe-8cd9-e265a51ee871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309ac9ff-4e19-4f34-8051-97698a1d679a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b92f244-1729-44d8-a62e-02c659bd4708",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34e9996-f98f-46ff-9c9c-818795651256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb552587-29d8-4526-b703-38a7ff8ee881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82354ef9-9bf7-4915-bb51-8dec4da94f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fde2083-be72-45e6-9746-5357bb953469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da308c7a-068d-4ca4-accb-d7fa2855b7db",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1e62f0-ca77-4eed-907c-3561c38e7d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da548359-76a1-4b87-b32d-b21acf855387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea322e9-b034-4a53-9ed6-19727f3d325e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f7aaf0-c563-42e6-a6f9-07afcfb6feed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0b80ab-bbc4-46c5-b9f7-547a819e1130",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7895e0c2-aeed-4a72-b661-9fc3177b1d97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64f8434-c399-41dc-a285-fd5030286316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54dd51b-ae16-4f1b-9302-2e3e593bc3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e6e317-2362-4c84-a65b-9755c47879a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dd26a6-3544-41e9-8c36-4516e216c925",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c967c2f5-c164-463e-8139-84e1a382418d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9af3be6b-3302-4c2f-a053-c8828f763a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf926f02-e8c9-4dff-8c69-6f0b66edb0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5780c651-733d-4c0b-888e-d5aa0b747bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4657f90-8160-4dcf-88aa-1fc46edaf4bf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d469bff8-3d9b-4f30-8235-915569d14a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbca7b93-05aa-4a4d-b7ea-a26b26962df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55406954-f4a0-4b77-9364-d671bc02bf4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edc4b84-6ab8-4fcd-8833-31f8c21ea888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ad0a7c-bcad-4f08-9c24-d145f0daae6a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adf7d42-d3ea-4988-86ae-835e2ac1fbd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23ef5f96-90ba-4c0d-bc61-5ab1d1f084e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70e3039-9b8a-43f7-9c3b-05f5f804830a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3b0554-bc8d-4ed6-a986-a8176a3a7c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa5506e-ea11-4bb7-a1f9-4ea46a1f4d79",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3de653-ff2c-4c60-a294-39e77b79b375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c19b383-7294-435f-b43a-7a98e1971def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5223dc-f399-4335-9156-79c98fa23313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd49fbf6-cee0-4b29-9113-9032dd743f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779e9420-b561-4ee4-a04c-5b72f3014ab9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7a9728-163b-4bdb-b386-d24aa074f9ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41d0501d-8ff3-485c-ad66-82ee4a41586b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be67f502-a620-43e6-9607-c55f5a3ed9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48107a6d-5706-4170-a0c0-b7e6b5d5f315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9fd130-c2b2-40e1-9e67-bca0d74c86c9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184b004c-cefa-40bc-8d62-84ce0a708320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee76d445-e3ab-4964-ade2-433ed8da930b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe496c3-e01a-4e8b-9bed-812126122306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4642c00f-e717-4ab5-b0dc-ed0f2ec45531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc47575a-9bc6-42a6-9be4-7e235c65fe73",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5656bec-adf0-4b94-9304-e12d65a18c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba69d48b-cd5c-4940-9400-2aa0a5dc2f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac457c6-9ed6-463a-b7a8-11c84a56c028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693367cc-83a1-4a4d-b93b-c416c14f6147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12a6f0d-7617-4853-8733-e76d46db56d3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55edfd8-ff3f-453b-941d-9958f2e47237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a78e34d0-a442-4f7e-86e9-f80a7b257e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247a3587-5051-4c17-a6b7-d23929f5c2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e683a435-bf98-4497-a53e-a7c95e294312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2463694-1a78-462a-83e1-a66e3c30ff8f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00719f8b-08be-4309-a180-e7bb1e4b3711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aba6f51-8a28-4c07-b6c7-9e363d62a4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9784d3fa-e5e5-4d4e-97f6-aedcac8f9634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcd7ba4-fbfd-4249-acc6-629aeec748b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcbad3a-c744-46c5-9630-d078a0206900",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865a1c57-1e96-410e-89d5-b15bc207e7d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ddd3d2-709a-4330-84a8-d448c86cc1db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee10a7ff-b762-4963-b220-1b1edc7a2d44",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d723707-21e1-46ea-8f45-7bba6fdac3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f3c996-fa90-4d81-af88-2e5faff140e3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609eaf42-c270-4f2a-bf02-58c2dadd08b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98c4238e-27dc-4a55-ac62-4440a23cbc13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e94699-044d-483c-98a5-3ad4d54eb244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3f2473-0157-4ae3-91a3-285c56ad2f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c1291f-e2da-4acd-9100-b809d01995cc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc56656-2de6-4a56-bdf0-edb883f4a790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fac4f264-a73d-41c9-b998-7386e7e7bb37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3087cf-6988-40e5-92fb-1bb15f1c86fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0025c2b3-5bbc-4368-8061-61b6e2fd3014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2a3ed4-e9ed-4740-b4d1-3832b1f43e74",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24c91f1-0cbe-4896-a80a-4da217f78578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1df63141-726c-4c25-9242-0e41216daefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc136a93-3849-422b-bf2b-57c1fe234f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99b31f5-6e75-4889-8d3c-0e6e0a6254f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07780256-3ec1-41e4-9f81-d6a203e36dd2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab6b048-74c5-4843-9284-c598906bb779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2923fd2-ae6d-4a54-9a6c-2ba2b58d0b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bf1f47-8659-49ea-ac45-fcd262d31aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1cece83-cce6-44f8-8727-b3802041c12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a615cb-c838-4090-acc0-f52038504913",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5d06f5-64b9-4039-b53c-121afc31c5d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0f09cd0-6271-4ef7-b40d-9192fe74546d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8981380a-19ab-4ea7-b2e2-d9a9a2390def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c046840-dc6e-4335-a219-ea2b214084cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babaf1b5-6d97-4379-b7ec-996798287dc4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633cb837-c416-47bf-82c8-4a29290a9bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c391a304-04ef-4fb0-b9c1-ca5a6ebe82fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91fae0e-37f7-4a10-a7a7-abbffb45c4a8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d1f6f4-53a9-45c7-8419-858dcffd1810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53b2417-cda5-4073-b0bd-182581771868",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac86030d-39b8-4bb4-b649-e32d6aa252c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0139357-8d02-4118-b72c-913f51f6bd86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7e60dd-837d-4651-9335-268034d9d98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f912753e-fe44-4fcc-8d00-8edaff91ed70"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12e5eb3b-dc8d-4f4e-a742-ba9c6f093336",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68f5aea6-c2e2-4cf5-87c7-2811974a296b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78634dbc-7d06-4559-a25b-57db385a13e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3844548a-8dcf-485e-959e-5296845e1df0"
                    }
                  }
                ]
              },
              {
                "id": "6ae5496e-ccf7-42ad-aabd-d4e594019dae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df626d04-80ab-45fe-989e-bd0fb6de1715",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5261773a-5e95-444a-a74b-c525084dfb14",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "57d93332-6532-4571-bedf-b34be218f2f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952cebb9-8ced-4cec-9d8f-8f1bfb5da97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79ccce0b-c69c-42f6-8336-8c2a42c3e8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe5eb8c-238f-4c3c-b379-35dc0549a4f4",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0182f6-895b-4c0d-8e0e-7fd1681e539d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "40580ffa-1dfd-4d6f-afcd-5c9cb304aaf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40fbc01-1935-449d-b8ae-5c03c8f7ecdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f4ba381-65f8-4358-bfa9-e25199c27749"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "313ce6f9-0d02-44cd-b468-1bf3fd6a09af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7281f82-d3b5-4232-9933-a2780e5b9d05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6923d17-88c6-48c0-a909-aad2eb1e1c43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdb70fad-38a0-4c04-8b97-50cb233d6528"
                    }
                  }
                ]
              },
              {
                "id": "055ebe55-0cfc-40f1-a0fd-5042257eca5c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "09a77dca-73f2-4c5b-b2b5-b8293188e43a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659c88d6-30de-499a-8bad-70355a37c2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "55405a08-4820-43e2-aac5-1bd098241575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aedf357-0c0b-4702-abe9-0ed68cb22b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4104a6-aec2-4434-9716-0d4ad7766acb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "396ab1ec-b944-4dad-81fd-c9734eeb4091",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2ee66954-d489-4763-874d-099fddb24b24",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50bb72ff-f0a6-414a-9285-9d7e7238fade",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3a91ad1b-420c-43d6-b6b0-532acac868cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81951567-131f-41ca-a0be-579b97cb90f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b1a7d2e-8e8b-484e-8776-27be7d802186"
                    }
                  }
                ]
              },
              {
                "id": "60b97c9a-7710-44ca-ae82-73a342ed5388",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bea348d4-f1a6-4e39-8e3f-f4fff9b20d06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "05fbc835-f913-43b5-a7fe-412d394e3d9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2e8a8f9-d228-4e15-901c-1926445c1726",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "862ac501-a773-4ac0-8b38-bb3fcec4903c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b83a4ac-093f-4ef8-8c51-bcf33993facb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "27fbfdc7-6367-4c06-930f-c1595a143586"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a83e88b-603f-4945-a639-1780fc10788f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78fe21fe-055a-4287-8347-3711ff838611"
            }
          }
        ]
      },
      {
        "id": "69dd45ef-0ea4-4f0f-8344-a54b62fa454d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bdb7cb02-1bac-4da5-952d-685e73d425bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "162aa543-9110-49c9-a3df-dccd6af018fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54ba406a-1ac9-42b7-8b97-6c0117fa856c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bda45db-2266-450b-8230-ab45c0fd5f48",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "04c44c3e-0afa-4700-9b25-6a442fbfdf4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3697265-1b81-424e-bd3b-323dc0b638a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "187f8602-a318-40a0-bb6f-6f494e16d210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607b6c7d-442a-4752-8c72-46915a0214e4",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe9f51c-e0ed-4412-bd06-d86fbbfecd86",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "21777654-6e37-40cf-bc16-03087ca88954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4fa722-db0e-43ff-865c-44dd64729123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cc6c8ba-f70f-4848-839b-e8557cc95b96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5296713e-24a4-4b4c-bfdb-ec2912091c0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a083804-0c5c-4290-be59-2ecbb8891c02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "582f7062-6f3c-4e77-9cdd-1737fe18e83a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "741b0ffb-e71e-42ca-9479-51a879035299"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6eb5ebb9-370f-4727-9b84-663201093dbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fee27a5b-8610-4bf7-bb6d-f2f40390128e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ebd87cad-e064-456c-ac8e-d23db77b87c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "804e34a4-d79b-481f-84f3-eb4b0d9d0351"
            }
          }
        ]
      },
      {
        "id": "6d039a26-38e4-4bad-906d-70071a416872",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "18fe2bb2-11c5-4cb1-86d9-e98c5a41ddda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb3c4fde-a10a-46f2-a2a3-5a3da1d65243",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a0e9e85-930b-443f-9e8a-93e42d6429b1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6854e222-9866-47ca-a6e8-6e17527ec8aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3e8d9b8-1002-4e93-8d34-55f81d3f4f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62be1a85-50cb-403e-809b-2efe2fb4c399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8b6aa1d-7237-447a-8110-6a023c846578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbab9b9-dc70-455b-9998-bb88f2802ff0",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b061e679-0963-4958-9e3d-41365571b550",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "694f0bf2-1a47-4be4-8bd0-b6ab74dfcf87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf6ad89-e8e0-4d7e-a987-fef5ff080486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f761c7f-c28c-4cc0-af09-d425de2b1094"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5c689b1-5b55-46e8-b33b-670ea6ae5f97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a7e4320-a6c7-4111-85b6-e275a96498d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94d46320-7390-4873-82d2-92f128d67d91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf5501f2-3019-4760-8541-1924309414d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ae8a35c-61ce-4eec-9310-191909b408a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa984711-ede6-4678-979c-eb7817259eb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbf7b935-6dac-4791-87d3-ceb5706c9f5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c0079c2-6d6b-4a1c-9b28-f910e33f3aea"
            }
          }
        ]
      },
      {
        "id": "5c28d505-625b-4dd3-87a1-a75fca61dc43",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "59e916e6-7f0e-4aad-906d-e3bed5b515eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "794434ec-9ff7-4e04-b29b-fe41b0a4a5b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffa34539-6304-4482-900e-2641f80d6784",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd0ab6c-8068-4f99-b7d1-7357706dfb6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1eb20fc-9329-4749-9d76-d3a93ab91611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e79e59-21f2-4b9f-a664-a3186f90ab1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eea933da-f9c7-4221-bf5f-0c6961b0ed4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967de683-2d27-4174-9a27-5262f06f2676",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7089cc-50b5-4f75-8f12-20ddc3f637da",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf9d452-d806-401d-90cf-0ed4197bd6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60c0998-a605-4cd4-88de-3678cbc8b3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23dd62eb-a926-4c0a-9406-7869d5576ad7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cfcee30-54a8-4f3b-ac1d-98423defec21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d56863dc-eb54-4002-9bdd-fbeda0d776a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16ea4590-d0b6-40e8-b8c4-7812b27e5c3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f16fb9f8-6470-4aba-b0a3-3c5295ddb60a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b496bf28-bed8-40ba-bc17-ff9696b10c5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7c2641ac-a010-4d6e-9689-ed4116d8b40b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f9c89e1-95be-48a8-bf9b-3e85f78a6060",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acb64e31-e8e9-46af-ba5b-fda492639a39"
            }
          }
        ]
      },
      {
        "id": "fd0bdf67-7a71-43c5-990b-877921312b9f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbe8d203-b6b4-4a79-a0b3-e8b852d3e747",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a79e86e2-0b34-4f84-8b70-7df32e055b9e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "486a8bdd-5b4e-4274-aef1-2df51abf91db",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93a44ea8-c577-450c-839d-a576a519e129",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b695cca-14c3-48e0-a7ea-d23faf171cae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.67181467181464,
      "responseMin": 7,
      "responseMax": 289,
      "responseSd": 27.33540452823795,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677977364286,
      "completed": 1677977394644
    },
    "executions": [
      {
        "id": "30ccdd05-835e-48fc-874b-3baa8af4dfcf",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2f34c25a-1f87-4158-863d-808d8d3b1751",
          "httpRequestId": "7df98fb3-dd01-427a-a0eb-71ecb5d52661"
        },
        "item": {
          "id": "30ccdd05-835e-48fc-874b-3baa8af4dfcf",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "58f63ebe-694f-4009-8aaf-b8f2bfd83d95",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "619f2457-d29a-4070-a34d-789ddf78edae",
        "cursor": {
          "ref": "40ee8a08-c829-4923-809b-05f10c048133",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "85447047-4204-4a16-bf66-f05cdedc2be9"
        },
        "item": {
          "id": "619f2457-d29a-4070-a34d-789ddf78edae",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e6013ec3-221e-47f7-8f28-aec5bfe48294",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "03c88d7e-cdda-4593-bd51-07543506f636",
        "cursor": {
          "ref": "7cbb1793-d420-4d9c-a5ab-1b4139168b60",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6271d338-b372-457a-ac56-e43d4d67d837"
        },
        "item": {
          "id": "03c88d7e-cdda-4593-bd51-07543506f636",
          "name": "did_json"
        },
        "response": {
          "id": "b17a29ed-ba72-4854-8a5b-fc19f7f7385d",
          "status": "OK",
          "code": 200,
          "responseTime": 228,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f449a7fe-42ef-4c4f-b6a3-b0b114798922",
        "cursor": {
          "ref": "b6369ca2-4d9e-4764-99c7-bcb38acedd3d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "71c45e2f-161d-495a-8598-165ebf023693"
        },
        "item": {
          "id": "f449a7fe-42ef-4c4f-b6a3-b0b114798922",
          "name": "did:invalid"
        },
        "response": {
          "id": "cbaefb7c-8092-498d-98bc-551108455fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f449a7fe-42ef-4c4f-b6a3-b0b114798922",
        "cursor": {
          "ref": "b6369ca2-4d9e-4764-99c7-bcb38acedd3d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "71c45e2f-161d-495a-8598-165ebf023693"
        },
        "item": {
          "id": "f449a7fe-42ef-4c4f-b6a3-b0b114798922",
          "name": "did:invalid"
        },
        "response": {
          "id": "cbaefb7c-8092-498d-98bc-551108455fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effe0ce9-7933-4a4d-b94c-9d35e8884a13",
        "cursor": {
          "ref": "d495b8cf-2fd8-404b-871e-faaa676318dc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b0f3d5aa-aa90-4bca-93f1-348013f51cb3"
        },
        "item": {
          "id": "effe0ce9-7933-4a4d-b94c-9d35e8884a13",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7789c1d6-8d67-4059-9234-915cfec31df8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 169,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a28292b-4cfe-42ce-bc1a-9cfc57437b2a",
        "cursor": {
          "ref": "219c45db-cd60-4776-806b-f64610d638f8",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0b7d05d9-16d4-495a-a46c-e386b04f1e2f"
        },
        "item": {
          "id": "2a28292b-4cfe-42ce-bc1a-9cfc57437b2a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d75f8d74-fb67-47ce-a73d-3369763aa075",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f7c5e9-c7f6-4f21-b755-7db5b9b08686",
        "cursor": {
          "ref": "9ddd90e5-7782-4316-b2f2-e900db34adbc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "15442eda-ff87-4a05-ab60-33f76c50a0e6"
        },
        "item": {
          "id": "c4f7c5e9-c7f6-4f21-b755-7db5b9b08686",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "45fefbe6-41a3-4c19-8218-ea4eedb29cb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de93d2d4-3682-4320-8293-8819344ab488",
        "cursor": {
          "ref": "b411e4bc-61fc-4029-a309-7b91963dea6a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9b96ef2a-1070-4aa0-81da-3e55e4df3795"
        },
        "item": {
          "id": "de93d2d4-3682-4320-8293-8819344ab488",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e95543bb-34e2-4463-b6f6-20f14f273bd7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de93d2d4-3682-4320-8293-8819344ab488",
        "cursor": {
          "ref": "b411e4bc-61fc-4029-a309-7b91963dea6a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9b96ef2a-1070-4aa0-81da-3e55e4df3795"
        },
        "item": {
          "id": "de93d2d4-3682-4320-8293-8819344ab488",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e95543bb-34e2-4463-b6f6-20f14f273bd7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca821f0-077b-4ad4-9b00-c5fc39309fd3",
        "cursor": {
          "ref": "3d9e9cb4-f02d-4ba8-b7b2-547110a1e9f1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6f853a6a-d463-46e4-b899-f999c682344d"
        },
        "item": {
          "id": "8ca821f0-077b-4ad4-9b00-c5fc39309fd3",
          "name": "identifiers"
        },
        "response": {
          "id": "2a6a1e1e-3fd2-4303-97f7-adb37c1efd05",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f036b4a5-faef-4770-9de4-2886e816e4bd",
        "cursor": {
          "ref": "fbd3608d-77f5-415e-80d9-ae9b3ca52d2f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "899bf95d-572b-4bc8-90bc-b2516daa562b"
        },
        "item": {
          "id": "f036b4a5-faef-4770-9de4-2886e816e4bd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "57b49b83-0c7d-439e-a8c8-a94b93d88209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f036b4a5-faef-4770-9de4-2886e816e4bd",
        "cursor": {
          "ref": "fbd3608d-77f5-415e-80d9-ae9b3ca52d2f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "899bf95d-572b-4bc8-90bc-b2516daa562b"
        },
        "item": {
          "id": "f036b4a5-faef-4770-9de4-2886e816e4bd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "57b49b83-0c7d-439e-a8c8-a94b93d88209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea5c1ef-b815-4a90-8e7e-db019ee6012c",
        "cursor": {
          "ref": "7bef5d1a-d1a0-4a28-8ade-1a82209f0a06",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "96ca689c-c0b2-43c4-8d1a-8087973a0d08"
        },
        "item": {
          "id": "5ea5c1ef-b815-4a90-8e7e-db019ee6012c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e042d28b-7d4b-4b4e-81c0-ccd38dd7837e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6fd4ef-c0ee-4868-96cb-edbbea9c1878",
        "cursor": {
          "ref": "878fc192-ecfb-4f08-ac0d-06a6f2ee7c75",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "34765a8c-ca84-445a-a3e1-abd2850d713d"
        },
        "item": {
          "id": "ea6fd4ef-c0ee-4868-96cb-edbbea9c1878",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ea4a1ea6-ffa7-4eac-a847-46e9f8d9413f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becdb0da-bdde-4e91-8d1e-4dd4028fff08",
        "cursor": {
          "ref": "0f9083a7-2700-40a4-9dec-5387b7483538",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4679abcd-4ba2-4f85-8be3-53b75a68a588"
        },
        "item": {
          "id": "becdb0da-bdde-4e91-8d1e-4dd4028fff08",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f6e96d51-fb9d-4ecc-9536-100ed6d1833d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a7ffc9-fffe-4d4a-81d6-741af63591f6",
        "cursor": {
          "ref": "e004cb08-3857-4dcc-bc66-7662018442ab",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b32cf9f1-69ee-4d43-90de-6d62b3c11347"
        },
        "item": {
          "id": "37a7ffc9-fffe-4d4a-81d6-741af63591f6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7bc44f3b-ee4b-4945-b11c-6ff174036c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba28d73-d2f1-47b7-a9dd-56d13ec175ae",
        "cursor": {
          "ref": "8f367c6f-9fa0-4957-846c-acdabd7388be",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "73c0b67e-7ab4-4493-8b02-89c1c5062efc"
        },
        "item": {
          "id": "9ba28d73-d2f1-47b7-a9dd-56d13ec175ae",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "58568b93-87a1-4643-979f-d98244b27f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6b3065-bac6-4e38-9a62-f49c5dc9b76e",
        "cursor": {
          "ref": "886e0bf5-a233-4d41-b71a-1062c66f69fc",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6dfb35b3-07d8-476e-b819-317d32c72a0c"
        },
        "item": {
          "id": "8f6b3065-bac6-4e38-9a62-f49c5dc9b76e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6e4b087d-3798-4fed-bf24-4484d1013da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cfae1e-d8ae-4344-afe7-bb7ac0ae7544",
        "cursor": {
          "ref": "ae22f247-b26d-4f0c-a751-e5d9d15346da",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "db505fb5-f65a-436d-983d-ed516dc41a0b"
        },
        "item": {
          "id": "32cfae1e-d8ae-4344-afe7-bb7ac0ae7544",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "75c354cd-d8e7-448f-8121-3fe5872f0b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ae94e3-ec08-4de4-9b59-3c063027b979",
        "cursor": {
          "ref": "81a8d2c1-897b-472a-9a86-d56d57bd9ed5",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "128cfc88-d698-45d1-93e8-7be2d24caf94"
        },
        "item": {
          "id": "58ae94e3-ec08-4de4-9b59-3c063027b979",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c5bc4a7d-f29d-4b4f-8786-b00053b0b224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07677554-6e8c-4772-8b5f-3152fff466dc",
        "cursor": {
          "ref": "85638f25-9f6a-4e2e-8917-7456e3e0f052",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "eef860c9-7db9-49b8-b2e1-dbeb6a9d544c"
        },
        "item": {
          "id": "07677554-6e8c-4772-8b5f-3152fff466dc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "903bd6c5-91c5-4005-9c92-afc9fc368137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e1704e-3af4-4e5d-b726-f2a8412c07bb",
        "cursor": {
          "ref": "281c25ff-61f9-43e7-a252-210a31c2c99f",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "95fbc938-5a43-4a0b-aef0-9e5c9e2e15e1"
        },
        "item": {
          "id": "f8e1704e-3af4-4e5d-b726-f2a8412c07bb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "90b28ef9-6388-4c04-a8c2-8d923824abaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb00426c-3ad3-4b8e-b8d2-2580061b2559",
        "cursor": {
          "ref": "da50f238-9987-4dda-a406-ef7f4ea5d43b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "13721b4a-22a2-4bbe-9e2e-cebd975e0ba2"
        },
        "item": {
          "id": "fb00426c-3ad3-4b8e-b8d2-2580061b2559",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6783f6cf-ce87-4990-a699-c58b74f7dad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952f0548-852b-43fe-a61b-5ec90100875b",
        "cursor": {
          "ref": "3effe2c2-1fdc-4c48-a586-473e0724e500",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9d4b3165-fd78-4900-8f34-c60b2e8b0e66"
        },
        "item": {
          "id": "952f0548-852b-43fe-a61b-5ec90100875b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1a35a5db-0fdc-4456-a38f-9d520396ce73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e32b1a8-5ee4-4b86-8ae9-b86fafc567ec",
        "cursor": {
          "ref": "ea95cfd4-f3a7-4423-812e-4b1749a95842",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "61428232-476b-4dda-a8c4-ca286a2ebec7"
        },
        "item": {
          "id": "1e32b1a8-5ee4-4b86-8ae9-b86fafc567ec",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "acd25670-5033-42c1-918d-8e1c28e1fd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bed1228-6165-4ab8-a20e-37efd0b77dd7",
        "cursor": {
          "ref": "9f06e357-525b-475f-a2f5-6e9472740b39",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "94283679-b1be-4604-a35c-889efc3b7b9d"
        },
        "item": {
          "id": "0bed1228-6165-4ab8-a20e-37efd0b77dd7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b2f419cf-4d88-4f24-8c21-8d2b09d3e677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30307f1-a856-4622-b561-36a56239d672",
        "cursor": {
          "ref": "fc697da8-ce80-4bad-af32-582891faadc2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0d6d499f-06ed-4879-bdca-166a99e56abe"
        },
        "item": {
          "id": "a30307f1-a856-4622-b561-36a56239d672",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c73e31dc-ec49-41c4-99c3-449f2cdade16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e6b757-f077-4f08-93e3-b7e60f95cfa7",
        "cursor": {
          "ref": "d27ffee3-85a5-468e-a8d0-47cb84a92f41",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c9c355b7-6985-4e7c-b4e1-8fb5d5cebc31"
        },
        "item": {
          "id": "17e6b757-f077-4f08-93e3-b7e60f95cfa7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4958c648-63d4-427b-ac72-453904f74ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55581f36-ebb5-42ea-aa9f-f015fdb97ba3",
        "cursor": {
          "ref": "e11cadbb-dce7-4c11-8a03-2806cba669f1",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ac538a9d-9f8e-4c7b-b6a5-affd3a1ba436"
        },
        "item": {
          "id": "55581f36-ebb5-42ea-aa9f-f015fdb97ba3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d7e532ff-d8b6-4c9d-94d1-7a944167c8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d07e4d6-5a8a-4346-80b7-94b8049264e5",
        "cursor": {
          "ref": "4518650e-6041-4acb-b8f8-9bde2a7c505b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5e44055d-8edb-49df-92a1-de7b1dd48858"
        },
        "item": {
          "id": "6d07e4d6-5a8a-4346-80b7-94b8049264e5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1ae816d2-5527-4097-b99c-b3a8fe53c6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fc776d-02a1-480f-b19a-f3bd34b3aa55",
        "cursor": {
          "ref": "550e542a-5c9b-4db7-8aa5-959a507a9339",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b8583412-6877-462f-9285-dde3f0231f35"
        },
        "item": {
          "id": "66fc776d-02a1-480f-b19a-f3bd34b3aa55",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ab1ab871-a8b2-4310-9923-aad1a549d74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69b25ec-025c-4027-a3bf-e8e06f4a2176",
        "cursor": {
          "ref": "676ba3fc-8b81-4532-abdd-69c5a9129852",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e88b99f7-9678-4638-b6a5-2a19cba3408f"
        },
        "item": {
          "id": "f69b25ec-025c-4027-a3bf-e8e06f4a2176",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ac3789dd-de81-43eb-a88c-2ad6014f2a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e45523-1cd7-4315-860d-65b81c6a3c15",
        "cursor": {
          "ref": "ff91a7d4-e0d5-4cea-8fd2-9bf7b26358cf",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cd519f95-305c-4ef0-bac2-bd238399d6b1"
        },
        "item": {
          "id": "71e45523-1cd7-4315-860d-65b81c6a3c15",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bdd20f38-3bca-4d2a-9bd9-b1afb7f4cef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646a9dc9-c734-4ed9-918e-69430d6bb4fe",
        "cursor": {
          "ref": "026f7d6a-8295-4e8e-aea7-39c12abd8c29",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7c2f913d-e164-4d2a-91b4-2c0355ea9c90"
        },
        "item": {
          "id": "646a9dc9-c734-4ed9-918e-69430d6bb4fe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8ab623eb-2bd7-4a22-b16a-9820cf12b1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bfd4a2-9b32-405b-b9db-fa2b4ccb20dd",
        "cursor": {
          "ref": "45731769-8286-4c72-9132-a7d0755f2a0b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "da89aaa1-4e6e-4462-84f9-4adce66f55af"
        },
        "item": {
          "id": "05bfd4a2-9b32-405b-b9db-fa2b4ccb20dd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d24502dc-c4a3-4219-b3df-7f7a65a18632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4351afd-e758-4991-87ef-117c56c1e061",
        "cursor": {
          "ref": "c1c9398a-f382-4d3a-b067-8a3ef88124c2",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e23d550a-b884-4599-973d-d4dfafccfead"
        },
        "item": {
          "id": "b4351afd-e758-4991-87ef-117c56c1e061",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ad5d3acd-f767-41d6-9a50-2b90fc1b798e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80a0e12-a37d-4bdd-a991-754c037a5942",
        "cursor": {
          "ref": "5b25d081-b951-4e58-bc4a-cf21f50eb685",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "37aca51b-c7e0-4e33-801d-826809efd9c1"
        },
        "item": {
          "id": "c80a0e12-a37d-4bdd-a991-754c037a5942",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9024f557-d43c-4fe0-ba73-1bc83b30ffd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f16503f-270c-44a6-a8da-4564340cdc84",
        "cursor": {
          "ref": "33bf4648-9b9f-40f6-9840-726929d017a0",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e354ddb6-59d8-4d2c-a8ec-476aac5f2adf"
        },
        "item": {
          "id": "6f16503f-270c-44a6-a8da-4564340cdc84",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "edf05b5a-0664-45ff-b250-6e9d69ffe863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b51c7f4-6943-4029-910b-097bad2bd116",
        "cursor": {
          "ref": "25b6b69d-691a-4f9e-9922-c76b6650b600",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7ff78306-f3bf-46b3-9cd0-8445786eecf6"
        },
        "item": {
          "id": "7b51c7f4-6943-4029-910b-097bad2bd116",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "63ae56aa-7d81-4ea9-a931-7c789e0f3a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ed1862-7566-42a5-8e3d-d0492997060b",
        "cursor": {
          "ref": "e5906704-d9a3-48d7-ac3b-b84864e1576b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "89ba105b-0662-40fd-a9c0-9a3ef2a946bd"
        },
        "item": {
          "id": "39ed1862-7566-42a5-8e3d-d0492997060b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "65882e6e-3616-498d-8359-77ff06796359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbb14ff-ab2d-4ff5-b2e3-10427fbfac5c",
        "cursor": {
          "ref": "1153aa6c-5e3c-428a-bbd0-7c03a9b11fe5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ad2c58d6-a2cd-4bbc-a246-4ef8c613713e"
        },
        "item": {
          "id": "7fbb14ff-ab2d-4ff5-b2e3-10427fbfac5c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "afc741b5-7834-4582-9bcd-26487eba1793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd29229b-9e56-49c0-805b-99c6ea9fcd47",
        "cursor": {
          "ref": "73f08afa-45e0-4840-9901-672cf2c1f9eb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ff8b7734-ce17-403a-be9e-e36808f13364"
        },
        "item": {
          "id": "fd29229b-9e56-49c0-805b-99c6ea9fcd47",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "87c2f117-95fc-49bb-91fc-e699d53dd1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4686afee-8a6f-4885-916e-2d11fbe00ae0",
        "cursor": {
          "ref": "153cb3d4-0354-400e-ade8-4d750fa41de2",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c8a05e6b-b636-43f5-91e0-258be9d52b66"
        },
        "item": {
          "id": "4686afee-8a6f-4885-916e-2d11fbe00ae0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4100a178-1db1-41a3-903d-f7edf048f0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3ec207-dad3-419a-b792-8de7d4190092",
        "cursor": {
          "ref": "6ac78dd2-9b3a-4aca-b74c-ee60d020e0e3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "28662048-e56d-4ba0-af6a-ac8c51b7bbfa"
        },
        "item": {
          "id": "af3ec207-dad3-419a-b792-8de7d4190092",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f7d8d3ee-accb-4af5-aeb5-88041331f5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c38e33-1104-41f5-bfc1-cf828276d62a",
        "cursor": {
          "ref": "8232c702-eda2-43d3-90da-5be435c27bde",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7303650d-30ad-4512-850c-bee2676a5c6a"
        },
        "item": {
          "id": "46c38e33-1104-41f5-bfc1-cf828276d62a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "69d07a5b-2388-41af-83e3-f505419d2d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c860e218-ad38-44f8-9cef-5647da456f5d",
        "cursor": {
          "ref": "a56f2c16-dbc2-4ca8-a4d1-d59d9537565e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "83164df2-a8b5-4072-b804-35b0ed6bd417"
        },
        "item": {
          "id": "c860e218-ad38-44f8-9cef-5647da456f5d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "77feb1bb-80b0-4394-8f11-37e8f650c973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738f5777-cea0-4f93-8bc8-b50f1a77fd22",
        "cursor": {
          "ref": "6b46442b-74da-4347-a6b4-953763665b8b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0b6f592c-3158-4404-a114-924e0e9f9c5d"
        },
        "item": {
          "id": "738f5777-cea0-4f93-8bc8-b50f1a77fd22",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ecec181c-6e75-47cc-b7bc-0b5f2df88bcf",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4dfe7af-c5a6-4a54-bd7e-e074bc3d358d",
        "cursor": {
          "ref": "e49299b7-3028-4984-82aa-d880eb0e11d0",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "73f78f81-0b4b-42e2-b65a-02948529616d"
        },
        "item": {
          "id": "d4dfe7af-c5a6-4a54-bd7e-e074bc3d358d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f7c90f97-2677-4d5c-8ae2-4c1b55eecbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb7610b-fdf8-4c91-8438-f4af4f160298",
        "cursor": {
          "ref": "e61a3c80-9e2a-4c28-b4ab-57ddbd83ba99",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bbae815e-4739-48b5-aa7a-ddd9c5c2f863"
        },
        "item": {
          "id": "7eb7610b-fdf8-4c91-8438-f4af4f160298",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "eeb5c03d-7c4a-4c69-8c61-eb45ba850068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633b4841-487e-4c76-8da8-6c2dee6fe7a0",
        "cursor": {
          "ref": "d6a59c8f-9cbc-48b4-a379-8c2016c12dab",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6e522a9c-87d5-4771-a0c4-88fd072d2bed"
        },
        "item": {
          "id": "633b4841-487e-4c76-8da8-6c2dee6fe7a0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "de41aee2-725c-4b03-b109-d403d0f54ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca4b4b4-91fe-4ec5-8c71-6aac64dee5cb",
        "cursor": {
          "ref": "43b110e9-6649-4d53-a90f-f944368f0430",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1816e345-880b-4f3e-bda8-1545e142001f"
        },
        "item": {
          "id": "cca4b4b4-91fe-4ec5-8c71-6aac64dee5cb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1a8b25c3-d296-4931-b38e-d1044216fd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48725642-bd48-4d2c-857c-10b886348318",
        "cursor": {
          "ref": "37169811-c032-42ab-8c7b-5c5debc38302",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "038d17c0-c9e4-42d1-ba8a-7006a9bf5dcf"
        },
        "item": {
          "id": "48725642-bd48-4d2c-857c-10b886348318",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "00e9c970-5e81-4aad-a6cc-e38ba2734bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67294d94-c66f-407d-bce1-8de6788c3958",
        "cursor": {
          "ref": "5cc05ab2-ec83-4704-9c85-fd078ad81c9c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6d0709a0-6007-4142-a86a-e2a36c0d4e09"
        },
        "item": {
          "id": "67294d94-c66f-407d-bce1-8de6788c3958",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b17b2daf-d120-4ade-bd74-f5c9a36137f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa97779e-0df1-4ae5-a946-3eeb1f08b777",
        "cursor": {
          "ref": "89711573-ca68-4e8a-9b11-a5d58d8948ec",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f642fad6-753c-4c55-9c63-dc51d40b8db7"
        },
        "item": {
          "id": "aa97779e-0df1-4ae5-a946-3eeb1f08b777",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d09c6998-5812-4098-a006-35c5b3974e05",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c225c9-1c52-4560-995a-74b9b9a16c17",
        "cursor": {
          "ref": "1f8352e2-dc1b-47ee-9927-fd98eb240f86",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1ec5f148-f383-4038-89e3-3e04f83bdcd2"
        },
        "item": {
          "id": "97c225c9-1c52-4560-995a-74b9b9a16c17",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d8a65921-4480-4388-9cc2-a8c17e9e33b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164f0c17-ffc6-4098-a0cf-d16595e36cc1",
        "cursor": {
          "ref": "9fcaa86b-a191-49cf-a0b8-908a9ddd9b7a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "58f808aa-8641-4d23-a844-933c61ee54f4"
        },
        "item": {
          "id": "164f0c17-ffc6-4098-a0cf-d16595e36cc1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5913fff7-b9ad-40c9-b5aa-8d64a3789054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e138059-fcae-49a1-84c6-ffae20143e72",
        "cursor": {
          "ref": "d060c9e9-cf0a-4cf0-af1d-a8e7a37531d7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "032b22a2-8275-449a-a3e6-ea71419ef9dc"
        },
        "item": {
          "id": "2e138059-fcae-49a1-84c6-ffae20143e72",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7c931a89-27e2-4da8-a38c-08042061fc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76af3951-c3c7-4778-a3f9-ebfbb81303fe",
        "cursor": {
          "ref": "ace5bf58-d80e-466f-b750-e2e8ea2146a8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9c5cbd30-a7e9-42d7-9ffd-6671f6af37b9"
        },
        "item": {
          "id": "76af3951-c3c7-4778-a3f9-ebfbb81303fe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "68dde217-cf3e-4078-ba45-4a6008b5d6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e8b115-fc8a-4d1b-aac7-9c685aa2642b",
        "cursor": {
          "ref": "9ffed791-fef2-44f8-9a2f-0c8c116ce50a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "91da0a27-09de-4a2f-b4ed-cbebb9c9a205"
        },
        "item": {
          "id": "b2e8b115-fc8a-4d1b-aac7-9c685aa2642b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "388cd0eb-4c30-46c2-86aa-03ad4cd7a92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc12b0f2-5c6e-4590-947b-f0a25a4c4dab",
        "cursor": {
          "ref": "106a91e4-a1ae-4499-9781-559bd6bf945a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0d70775e-1990-430d-96ed-575d634f4602"
        },
        "item": {
          "id": "fc12b0f2-5c6e-4590-947b-f0a25a4c4dab",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d6c4f975-7d82-4d1e-89b1-fad4aa58ec7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1725e236-59ed-437b-8075-1611d77e7907",
        "cursor": {
          "ref": "832865b1-9613-4195-bfb8-542c157d0c49",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ce9f467c-1cb1-47aa-9165-e82275363dae"
        },
        "item": {
          "id": "1725e236-59ed-437b-8075-1611d77e7907",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4d7b1d55-c6af-4833-b625-632656aaed42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7060cb9-ae72-4a6e-b09c-b43001a39a25",
        "cursor": {
          "ref": "76c1369a-4041-4780-a773-6ce100ca4e6a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3671bad1-c696-4920-b219-34c60395a862"
        },
        "item": {
          "id": "c7060cb9-ae72-4a6e-b09c-b43001a39a25",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "43f0ac7e-b0e6-4198-8017-d1f4ca5abe2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86161f13-377f-4617-8174-ba874a5a912c",
        "cursor": {
          "ref": "6047fe94-3d23-426f-86f0-001552c22e52",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ffa0f6b8-29cb-4f86-97af-43c65148a4bb"
        },
        "item": {
          "id": "86161f13-377f-4617-8174-ba874a5a912c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "544eb35e-80ab-4edb-b72b-6cc15ddb1478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1f92da-49f8-45d1-86dc-40191c41a173",
        "cursor": {
          "ref": "35e81cd3-1a46-40da-b23e-22b066eb34ba",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d11e10a3-1b3e-447f-9cde-4be8cef6364a"
        },
        "item": {
          "id": "ab1f92da-49f8-45d1-86dc-40191c41a173",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9212a3b2-bf02-4842-b598-0ee83f4d1476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c5c420-3f87-48d8-b857-b111062c5251",
        "cursor": {
          "ref": "d9a74795-083e-4f4d-a009-d4dd68bf993b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b1931ee8-9222-45e8-9f64-78c26356dab1"
        },
        "item": {
          "id": "40c5c420-3f87-48d8-b857-b111062c5251",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8536c20b-cc12-451b-8b92-bc46f4f30505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebe48d9-0a12-42b6-9018-0cbcf32614e4",
        "cursor": {
          "ref": "f3d2f7a1-b74d-4977-ace0-f1c9def7fdcd",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a489714b-b6dc-4df2-8a8a-ae17cd0c03cc"
        },
        "item": {
          "id": "6ebe48d9-0a12-42b6-9018-0cbcf32614e4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c958c9bd-cc5c-484d-82ec-b3d787938080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf51e06-2e62-4a49-97c7-aaf0d253abc3",
        "cursor": {
          "ref": "f44a37b6-d097-4a9c-a69c-fac03d10d6e9",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "12628470-a719-47dc-8142-6fd12aca9e5b"
        },
        "item": {
          "id": "3cf51e06-2e62-4a49-97c7-aaf0d253abc3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e3cb3579-7751-4f87-b497-049a0fc8e02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7fdef2-453d-4705-b281-cf0f3b419f3e",
        "cursor": {
          "ref": "2aa219ec-bb65-41e0-847c-4c5aa1a1e1e1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "88a15ded-261a-4e3b-8d31-1700edc5b1d0"
        },
        "item": {
          "id": "3e7fdef2-453d-4705-b281-cf0f3b419f3e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e0102e39-bb6e-4f18-8d79-c938214e7d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dab16d-f4fd-4a5c-b9e2-0129f5b1e2e7",
        "cursor": {
          "ref": "cfac386b-1705-4020-b7fa-041fe77c837b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1ad3a1e3-0b49-4df0-95dc-2211071ebe1c"
        },
        "item": {
          "id": "a4dab16d-f4fd-4a5c-b9e2-0129f5b1e2e7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0ef5a4f7-2164-47c0-85c1-0d1d9fc7c9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bb26a9-cef2-410d-b53b-ded79f8a8961",
        "cursor": {
          "ref": "7baa53b9-576a-4700-904e-b7630088b7f3",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "16b1a3c9-b7ca-49af-b44c-44a95dfcc6b3"
        },
        "item": {
          "id": "b2bb26a9-cef2-410d-b53b-ded79f8a8961",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "18e5d13c-42bd-4962-91d4-c677bc81377e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da0d9f9-6b83-457d-a402-05a677153ffc",
        "cursor": {
          "ref": "7b6c39cf-e42a-4a71-b129-8db045cbdd65",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "06af85af-56dd-4914-b491-c294a986f062"
        },
        "item": {
          "id": "2da0d9f9-6b83-457d-a402-05a677153ffc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "34d63586-931a-4db6-be57-dafb13b228e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20c0d0b-e6d8-449d-be66-8a24a0ab12b2",
        "cursor": {
          "ref": "ac1886d3-e059-4e8f-909f-025ae249156d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "de287c4e-e19f-46e7-8729-a04ddc576f00"
        },
        "item": {
          "id": "e20c0d0b-e6d8-449d-be66-8a24a0ab12b2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2cd63ed4-8255-4c9e-b622-d9c21660e9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a46d70-fb0c-4e8d-a2ec-58ccac310129",
        "cursor": {
          "ref": "7bc61ab8-d5ab-420a-b3ea-0fb4079ddc48",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e1d2ec3b-8647-4f88-b196-4fed4b622dc6"
        },
        "item": {
          "id": "83a46d70-fb0c-4e8d-a2ec-58ccac310129",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "eb749c77-4662-4f9f-99ca-27dd6ad28236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12600856-15a0-44c9-870a-64ebce370ddb",
        "cursor": {
          "ref": "a5b85f23-27a7-452c-8644-8fa82fc4fe1b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "590351bb-aa49-466c-810d-cff4bd150efe"
        },
        "item": {
          "id": "12600856-15a0-44c9-870a-64ebce370ddb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5106a600-6f31-4c0f-9681-665bb018259c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6618e07a-70a8-4746-bc8e-7746fb26b84a",
        "cursor": {
          "ref": "febb44f6-760b-45d1-b36b-07c5e198f011",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3e8a098f-490d-4f18-af1d-c88608faf303"
        },
        "item": {
          "id": "6618e07a-70a8-4746-bc8e-7746fb26b84a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "81c8e869-531c-40bc-a067-9637805e6255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8c5037-9f66-4dcc-84f4-86f1c8269381",
        "cursor": {
          "ref": "118d82e7-d54f-419c-91bd-d33fe1f45ab4",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1020b014-bd5d-48a6-bfd6-7b776589b00c"
        },
        "item": {
          "id": "ad8c5037-9f66-4dcc-84f4-86f1c8269381",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "75c6578f-fb6c-4fc7-8308-eb64b9e19f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c523d9-7024-45e7-a69b-690df17c97ad",
        "cursor": {
          "ref": "f5965985-1dfb-414b-b7c3-f90cee92b382",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a11853fe-4fce-4789-8d52-e2fe3469c98e"
        },
        "item": {
          "id": "59c523d9-7024-45e7-a69b-690df17c97ad",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "52f5bd3f-ed6a-41c2-b69a-ed88ae1eb9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984075d7-58cf-40d5-ad83-078e3d8bdc67",
        "cursor": {
          "ref": "1a28c5e2-b519-4f30-b055-bf9fa6781a7f",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e4765e63-e10f-4a6c-a630-3be1f2422332"
        },
        "item": {
          "id": "984075d7-58cf-40d5-ad83-078e3d8bdc67",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "25e5016a-9933-42cd-9005-0ec8369253b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0a1efc-b1db-451e-b7ec-f457510038bf",
        "cursor": {
          "ref": "e0e31a1e-eb67-4afe-aa4f-8fdfedfc1a3e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "99711c1e-75d6-4f5d-931b-a477f950dd52"
        },
        "item": {
          "id": "9a0a1efc-b1db-451e-b7ec-f457510038bf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "36609aac-9562-4682-b7f6-b9e6040b24d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2e0a49-6d76-4f9d-a4da-32d72e65f4ef",
        "cursor": {
          "ref": "ff3ac52a-d1e6-42d7-a9b7-9e873825b62e",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7b7c733d-10dc-48fd-9204-69bde159d13c"
        },
        "item": {
          "id": "4f2e0a49-6d76-4f9d-a4da-32d72e65f4ef",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "866c2b58-59b0-4ec0-9e63-bc525a83f228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e633d5-6f76-4b76-b5f4-29559f293394",
        "cursor": {
          "ref": "d0cfd4a4-054c-4a7a-9115-330afb8fec2a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bde7c061-3a13-4eb2-93b0-2e4706c9ceeb"
        },
        "item": {
          "id": "c6e633d5-6f76-4b76-b5f4-29559f293394",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b26bbc60-69ad-4354-a103-723fcff4f29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c383f58-cb52-4835-8a53-0f206b14263c",
        "cursor": {
          "ref": "c43630aa-4a6e-4308-921e-e17485d12ac6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8170b683-010f-4074-9c8e-511d71fb48a7"
        },
        "item": {
          "id": "2c383f58-cb52-4835-8a53-0f206b14263c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8f70535e-9ad8-44a5-9ea0-678a8a801fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70aa0b8d-c9f9-4524-8b4c-9ed05b5ee05e",
        "cursor": {
          "ref": "b6daf390-88a8-4bb4-b2c8-12733156c5ff",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7030bc93-1a7c-48f2-82aa-cdd8d15ae76b"
        },
        "item": {
          "id": "70aa0b8d-c9f9-4524-8b4c-9ed05b5ee05e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a22bdde2-4155-49eb-8460-10e672d6c3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62726e48-784c-4f83-8837-69b2e4941c6d",
        "cursor": {
          "ref": "25749ff1-7abf-4d40-94db-54c1809ba77e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "79e92b99-92cb-45f9-a15b-f0f016ec4501"
        },
        "item": {
          "id": "62726e48-784c-4f83-8837-69b2e4941c6d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "431ae69d-2cb0-44d6-9877-2a930a443c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395c8c7e-b1bc-4de6-b536-258c41a055d1",
        "cursor": {
          "ref": "c6462fe9-0054-4b01-9490-dcfaabc8e002",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ad8b5e41-6212-4de5-b669-bc03f8eeec58"
        },
        "item": {
          "id": "395c8c7e-b1bc-4de6-b536-258c41a055d1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8d475485-aea5-44fb-8d05-0bd210d71fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cace011-0ba6-4adf-88c5-c5fd46bd8337",
        "cursor": {
          "ref": "d32a34d5-801d-4d8f-b918-241de2752a1f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "41b0d72e-84e0-4011-8344-a00fa3196f95"
        },
        "item": {
          "id": "7cace011-0ba6-4adf-88c5-c5fd46bd8337",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ea535104-263a-4e36-aba7-e3b9de37a6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736881dd-96ac-4cdf-a5ca-a5f737209ed8",
        "cursor": {
          "ref": "fe3f052e-5045-4546-b07e-22188ea295b1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4a66ac87-d5ca-4bc1-9e22-e4374289bff7"
        },
        "item": {
          "id": "736881dd-96ac-4cdf-a5ca-a5f737209ed8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "738c6099-25c2-4905-a247-b2208a1ab65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286d78e2-0726-43e7-a59a-32ca9f547f6b",
        "cursor": {
          "ref": "457c59b3-58ac-490a-8997-5bc8a0af5da4",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "99b4411d-7017-4b81-8a4a-d26e881acae0"
        },
        "item": {
          "id": "286d78e2-0726-43e7-a59a-32ca9f547f6b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f90be31f-65f5-432b-b350-4705a3e62bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dbe691-2a88-497b-90e1-e80622d451c3",
        "cursor": {
          "ref": "55e1136a-a320-4f95-ba02-c398f635efa0",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1ce3e1b4-de3f-4a8c-8479-ffaabb1e35a8"
        },
        "item": {
          "id": "12dbe691-2a88-497b-90e1-e80622d451c3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3645095d-4596-48bc-8454-fee33a98e1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bade24a7-774c-42b7-8fa1-dd3f31d1e6b1",
        "cursor": {
          "ref": "a6cf7a91-99a3-4cb0-bd97-856d31aae2b0",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "62367d1d-ca99-43d2-88b7-7e9d809c6cdc"
        },
        "item": {
          "id": "bade24a7-774c-42b7-8fa1-dd3f31d1e6b1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "456a0fa4-f26b-431d-b725-7eb920e1e2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8471b4f-b146-4d13-807d-bb5527505842",
        "cursor": {
          "ref": "d7d6fce4-53a4-4567-9cb3-079ae294c2e0",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2b4c882a-48ba-4cd7-83dd-fec32e47a22a"
        },
        "item": {
          "id": "d8471b4f-b146-4d13-807d-bb5527505842",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c6c82f09-e050-42a9-990d-d66f98ae48ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33c1ee3-3fdd-4876-8171-a1c4551692ac",
        "cursor": {
          "ref": "da7b86ed-a8a2-418a-9da4-d9d01c0e5d7d",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "644c7755-51d7-4471-ba65-cbf2ed0d249d"
        },
        "item": {
          "id": "d33c1ee3-3fdd-4876-8171-a1c4551692ac",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fe83d205-3d82-446e-9b80-7e1894b72b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871c520a-58a8-4f0d-80bd-b47986ecc715",
        "cursor": {
          "ref": "865ed83f-8004-4b65-852c-53496b0715d5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e02ce782-25c7-45c2-85f4-f2485e9bcfc9"
        },
        "item": {
          "id": "871c520a-58a8-4f0d-80bd-b47986ecc715",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8edfc597-7291-4f6f-9bc0-c496ea90a761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f14845-2ace-4def-8210-9f1f47b6b432",
        "cursor": {
          "ref": "ff8fc45c-4791-48ef-a07f-f838a183d3c5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7201f74c-3006-43ac-abce-e498cfbf29ec"
        },
        "item": {
          "id": "b0f14845-2ace-4def-8210-9f1f47b6b432",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f5895bb2-c1b1-49eb-8739-2435f2d08caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7bc547-b563-4b7b-8879-eb3e93de9c43",
        "cursor": {
          "ref": "80699b0f-d6d0-4149-9f22-53bd714aa7b4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6f16ca6e-4cd4-4bd0-b178-e5709b30af75"
        },
        "item": {
          "id": "5d7bc547-b563-4b7b-8879-eb3e93de9c43",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "025ebc88-d24c-4b76-b97c-617e7476aa18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf37c22-6cd9-4564-8b01-c62f9a42e7c1",
        "cursor": {
          "ref": "67d96484-eb9b-49cd-8020-e1df0f38cf43",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4e538641-7318-4e44-9c0a-4de54f9525c8"
        },
        "item": {
          "id": "dcf37c22-6cd9-4564-8b01-c62f9a42e7c1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "30d176c4-1f58-4d12-8cb0-e854b8799d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd82015e-61ab-4aa7-bdeb-f080ca475fa8",
        "cursor": {
          "ref": "ca7cc41f-4936-4394-8f31-a0b4be8bb22f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f509289d-2f8c-4f4d-8159-a039ea7ab691"
        },
        "item": {
          "id": "dd82015e-61ab-4aa7-bdeb-f080ca475fa8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c4108e49-e66a-47e9-991d-e29683124c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a316768c-fa8f-40dc-83c8-5d00ef3a809e",
        "cursor": {
          "ref": "0b83a3bd-5689-4c44-ac6a-d8317fced736",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "131dfec7-15a3-4928-8cc3-84162ec4044f"
        },
        "item": {
          "id": "a316768c-fa8f-40dc-83c8-5d00ef3a809e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4b62cd88-d03f-45b1-b2a4-eda1167ae713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2657ab70-33c4-4dc9-a897-ba7e7185526c",
        "cursor": {
          "ref": "aa3d7798-6ac8-4627-bdd6-313ce691beb4",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "36b75da2-4ba1-485f-8df8-e629ea7149fa"
        },
        "item": {
          "id": "2657ab70-33c4-4dc9-a897-ba7e7185526c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d9fe4bed-013d-45ca-9900-0b8837da641d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f783a6-5472-4292-b295-e78b7915c3b5",
        "cursor": {
          "ref": "ed022540-b39f-4be2-9df5-c1d872225772",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "34259778-76ec-4c99-a7c1-83a8a455caf2"
        },
        "item": {
          "id": "68f783a6-5472-4292-b295-e78b7915c3b5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2a5dc81d-bb57-400c-ad15-448c946b0998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abed508-b955-40de-bf48-8a963af39bcb",
        "cursor": {
          "ref": "6ea8330d-b74e-49cf-85f9-3ffe3419b2d2",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5fc11168-03cb-436f-928a-8deb67659181"
        },
        "item": {
          "id": "0abed508-b955-40de-bf48-8a963af39bcb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "606d0928-0649-47a7-a6bd-9be3403ffc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bccf64-d86e-4e8b-914f-58b2bc22efa1",
        "cursor": {
          "ref": "4abdef0d-3482-49ad-ae3a-5d81b9db582d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "65998620-edd7-4e79-8726-c021f99f0921"
        },
        "item": {
          "id": "e2bccf64-d86e-4e8b-914f-58b2bc22efa1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ebc4c0fb-25bd-4d37-a3fb-72dc51d178a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fad1a4-1fda-432c-a532-4bccb7486fdf",
        "cursor": {
          "ref": "2b01cd98-3dc2-4e9b-bc9c-6d9918bf5d9e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "aa8615f5-c74a-413d-b13b-086751c0bcf9"
        },
        "item": {
          "id": "95fad1a4-1fda-432c-a532-4bccb7486fdf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "182e52b7-3954-450d-b68e-60256e762e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86fec1e1-3aba-4bc0-892e-9b0a4542feba",
        "cursor": {
          "ref": "d5e0894c-43dc-4533-9e63-37b7a67ff476",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c94ccd13-d6a7-4b25-911e-9be6f4bd6406"
        },
        "item": {
          "id": "86fec1e1-3aba-4bc0-892e-9b0a4542feba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "96e6e921-be68-430a-9f46-904bf3f8f202",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0eb900-1bc0-4826-a693-bf5ed6186369",
        "cursor": {
          "ref": "6782e86f-ccc5-43cf-8588-fd33d200a0d7",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a2090ccf-a78a-424d-91dd-5d3f6bfc9a1d"
        },
        "item": {
          "id": "8e0eb900-1bc0-4826-a693-bf5ed6186369",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f52d3427-0f51-4a88-ac5d-cca27add1172",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 189,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bdf147-37b8-4f57-bd39-cf9e80ae314c",
        "cursor": {
          "ref": "6cea922e-827d-49b7-a3b1-ef87ba0d034a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "54bfaf30-b05b-42fa-a29f-b9b0d2007835"
        },
        "item": {
          "id": "15bdf147-37b8-4f57-bd39-cf9e80ae314c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "36333fa4-dcf7-46d1-8241-4f7ab2b6be92",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a8eac3-43c7-471e-a281-00008989bcbf",
        "cursor": {
          "ref": "eb81fc86-1f92-4959-9f47-41bc5e040db8",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ebbd944a-fd47-40fc-a6f7-05ebcbbb3575"
        },
        "item": {
          "id": "65a8eac3-43c7-471e-a281-00008989bcbf",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2484871e-15a8-4cad-b737-099b0d02ea4f",
          "status": "Created",
          "code": 201,
          "responseTime": 128,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b62a0b3-1bcc-42d9-af10-aae541c207ee",
        "cursor": {
          "ref": "84740d2d-ba42-4c56-8582-d84ee2da252d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "70f37e9e-5af5-4fe1-8229-fbbdd0b3cb09"
        },
        "item": {
          "id": "2b62a0b3-1bcc-42d9-af10-aae541c207ee",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "936856b5-629e-496f-9e87-2b0de2420e90",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5537cd76-e3c5-4f31-bfa7-b49e995be4b6",
        "cursor": {
          "ref": "5d62a0b9-dfab-4327-854b-cde3e4097cf3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "18066bee-24fd-4939-a81a-23663151f932"
        },
        "item": {
          "id": "5537cd76-e3c5-4f31-bfa7-b49e995be4b6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b230b8e4-aab3-438b-a573-367bf621e344",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 852
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4443b4d2-bbb5-4a9c-a49f-937d38097b8e",
        "cursor": {
          "ref": "1beb1b2a-56bb-419a-ad73-4da0ebbe42c9",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fa70a184-3935-483e-a0c6-434cca242d8d"
        },
        "item": {
          "id": "4443b4d2-bbb5-4a9c-a49f-937d38097b8e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ab08212c-2102-4753-8a83-f7877bd10a7f",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "4231f147-00ee-4b1c-8814-a6f36b35fc33",
        "cursor": {
          "ref": "7238c148-d232-4c64-9d65-14a7f2048c21",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "469f363d-86cc-46c6-a900-12cba49e403f"
        },
        "item": {
          "id": "4231f147-00ee-4b1c-8814-a6f36b35fc33",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "84081b2a-124e-4a66-bfa7-ea4ac815f4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4231f147-00ee-4b1c-8814-a6f36b35fc33",
        "cursor": {
          "ref": "7238c148-d232-4c64-9d65-14a7f2048c21",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "469f363d-86cc-46c6-a900-12cba49e403f"
        },
        "item": {
          "id": "4231f147-00ee-4b1c-8814-a6f36b35fc33",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "84081b2a-124e-4a66-bfa7-ea4ac815f4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611e3e35-5884-4dbd-b569-46bb3acab46f",
        "cursor": {
          "ref": "fbc2af0d-ca5e-480d-bb0a-b4171fe5b761",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fd3583a1-df23-4fa2-854c-0ccfd8bb6493"
        },
        "item": {
          "id": "611e3e35-5884-4dbd-b569-46bb3acab46f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fae6d0fb-ddfa-4cd2-8117-008f5fc768a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09025107-2e3e-4e71-ba56-f8b538fc0e61",
        "cursor": {
          "ref": "2c71f2b4-0924-4517-8250-b84db4b4e027",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cef7ba3a-189c-4feb-9935-e7b06c1fe883"
        },
        "item": {
          "id": "09025107-2e3e-4e71-ba56-f8b538fc0e61",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "044ad973-686d-477e-bd1e-91ea49a1016b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a24c09-be47-45eb-95d7-863d1983063d",
        "cursor": {
          "ref": "df40d5c2-9700-49f6-a7bd-9ff3d081b483",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "aab41bb7-dc2e-4d54-b6b9-c10046bc4ba5"
        },
        "item": {
          "id": "33a24c09-be47-45eb-95d7-863d1983063d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "85b7e513-7758-4e55-8ecc-5072f819809b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353dcb89-44e1-48c3-8288-b55e3cb9fae2",
        "cursor": {
          "ref": "fa333273-20a3-40ee-9526-ee9e67df3e6a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e0259f0a-f658-4fd8-9c29-7330d7c0a577"
        },
        "item": {
          "id": "353dcb89-44e1-48c3-8288-b55e3cb9fae2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "06309447-bb87-41f4-9eb5-875efe7b7c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d862e7e5-5f3e-48a1-bf4a-7945ca3783e8",
        "cursor": {
          "ref": "66a574a6-6971-42d9-86d4-7f652e0fe57c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dcff4891-5454-416d-aa12-8b8eb6c0ada8"
        },
        "item": {
          "id": "d862e7e5-5f3e-48a1-bf4a-7945ca3783e8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4e0ec5d1-3385-4056-bf7b-e49fce3ce19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64af685f-37ec-44df-ab8d-751a38927601",
        "cursor": {
          "ref": "d0905aee-7938-4c5f-bdfc-a5decc1d4cf0",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "241f65ef-1352-4cb0-8e00-956d0e6e95b8"
        },
        "item": {
          "id": "64af685f-37ec-44df-ab8d-751a38927601",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "74a6e74f-4403-4221-9229-15fcc5b0c671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7f7a4e-6fe7-4313-b73a-cd0fdeb190e4",
        "cursor": {
          "ref": "504f2bc6-5048-40ff-ae65-6a9d87d53930",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "acb28077-c7f7-4385-9e80-59de23357138"
        },
        "item": {
          "id": "8e7f7a4e-6fe7-4313-b73a-cd0fdeb190e4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "111b61ba-1281-45cf-aca1-42e6f7edc585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6583d8a2-6842-4ba6-9840-e6a0dc08e290",
        "cursor": {
          "ref": "12419e39-506e-4387-843b-425913b22193",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "643df583-cd28-4773-90f1-5a95ac757073"
        },
        "item": {
          "id": "6583d8a2-6842-4ba6-9840-e6a0dc08e290",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0fe704a1-785b-4458-9341-3df02146e799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78073995-6600-485c-8635-d76cb4c36756",
        "cursor": {
          "ref": "dd50aca6-84e8-4b79-b977-5b2d77a31f89",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "aa6fba9e-c18f-4348-b5d9-6c7e6d16fde6"
        },
        "item": {
          "id": "78073995-6600-485c-8635-d76cb4c36756",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "41a7f20a-d459-4b33-85e1-5f5c9c5b4f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3656d9f6-49ae-445e-a09d-48ba1781e008",
        "cursor": {
          "ref": "de692ed9-fa00-4bd4-a60a-14a3a77dcbff",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e11ef23f-9187-4aa6-a730-66e283f8478e"
        },
        "item": {
          "id": "3656d9f6-49ae-445e-a09d-48ba1781e008",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eacd0127-0ae2-4918-b4d9-56c358d9d460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4568b4f-0084-4933-8ac1-6ec4df37a45a",
        "cursor": {
          "ref": "87bf8ad8-4077-4fff-80c0-0a189605d4ad",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1cc155fb-1a96-4d8d-af1e-b9c353ce4593"
        },
        "item": {
          "id": "b4568b4f-0084-4933-8ac1-6ec4df37a45a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1a1610c6-abb3-449d-8bd7-411bdc3d9202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84239977-1996-4538-bd09-254d2e61eca4",
        "cursor": {
          "ref": "c883e049-4209-42de-ae0f-d5feb8b095df",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a85efa4d-23b8-4e65-b4d1-4b7d9e1e8f5a"
        },
        "item": {
          "id": "84239977-1996-4538-bd09-254d2e61eca4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0dc4a1aa-edd0-43ab-8294-bf533b8195bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a5ff9e-20d5-437f-9377-c77c6544906f",
        "cursor": {
          "ref": "baf21a37-86b6-4e9f-913f-55673ab5ecc7",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bffb91bb-cda3-4476-a448-931f61258275"
        },
        "item": {
          "id": "42a5ff9e-20d5-437f-9377-c77c6544906f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "df7b72bd-6e6a-4eab-98cc-20c22185cf81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad4c98a-14bb-4173-b2d5-3bbb8dda781a",
        "cursor": {
          "ref": "1a3b54de-a880-4680-9feb-75d63b036a5c",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5658806b-febc-47c1-ad6d-efe9c62c2066"
        },
        "item": {
          "id": "7ad4c98a-14bb-4173-b2d5-3bbb8dda781a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b114b972-976c-424e-91d6-fcc0912bfba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6969fd7a-fa42-42c0-b519-d0abe5e76caf",
        "cursor": {
          "ref": "28b08c1f-81e1-4db1-a4ff-699c4a4600e3",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "18697251-8c17-4d63-92d7-a724aff43fd2"
        },
        "item": {
          "id": "6969fd7a-fa42-42c0-b519-d0abe5e76caf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cc752bde-4c27-40bd-b3d1-1009155cc50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ae4834-bd92-42ed-97cd-cf90124addfd",
        "cursor": {
          "ref": "dd34c82b-c5aa-458a-acd8-9fec9860041e",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d984656f-6f5d-45cd-993c-e3f3abd76fc8"
        },
        "item": {
          "id": "c3ae4834-bd92-42ed-97cd-cf90124addfd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b4a1174b-8d9d-4220-bdff-b878be4e8113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4f3963-2b88-4ff1-9141-3c9ffae9d945",
        "cursor": {
          "ref": "ff8a8e14-62cb-4f27-953e-3d358c4f36cb",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "291efdc7-7e1c-41c1-a4c4-ccea9d6f685c"
        },
        "item": {
          "id": "0f4f3963-2b88-4ff1-9141-3c9ffae9d945",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8482a6f4-9e43-4456-b44f-15c690b0f5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef98571-8b30-4216-a844-b006041ed757",
        "cursor": {
          "ref": "229e5b55-2487-4901-b85e-2252dbfc98d2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "36c0480d-2256-46fc-a604-8cccf80a5a88"
        },
        "item": {
          "id": "aef98571-8b30-4216-a844-b006041ed757",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e47dae70-d4de-4b42-9ca9-fff8212dd777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d133656-a959-4a30-8b37-1ea67f4e4c20",
        "cursor": {
          "ref": "c18fc622-18b7-4860-971f-8859eef04dd9",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "78f71e8a-5d4e-4347-8064-539e9903132f"
        },
        "item": {
          "id": "0d133656-a959-4a30-8b37-1ea67f4e4c20",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d9679604-740a-4b01-be16-a63aa4c7054a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224fdce4-ef6d-4457-a171-4fc9983d22c1",
        "cursor": {
          "ref": "c1e279f6-82ae-439d-8f15-9a5b4482b229",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e5dff82d-fb9c-4559-b0f8-6829febcfc22"
        },
        "item": {
          "id": "224fdce4-ef6d-4457-a171-4fc9983d22c1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "76af658c-627a-4f25-bd3d-492f2d9a1bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5047d45-8525-4578-a5ce-2978e3e68680",
        "cursor": {
          "ref": "826982ad-5076-4edb-98ed-702f2ebe63c5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ba320f23-dd53-4ed8-83b3-4647741f6d41"
        },
        "item": {
          "id": "d5047d45-8525-4578-a5ce-2978e3e68680",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1ab222d4-10e3-4b62-ba66-3aea5f3dc359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0302458f-f07b-4b89-8601-293458fe9dc9",
        "cursor": {
          "ref": "72e5326f-44d8-4593-99dc-85a524a3b10a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1dc1dcbc-5ff3-4c48-a564-f58e001c4676"
        },
        "item": {
          "id": "0302458f-f07b-4b89-8601-293458fe9dc9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c333ac14-df9d-4907-bf4a-c9c947423fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78b5e67-5074-4ce4-8656-f7eec34259b6",
        "cursor": {
          "ref": "b35e2955-4435-4753-a509-1eacd9937bf1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4cb887f5-5b59-48d5-8275-0990b60b24a5"
        },
        "item": {
          "id": "d78b5e67-5074-4ce4-8656-f7eec34259b6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c50e83ee-25e3-4df1-b1d0-0085c19f7a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bb1ce7-42e6-4f0c-8822-fe5eb80da9cb",
        "cursor": {
          "ref": "4a76b858-814d-4dca-aa7f-5fdca48aa827",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7aba4dbe-7c07-4a1f-a40c-70cbda3d849a"
        },
        "item": {
          "id": "e0bb1ce7-42e6-4f0c-8822-fe5eb80da9cb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "622408f5-6204-4bfd-b2f8-3c2f491a31d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9c8c1d-a34f-4f17-a796-c1b995f7f5b9",
        "cursor": {
          "ref": "2fec8270-d114-4ac6-8740-c417dbd63c9e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f5facb71-c669-4a09-bc91-840d1af6dd0a"
        },
        "item": {
          "id": "7c9c8c1d-a34f-4f17-a796-c1b995f7f5b9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0a43d1f7-d4d0-427d-9bda-57a0057c6241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1655498c-a94d-4b1b-91a3-cc6a6b8fa569",
        "cursor": {
          "ref": "d5ead3bb-52cd-4ef1-9d86-561f8abafb3f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cfe7dd3f-851e-4da5-ba2b-a006f8afa8f9"
        },
        "item": {
          "id": "1655498c-a94d-4b1b-91a3-cc6a6b8fa569",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0f566adc-a955-4d69-a4f2-ce96299a68f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7815d2ee-e6be-4f3c-b282-fab7bfebba10",
        "cursor": {
          "ref": "fe035e34-d4fb-4701-8145-22c1a019b014",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "02784682-82ac-44f2-af8d-d8900f694ddb"
        },
        "item": {
          "id": "7815d2ee-e6be-4f3c-b282-fab7bfebba10",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3b2b70b7-c319-4213-a9ab-cbbad6a547ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c810f55-c2d0-418c-bd15-fe9609c081a2",
        "cursor": {
          "ref": "182875d5-5b35-49e5-bf8a-2a54146265f5",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "01a087ee-15a0-472e-b7c3-4bc314f635bf"
        },
        "item": {
          "id": "0c810f55-c2d0-418c-bd15-fe9609c081a2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "843e5c55-0af1-475e-824b-2d3fb5566bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04ed6e3-3581-4728-bce6-2a5210473266",
        "cursor": {
          "ref": "746b2240-c8ae-4563-a6fd-fcb5de507d3a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a6f0114f-5f69-4b63-bee2-45d4193ea559"
        },
        "item": {
          "id": "c04ed6e3-3581-4728-bce6-2a5210473266",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "49a0f22e-b32e-43d5-8085-c0e26be7c655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ef9248-42b4-4afd-852c-0f1d09670bff",
        "cursor": {
          "ref": "34f264a6-bf87-4b7b-b7eb-9b5820b0d263",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8e6ed422-5504-4815-8e5e-1276a8a49022"
        },
        "item": {
          "id": "90ef9248-42b4-4afd-852c-0f1d09670bff",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ef54ee4a-def8-4a67-98a0-bcab46a35b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33d978d-f67e-4a47-ba0c-11c711fdfb38",
        "cursor": {
          "ref": "beb34b90-38f5-4c89-a8c0-dda3f3557918",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b7824926-2bf1-46bf-81c6-fd20b9eceed8"
        },
        "item": {
          "id": "b33d978d-f67e-4a47-ba0c-11c711fdfb38",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bf4a1b4d-b3ae-4f3c-92dc-b76a59fbf692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993b950a-971f-4708-a8ff-584d14ceecb9",
        "cursor": {
          "ref": "adb1c70b-dd68-4c39-8d83-957954ad5580",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fc024575-ab05-4459-9734-81c67ed72b06"
        },
        "item": {
          "id": "993b950a-971f-4708-a8ff-584d14ceecb9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fa4c8a70-c2d1-469f-ae78-a14c15dc7e0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca79b75a-6a06-419c-a8eb-9ab78fb3c854",
        "cursor": {
          "ref": "314d5a0a-0c27-45fe-a5ff-4069141fee84",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ffcda3d1-76f8-4a73-9309-6329f83d2017"
        },
        "item": {
          "id": "ca79b75a-6a06-419c-a8eb-9ab78fb3c854",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "99242a0f-8f62-45e6-8dad-0a0f6877a0af",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c53adc-80b5-4997-8b89-c03f6003e6f6",
        "cursor": {
          "ref": "f2349c1a-95fd-41a1-8faa-23aa05c33cb9",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "006f2ac0-69fe-4ab4-8d3b-dac5479f22e2"
        },
        "item": {
          "id": "01c53adc-80b5-4997-8b89-c03f6003e6f6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eeb380f3-84aa-4460-be29-fb5347d3e35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c53adc-80b5-4997-8b89-c03f6003e6f6",
        "cursor": {
          "ref": "f2349c1a-95fd-41a1-8faa-23aa05c33cb9",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "006f2ac0-69fe-4ab4-8d3b-dac5479f22e2"
        },
        "item": {
          "id": "01c53adc-80b5-4997-8b89-c03f6003e6f6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eeb380f3-84aa-4460-be29-fb5347d3e35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2924c3db-55f6-4dcb-83d2-aef072adb813",
        "cursor": {
          "ref": "ff1d828b-12dd-4e19-998d-6861adc1a246",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0c8ca888-b80b-480e-aefd-e204b7ad9ad0"
        },
        "item": {
          "id": "2924c3db-55f6-4dcb-83d2-aef072adb813",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2cbe726c-385f-4511-9086-e0a8fafc67dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5052e1-bb12-4b03-8969-9f61b263bff9",
        "cursor": {
          "ref": "29bdb818-edee-4ad6-848b-b8dc3f971c91",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "471077ca-56c4-46f2-b3a0-ab3f619bf060"
        },
        "item": {
          "id": "7b5052e1-bb12-4b03-8969-9f61b263bff9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8b50ca8b-94ea-4a77-9c5a-7246bbd9bae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8517e1f2-8b99-4b9e-96ca-4388790d96fc",
        "cursor": {
          "ref": "bd7818ac-7c55-41fb-b20b-532d2ed3af04",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f3a3b19a-be2c-4aa8-95f8-f50ddf87a266"
        },
        "item": {
          "id": "8517e1f2-8b99-4b9e-96ca-4388790d96fc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e9c84a43-2053-40ee-90be-4858eb4f67c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bc1db0-0ed3-40ab-8cad-d3b8b196da03",
        "cursor": {
          "ref": "ff91cb70-b004-42cb-b24a-9aca128da7b2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "19aa63cf-1aba-40b2-83e6-aa4bfc67af31"
        },
        "item": {
          "id": "b0bc1db0-0ed3-40ab-8cad-d3b8b196da03",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c19fc296-f042-466b-a692-66ced6286fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293d8f77-7416-47ac-872d-bdaa34696712",
        "cursor": {
          "ref": "e19c8194-5573-450e-9896-df328f5fca77",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "62eaba87-5ce3-4e8a-8fb0-4817c0f04d17"
        },
        "item": {
          "id": "293d8f77-7416-47ac-872d-bdaa34696712",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "77f10506-8d74-4763-857b-b3e93f95543d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38092449-3182-4db9-820a-97ce48bad2b5",
        "cursor": {
          "ref": "23189f96-3786-4fc4-adf1-48cc81767951",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7ed58549-552c-4d07-b233-8bb34cf092b4"
        },
        "item": {
          "id": "38092449-3182-4db9-820a-97ce48bad2b5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "713ab1f5-b964-4e61-ab1e-22f08b135751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc66a65-780f-45cc-814b-e6c85bbf1d94",
        "cursor": {
          "ref": "99a30699-1811-48f4-bd39-a26d093bc261",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "24862d47-dee0-46ad-a362-4e5a20dece96"
        },
        "item": {
          "id": "cdc66a65-780f-45cc-814b-e6c85bbf1d94",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "73e528b0-b1b7-4fee-91ee-3d9b99e45330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9152b524-2af8-4c62-98ab-386f5cd42984",
        "cursor": {
          "ref": "6ca8b8b8-dcc8-4b3b-9b27-87e9a100c4d2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cba02bde-6920-4f8a-b096-f23982c022a3"
        },
        "item": {
          "id": "9152b524-2af8-4c62-98ab-386f5cd42984",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ccb530e3-2f27-4c93-9009-383517bd3873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc905c0-e042-4403-8d9d-e1140a0c236f",
        "cursor": {
          "ref": "72dbe8e8-657a-4e98-b697-d1d4f04b2e46",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7529bca2-4be6-4e56-80f0-033f3e3b11cc"
        },
        "item": {
          "id": "7fc905c0-e042-4403-8d9d-e1140a0c236f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "69faf5c5-665c-48d0-b438-462a5f78949b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60581a4-64da-415f-b717-23381eb835bd",
        "cursor": {
          "ref": "4ff12fea-cc9f-4936-837b-29a2135bc7bc",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d8d863a3-2d06-4d82-9d2a-9eb2f68c3c14"
        },
        "item": {
          "id": "d60581a4-64da-415f-b717-23381eb835bd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "819e5a1b-83d8-41f9-bdcb-593295526fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174ecd35-73c1-4e19-a018-18237504c07a",
        "cursor": {
          "ref": "d23fd7e1-4071-4c50-895b-810d4efa02be",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "645918cc-77de-4eef-84f5-09347359ae6e"
        },
        "item": {
          "id": "174ecd35-73c1-4e19-a018-18237504c07a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "dba4e10c-ea37-4400-a6c5-e3236c08afba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97951576-54ee-494f-9b00-78c11bbefed9",
        "cursor": {
          "ref": "e4694733-37be-4ff8-9be0-cfc4391c2ad8",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c382ee80-5852-4a0f-8b08-d15802b65bd0"
        },
        "item": {
          "id": "97951576-54ee-494f-9b00-78c11bbefed9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1a2502ae-c128-4228-a3c7-3d24bc9c726c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94c696a-56ea-4ca7-9f7d-a0c74e9e6e79",
        "cursor": {
          "ref": "b8f4252b-9e8e-4e92-8861-52c7d26fc728",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d8ccac39-d059-49bd-bf24-4a9918f2e6fe"
        },
        "item": {
          "id": "d94c696a-56ea-4ca7-9f7d-a0c74e9e6e79",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1faa28b8-0eb2-4795-9f5f-48e1dadb492e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4b89bf-8575-4012-b595-7aeda020ffbb",
        "cursor": {
          "ref": "1780ce2c-75ce-45bd-87d1-fc6bab6948cd",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0ac65fb8-12ec-411f-acd3-c75509f56b3f"
        },
        "item": {
          "id": "6e4b89bf-8575-4012-b595-7aeda020ffbb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d4774a30-eac9-4d6a-b60e-ef0d5be5f4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adecd8da-2131-40fb-b7f5-0a168b8244fa",
        "cursor": {
          "ref": "7d21cc5e-7e5e-4364-b4ad-b7dbdea9dfe4",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f529a346-28d8-4f3a-9d95-cdb23977eea9"
        },
        "item": {
          "id": "adecd8da-2131-40fb-b7f5-0a168b8244fa",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8a455909-4096-4edd-8c0a-4b25e022a5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bcd3db-5fbc-449b-a3ea-44597f79063d",
        "cursor": {
          "ref": "723aa89a-d411-4a21-9910-2d37b04e85c3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7f275b9c-2aa7-41c6-8887-80f2362c3d2e"
        },
        "item": {
          "id": "88bcd3db-5fbc-449b-a3ea-44597f79063d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "81910693-e58f-4831-8fa9-ade3583220f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861efd3d-aee2-455e-88f0-a3b706ba561d",
        "cursor": {
          "ref": "22abda3a-c1af-4505-82f7-00135a6656f6",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8580ef5b-0030-4793-9fde-b8cbdee1fe9c"
        },
        "item": {
          "id": "861efd3d-aee2-455e-88f0-a3b706ba561d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dacd190a-9bda-4f97-901b-840a46138eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab451655-8d0c-44fc-b082-8e355217d437",
        "cursor": {
          "ref": "eb2c4cac-6a3e-4fd6-9082-373fdac16718",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6ac302e5-fc5a-44fa-a083-7a54f1f5ee0c"
        },
        "item": {
          "id": "ab451655-8d0c-44fc-b082-8e355217d437",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ee7ee35e-fc4b-4688-bd9d-61ddfcc27ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bca8f53-11d6-4c33-8243-4e0b5a284afb",
        "cursor": {
          "ref": "c87864b5-cff9-4ab0-be10-7ea991b34a54",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e9498e7b-0032-40f5-a4b5-49867403ae96"
        },
        "item": {
          "id": "9bca8f53-11d6-4c33-8243-4e0b5a284afb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e7803448-ce5a-4ce0-b573-891f3cdf2df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5ff07d-16b9-4180-9c94-56c77b64f72c",
        "cursor": {
          "ref": "ad8a51d9-3f33-4b3b-ba05-977c4a396e70",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "589b2441-eba2-4e96-98fb-3176924e76fd"
        },
        "item": {
          "id": "6e5ff07d-16b9-4180-9c94-56c77b64f72c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2853938b-d2a8-47b4-89a5-50d8304c4478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cff1ef-c808-48fb-aed9-b8cb5d24003c",
        "cursor": {
          "ref": "6b8bb73c-e8ec-410c-869f-ddf99fd7b350",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a6477bb3-a550-4d7a-a809-413aa0fd2475"
        },
        "item": {
          "id": "06cff1ef-c808-48fb-aed9-b8cb5d24003c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4c3ef0e1-5c43-4125-b5f0-b500fbbf9db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ebd6ae-64b8-490a-a85b-7a547e1de543",
        "cursor": {
          "ref": "e764bedb-5c4e-4365-bc48-742b4b6585b0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b529162f-764b-4841-9e27-ef64e01a6631"
        },
        "item": {
          "id": "83ebd6ae-64b8-490a-a85b-7a547e1de543",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ce0591f1-140a-44cd-b6d9-f29579b93049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e96b58-8225-4414-9a9e-0c9fb0a8829f",
        "cursor": {
          "ref": "96421523-d1fa-4da3-a1f8-9a67596142ff",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a97496fd-3725-48bb-b4b5-460b72171dff"
        },
        "item": {
          "id": "54e96b58-8225-4414-9a9e-0c9fb0a8829f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7ce867f1-8a89-40fa-8bd7-8728f89ea2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e3c0e7-4361-4b10-9a55-2d72ace0d9c6",
        "cursor": {
          "ref": "bd3392d4-adf8-4743-b17a-7a4b4d192733",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "137997b1-d208-4f84-8a05-4a0adc85a1c0"
        },
        "item": {
          "id": "08e3c0e7-4361-4b10-9a55-2d72ace0d9c6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9cc03f20-b6f0-4af6-b477-b53bee29e52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa5b8f3-ad81-4526-a1d1-f38a7f6a610b",
        "cursor": {
          "ref": "e6ee74d8-1dfb-4bf0-b6ca-1ab590973767",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "75e18c7c-82c8-4999-8620-955ce557c527"
        },
        "item": {
          "id": "1aa5b8f3-ad81-4526-a1d1-f38a7f6a610b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ead3a0b1-c084-4e0d-8996-2d0629382ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847ed8c1-262a-4a96-a8f5-b1ce67db351f",
        "cursor": {
          "ref": "c3dada4d-f859-4bd8-9fe9-4af70686a055",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "219b8464-db40-4696-bd19-acc24051fc65"
        },
        "item": {
          "id": "847ed8c1-262a-4a96-a8f5-b1ce67db351f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5cd97799-2327-403e-8af7-7ef693863f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5980cd09-9bd6-428e-9481-d86aae68833b",
        "cursor": {
          "ref": "a4c524d8-4329-4ea0-a84a-95b8a4c69f81",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "557c4784-55fc-4ecb-bc61-6b369b261cb6"
        },
        "item": {
          "id": "5980cd09-9bd6-428e-9481-d86aae68833b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "95bafd3d-8369-4b28-a18d-77cdf1860ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6713091b-011a-440e-adf1-a7485fe1a016",
        "cursor": {
          "ref": "953b14f9-bd88-400d-845d-1b00e7c1b3ea",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "64f2584b-14ab-4534-b8c3-8719a627a36b"
        },
        "item": {
          "id": "6713091b-011a-440e-adf1-a7485fe1a016",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2b5c4cb8-7ca3-47f1-aa29-7b8eeaebe434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec673da-3cc0-4766-bde9-03c1abbed4bb",
        "cursor": {
          "ref": "89c5b2a6-5706-40f6-a65d-7503d893f324",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0b09a708-bb28-499e-8a1d-440672e6c8fe"
        },
        "item": {
          "id": "3ec673da-3cc0-4766-bde9-03c1abbed4bb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c8b13273-bad0-442b-b264-4d93f8dc7014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541e9281-73b8-4777-b941-8756f638f071",
        "cursor": {
          "ref": "82dbbddb-88e3-4bb1-869b-4f1a5aab92af",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "82928386-b427-4bcd-b77f-d8026b27d5a1"
        },
        "item": {
          "id": "541e9281-73b8-4777-b941-8756f638f071",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8952adec-bf15-4bc8-94a8-84990224755d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e81e0d3-b43a-4288-a2c8-073a4921b229",
        "cursor": {
          "ref": "7850d5df-5a21-40c1-b352-a81d8afe43bf",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "86ea7b00-0381-4f6f-b479-36d1ecc0607a"
        },
        "item": {
          "id": "6e81e0d3-b43a-4288-a2c8-073a4921b229",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d74d7a94-5576-4cce-b08e-c4f1ee23ad9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2565219a-b01d-4b0c-a70c-410c58bc7793",
        "cursor": {
          "ref": "7fc6b72b-482f-47cb-8704-1aec11eb2f7d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "96f34377-5c1c-439e-8a93-6b8a27d91537"
        },
        "item": {
          "id": "2565219a-b01d-4b0c-a70c-410c58bc7793",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "684a56f8-093c-4e53-b069-3cc4b77affba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016705ef-a2cc-45cb-b036-7b0f00351445",
        "cursor": {
          "ref": "14903533-b849-4fe8-a1af-90468caf9e96",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "44d6ab5c-4c35-46cb-ab7d-119624a9dde1"
        },
        "item": {
          "id": "016705ef-a2cc-45cb-b036-7b0f00351445",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f744708c-ea6d-42b1-9b59-64e7720da0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60f101d-2cde-4ca6-aad1-51e952283db2",
        "cursor": {
          "ref": "421d5adb-2962-49eb-a07d-57dd2e737348",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9e67e9ff-c9a4-4a38-bf2c-492493d4e5fe"
        },
        "item": {
          "id": "a60f101d-2cde-4ca6-aad1-51e952283db2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6f32d8c1-d4d7-41b2-9e00-9334a904dc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35b1163-625c-456e-bd31-3b604d8f64df",
        "cursor": {
          "ref": "bade15bf-e22f-40b7-b1c8-89ac65bf3995",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0073855c-ad2c-4e08-8229-5b837676d429"
        },
        "item": {
          "id": "d35b1163-625c-456e-bd31-3b604d8f64df",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b90ad68d-4845-458b-8020-c02e75aa9ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb661569-bc56-4fcc-b333-676da9332a79",
        "cursor": {
          "ref": "f6668836-8411-4b32-9257-5d90d219ef79",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4d1c2254-d29a-4319-a611-71e02b387f8f"
        },
        "item": {
          "id": "eb661569-bc56-4fcc-b333-676da9332a79",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "288ec2cd-b965-4f07-b4dc-c92e0186a562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d32dd9-eb4d-4e4b-9f7f-1cdd815f13a9",
        "cursor": {
          "ref": "f7aa6915-8081-4707-b1e4-4d8898ade4c9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e7fa4c1b-dcdd-4a1b-bcae-4771788f1068"
        },
        "item": {
          "id": "65d32dd9-eb4d-4e4b-9f7f-1cdd815f13a9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9566f75b-ec48-498a-889d-1dfd613aeaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3ed56c-d1a2-4281-bb52-74a69b08a30a",
        "cursor": {
          "ref": "f2cf4d16-6ca0-4330-b7f6-2c64976a7d01",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1596b829-bdc0-4986-8c4f-c53f24fb47a5"
        },
        "item": {
          "id": "ce3ed56c-d1a2-4281-bb52-74a69b08a30a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fce3dbdc-f44f-405c-a5dc-52b32dac4bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d59fa04-7d81-4325-a041-540408e83ff4",
        "cursor": {
          "ref": "b5259044-e806-47ec-a529-d783814e0c72",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "212e4192-b003-4c11-ad23-f8e58f34126e"
        },
        "item": {
          "id": "8d59fa04-7d81-4325-a041-540408e83ff4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "48af5cb6-8953-4f16-9c6c-8294e68aa4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd38b63-b8d4-4c85-a1d9-65a6b1e5effe",
        "cursor": {
          "ref": "bd63d916-25d5-4bbe-bd51-34df6400640d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "408f76ef-da73-486a-bb0a-4b0a7570db50"
        },
        "item": {
          "id": "2cd38b63-b8d4-4c85-a1d9-65a6b1e5effe",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a377f02f-c2b4-4e01-b1a1-9f70f93f5639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac5bdfd-df8d-4c92-8e11-5674d935b134",
        "cursor": {
          "ref": "d0d259b7-04d7-4875-a2ff-f26b0f4f5b56",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "284af1b2-f69a-43b0-9756-8ca6199ec0e5"
        },
        "item": {
          "id": "aac5bdfd-df8d-4c92-8e11-5674d935b134",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "08d484cc-c22e-4b82-8a57-0152335de1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c947fa-99b7-49d4-9bf7-3eb836bdd856",
        "cursor": {
          "ref": "8f425ece-da94-4a00-916a-37e476906e5a",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "031e24cf-f1fa-4879-b60a-4677a1b8ec74"
        },
        "item": {
          "id": "18c947fa-99b7-49d4-9bf7-3eb836bdd856",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cdd8dbf6-ea01-4393-bab0-a45470845124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeb4c53-8a72-417a-b70b-98c2ff8cc2e9",
        "cursor": {
          "ref": "961e20be-5c53-4fdc-8675-cc02a2aaeafd",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1a88f8f8-f345-413b-a2c5-c77690570427"
        },
        "item": {
          "id": "dfeb4c53-8a72-417a-b70b-98c2ff8cc2e9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5e28e98b-b7f5-4431-9488-f1ad85deeacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b812ea0b-2f5e-4719-a380-1d543db0ec88",
        "cursor": {
          "ref": "7e262693-fd44-4a71-ab9f-a6973d142f34",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "089d8078-fe4a-424c-8124-199a6da3ef41"
        },
        "item": {
          "id": "b812ea0b-2f5e-4719-a380-1d543db0ec88",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fec9daf9-22cc-4d36-86b2-0de5c162cbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb9c696-627a-4153-b601-071226c94584",
        "cursor": {
          "ref": "836b5f98-937b-42e9-9356-1cc7c0fd9172",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a233112c-16e6-438a-86d2-6372f49fb5a7"
        },
        "item": {
          "id": "2bb9c696-627a-4153-b601-071226c94584",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c1b498e4-897a-4ead-8f64-7970e76538be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b45c81b-55a6-44e2-9894-e584e48bdca3",
        "cursor": {
          "ref": "05ce1341-69a7-48eb-aa59-945e417d8271",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c83705a5-3fd0-4f2d-940d-ce527e1771af"
        },
        "item": {
          "id": "3b45c81b-55a6-44e2-9894-e584e48bdca3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "aff0334f-0a20-4e58-8d27-2f22f867b15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d09b95-f810-4225-a67e-d99a6d6007b8",
        "cursor": {
          "ref": "51b6b6c0-4338-4338-83c2-3d96e565e4e2",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ae96b8cd-aeb0-4274-a85f-3cf090442f90"
        },
        "item": {
          "id": "f6d09b95-f810-4225-a67e-d99a6d6007b8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "26ed6c8e-d35e-4462-b64d-fc5518bdae02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b001ccf-b133-41d1-acdc-4bdd35f54f90",
        "cursor": {
          "ref": "bf7461ea-3576-4b2a-bb42-e0ecdad5d321",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0f2f9bcd-6beb-4fc3-82f0-2b1b0d5956d9"
        },
        "item": {
          "id": "8b001ccf-b133-41d1-acdc-4bdd35f54f90",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "87f66978-5728-42ce-8454-e5c006d51953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d69cb1-ba23-42ad-ad9b-a059679294cc",
        "cursor": {
          "ref": "7f5e8dd5-1828-423c-9a5c-5a0c953483e0",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e0cf5183-2f09-4725-a319-a6ec2baedf84"
        },
        "item": {
          "id": "14d69cb1-ba23-42ad-ad9b-a059679294cc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d3b3b869-3da1-4646-a949-945417d2e466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1400f5a3-2b51-40f8-a22c-44687f30b0ac",
        "cursor": {
          "ref": "dcaa22b3-fc9c-445e-8da6-cb0a9516fba6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2ace5e5a-4401-4c32-9eae-5193069c4cf1"
        },
        "item": {
          "id": "1400f5a3-2b51-40f8-a22c-44687f30b0ac",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "59097fd0-b63b-40bf-97f8-e90a31f6ceac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba463b54-240d-473b-becb-ab038ec79cbf",
        "cursor": {
          "ref": "9b1fac1a-bf00-4b26-befc-1590c80e256a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f5d33f01-2730-45bc-9718-6ed9b9a4725a"
        },
        "item": {
          "id": "ba463b54-240d-473b-becb-ab038ec79cbf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c03503ae-63b5-4ae4-a576-c7c9c5ce744e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12426ad-60a0-4bcd-9718-6bc667b435f2",
        "cursor": {
          "ref": "2c18a2e1-20e9-49d5-a816-7c49025311ee",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "624dff04-cd6f-4bed-8578-5d6703d70ac9"
        },
        "item": {
          "id": "b12426ad-60a0-4bcd-9718-6bc667b435f2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1496b5ff-385a-4c26-b707-6801b4edcac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1c481d-99cf-44e3-8805-b7ecbd3aaf88",
        "cursor": {
          "ref": "310889ee-6162-489c-b4fb-f7a81408ece9",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5d4e125f-014c-474a-9461-5934c2c12156"
        },
        "item": {
          "id": "5c1c481d-99cf-44e3-8805-b7ecbd3aaf88",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d6c66869-fab2-43d8-a353-76ce0e02ab2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820aa5d4-5228-4474-9dea-a4a9d20d54bc",
        "cursor": {
          "ref": "a39d4a43-4a23-4334-9775-ffe36c288e51",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "76911ec9-5b56-43bf-811d-a22284c554cc"
        },
        "item": {
          "id": "820aa5d4-5228-4474-9dea-a4a9d20d54bc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "aad90f3a-2c0e-4409-a92b-76d4d0fd08a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160b3a0c-624d-49d8-8454-054ef4026398",
        "cursor": {
          "ref": "41dd6aab-4594-49c0-aaa3-4435e88c6c78",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f3d7d14d-57b5-40bc-bada-ff72718bcbe3"
        },
        "item": {
          "id": "160b3a0c-624d-49d8-8454-054ef4026398",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "12170b3e-ed49-4eb9-8360-ecf9313296b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c85abdc-4dba-4466-b437-a4ccce249936",
        "cursor": {
          "ref": "f4e059a2-de6d-47c8-ba83-664301da372b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e682deec-3dba-4456-a8ab-f081e07f0ebd"
        },
        "item": {
          "id": "1c85abdc-4dba-4466-b437-a4ccce249936",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7aef6d09-0311-42ab-811f-7aec09592425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7debf44d-abf6-49ed-8531-fe03e3142e6d",
        "cursor": {
          "ref": "c7e47c46-6ef6-46cc-9b1e-32d389486650",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ea929e39-bbd4-4b73-8855-28c2077817b1"
        },
        "item": {
          "id": "7debf44d-abf6-49ed-8531-fe03e3142e6d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ec4dc00b-d03b-41fa-bef6-7450fa8233fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6484665-a8ae-4837-87e0-fdbea78cd1dc",
        "cursor": {
          "ref": "790e448b-03e2-4a8e-8c0c-98284b467cf2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b55d82af-b4d6-4cc2-95e3-fbea38b6f4a5"
        },
        "item": {
          "id": "d6484665-a8ae-4837-87e0-fdbea78cd1dc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cf9af9f5-8a3a-4a71-a6c8-74aefe39a11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fe1ddf-0843-4b7d-b42d-5285b314b46e",
        "cursor": {
          "ref": "48dd3d4a-64f7-4349-a63e-08c43bfb39b4",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1d376440-9a63-4ead-86b3-22702890d798"
        },
        "item": {
          "id": "e5fe1ddf-0843-4b7d-b42d-5285b314b46e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8eb609a7-c773-4992-aba1-a6f6bf11bd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddee8a4-95b2-4202-a90d-eb63b0074d99",
        "cursor": {
          "ref": "ccfbbef7-0ac8-4ac9-91db-267880904e63",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8b69ac28-a00b-476d-948c-eb66f92641c9"
        },
        "item": {
          "id": "0ddee8a4-95b2-4202-a90d-eb63b0074d99",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d08fe604-afb7-4d38-ba39-8ab2148a7edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640a9cf3-eeda-441b-945a-0c4e02d52830",
        "cursor": {
          "ref": "7fddc8a0-2a38-4031-bcaf-9f5a3280427d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4701f3f0-f6d9-4fda-a1e8-7a1ca603a5ef"
        },
        "item": {
          "id": "640a9cf3-eeda-441b-945a-0c4e02d52830",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "21841897-0a12-4dc7-a4a6-c066a575e1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9195b2-86d2-4a1e-a714-956499a4246a",
        "cursor": {
          "ref": "ecace2db-b5b5-4975-9bfd-9cde51f9624a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "87727096-fd52-4f7f-b9ba-f9a12985ef55"
        },
        "item": {
          "id": "3a9195b2-86d2-4a1e-a714-956499a4246a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8e6e8a96-1a75-4551-bde2-33d588f16d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34f32de-4412-4b06-b29c-bfccb5e178d6",
        "cursor": {
          "ref": "7ef2cae8-c238-430c-855e-2125e1656705",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7991a84f-9189-4998-9ed7-3dcb1adafafb"
        },
        "item": {
          "id": "f34f32de-4412-4b06-b29c-bfccb5e178d6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7b92d131-44de-4343-bfaa-20ce2aa3f0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf28cb28-6646-4a1e-ba27-e6559d2be67d",
        "cursor": {
          "ref": "3331fc6d-0cb8-4a10-998a-4d6ee8ba574d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c196321e-796c-496d-a4eb-b43bacd3dc57"
        },
        "item": {
          "id": "bf28cb28-6646-4a1e-ba27-e6559d2be67d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2200089e-6510-4b58-8ecf-d0e74faab0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89369d72-8a84-4bcc-80ac-d06d7b1b5dd2",
        "cursor": {
          "ref": "7f55b5a9-dc64-49a3-a0a2-37e7fc453e10",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "03c23cb2-55ff-4d8d-b816-e008bc14a20c"
        },
        "item": {
          "id": "89369d72-8a84-4bcc-80ac-d06d7b1b5dd2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0c214764-c39a-4485-9366-2f6fbf31eba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd895bd0-5182-4932-a14a-f134fdc3a5b6",
        "cursor": {
          "ref": "4d0e7075-bde9-45b1-a617-1de0be03e16a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2b9859e5-1fdd-4f30-bf9b-7fb9baed2c5a"
        },
        "item": {
          "id": "bd895bd0-5182-4932-a14a-f134fdc3a5b6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "10765215-a31d-4752-9631-f48da9958742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a298947-e4c4-4202-b8a0-8c7666b23d12",
        "cursor": {
          "ref": "40e0fa1d-92a4-443c-8db3-d950a0668fcc",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1f262403-c1c5-443a-b736-8d7fcd5fbb29"
        },
        "item": {
          "id": "2a298947-e4c4-4202-b8a0-8c7666b23d12",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "df5e4ea2-e3c7-4adf-b099-60eb4567dc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a21e8d-08cd-45ad-8c5f-af19ae8bd622",
        "cursor": {
          "ref": "cbc2f2ea-d20c-4819-b54a-64cc8d7601a3",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "604f90ac-b933-489d-9df0-12aa2ffc78f2"
        },
        "item": {
          "id": "f0a21e8d-08cd-45ad-8c5f-af19ae8bd622",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c76ebd25-dd20-49f1-ac2f-d9e52bced384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16e7d98-5313-4946-b981-5927c04e54e2",
        "cursor": {
          "ref": "205c0190-7cc1-43b8-b6d4-c10755ff401e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ea93ad71-6a79-48c6-8a41-ed013cb63d30"
        },
        "item": {
          "id": "b16e7d98-5313-4946-b981-5927c04e54e2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "de19180b-42d5-4770-9c42-4b6730bda8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb432e7-f82c-4ca7-bcfa-8786cddd4b69",
        "cursor": {
          "ref": "380dbb7b-9aec-4d4f-a400-d39398ede845",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f251a599-aef6-45bc-bdd5-f97915ca3c80"
        },
        "item": {
          "id": "7eb432e7-f82c-4ca7-bcfa-8786cddd4b69",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cb2227e9-819a-425f-b6e6-8eee6b16cb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa41981-fdab-4274-a63d-3b24041feab9",
        "cursor": {
          "ref": "7d30c547-a270-4643-9ac3-b2ef0bc136c1",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3b5d17aa-6dcf-47e7-a6e5-c025dee6905f"
        },
        "item": {
          "id": "1fa41981-fdab-4274-a63d-3b24041feab9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d5c73dc3-6222-4d57-a796-716d30c6e342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f49fd7f-e4e5-474b-b7fc-cb844f666614",
        "cursor": {
          "ref": "a2ca5567-ed8f-4c85-8bd8-bcf386cc4086",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c2148dd3-798a-4f7a-962c-1814cfc27e11"
        },
        "item": {
          "id": "5f49fd7f-e4e5-474b-b7fc-cb844f666614",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "666938b4-a0c9-40b0-9db9-140e9ca65e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193b1a9b-da42-4b48-b2c2-7870d9a71940",
        "cursor": {
          "ref": "0759ca4c-14af-4ac7-8628-c6d64c1bebb3",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "808f7b6d-5dee-4b2f-9993-5710fbd0ea82"
        },
        "item": {
          "id": "193b1a9b-da42-4b48-b2c2-7870d9a71940",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1db84044-7bbf-42e5-941f-8bfdbc60a940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44f7fc7-fc3c-4ea1-8a7a-54f83c5e6084",
        "cursor": {
          "ref": "89f3c595-b1a5-497e-b0d0-3ab3e204e612",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4baa0d21-4df4-4614-9e5f-1742e3844ded"
        },
        "item": {
          "id": "e44f7fc7-fc3c-4ea1-8a7a-54f83c5e6084",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6fbfb1fc-d39a-4a00-a67c-a850e7ad9b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ed4b49-dac2-40aa-a8af-1c652e716aae",
        "cursor": {
          "ref": "4bcecea3-f54f-4aac-8a11-0b7e86cd16ec",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7e2febe8-c02b-4b93-90d2-8e5b4b92f6d2"
        },
        "item": {
          "id": "18ed4b49-dac2-40aa-a8af-1c652e716aae",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5d722802-bb17-4858-a624-1e401fafb4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735eb1d4-f289-4f33-8056-5ab37a95f20a",
        "cursor": {
          "ref": "bf3e00ac-65e0-40a2-813b-3fae113fa42d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b8b8b58d-f01c-468b-9146-939f553b1666"
        },
        "item": {
          "id": "735eb1d4-f289-4f33-8056-5ab37a95f20a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8ed78ae0-0a5e-4fb6-b7e3-d7bd64007b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b92f244-1729-44d8-a62e-02c659bd4708",
        "cursor": {
          "ref": "2db71584-cc97-4149-bfd6-2f44d33605b8",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "88adc40e-8175-419b-aac3-2a7a516a9972"
        },
        "item": {
          "id": "9b92f244-1729-44d8-a62e-02c659bd4708",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cc19bd52-bf30-480c-9c8a-4d6829ca457d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da308c7a-068d-4ca4-accb-d7fa2855b7db",
        "cursor": {
          "ref": "aa386805-278d-49fd-b3ca-379ab12d8c43",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a52f98bc-9fdd-4bce-b4dc-2a264bece5de"
        },
        "item": {
          "id": "da308c7a-068d-4ca4-accb-d7fa2855b7db",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "124e5b4b-952c-4b81-a9a9-e7f756804de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0b80ab-bbc4-46c5-b9f7-547a819e1130",
        "cursor": {
          "ref": "e702d875-6f94-4eb5-871f-ba540a178e3a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6c6510ad-3deb-4dd0-a657-3a58b303750f"
        },
        "item": {
          "id": "ab0b80ab-bbc4-46c5-b9f7-547a819e1130",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6786f487-3ed9-4a02-8cfa-ac6f6a3729a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dd26a6-3544-41e9-8c36-4516e216c925",
        "cursor": {
          "ref": "b20647bb-c400-42c3-9070-6a6ed086cfb0",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1de44a9a-0d86-44fd-92db-acf2bda8d242"
        },
        "item": {
          "id": "27dd26a6-3544-41e9-8c36-4516e216c925",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4a059b8e-e78a-43a4-85ef-f5309aa62dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4657f90-8160-4dcf-88aa-1fc46edaf4bf",
        "cursor": {
          "ref": "d5230b1e-a495-450d-98ae-af0ca4180b6b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8adb37ea-7d62-4d00-b6ac-b75615b80683"
        },
        "item": {
          "id": "a4657f90-8160-4dcf-88aa-1fc46edaf4bf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cb429a3a-32e2-4636-bfda-7769cc9cb9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ad0a7c-bcad-4f08-9c24-d145f0daae6a",
        "cursor": {
          "ref": "b1b08e65-2ba0-4d00-9ac9-6a50238556a2",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6dcfebcf-0155-4791-b4cf-7aa9a9c4d2f6"
        },
        "item": {
          "id": "c8ad0a7c-bcad-4f08-9c24-d145f0daae6a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "04a07c9a-68e8-4fa7-89d6-0ab2be3b7b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa5506e-ea11-4bb7-a1f9-4ea46a1f4d79",
        "cursor": {
          "ref": "6699d19b-cf09-4f2c-bd0c-ca23f12cd62a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "43ef069a-9d62-46bf-9f3c-3354ff474708"
        },
        "item": {
          "id": "0aa5506e-ea11-4bb7-a1f9-4ea46a1f4d79",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f5a62d4e-28a9-43bf-92cf-1c12d2d07f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779e9420-b561-4ee4-a04c-5b72f3014ab9",
        "cursor": {
          "ref": "18acb3b4-5c6d-4f48-905d-81fd990d0c1c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "04171261-2e3d-40b3-b01f-3d5eb4e6bcc1"
        },
        "item": {
          "id": "779e9420-b561-4ee4-a04c-5b72f3014ab9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "288ee73a-c1e2-496b-9201-8c9c924875a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9fd130-c2b2-40e1-9e67-bca0d74c86c9",
        "cursor": {
          "ref": "72d0131f-b0f4-4fcd-a13a-0d13b5bd1593",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7bd2a8b2-9c9f-4ec2-88aa-1ba6ed7422e4"
        },
        "item": {
          "id": "9e9fd130-c2b2-40e1-9e67-bca0d74c86c9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5cac5ba4-139c-4f17-afe5-76534ba61392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc47575a-9bc6-42a6-9be4-7e235c65fe73",
        "cursor": {
          "ref": "592ae209-ed46-4e71-81a7-aed7b0854024",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "245bc518-93a4-4f01-ae7e-68af95a281eb"
        },
        "item": {
          "id": "bc47575a-9bc6-42a6-9be4-7e235c65fe73",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a6af3941-08eb-4b4e-a4f6-bf1690fd9355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12a6f0d-7617-4853-8733-e76d46db56d3",
        "cursor": {
          "ref": "63a18a27-3a71-4ef3-98a6-b459f57287dc",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "beb59858-ce23-4043-817a-3122558b7e72"
        },
        "item": {
          "id": "f12a6f0d-7617-4853-8733-e76d46db56d3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d368987c-3e6a-4063-8dc0-bf427e38d23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2463694-1a78-462a-83e1-a66e3c30ff8f",
        "cursor": {
          "ref": "1f3c27e5-c154-43cb-af77-141cf6bee72d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3c24b017-4b2f-441d-90b6-d23d1eb8a393"
        },
        "item": {
          "id": "c2463694-1a78-462a-83e1-a66e3c30ff8f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "54c86e3e-131a-4ec0-95d4-bf26061e378c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcbad3a-c744-46c5-9630-d078a0206900",
        "cursor": {
          "ref": "fc9fabc2-7f75-48a6-8752-7b271d30b682",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "daca33c0-696b-423f-9318-ce8f8b3a3dd2"
        },
        "item": {
          "id": "5dcbad3a-c744-46c5-9630-d078a0206900",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e9334072-0986-44bd-b11f-0fd6a7836646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f3c996-fa90-4d81-af88-2e5faff140e3",
        "cursor": {
          "ref": "3132b668-1426-4293-99a7-01c96ff683ab",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bbaec4c5-def5-4289-a21f-ad0be5964510"
        },
        "item": {
          "id": "f2f3c996-fa90-4d81-af88-2e5faff140e3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f0a7ee46-5893-4d39-8e75-7e580847a30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c1291f-e2da-4acd-9100-b809d01995cc",
        "cursor": {
          "ref": "72ed2b4a-cb72-4114-aa49-fae3156199e8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b25b6597-594c-4ab2-9724-3355748bb7ec"
        },
        "item": {
          "id": "10c1291f-e2da-4acd-9100-b809d01995cc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "02f1fa82-062d-4503-abdd-0d2e0e48ff7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2a3ed4-e9ed-4740-b4d1-3832b1f43e74",
        "cursor": {
          "ref": "9055a27d-ed48-4e15-81f1-d9c35883c875",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c97d6249-9da0-425f-85e7-4b930e35a5e0"
        },
        "item": {
          "id": "0b2a3ed4-e9ed-4740-b4d1-3832b1f43e74",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "896287a0-7ed5-498b-a900-5035d7f8d41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07780256-3ec1-41e4-9f81-d6a203e36dd2",
        "cursor": {
          "ref": "4580f82f-9f76-433e-9eff-500ed2e4e93f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8340e7cc-32ac-4bfc-a9cf-f66dc7a5bfbd"
        },
        "item": {
          "id": "07780256-3ec1-41e4-9f81-d6a203e36dd2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bb9a23f6-b13e-4ae9-9a49-1c39d9209a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a615cb-c838-4090-acc0-f52038504913",
        "cursor": {
          "ref": "e6719bb4-0949-473c-a05d-e5497ca172a5",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ff91b764-449f-45b6-80d5-29672efde231"
        },
        "item": {
          "id": "b7a615cb-c838-4090-acc0-f52038504913",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3c79cd27-a416-43b0-82f9-20c03f57b5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babaf1b5-6d97-4379-b7ec-996798287dc4",
        "cursor": {
          "ref": "3e409426-6a15-4e8c-aa02-106a2ead1319",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b275c182-1a78-460d-a519-ae9c25af9d29"
        },
        "item": {
          "id": "babaf1b5-6d97-4379-b7ec-996798287dc4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "af025429-7e26-4499-9a03-46aa8d7a0cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53b2417-cda5-4073-b0bd-182581771868",
        "cursor": {
          "ref": "38d908e5-4638-403f-93c0-a6c19a558b84",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "af87d208-feec-4a8e-ac11-a98541308bc2"
        },
        "item": {
          "id": "d53b2417-cda5-4073-b0bd-182581771868",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "51bb9bdf-0edc-43ab-a21a-00ed371a2c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df626d04-80ab-45fe-989e-bd0fb6de1715",
        "cursor": {
          "ref": "7824ce8f-1955-4e4a-afa4-c499622c3aff",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6f697e62-f717-4551-8c77-dac68ed7eec7"
        },
        "item": {
          "id": "df626d04-80ab-45fe-989e-bd0fb6de1715",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c3894935-3770-4bb5-a71f-592512472574",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe5eb8c-238f-4c3c-b379-35dc0549a4f4",
        "cursor": {
          "ref": "b2481353-0993-4337-ba4d-77f73a958302",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d4c89838-5dc0-4554-8e12-7bea0500d2c4"
        },
        "item": {
          "id": "afe5eb8c-238f-4c3c-b379-35dc0549a4f4",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "91dbb27c-a9a0-4b69-96c6-42ebb4526ebf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a77dca-73f2-4c5b-b2b5-b8293188e43a",
        "cursor": {
          "ref": "dd8b368b-dde1-46af-b9a3-c390e923b8c9",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ddb9d453-3022-4710-b12e-5ab26c8427ac"
        },
        "item": {
          "id": "09a77dca-73f2-4c5b-b2b5-b8293188e43a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "84890938-fc9a-49c9-85cf-47836d787371",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee66954-d489-4763-874d-099fddb24b24",
        "cursor": {
          "ref": "c1a5e723-6170-487a-a87c-8e58d98e2c30",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f8f51053-e8cb-46ae-a50c-333035cbc21f"
        },
        "item": {
          "id": "2ee66954-d489-4763-874d-099fddb24b24",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ace1a011-bac6-4242-96a2-d3d3ec4a9329",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b97c9a-7710-44ca-ae82-73a342ed5388",
        "cursor": {
          "ref": "f2a87eed-833c-4f8b-9bb3-8d7db129d632",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "43c89012-1f48-46ea-ab14-22fb40e8ff72"
        },
        "item": {
          "id": "60b97c9a-7710-44ca-ae82-73a342ed5388",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "651c575f-17f7-411d-b7ef-fcbcae36c450",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ba406a-1ac9-42b7-8b97-6c0117fa856c",
        "cursor": {
          "ref": "c4750379-84cb-4a1a-ba7f-7495ef54c0c4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4c242670-e121-412c-9436-1dbbadf4d521"
        },
        "item": {
          "id": "54ba406a-1ac9-42b7-8b97-6c0117fa856c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "da95dda9-46f9-47ab-80f6-cabcbcf25153",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ba406a-1ac9-42b7-8b97-6c0117fa856c",
        "cursor": {
          "ref": "c4750379-84cb-4a1a-ba7f-7495ef54c0c4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4c242670-e121-412c-9436-1dbbadf4d521"
        },
        "item": {
          "id": "54ba406a-1ac9-42b7-8b97-6c0117fa856c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "da95dda9-46f9-47ab-80f6-cabcbcf25153",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ba406a-1ac9-42b7-8b97-6c0117fa856c",
        "cursor": {
          "ref": "c4750379-84cb-4a1a-ba7f-7495ef54c0c4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4c242670-e121-412c-9436-1dbbadf4d521"
        },
        "item": {
          "id": "54ba406a-1ac9-42b7-8b97-6c0117fa856c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "da95dda9-46f9-47ab-80f6-cabcbcf25153",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607b6c7d-442a-4752-8c72-46915a0214e4",
        "cursor": {
          "ref": "3fb1ebb6-6853-4a86-a471-54266c376a8c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "23a98628-201a-4d00-a51d-14dda3546659"
        },
        "item": {
          "id": "607b6c7d-442a-4752-8c72-46915a0214e4",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "5ee249e2-6bc2-4127-b49e-fde341dddc2f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0e9e85-930b-443f-9e8a-93e42d6429b1",
        "cursor": {
          "ref": "f3f32a3a-b86d-4b97-9405-017e7d6b2f02",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "70203bc1-196d-422f-98ac-9911b8329ccd"
        },
        "item": {
          "id": "6a0e9e85-930b-443f-9e8a-93e42d6429b1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "05b287af-2095-47e4-90f7-7f2f75a23a13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0e9e85-930b-443f-9e8a-93e42d6429b1",
        "cursor": {
          "ref": "f3f32a3a-b86d-4b97-9405-017e7d6b2f02",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "70203bc1-196d-422f-98ac-9911b8329ccd"
        },
        "item": {
          "id": "6a0e9e85-930b-443f-9e8a-93e42d6429b1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "05b287af-2095-47e4-90f7-7f2f75a23a13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbab9b9-dc70-455b-9998-bb88f2802ff0",
        "cursor": {
          "ref": "8d8ecae2-aca3-45ca-8aa4-a37e29039cda",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "68f25213-22c1-443e-8b45-a10fbca5aff0"
        },
        "item": {
          "id": "acbab9b9-dc70-455b-9998-bb88f2802ff0",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e6b79941-f218-4300-b826-ae4cd52ea090",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa34539-6304-4482-900e-2641f80d6784",
        "cursor": {
          "ref": "50920a37-66f6-4222-a4fc-5040990ecba8",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "292a6171-d8eb-4867-bcd7-9d237cf45c02"
        },
        "item": {
          "id": "ffa34539-6304-4482-900e-2641f80d6784",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "de6a78f7-7c3b-41ea-b37d-ea4e2bdd1be1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa34539-6304-4482-900e-2641f80d6784",
        "cursor": {
          "ref": "50920a37-66f6-4222-a4fc-5040990ecba8",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "292a6171-d8eb-4867-bcd7-9d237cf45c02"
        },
        "item": {
          "id": "ffa34539-6304-4482-900e-2641f80d6784",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "de6a78f7-7c3b-41ea-b37d-ea4e2bdd1be1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967de683-2d27-4174-9a27-5262f06f2676",
        "cursor": {
          "ref": "f2df313f-de4d-4d90-be74-268b4335670d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bbd4a20f-598e-4ebe-865c-71af9f32be80"
        },
        "item": {
          "id": "967de683-2d27-4174-9a27-5262f06f2676",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "face9089-2bfd-42a4-ae44-e11e94c8d40f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}