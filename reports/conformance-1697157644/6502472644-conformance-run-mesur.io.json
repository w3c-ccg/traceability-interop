{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "37d8bf43-cd0d-48b0-b32b-ad371e9ef2a7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d406e368-a726-4899-a5ad-a3872088ee45",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2dad5f27-a156-44c2-9f48-46f436ae839a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bae2a6a6-c543-49d1-817a-ef1691db1a9c"
                }
              }
            ]
          },
          {
            "id": "51d13dc2-5cd0-4b4f-a805-3cadcc19d21a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "26276637-37e0-46ca-a2fd-4db9f7a9da94",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cdcc74ec-1fa6-4c6b-89ad-62116a443770"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c44160be-667e-4b37-ae41-ce4058a85858",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0b8a2b44-02e0-4203-9887-1de6df352eab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "089d1821-e7e6-4141-af13-d3c16aef482d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecb06d4a-8501-4e2b-b0fc-4a5515411482",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d65f70b7-7ba7-4fc8-91bc-43400e3a204e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7ec8e5e-4167-4f20-9289-098484a0cf36",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e78055e-8c76-4373-aee5-b035b9313f9d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "51dfced2-1cb3-4da8-bcb9-1f17a96218e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c50cd52-bec0-4165-b82e-abdfa88a468d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a342924a-dc79-49da-91c0-e925702b2d5f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cbe7c194-ecc0-4a24-b2ba-83afd6215513"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcc964e4-10ec-496f-99aa-b8800d6a4ccf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cbfa1f9-df0b-40dc-b63a-58e422c0eace"
            }
          }
        ]
      },
      {
        "id": "c67db10e-17a5-4d78-a321-5bb72fa80fd9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ed09e0fa-e19f-4338-a5c6-1ff742aea31a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb7f3b7b-a3aa-4f7f-8725-7aa1dd33088a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b54eb58-593b-4cea-bf9f-ef8767a77790",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2b37cc-64fe-4727-80a7-2b0b4faf8447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ccf3b29-8bde-4e2a-9ea7-a3f6aa7fa9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20c23e7-5075-4c74-a163-e9c5f4650f0d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe51ae8-73fd-4b09-821c-7327a4904dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbd5528e-3de6-4cf6-bbe7-f7201b97f612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948b3dfb-bfad-4852-ab7d-8f9a7c065177",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a9007f-6446-4a5c-b779-30ffccc8c70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3d02db2-b5a3-4aa0-b179-eacff13af3e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "adc60ae7-8f54-472a-a021-52eae31b8e8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c909c6c0-a6bd-4bda-828f-91febb768aae",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e764aed-96a9-4f2b-887c-a922b7ef9837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b63fba5-5c4b-4331-9730-72afb183ecae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d55f489-6166-4833-97e9-88d8946573b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3663ee16-153f-414b-94c2-9e3682f2593f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "87077af0-a685-4e53-be01-cb608af583db",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58434dc0-0f23-4ff0-ad1b-10e5ffee5f13",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72cf2c88-7e17-4bfb-919e-0bb8625342b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a5e58c7b-c915-45bd-b932-2400e451ee76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6565719-2b1c-4c3f-a773-4b6334080b4c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "458e02ec-4f65-4b49-9bc4-3a8d9c73f011"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad947633-b401-41c8-a122-7a44b53bb5b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a2abbc3-e158-497b-bf26-bf4ff52b919e"
            }
          }
        ]
      },
      {
        "id": "f949eeff-10d6-476c-8c36-6f84412515a3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6ffe9066-6bf0-4496-b58d-b3614309f814",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa486d45-ed16-4160-bd9a-bc9b72a0044c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "59605a5d-7602-4a6c-883f-ba424468da23",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173eb174-a180-47dc-ac68-702bf54ff89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33060936-9dfc-45f6-a14f-bcc1ff9506fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a540fe-644e-46c2-a828-b4afe01a4d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ee66573-45e9-46ae-a3fc-5e8ccf5847bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db140b7-b8c4-4340-9dd2-7467adf5af33",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae4cc7c-aa41-4872-8d02-842f50509fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31dd3c3f-1abb-490a-a374-b112fa850781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc18e0a1-bb50-4794-8ace-e089731ea5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d351fa51-cf3b-4fc7-b7e7-e12ee6e00bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6fdf9d-64de-4e66-8fbd-fd5948959069",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e1b155-aaa9-4649-bc88-518a91bfe6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbc6a23-4bfd-489e-a971-128ff69f9602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1fa3f5-b9d4-4ba2-9b45-75e79f961f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9651ead-da4e-482d-82b5-4b01c37122a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae85685a-c759-4623-8655-13fb1524c924",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ecea3c-ad2c-4d34-b51a-b0c8253bb008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1817cc-d5e3-4091-87ef-ceb4e502df23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb132a0-0770-4362-9468-958fd1198300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88683029-d890-43c5-ab9c-d43e23a890d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e6b43d-6879-4862-aa5f-75abcbf03379",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40d3ffb-8820-4e2f-8fea-cd5848f6106c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ec5ca7-037f-4732-9a37-e4ed52cb8a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a66f30e-d64b-4422-8729-1be716244a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "790dc428-a1a2-4e9c-99d4-18756843f15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1edf343-7ae9-408a-a089-1ea0959fb8f9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62adcf25-328f-4f2c-bb76-5b8fc34c8edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21ce75c-67e6-412e-a121-37faf682d994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cfd019-55bf-4e70-925d-3b4e666f9418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76c4e038-738d-488b-a4be-8b703b648540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf4a2a2-07ea-43a6-a0c6-e6d88716d736",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c01ceb7-d063-4a6f-a624-d03267d1ff2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0d2c87-b79f-4790-89f2-4ad3f30b6337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daea068a-038e-4a6d-ae97-11b0c8be51d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eca64b64-9d91-49fb-8f15-9513a89eab4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ffb6b3-d58b-44f0-8606-c045f230d199",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f5b146-4912-4a37-9427-42cd66cd59e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39654281-06b3-475d-86bb-b3cdece08bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b65ebb-945f-4ddb-abbe-5df615b645c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb513bd5-868c-48b8-8975-d5b44c71e0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d1f205-6d0e-4c31-89b1-da29a6c3b4a9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efa43b8-5f6d-4929-89ba-eae680f8aafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13ea4da-2431-4499-8b14-c4c49257576e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ea3a7f-b5d1-4653-b56d-3c8ea256a740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efc45dea-7b0c-4989-9fba-f3b20f88fc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b298a9b1-3cda-4c38-9379-61ece4195974",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30e350d-ac06-41e1-9d7b-93c877c7a666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14888cce-b64d-48b2-b9a9-916771eb3d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4550b6b1-2aa9-41c5-94cb-6e15098cdd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9793b0fb-a436-4676-85c8-70b02eca71ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78df83e9-5c32-4892-8a07-c67072420bf6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d64e82-361c-4a8b-9455-6bd88feddf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2620aa-8bbe-4aa3-b783-9dfc163fe8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c18b8be-60b2-4619-8978-317811bf61f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78d71f47-b458-47df-9bd5-39a5ae0fd133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29a1e59-ca86-4b00-86e8-e794d15dc464",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c8060e-48c8-4939-a5e3-19740de99f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2d41dc-a3bf-4692-a4f3-c869d7fc6279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a12f5d-8c7c-42b5-a4f5-69f4b5c33381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9f0e0a3-61f6-417a-a1cc-049f25c842b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80594d0-d360-4f98-bb2a-2acdd3d432e2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e181be7-d42e-4c29-a621-790954024178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ce2b2e-a26b-416f-930c-69a77b81399e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901ee493-bbd9-43d2-852a-6200275084c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5027ac21-b345-4309-899e-5cfa23def07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728d3506-53d1-4bd7-bc0d-615ec3424ba8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35255d29-c539-4347-9372-f0dc261066cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd3d446-9eb1-4759-8d4e-de6b35abdeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6440ac3-0355-410e-825c-546cc35f5bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3afb1d0a-29b9-4446-a1cf-b041aee5159a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540eaaba-cde4-4970-9376-10882ca078c8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0728407f-cc22-46d3-b3c8-5e55cb702122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a39295-653c-4b54-91b0-149e2410e984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26224025-d989-4f09-9c3a-9cf59e778d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0bbe7e6-dfa8-49a1-b3b2-797ebfd704d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62127f3-159c-424b-8bc7-a09b7e967424",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fe281d-2e95-4474-9b2e-35f0f5cb0f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae38778-2005-405f-84a8-55332c1625d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25e7276-6fec-49f8-ac6a-81c5a90a7523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89da5d66-c7d8-49e2-80d5-a91f27a3641f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da0b736-1e6d-4582-8f2b-fa489cbc0718",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bbef01-da39-437c-87ae-41023ce21094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38618892-c4af-46fb-932a-c19519e4c3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149d6f76-86d5-4510-b2a0-901553e88226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af9775c0-07c2-4a27-b917-3ff80559d1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b62604-1d5f-4188-ada2-a52e7c2cc37c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000a4a96-9d7c-4f5d-893e-30cfedd2ecb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581f4d4e-813a-4df4-a215-ae6701b05a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7ee416-46ac-4df2-9f81-ad85ec545c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e509e28-57b6-4667-ba61-a39a927d087d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80d5868-4dd1-4648-a940-216139b3ed9c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d19486-6d4e-4d72-97c6-6acf41495c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4634db80-0bce-4d42-b8fd-835fbb21bb02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1021ca68-d5d5-4b55-8bd7-1db7fd6f368b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f39c5a1a-8103-4c73-98f5-775a179aa48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b620aa99-1648-48be-9523-358eb759b065",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f04b9f-4701-43ed-b094-7a20415ba750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132a0be1-ba8f-43ce-8908-13ef54eb4d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64cc3d8-92b5-4121-b381-759960044a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f868b23-36d1-4326-b1e0-8b453a4b91e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd57969-f8ca-453f-b44a-b281d7340814",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c2990f-5676-47e7-ae50-9732c96a4791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17412c7-a014-401e-932d-f55490264512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8358600b-d4bf-4679-810e-656e07813169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a65791e-207e-4f27-ac34-826ea2e0138e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfea40d-c4ba-497d-a281-1a5c241b08a7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d21f99-ebe8-40e1-a630-9b3aeccd496d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd6bb84-2c10-44de-9f71-9f4730737333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a9591f-2e86-4126-bda0-601bc988c826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1994b21-78af-4e76-b9e8-b4c458e1065f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f3f39d-160c-4834-b39b-c054ed209427",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7693736a-30cf-460e-9439-c7b12ec35646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac321d9f-90f8-4acd-a0c0-18493ad4e6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa38aeae-ef59-478b-a52a-860b79a4918b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4839fd2e-86d4-4899-9d13-3a97349b4982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a94685c-0201-40ee-862c-4597d18f947d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7ff799-5aec-4e23-a019-ffd084f7a99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ee1634-79f6-4b04-9e92-71981da15801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ab79fa-8d10-4a8c-b0be-106692a81905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f92074f3-1f04-4036-b405-70914151f624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794c61f7-b8fc-4b44-a7d5-5e034b426004",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699132ce-3883-4776-84e3-66d46f6bfe25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da267a59-ff83-4545-a15f-166006171330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197d0587-0faa-458c-97d8-fecd2f42d277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57254e23-7053-4262-9623-9a29e6351ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b203b9f-0368-471e-a9fd-7fb3bd095f0e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6787c7b3-7bfc-4820-854b-b87749c77ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05d4d97-7a1b-4b4e-9ba9-385e70302a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86608bf9-024f-4ea3-81ff-6c8126b82678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a80fa7e-1f95-45e4-92c7-9140b6641ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d47f1d5-c7a9-4933-96a2-a993ecccf639",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1bc32e-ddf6-4fd6-af89-4dc1544aa045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711322a7-c064-4788-9789-720c5b70d2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee70e213-d98b-4f9e-acef-2470f51ae2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2efe54-90d3-49a9-bbad-ff4ea4864964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229ba660-01d8-40f3-bf1e-8d802bc5c400",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc81eaa3-c46b-4827-a177-54481699d4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90aeb3c8-f429-4a33-996f-541c3fafe2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d95a3d-9cef-4f41-8f69-5338d9a7a3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57199c05-1c00-4d71-9897-b3bb6bb86545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e302369d-89ed-4199-9b79-aec425bd62ab",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e3a8d8-0edd-4e8b-b0bc-840b1ddc4906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70663e20-159a-49a1-8e53-bd79414a4274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09432405-a767-49d6-910d-b43488a39821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5227884d-77f4-411a-a9ba-c6ec5c931fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e367ce70-6041-479f-b18b-f4c65fd7d027",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c6afe2-07b0-4a15-bae0-ad9c66d15cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d9ae3c-27f3-4392-9f91-a91c515318ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbf98f9-ef58-4475-a833-4f01ac642674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc23871-b590-483a-b86b-ea229fa6273c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def76cf5-9f24-4c0a-80dd-d4e6828b6f6c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63559f71-bd59-4dfa-aeae-a714b33d165d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f742d31d-d6f9-4d0a-89ac-a0c98d7079d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afae7d6c-1c21-4f63-b5a2-14be7116bbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8636e2a-60de-48f0-81bd-1884b8b09609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae0edbb-5043-472b-95e2-2e2736759914",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dfc2df-c752-4e81-b420-54efdfa9e45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ac35c6-f740-4fcc-a061-b09aa7103acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd18517-8e4f-496b-9ec6-56d237dd045a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4de402c-7074-485d-837f-f4545e55166f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b74422-ae18-4848-b551-b729be6517bd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69484fe-ef3f-4d2d-91b8-d62556f3a4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21245f2d-5340-4cbf-b5c3-7fbc02e8e705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845060cb-0e96-4b7f-8dda-258f509c3dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21e71e5b-6406-4176-843e-cb9f4f03eccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb98cb1-7a01-48b2-88be-06677c64d32b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72211087-ab4b-4a83-bb2f-9f0f1c662faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5317596-dbe9-427c-9d84-69b0e7195ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e667613-14b9-4078-a4f9-123ff1218c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52a16f93-5de2-4c82-9a84-08fe3b259101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb9cc84-53db-4a46-9499-7720861bf2c8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffe3b42-9b98-4b89-9ebb-513a51df5477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7109f0c1-e49c-4915-8a00-111539ac5081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68576be2-9cb7-4600-9602-ed4b397fd003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0fa670-71ec-481a-8b29-b497bc74072f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407881e2-1a38-497a-98a3-aa79e9f41581",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0f2ebd-a6e1-4945-a5f6-38130ff1a075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bde9f49-4fc0-46d4-b5e2-5b9f11d413f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5034952-48ef-487e-bfab-95e8876ff94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e841ba4-4489-4651-9112-f10e35673003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3897b1ee-5bda-4afe-bbcd-47f4242be3e8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1600e526-de0b-416e-a0ae-82dac8471640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946e1693-4028-4cfc-90b2-aff9b0e23647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee10f4c-f0ab-447d-b8c6-e2a9a6618ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca237742-bdf6-4607-9905-a607f955f378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539cae96-ba4f-4aeb-bf09-ecc5ed106928",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e460dd6d-4942-40c7-ba34-c597b76a9f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf7d4a5-04b5-485e-ba86-f4f258470552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d8eb44-35b8-42ef-a6e4-fcc12ed43c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a684ac5-413c-4680-a2df-76fce70b9aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4532e3-cc07-47dd-9d7e-154aa2c6202a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313ad627-1d01-4e97-8c9d-4f21f7b4dc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49741b3b-50f4-45ef-992e-44c8d08d4772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfecaa4-833b-4b8e-8da1-55bec1f1bbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "396a663a-c4e1-4f6d-ae0e-497f52c892c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7221357-0fd2-48a4-9ba5-163ed18b9752",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df5dee6-afed-4cfa-966c-daa1d5c4c441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01420281-798a-45c8-850a-4abda8b1f4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66bb7dc-1a5c-409f-8b6c-86879040362e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c531c21e-413b-45ec-8206-dfee3712bc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ff5a8f-f17e-435d-a7d9-b3698976f275",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237dbea3-fbcb-459e-8397-c5d10cce3ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86922b36-8c7f-4153-bdbb-6060770b72de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328feb3f-70fb-479a-9306-d2e60946f979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c54d5286-9bcd-41fd-8745-d62ec1fd2886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cccd503-bb0c-444c-9364-a8313df86a99",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3419a3bb-5545-4d5e-815e-c40287451e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddab744d-966d-4bb5-b3c9-427c078dc5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafb5960-478a-4c11-b75a-7beda295ec8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "07a69e56-8559-45cc-b7fa-94ac84245ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b253d3-f7e2-424a-b0ea-14824059fac8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6189c7-ff32-43c4-a3ad-335c46bcbafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd110fa-3b87-4dad-a246-58f5071814bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997f7dd4-5663-4499-bafc-d8836c4f591f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2177415-6782-46f6-9b77-5c63656fd506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c55f8a-3a33-47b3-ad05-a59a20c650cf",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998b0324-8b14-4d8c-8cf3-08d0654c2998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f02c10-aac2-4a3a-b284-f3ca9e7fd5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54af9edf-8262-41c9-b36c-8d841d163cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c48d0f7e-dd7e-4337-99d7-410a20b45c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49e702e-18b5-4e97-8d16-5fc36c733627",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2ebeca-301e-42bd-a27e-41e336e1ff0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861dee60-1cac-4ebf-9f22-96293df26946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0dc3c8-07cc-466e-ac07-d0ec69cd3ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6899725c-4194-4a07-b845-ccda51d90366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cb1307-cc7e-4175-9b43-77b66279aed4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b48d6b7-a532-4d29-b0c7-d6a4b3553218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a67fde3-5e54-4244-892e-b89d0ea33869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34e06a3-189a-4d6a-8277-bdf7efc2e987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb0725a-4854-449b-8b62-05dc63121322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410cfc2c-5b48-4ee3-9356-efcdda67d5d3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d9e498-c3a5-4e4d-91d8-966eefe06ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edcc978-8dd8-473e-bc67-aa5d710cd814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4ee23a-f8f4-4870-a534-96616b1d690b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "855a2393-6737-46e4-aa05-40d5883ab974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c519ec0e-dcbb-41d8-844b-ecdd7d072737",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b41f4e7-7bf8-4ea5-b770-84c6bf5dd02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b261387d-84c8-49fb-b946-9891853ee49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53d5be5-25af-4ccd-a9d9-05d11e587c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8757dff3-224c-4eb1-b698-efe7aa921a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b8e3ac-7e86-41b5-863f-41497d7918fe",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f50ffe-4cbb-41e0-81f6-10702f25aec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430fc0af-5f7c-449c-8e64-e56e30befa70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33774084-2e25-422b-a6ba-ccb97fde7955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "698a65e4-d2f9-40bc-80bc-79116373df23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf25415a-dbe9-4797-915e-ff10069dc46d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46f0397-d0ef-4ff8-b468-85ad5227cc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8add247-1b57-41fd-8fc7-15549b264e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912bb3be-135d-4deb-8f6a-a197cb63124e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d99c0c85-450c-4cd9-a94e-eac18aa914d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4487d7-9eba-4e2a-b55a-8a489f72f3e9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642b4cd6-91dc-4bbf-9fd6-38724280d64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4666d062-6ac6-4e40-8283-94a1e03c7f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fa8e98-9f33-4236-9429-74b7e3ae78b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "081667ad-4c23-4c69-a0f4-46044a0be987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be4e585-1ebd-451e-883f-a5a63e8bf48e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971d7f83-16ff-447e-b9d0-34110ba4b827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02aee09f-4b96-4d23-b939-dacffaf930df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826f2afa-7467-479e-9809-5bac2038cde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "02f0ec6a-10d1-4ef1-95bf-694d11c58773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eceeec8f-df39-420b-b6d2-f9cb632ec15f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0098908c-3446-47c4-b04f-a0ac09179b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47544e7-5363-4ca2-9de1-c8dba3f01b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd63eae3-b09c-42d3-b32b-d11842ada4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba3592b-9072-4f1c-a97b-baaba17065b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce2b7dd-9d9a-4642-b328-a17f654d1913",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06479db1-680e-439b-9679-9cc9ae04e4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77467451-d8ba-4be3-85b4-5a3548c76a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea53e36-ec31-4e24-8e54-3122be6cb4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d00203da-fa3b-435d-9c7a-ab7cc669206f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ab1af3-b37a-46d5-9418-e0ca938078da",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91302d4-3727-4e57-96d9-8aa60ea49aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac14cc1-300d-411f-a954-dee8ab321fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d590198d-6185-45d3-ad96-ec2db5cdc7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f6123b-fea7-4045-9bd9-3ec5cbb30a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe3c492-7443-4594-87c3-b488641c0234",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e943c8-35e3-49a5-9da6-e347afa6f4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbccc55b-9232-4c6f-85be-f6a5a724d950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c47ce8-7ca3-4573-b4c0-e3b26b7d642d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7edce877-a392-40c1-801e-6b8568354bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2691c0-0cfb-4225-934a-2df19eba39e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e421cc-26ed-4e41-a131-5706185a2167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736c6f0c-a1ce-422f-b376-23a2af58c04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b5697b-7ab3-4558-b26d-f75b55e5b312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "410edc26-27da-4114-889a-bb79a4666762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ae2dc4-1452-4879-82af-fdd4c1319003",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e278bf-16b1-4d26-9fa4-e1cc15cbb9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f065f213-c6e4-41b2-b999-5d1198a89f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8501e1ef-4707-465e-9891-8a15dd84fae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e781b2-03bf-4b8b-b097-1eb76a0475e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ada70d9-6e7e-4c11-bd7c-12a5d3ce7ba8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d14249-69fd-44b8-9aca-3e73bc171dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a27203-ce4e-4de7-8619-19ef1eec14b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cbe807-87d4-41e1-b49b-3b6b6210eedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b7eb89-a497-4dd2-ac0b-0a5ca10057fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164d1ba0-d783-4ca2-967b-7dbd2b538c2c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbb349e-6da9-46ed-bdd2-6689ec7a6906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8362e58-ac3a-43bf-ae1c-ef9e868642ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a87775-c589-4641-bb14-2efc4de087a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f33194c-5dcd-4c05-acfe-5d430ec5406c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b0429e-31fc-4b41-a020-530cffcda86a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2571e977-a0c1-4f5e-8eaf-31c24c65d6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ef18af-c573-4e2e-9f12-bb5e819d54d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a10d6e-b3fb-46e7-a687-c1914a6816a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bc9892-5630-4e57-ad33-7366cadc01f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf75df61-433a-4878-890b-b8eee052dc8d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e28fe00-be8f-445b-84ab-cf335d58106d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e039f2-9274-461f-9eb1-048435cde810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccb2f98-fdb6-4d15-92f7-4d3c011a4147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6be75b-d48c-4872-8883-65681f4951c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f574ec-1409-4eb3-8604-9d2575abf304",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e92cb0-2c1b-4a2d-a9c4-b91c73b7e6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dec76d4-bab4-4ab0-b6f5-ea19a943b889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e679faf6-c986-4fcb-b52e-40c7e9a91378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e5105f-4b4c-4276-9e14-adac3fd19be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef031e9-bcc8-49a9-bf54-c36ac015017b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c53661a-7e07-465e-a6d2-40b4153a1a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898af678-4500-41d6-9018-4d66f2a947d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a0865f-4170-493e-88ae-c559aabf4d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c24b4a1b-a90a-47a2-ae12-d82187d636dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c704e3a2-7ff1-488f-a3ef-3d2551861ec4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fd8df5-2d34-4a13-9882-23f0be03653f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51dce0aa-2528-4ec7-a734-532c325a55e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e80241-5fce-4036-b5a5-520eda9c11ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97cace4f-270a-4acd-b11f-585120ab184e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9dc896-e209-4041-b08b-fe4b10c7a4ac",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb46fe6-1e21-43be-b4b3-5d61825380b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e5cff5-e91b-4d53-93ab-09047939c0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ea844c-e004-4c7e-9c27-fa3fd9ff9d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "777bb932-8950-4c2e-887c-5ad4f070037b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13172ffc-d419-43b0-bb5d-4133eabbb532",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910a6023-7b52-4b2b-a9a3-7e4b38406354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f853821f-e3d7-43bd-8648-4fd6962046f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca2ef76-e75a-4984-a6c7-3082089af87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92e06687-29b1-4f48-96ea-c543d2277306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5ddc09-2d2d-4ec9-9f8b-5de997b34e3c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ce366f-94f4-4c15-a037-b9448a77ed9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b158679-c22b-465f-9d19-4eb619e23cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926ffc44-8530-45e6-965d-79364400f2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4325c1-275f-404d-8157-27f3c4bf4bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33293ef-9d8f-46a3-90fe-e10d0369432e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765b134d-9632-4240-8b92-7cdc5bfcd47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cab3b5e-7658-43a6-9e45-99ad219b6bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c00dec-40e1-4347-a6b8-9b091173fbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d70fb95c-0b99-491e-b46c-396cb15dd96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f416f639-745b-4492-8090-f799a519889c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153290b1-4643-4b53-9e4e-d7c4864b7ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c1d57a-72b4-41c7-84a9-68e96fc5668c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6559b0a1-bd14-4c78-8bfb-d6fdc702ae07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c81bf3cc-495e-49d5-b14d-32b1c862cf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86039d6d-c1e4-4ffd-b37d-f6f9f0dbbd53",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30277963-d088-4913-a34e-cbf7b8de8c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c11200e-20a8-4bcc-a699-f41bf8e7b871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd20d0c4-bc24-4b53-8a55-813280713f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "064f13f1-04e4-429a-a1f5-0355cbede74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9106168c-c212-42b3-a861-00a494ae527f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a36f608-42a1-410c-ab25-aa108d5ec86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645f2d19-13af-4132-a01b-afa8b8aff284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41830c06-3216-496e-bdbd-720eb3b3b3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d263dd0-3098-41fe-b5f3-55f791b73ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9682a88b-2e22-4691-a210-cd951aee7872",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efe1569-cdc6-47a2-a169-6b4e881a96d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f265c570-cae9-482c-b17b-77b268e9bb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fcb66f-aa91-440f-b3ec-1995247e2019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3811e2-18f2-4aa8-a005-e1edc3df8651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c3d3bb-b2b6-49f2-93a5-44288ce83cac",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09a9d8c-e285-4e6b-ac50-e0e36eb4c122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2244cb7-9d02-47d4-bbcb-73ca9ccd7130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c393f52-ed01-47d9-b8e6-3cbe89da7889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "042ba293-128f-437f-9a49-e27f7f7faf6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f43b47c-57cd-4a5c-b293-d8b023aafc59",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be90ddc7-1a31-4880-a1a0-f808c8341e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6261a6a4-e843-4767-b802-e30217dff26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80497fa-f7f4-4ae6-b220-8b5fa9b3c95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9384e8-5be8-4b2b-9742-dc2273d56f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf37d55-af30-4f4c-8493-3774df3bd6de",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547cac13-c3fd-4a7b-ac13-70f814181cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582d96fe-04eb-4a04-975d-8627f8fe37c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b4f701-c6d5-49cf-a6d9-b0d2071c657f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26a04b93-92d3-4072-8426-9c6d60f56119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d559158d-9ad9-4268-9ce1-c1da4cc7b4fa",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96af9c2a-40c9-4a14-a58c-caeb8faa864b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bf27c2-6cac-412c-8716-267089ab84d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d4d7cf-d822-44c8-9e25-fe24e26677fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e82c00d-5ac4-4859-a037-9060582551f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480aa1ce-854d-46d6-82cf-b0404e5eded4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee81911-0dfe-4cd7-bace-1fb69ea9af55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9a35f4-ef7c-4816-95c8-085510cd167b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744e8a4d-8ce2-4f1f-bdd9-ae05fe9851d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9056b27-853f-4e2f-a9e8-10d8111bd15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba438bb4-1c9d-4375-884e-73772511a297",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213d0b51-ec93-4b5a-86bc-59c1ca9fbae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43404b33-7f8f-4b8f-b5c9-333b800cd66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2174609-c7b9-4b83-a825-7ff379b39388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29a78783-0231-4eda-89ef-fa327a449704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc1061a-6cfd-4a48-acaa-029a6b1167e5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1bb9af-2106-498c-a1f8-e8f8599296a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657f6a49-ef81-4812-a859-2115b64a9aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938cde70-51cf-44ed-8a3b-97616652429e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1b0498-72fd-4450-99d2-89f3fcaadf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85f0471-e36d-4466-a920-7b375a57df6a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22019758-3d2f-41eb-8bc9-a94400a49854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee19816-714e-418d-984d-93d7ef8d9637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085ea0a6-b33f-451b-83d1-822bf54083bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e95ee6-a6ef-4209-b88c-81cbb94cb21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104ddebc-6eb2-4cbd-8961-8e8869de3911",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b612d2-f459-4675-86f6-ab7c8eb42367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20539b79-d837-4a66-99d7-9f3a0c1e87e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1da9a6-f422-408d-a851-28a987b3553a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f472750b-4845-41bf-8b71-9ac99ecec5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff26994-bb8f-43ce-aa71-25c9289b1415",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8d7763-c675-476b-8000-17d0ef112b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e92201-1d50-4f1c-a12f-8f389132c252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be04bdf0-5539-432c-bac0-bc2224a1401b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86131c9d-9342-45bf-97a5-468ed45b40f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453cfcb7-16b6-4c9c-9442-4bd8ab0bf371",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55dd53c-448f-484b-ac12-3da6263d43e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae51a8d-3553-4405-a8de-86ba6f392d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f59d68-fdce-4178-8228-6140450b7cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b894228-11f1-4644-850e-8a113239e651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcb7992-29f9-4eeb-8bc1-ed09cb33836f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689435e9-a9f5-4c49-b188-0ebf22e32bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fd3333-9811-49fd-9800-472555a559e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7346b846-a216-4a2e-865f-7dc3f317e29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b60721f4-e23f-4355-952e-f6ef09de4471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ed48a0-378f-4d3a-81bb-65b2ad85e8c0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c37075-ede0-4366-b801-edfb2e879350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168cadcb-ae8d-4892-90e8-26e883358321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2e14c7-9bd5-4a9c-9cfc-f76972be4dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1937f80-18d9-4238-a766-88c07338baaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8c5fac-5491-4468-8083-63d11ef53583",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac8cb48-a77b-4d6f-bf37-139d1d386252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5af329-7a79-4410-bfb1-35ba6cc25b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040625e5-5670-461e-8f21-b019bc791a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5298b345-5c0b-4ef9-81cd-2a0575524e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91e693f-f2bc-48a0-a2bb-ddeda8cbb0f4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fe109b-c705-48be-893f-70df1672b4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c75ce5-0828-4365-b106-e4c7a14c5473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1201e909-5269-4131-8c3b-4f7e5611998c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8dd323f-ed7f-4103-9e01-a174979e5150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9253af10-0078-4e01-a9f1-f2a55f6fdc72",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5e3300-62f7-40f2-8d01-51d5329fcfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c882304b-e3be-4674-b31b-c3a1d2ab3db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af0372f-6a64-4fdc-8d7e-88c2ada0f3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e54a1d44-6e0b-43d0-b451-5bde2ad9f88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dab062-1724-4a10-9c2b-b31b72941132",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c76d5a-cb1e-4229-98af-15d92b6302d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dcf9ce-3f67-4160-85f0-aa53addcb9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4864cf0-1ea9-43a1-b45e-fac493ac276c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a4a489-479c-4b5f-ae85-14730ee92bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3b1882-12ce-4aa4-bf7a-a18affe554aa",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7c50a6-f7d5-4b67-b30c-69dd57aa6ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338c3c3f-cd13-4738-8239-b21c6d6aeade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb5770f-5699-433a-9486-85bf318d1713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e920d370-4774-456a-a3e5-940a27206193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfec277d-0865-44b2-8e3c-fd6f7f9a5ff6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a88e78-5ccc-44f0-890b-9249f4f44649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "baac7a8c-93e5-4a6e-a64d-d839c94a9286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d732d08-7941-4e4e-a1b6-08bbe6553d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f22f004-2db4-4446-9019-cef24d4bc082"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f65744af-3d80-420b-95d3-74d502bb67a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5151006e-f882-4d83-9a98-a7a4cb8e577f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e7f47d-ab27-4f19-afe4-407cc22274ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d845d1b-1b5c-4c7c-8ddc-bde51f05d7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff87c985-d6be-4043-9f40-5e29f6c2605c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a54a943b-7d97-43b3-9e67-8e33afdaf716"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a035ad5-d379-419f-a832-f7f7c46d33a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f77c806-c875-4f02-bfc3-cd7c5cdb5de7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "651f20e3-5113-4c4c-9c4b-f52933bc3d3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7ec02ab-d29e-44ba-8769-c6c71984869a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e798817-9623-4af4-bc5a-e7ee7a092df8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95f1070e-abed-4e47-88b1-0c9ad5ae41ba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b36aa20-2a03-442b-ba81-9fdbff2c9bff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9a988dd-eed1-43aa-86b7-f3f06fb915c6"
                }
              }
            ]
          },
          {
            "id": "c8c9ffe4-2bee-4ac0-b225-4f102f6977ec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fcee97c9-a773-4c5a-8a81-ecb5c2f383e5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "382bc559-c252-4c5f-80c0-91749f1d4d37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e90d5c0-23fa-411b-be21-c414d38afc13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ccfed17-e340-4d9e-9beb-391d230cd754",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "28a859f2-a131-4745-b876-a39e5bc7b1c5"
                    }
                  }
                ]
              },
              {
                "id": "b2308420-e6a6-4445-88a2-aac01764f889",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "983f10e7-41eb-471b-95ab-66e0d41c3eb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3d7afb3-15fd-43d1-b4c8-d72312167948"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bb938bb-a692-4833-8b38-9a614cdacd0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dfa39270-7f7c-42cb-9658-cacbc70398e2"
                    }
                  }
                ]
              },
              {
                "id": "bd467302-5510-4e26-b187-97d193d42fc1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9696d418-37b5-4c78-b57f-f1f7ae90844a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56b528f8-c041-4de1-ac96-8b50c85e1317"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a658bb94-94b7-467c-8de8-393f63142d8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e5399a31-9f49-4fd6-be69-4e706a39b73b"
                    }
                  }
                ]
              },
              {
                "id": "720d06bc-ab44-4787-8d1a-529aa7dfd129",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "858bed3f-61c2-4cf3-be92-59ed3c809162",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80e26585-304d-43e6-94e4-3345061fd546"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11d07547-765b-46e4-a935-f3129ae0e37a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ee632a29-af1d-454d-95f7-db61f5c879a9"
                    }
                  }
                ]
              },
              {
                "id": "ac1494cd-d2f5-4f3d-bb75-6aec0c465b2e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3f24e73-b5ac-4005-b042-01fd40095526",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "361135a4-1254-4232-b64e-eb2bd518082c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "327504eb-977b-48e8-9c35-c50cd7d1ed08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "921a691f-353e-4068-81e9-099829bb33e6"
                    }
                  }
                ]
              },
              {
                "id": "33c6afa4-51d6-4a43-be5e-f0e23f1192d9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b686a704-cd44-446b-8328-e435437a1da5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d40dc40-ff29-4a3d-a1ad-7c6db8b89a6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66a60abd-aa83-4839-8f6a-d50a3981f890",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa40b670-a09e-41d6-9d6b-3d43c163fe39"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6ee953d-8f1b-4a88-8594-0a2e86bae7db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60a09059-19af-4508-ae18-f5ca4c9ea95b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6c9312ef-5b8f-42e0-8fea-376621df7150",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bf57d21-99ca-4be6-9927-706a24caa855"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "238753f7-2863-438c-83a9-4b3300ac5348",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1a7fcd42-e5a6-4ae7-b81c-9ff2adcf4925"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a699387-6ced-4be9-a16e-42da274c0751",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d98547a2-5188-4ed0-b6b3-bbbc5722f816"
            }
          }
        ]
      },
      {
        "id": "1deb7aed-73d2-4b0f-878f-c35c3cd549dd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0347d917-dfdd-4b99-b579-879065b1bd5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "130c416a-3b3a-44a1-8872-dd81236c4a08",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "58322b54-10e1-4d29-bba4-c462eae48d3f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a303c9-0b31-4ba1-928e-7bcbc0239d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448c83d9-4c5e-4fd0-b9f1-c798a279e4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bda50b-02b8-4e3d-a125-7f9a848e05c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5c2083-e53b-4505-82f4-6c69a045006e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49175d14-cbfc-41a3-8f93-a82a4195e7bd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01720a3-7b0a-4a26-af6f-c87ed22fed9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1d80bf-eb4c-428c-a401-c2e9eb9ac38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07bc580-fa3e-4982-b709-c9c95e1b699d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2568cd-b119-4ada-886f-2486fa59b27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbbcba9-59f9-47c2-8e3e-e490497c57db",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b5fbc5-53fc-4d19-8815-2f95efb56428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3befa3-3611-404b-9714-dbb7b360be4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f103ab82-5383-4724-bbb8-527ddc5bcda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5798989-02b1-43cc-aa28-6a4e51373f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3e039e-08c0-4e57-9616-1c0d2597bd4c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8af2b3-8dfa-4287-8170-c3fe4b01b31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f99b011-09c7-449b-8441-3bfc8d4ebfd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b1648d-1566-453c-af25-aa4b43a68fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4913256a-5e58-4d8a-9b6d-173639cad984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b419f05d-6166-4cb5-a278-0b291c2648eb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb3c7a1-14fa-4bbe-8d01-476f694817b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbd8f68-0462-4580-8fbd-3dc6dc7dbe6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4e9b88-f015-4f90-adf5-6a13e9ab971b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0836b72c-cd40-4d23-b1ef-38f5835c7c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9326132-d147-476a-90ee-3c872ce46d98",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdab144d-8d9e-4856-8554-63f37d19f410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557577a8-b370-45a4-b085-3da25a89cf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca02ca7-7a38-4b8c-87ac-a2d30fe5bf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5530fa-667b-4661-a87c-41ab9eb05af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a67e07-e197-4ebd-adb8-dd10faae1053",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1368ca-4f91-47fe-b4a5-80e5690272c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939d902e-b1e8-4e9a-9a0f-0d1b84d80f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62b41e5-aa64-4b89-8527-42f943f28d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0388db-8939-498e-a9f9-a16d2435a3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f171340-65ff-45c5-8db6-08710e4a1c9b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ec1c80-fd6f-45c0-84b9-e1190f5c899d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3238335-b996-4ae9-8a3b-a571d5d522c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359e7fd2-cd84-4f99-9830-5d3ed5321196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afdfb7ac-0d54-4273-84b8-fd02458665ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cd32b9-c686-4d10-b20f-f728a9fdc082",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c00afed-ec39-4328-9d70-0f9f8126b7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfe7f09-b486-4919-992d-74a19833567a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f671ecb2-54ac-41a1-9d26-6f24d51136ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0b6565-6cca-4547-b0d4-7e7fa5b9dbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca43139-5805-4924-80ad-a7bcb9f05ee1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1dd962-9bab-472e-a73e-1c9819c5d29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7036622d-8c3a-423f-990f-5c36d34f7c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9f3d3a-2e18-41bc-a03a-60a26fd4c140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7528681e-3c40-4c13-95c3-dd9df62fd7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc122088-9673-4a86-b10f-129d6ba70ad3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f049e6d-d22f-4a9f-a37a-573d194484ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8f5f81-4e85-4500-a372-28516ea68cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343803f0-d42c-4e23-ab23-12c24970e3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "83b555c2-3557-47cb-88ce-4e45f93ce731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a2d11d-958d-4432-afa1-a4a3d48c9594",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d225f9-198c-4fc1-852c-4804af20ff19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602f3f5b-59e8-45d1-8de3-4add600d4de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a5fd23-0b77-4fb3-a66e-7226640479ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41d8d1d0-3052-4447-bfcc-371da864a5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9927eca7-eeab-4a45-9d73-453131768eb9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc626227-3cd8-4b72-8565-8aa2f1d1a5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0795a678-4047-44be-87a8-33845fdcc8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9590af1-bb92-41cc-9896-d47dbed050e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9362c6e-ae26-460a-b954-e2e124fd11fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0164fe6-633d-4787-b180-70820c1e7e08",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938a3a0e-d738-45bb-ae16-6846bca3e682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e49f260-7828-47dc-b15b-2bd2e59eeb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582214ef-e8cd-46ca-97a5-a5535f3fcbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6caf147-7511-40db-8394-8928b05ff31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfaced7e-b5aa-4bf8-af1c-880e1b2367ac",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac462b4-920b-49f9-a2b5-5d4ef11f4886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4ddb90-101a-4e48-bc1f-b198c491f929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8a8680-5b06-487a-ada0-c84cfdd11d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "95b5920a-9c4c-4dff-9783-b72872792d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f9337b-6dbc-4d0b-b89a-88c5a5771ce3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d4eb5d-bf76-4921-8ca0-ceae2b1473b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1bceebb-be9a-4884-b673-bfdb2d5d446a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa26552-132f-4366-ad94-fbc753627896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "728df442-023f-4acb-988a-a36f1e18ce26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12348579-3e36-4ed6-bd06-d586883cf3b2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2ca953-6fcf-4405-8652-f751389e3f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d03509-5b75-482d-8d9d-4c309936da7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabcef5b-872a-48bc-9cbb-a846e39a8e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d559cd7e-cd54-4de0-bdb9-f363ca44bd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389b66d0-a792-46eb-97e4-639526fd80ec",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f8c09b-32eb-421f-9a46-7aaccd35d4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e11e6b-2c7c-415c-8814-836c83380c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295e42b2-bdf8-41d2-b35e-bc9b18d7064c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "efbade4c-6f72-4d2c-a0ec-3f9c678fd75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606851b1-9261-4822-b316-b977af2c955e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1cba51-d68c-49f4-bfbe-be043cb3716a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb0b820-b929-42f0-a5fd-0e517a44bf48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e40fe0a-cc63-4612-bdba-d2cd116cc5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b804230-64cd-4358-a555-bfc5a108b11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff1087a-2104-4698-b5b9-a4f2919efe80",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54309617-390a-44ba-a4d8-0c10812ae461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c71af2-385f-4de5-b921-e7bb561cb65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22afbe7a-6484-4b50-9e58-4e1782b30421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21316c8c-e30c-4c24-bf52-3b14cf23e916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd453ab5-237c-40b9-8432-90c9863c06d0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c570ebd-fe66-427f-a9c6-586a167b941e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8601fd0d-06f8-4129-9e7b-3ae6a08af5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc684e90-24ac-4c01-ac3c-e689cc324f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dff31313-9d7b-4ebe-b984-981df7e156c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b45d16-5eee-49be-a482-c2484aa62a31",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962924c4-dddf-4e88-bee1-3fa06be73f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c200c63-918d-48ff-930f-570ab417ddb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25da3df5-dc73-4036-b4f2-e2eed6ef3e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4360f97a-af69-4c88-9644-1399442f3566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ae41ea-9f06-41dd-a61f-f47d0417e4c0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead0980d-9e1e-4d22-b236-eadb25efd7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9ab2b0-deb2-4423-a474-b13e42ba8d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e18aed6-2300-4655-a60c-e1d683c1a28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5066158a-806e-47b2-bfed-c998383bca34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf0a86f-d2c7-4178-971b-368dfc7bd01f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7b73c6-6a8b-438e-a7d7-760155d0efe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd5e3a5-1b8e-4726-9c12-417612ec13fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69cb234-2177-459e-b6bf-3f117af716a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "717398d0-5ae7-438b-a72f-443c51f40a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cd9fc1-aa82-45f5-87bf-053229b50b66",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b05b527-d0b2-4adf-b967-f855cb321ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4dfeee1-6268-4637-9259-01c0ae7a7901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e962be0f-485b-4218-8f56-4e5466a7728f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a440fc1-b92b-4730-8f35-f25340c82f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f815536c-11ca-4ad9-98d7-00e08cae34e8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada12b81-42a7-4d95-91b8-d5e4dbba12a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a840ef9c-db85-40d8-8b56-bc7bef1dcd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbd11f2-3479-40c7-b14c-35b3e957ad8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b1c250-4ef2-47a0-9f92-c9878a2edbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d742917d-d86f-4eee-86e4-857efb4efe5e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cb4f77-48dc-4a51-b7a8-88900ab71d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bb77a6-a159-43b8-8b3d-d3c03c7e2719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e226d76-4080-4b6e-86e0-6d34dcdec8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1417ce9e-c43e-46b9-a189-a3cbe63f255e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c93765-4c78-459e-9e80-c9146c1b9ecd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b39fc01-4a16-4b55-af06-1fa8b323ac40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d71bcf9-1378-43c4-b5b7-cfe066fb5b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0262bb-cfd0-4124-809e-b0974ab0eca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e042245a-394d-4e44-a44a-f201aea56640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1c7e06-e3f0-4b41-8814-4a329f413755",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4124b555-528a-4e31-8abd-bf3ff28fad26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ba5ecb-cf96-416a-8e87-ba3066d6c685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e135d178-c381-4174-8076-9218f8154132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4a8bf9-495c-4a69-af3a-7f8f00fda8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad9b7ea-9603-4ecd-a7ab-937c729519eb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04eed61e-d844-45ba-b097-72b5bb022952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd96229-d69f-4adf-b688-de86f965f959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7891df0f-d90e-42a5-b985-f04152340f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03c5b97f-a818-4c2a-892f-21d8c36249ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5877eb2-e631-4230-804a-c1ddf9bb78ed",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5877c366-c175-44f7-9e7f-3a7301d9d7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28e7002-4952-42a9-8b4b-20e0d9b5b495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4efa6d-a3e4-4048-a558-3991fd1620e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5b4a05-9f08-4a4f-9560-de3ddd69ec44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2febd52-29c8-4599-ad35-e868b5c6f8bd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bb5b58-94cf-4fd7-be7e-5fc5e17aa996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10e9a1a-3146-40ad-9f00-c96b704c3e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cf0f74-08aa-4440-9fcf-762d73145016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2e841b-4819-47ff-95f0-824fcff4fc2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bade9d1a-3819-4fc8-8f0a-f1dfb1e09bfc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88c407a3-78f0-46fd-ab63-3257d0eb72eb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fed5000-eedd-42ee-a71d-470e7b006438",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "23c377f5-1ed6-47f8-b0b2-ae7d6b17852e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ce039f-c7f7-4490-8653-a1c26e2e3a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2529fcdb-a456-4e5a-a173-39de5af5a1ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a9cb00f-4606-4790-a226-84abcb6cf448",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4600a1a4-fcd3-445e-8aa2-0a525e8bbd25"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98117ecb-445b-4b1e-97ee-8eecd9d848ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53e6a893-3846-454b-9fee-66019beeff4c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecab0522-c39c-49e8-b550-69726ee1130d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fa8c301d-e08d-4f60-8f92-3d6be18c3e7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7bcbdb1-c13d-4e6b-ae85-247a13b29eac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1e4c49b-7f5c-4015-8ba9-f5e3d2acd634"
            }
          }
        ]
      },
      {
        "id": "7c2e1f49-0733-470f-b261-954ef1382319",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5f678b9d-bcf1-42a5-aed7-2b13dc7081c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0f85f38-4f0c-48c6-adcc-9a57e28d874b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "59c472f0-a1f0-4196-bb43-9e9a80f038a4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de62ccfe-f884-44fa-b985-698a555827c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e3eccb-2548-4c1b-a8ab-1411a2246c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa96c4a-19fd-4cca-b27a-3592fa96959a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "db9aec09-9fea-4314-9351-e6f303a2ca63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c62d48f-1674-4cf4-b549-b4f0aa284e95",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abb06ab-c1bc-4029-ab20-7ba2f76624bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799e7344-2738-4afd-874a-7dc6de29656f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb520f4-148b-4a20-b1dc-46864a760668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "321b6239-5e33-4eda-81bf-72b030707b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ddb767-fa94-4d93-afab-7f7f6d3f57c3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b064b95c-44d4-48af-92d6-87f8d894b440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e2de5d-898c-4199-a217-5fdd23655614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3dde443-5a1d-4122-b539-886c026ccc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5e7964-ed41-40af-b7c5-73280ca6e1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0539de03-5a34-40e8-87b0-825141aaad77",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fd8ed2-6c5d-4807-8450-ca31d5be5322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0480ba-e001-49ee-9b22-352e361abae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45814e97-9b38-449a-9033-ba6008493de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52efec0d-dd2f-4912-ad44-f2893a73b74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df9cecf-c485-4dcf-af40-37ddd4627a98",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67df33a4-87b3-4bae-90f3-daf39c6a7a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0266d4b3-1f73-4f11-806a-ac9ae59198bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d0b7e0-06d5-4384-9140-49864e187fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54d3d8a3-2e14-4a1a-8051-6159c7a854c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffcf084-730a-4a6e-b952-6ef21ae81b8d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6676011-b92f-4031-ba3b-7c36595e6d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b835e9e5-541c-4d1b-89fa-1484a40e2ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63909fd6-d24c-407e-b784-e61b5fa9ca00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58cfe63d-a442-4858-9911-354fc68267d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91fa44f-8eb9-4c9d-9455-aacf0f446509",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70d0ef8-662b-40a2-8329-36cab1e2751b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22acba22-2a0f-4786-83a1-3307e758c9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199040d1-338c-4653-b230-2f30b7a118ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b334271a-7a55-4fc7-ab13-01cd38c64dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa4f317-ef66-4f09-a9d9-bec50267d027",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abda7551-5a9e-4ae1-89a3-73fe1c8bdf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf8f680-5dc6-4ea5-b72f-ea13b10849cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b077f8-ecf7-4e36-9c06-6e353b432d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2974786a-c90f-438e-a5f0-9449af7a2579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791b3e10-fa32-4a6c-b2c5-5d2be7981148",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1316894-4c61-4ae0-8901-11ad4dee997a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a62e6ff-ca24-40a8-b5b8-21e7db2fead1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd32e00-429f-4d3a-b0ba-a25e51a836ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7da4abf9-413c-4007-ad4a-2d9de60910f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552da1c3-7083-4e49-8b13-6294c16fda8b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f2b063-3711-4642-93ad-c2a621393359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c221b0-d542-4940-9f3a-46de797e275b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f529fe9-5a76-465f-a9d4-842805b78250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5989850-1a48-45e6-8ee9-c66dde328b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb7ab80-2993-4fdb-9e1f-e0022f23067a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eae1049-cd40-4f91-aca5-1820910ed23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0627f2-37eb-4cce-af00-11cb68c20380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eac0cf7-2737-483a-ac61-22605b7daf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd59e7c-348d-4947-a5bc-80271c9c4af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fb47fb-6f9c-477a-bbc7-d99ccd69c41e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f0dedf-1ff2-4361-91d4-51bcdfc622fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ee121f-a035-4a0e-8708-5eb5a5f13310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c388cfe-2c5a-4e41-b8c5-79e318c63535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc247f39-3a3f-4677-b2b2-adbc91135b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ff0cd6-1d0e-4ece-a17d-8a14a0e40bd2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52fc643-aa2c-48ac-bcc7-50fb3372157a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc16f1a-1b65-4960-ad15-4c0cfe8c1481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e1c770-4bbb-4b4e-87a7-b38ad4456250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f811317-8862-4dfb-8269-1ce429b6c160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c3490b-3af7-442d-8c4d-6691995f3a8e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bce09d-863f-43bb-a794-74131086550e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1475f8-94a2-4ab5-89cc-2f35bbf3c0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654e7d4b-c636-4e61-bfb9-3812005b9c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3be8e3b-9a4a-4b81-a6e5-9dca93103b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68ff338-f56d-42a2-857f-5cc3d73a8d55",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45530b48-4a4d-4e6c-b0d0-0f1abf653e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316235a3-d016-468e-9224-a8c7c27dacbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9db0b3-8121-45e9-8608-314202b4b455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "115153c9-36d7-4df9-af23-7f6d30e4f113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6aba5dd-9ac8-4b0b-baf3-35a49a6caf42",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01253c30-7de5-485d-9830-70e39ae07127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc723ba-acee-46d3-8eab-1dd581564eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b36db2e-5014-4ed6-8f05-20b510b2e77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2ee8f6-a4a1-4b5a-8a27-c6091fa6cc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c31daa0-ae98-4cac-b86c-b155bbef5e75",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d9e3c1-6cdf-4fbe-86f4-4d17b7c2d52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a541af-0921-4cdc-b3aa-648df7ae1747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc868335-4ca5-4775-95bf-31da12fec2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "edc4311a-90b8-4a01-bb6a-64deaac5bd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06026d7b-c5cd-452d-8948-ba6864ed0285",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baebbf84-cedb-450a-a81e-81e7dc8496da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a460571e-2381-4bae-884b-5c221de3b00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8739c8d6-3012-42e7-8372-c027d4a19a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad93c1bc-be19-472d-9b32-625401fd06b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33789eae-0fdf-4cad-8cb3-36e5138f17d7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f9817b-3c49-4565-865f-930472964c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f934972b-fbf1-440c-b5c7-3262a981c412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcc4571-19dc-40c3-ac8f-c8992c882776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de6165bb-8de4-4fdd-a4ca-a58a1d346ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a40d05-f666-41d4-a22f-4bcf87a5357a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19a6c3a-abbd-4d03-87c2-e5714ae5b260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323bbe50-0173-4f3b-8e09-91d1a940ac69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebeef5be-370a-4e0a-b546-1810a96c350e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f41fb10-545e-4003-bc7a-05d920a3f07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c664e52f-fb58-4ad6-ae9e-7fc067debda9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c846f9-2e8d-4411-832e-1e77fcd6beba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356eabd8-11c9-4879-afb8-a4ab3f875bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114441c6-bc5f-40d3-8c7a-73cc4120c511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0aa734-3d50-4fc0-b589-35815b94cd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c49d016-8370-4a70-9e71-8d7a3c2b7966",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edd6151-d16e-49db-b7ce-050049af9b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83604366-89aa-4901-84d4-076a40670895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b46447-d08d-4588-82df-5dc55185a55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40361d84-1e77-49ad-a108-94f7152a6e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57598997-926d-4295-b1a3-3a3f851a8402",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfd46ad-9c24-4767-a6e9-9ab8328b2f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572d7e3b-9b26-421b-9b5e-7d5a7e230597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbc8a32-97c8-48f3-9570-ad5646ae5431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94479a55-dd0f-4fc8-952f-e636b1a7c3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657daa74-9c3f-4965-90cb-34c046f64421",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64e3bd6-cb15-4a47-b1e0-e80c720f42cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f4dcea-e3ff-4e15-9ea7-84f3c2cd8919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585bafb7-dbe6-47f4-aa45-02576a81431b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6e9aa6-a12e-479d-931b-bf78fce18ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703975c0-2bdc-48ab-993f-4d3fcb08f783",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a85a32-b7a9-4493-b358-2131bef823a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d599ab29-314d-4959-989f-e0815511ba68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d32782-ba72-4e12-a4e9-2b4cf1123eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec574c4e-a19c-4837-b58c-d9e12436bfac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdfef0e-b67f-43a1-8c25-892a9b189875",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b202cf5c-6dcb-43ec-8e24-beb62fd82d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f323e895-0e6d-4b76-8579-9990e2517c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcf47ce-3afb-4169-b9fc-bbb452cc6438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90ad8c20-bae9-4460-b063-93c8e3386da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde66c7e-a83f-41eb-af91-166a4c2671e3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7a4b30-6861-49b7-b16d-1d74c6c973bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b464319d-4771-4840-914c-fc3686276934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c673cf52-98d7-491d-81ea-628b577d4ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3baedd-8f3c-40ab-a0ed-f770ef0e1e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be957ecc-5208-49e9-9a14-f79fb48f1c63",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad254a05-ba7a-4b0e-ba2d-4bd4d24b7568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac993ce-6531-4441-bd72-286f39de8046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d51cac8-c106-4a82-893b-a1a81324a9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cddc535-cfc8-4d9d-ab1b-c696220ea20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06356449-852e-4892-b10a-46801b283897",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3499aa-7afd-42b6-9ee8-3da71f674e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972c9c52-a9ea-4225-ab37-1dd8a10bc7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d893f4ab-6262-44dd-a107-5b3ca2edb27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0683a4a3-641c-42b9-9b93-4d5d366c3846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7784ecc5-64c9-4dd9-afec-73fc8772d98b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7601aae2-2b19-4bd2-a835-a4ddb849be7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd640e91-04a3-46af-ba75-5a8423f3171d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f076fff7-a2fe-4143-a2a8-f471dc84dba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10d51849-1314-494e-b7cd-617403046e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a54516-bc66-41c8-8abc-d00acc7df47a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35565b6-6cc1-4107-b6f0-381ef3601535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8f7fec-f0ab-432f-8ff8-d7d681ffa379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e94241-77ac-44cf-b36f-2b808648b40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cffc8222-c6b3-4943-8970-084193155bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb848c56-672e-4bd9-ae07-0117d4402aec",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7de3e3a-bb8c-4226-8ec4-a970b7e1dd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a63b56-12b0-4f65-b93e-e6280288e73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf069ec4-eee9-4460-892a-40a445142712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c34586d1-52f6-4aef-aa6d-57f10c9acdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa954ccb-6e99-4cad-a74e-b931766bc50c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b297fa-ac18-420c-a29b-b6356a1c13fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10722ab6-2fb2-4a69-af10-7063fb19679c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04c5599-ce92-412a-8036-e5b05e301fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "542736c0-1cd1-44b8-adf7-5d57df30ffd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3840ad-5cd1-434b-a1ae-6bd3278d309a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23a17c4-3ff1-4f73-b252-0a658762e74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e982ca-ab61-4ab9-b8bb-09d3355f2780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60097390-adaa-4ae7-95cd-44fa8789e117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfe89d2-f65d-4bbe-afa9-3867e20b1604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4050ae0-03b4-44e5-8ff0-088be27c77bc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7aad6d-4225-4673-8192-932521838302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f487b07-bc69-4083-b1e9-5ef2269a06f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54446108-8e7d-486c-b498-8c65cfa7b2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "052c6b6e-b4ac-455c-b294-5ba52e0b78b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262051bf-bcff-426b-bd8b-67c7f8f2886d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8016dda-7936-4090-94c8-19b8bf5c861b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b63dae9-2227-4c35-bdc5-8d3922c70f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c149daa-bdc6-4a0d-a418-8d5c81f0c976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a124d0e9-97e9-4c36-a0f3-de78db91a3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719e90b1-b7f9-4488-a042-5d6581dbb241",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ccc02c-2a37-422c-a1fd-41b4cab1b9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2985f64-f67b-45cb-a067-e2c1dd080ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d298fb-2970-4ef7-9a9b-c1ee87d1c054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a02b1a1-1eb3-4ac5-a1e1-9c5670631a6e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "68466e5d-e65e-40b7-aaea-ff5150c19de3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "783959f5-1789-4680-a62f-b050dc2bb72f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f6aeb3-a527-403a-87a5-db9c7add7bd3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "87fab282-bdb4-4ae1-a3cc-1b24cb9b5207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295bdeb3-a667-472a-9447-668fdaff940f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "063c57a7-d008-466f-b465-20b89f77538d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e33cf6df-d7fb-4fde-b4bc-f48929049828",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18f248ce-d98d-44f0-9a9a-59fc4de27733"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4db6987d-e072-4a27-b4a6-b64afd847310",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18ce9edb-b5a2-4b1c-b07c-2617b3776cb9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03f9bf59-6fcc-4825-a91e-fb565d779d19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0b59dc60-af8b-457e-abd1-c8519bb52fd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "301afdeb-ef91-4a6c-9ae0-8ed35452dab9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6da471fe-ec45-4609-9f42-4127f0321a59"
            }
          }
        ]
      },
      {
        "id": "3356ff35-091a-4e62-a55f-6fcfa86499b7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0f3a2b60-18a2-47ea-bfe7-738f9f3c5f35",
            "name": "Negative Testing",
            "item": [
              {
                "id": "713b3f4c-dabd-40c1-a8b7-dca3913bac32",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "97cbf70b-b0cc-400c-b5be-36bd5262da2c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf6f97c-1b87-4bf5-bb88-94be982e9945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2cb87a-3cc1-4439-acb3-35fd46d8b06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce422fc-c65f-4f1a-95c0-7fe76c62ba06",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f74f36-20d9-4e23-99c5-c42e71ca0eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cad4678-f384-48fa-ac6c-b8c6a61a51e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e803f13-a53a-4f55-9720-fe68d3f1f03b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822e764d-a205-4bfa-a6ee-250fb4b9f53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567e7033-1988-4c43-ac39-c0fd362160fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0bc88d-b0f3-4d30-9323-98ae27b44856",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec7a8ba-b7b1-41f3-8590-af55fb83ced9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12b020f-7023-42e6-bf8f-fa6e06ea50c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c4cca5-9949-41b6-a5ad-efa6619411f7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66981e7f-4c53-4de4-8875-b8fbebdc40c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecb88fb-9104-496a-90d6-41ac8abf2f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df39d88c-d642-423a-bba2-bf5183c31826",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0be72e-9d03-4e38-915c-a70290762afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee88957b-04f1-4328-8cce-f8f95180b44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf479388-f0f7-45df-9493-ecd2b22b7d31",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a065ebf0-9805-4f13-a04f-8f03bd33efaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466ae2af-3eb1-4514-a9c3-5f62dfa41b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcde171c-8d57-4c64-b23f-9c3f960f6190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5350eb-d250-43e8-b2f9-e88b6bb7cb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a48136-b746-47c1-9484-6378cf93c0bd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96e37aa-eff6-4625-b453-600493db16a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7ce6cf1-97d0-4dbc-91e7-3fa6839ed187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afe0383-43ec-42b9-aeb9-fc73689b38fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa33880-a2df-46b3-8da4-3ae93c28ea7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6164c4d8-a31e-4439-a35b-b8bd690b6325",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462aa889-929c-49fc-a869-2afce1f0a896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833d4d15-12d0-4fc4-a02f-93cea5fa473f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d88f4e-8900-47b3-bea2-194979782725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83f94d1-43d1-4f8a-b7b0-7e107f2b705f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88925379-0044-4ad4-9ff1-3a1dae3e494a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6948e3dd-437a-4215-93ee-ca6db245435d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b4e4643-09d9-4085-af02-23434bda522e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d36647-e008-4ba1-a00c-29e6652dc5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b869e50f-47e8-402c-8cba-a2617a4db4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da74a825-339e-4846-9f1f-8a220077e4bc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb14be2-a31e-4f40-b8f0-3ce7dbd5ad7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56aaddcd-ee08-4042-bae3-4290c620b2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc9bb96-622f-4aca-abd3-84e3298c90ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d8b7b0-5dcb-443f-b05a-f0cc0f30fbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7691f9d-b6ac-4966-a196-71aa2d827f69",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8c43ce-aa83-46eb-87c6-3897b2d813b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2eff967-3a70-40e4-91bc-ebdc40b7e695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98876f8a-01b6-4323-951a-8a12e1d30e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b10668-cd90-4205-8720-d4bf90b57b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5427cc5d-9a0c-4a10-afef-ff65d6ab4fa5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e363d30-f36b-43c9-83bb-381ead758ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "040a44f7-ac85-4ac6-b41f-4caef2441486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1f58b7-0d40-4827-9db6-4719900e5680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3601ca75-ed01-4031-a7ac-fe4bc61c2fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282ae109-9f71-4abd-9b54-b2c1aff1fe08",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4b8588-9992-4e51-8dc3-a38a75a5fbda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f69290bf-e01d-490f-afd3-e02f79c259ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cf9558-d968-4476-93fe-7143608b2e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02eb737-06b1-4ecc-b46e-54953a517f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d77fde-1190-47e4-8e91-fb2e6d163b88",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31ad5c7-7b9b-498c-b513-c948231b0141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7558b236-0c7e-47f7-93d4-1fc20fe28c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e740ea28-9f4f-4437-ade5-40656e70ff39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75cc4b5d-de1e-4af2-b133-a2bdde4f1dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f024af-2097-420b-9b91-052841578585",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9782e2f1-0912-484b-90a2-fb9c04d82b12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d58b94e-422a-4d0c-8f40-b6d99e474564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e85b124-e61e-4de7-b795-170798920720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ff0958-fab8-449e-8e5b-75bdc9e7de38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58051032-923b-4a34-be8e-05b05ac9beb7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f95afec-f8cd-4787-9b09-ed9d08fd5d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97c4934-fa71-410f-a37c-e77a49227226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8b47a8-af47-4d1d-829c-7382574e0ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa29d00-cb62-4549-a14b-dba3bd482a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb52d23-c52f-4b48-89bd-7aba0af50b49",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd58bfdb-6485-4c0f-9316-238a8650cc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1306b51-29c2-48e5-9f37-7135e237fa2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62125822-f0b7-4d8b-94d3-fe7656ff6d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8337d476-427c-4874-9692-a9c751d7943a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f58786-e596-40fc-bddf-de706126a996",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd998b0-a2db-45db-b1ee-db643d3f72b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9289e1f8-cf8b-44d0-9f1f-25321a7c7404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050d0451-59fb-4b43-bfb4-7b94cf7e4a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340a7f5e-1600-4a02-9f94-080264ae51a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c10f1f3-7705-4ae5-b128-3f748fbac31a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0020842-7bcb-41e4-8016-a230ca5c0f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deaf979a-8891-4bb0-b36b-71699bb651d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be874149-593a-48bf-889c-dcda0b5c5ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7040f023-1286-4025-baf9-0cd81ef9019c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151ec853-3387-44e1-94ee-78387c376598",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b9c945-39da-403a-995a-877b313dd9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6a0e9b-9ec1-4b4e-8c0a-dca8f0a1e48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba3d4b2-233e-4beb-ae48-4e470b348844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87d9f24-8cf4-4b68-ba74-f7061206177d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b6b4a8-8c80-4267-bf92-04578aabd89f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f961e8e-34be-4cb4-ba41-90960795dc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50571da6-f3e6-437e-94c0-716cda4e9703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767bec61-e837-4293-9ccd-0d20cf850c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5004e4-b29d-44b6-9b9c-049a4bd8ae0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e623f52-31b2-4144-ab13-3cb40bca2ff3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b73eed1-7661-41ea-a7a2-44e828ecc5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422e76f2-5f05-4bf3-bc23-83ab75ec4e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba3e52b-2158-4505-9d98-38465fafce44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00f0c15-9923-4d92-acb6-fee5b29ffd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207df351-839c-4962-84c0-53b3f517d0e3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a71a344-6367-42cc-8a21-af1b4caad6a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57e9b67e-54d5-47d4-93c9-9aae5ae6d714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a026bb7-b94c-4345-adb3-ebb160694c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da64165-2942-43de-bb80-b74222ffb797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb1a862-abaf-4aaa-9bb7-43f4bb04aa43",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a880c28-effb-48c8-a9e8-56bfe610d4eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01205864-0ae3-462d-942f-3796eb1731e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee60b3ea-8ffe-451d-b5f2-f4f914e8002f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33a991e-b8e5-49e0-a03e-61a1ca01351a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eea4d33-e4cb-4e94-81e2-2aa23506f143",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142b02ed-ec37-4f81-9bd4-4d4b86d628b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc637be1-c3b7-4f72-86e3-ac7b6bce1b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21484d5c-b4b9-4867-90bc-48c1d23c27e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af388988-b509-48b4-b173-b7f0ca1bc39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc2a826-c085-4bfd-b9c1-40136d78cb70",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37aee9b-19bf-43c8-ae1a-e3350752534f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e07f1b-cc24-4c8f-b4aa-3eb31009024e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0108e128-62ce-41bc-af41-942b8282c83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df05e987-54e0-420f-a1c3-7dc07675f46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563cb5bf-c3d0-43df-bedb-79daeca00ef3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b017ffbb-48e3-416e-b9d7-b7a630f2a1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83d9ee9-7ce8-4894-82f9-0297c72b1031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a39aa5-4fd1-4366-af78-6d0903730cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f5abce-5521-4031-8293-993a0f30a107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afdda51-9ff3-43e6-98a9-2b5a55e3c2dc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88938c1e-2cba-4d9c-ae44-31fcb2ccd885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a19ebc95-c875-4025-ad26-5327100d5778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742aaa61-931b-45eb-a0f3-35f034d3ee7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34689c8a-457f-4694-bc38-9555c8398834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc683c9-e9c5-473e-9800-41e3f90f7dae",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cebbff-6752-4255-8098-aafa2be8c204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97da1b43-d67e-4dad-bd66-fe1541d2755d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75f472c-0088-4760-8ee6-ccddcc7b8dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220ca730-ea0f-4b53-b93e-d4c4d7bd3dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01bb69f-7ab7-4a0a-b385-c66dd02a9bea",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170fabc0-ea77-40f3-9f5f-9aea99b2dffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd2177f8-f9c5-48d0-aaea-edd0e7c4bde5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53ba434-5c85-4f5c-8158-f7c2c9e6f68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627eb83d-e3cc-4a57-a434-cb0a2bad7bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0028fc33-877e-4c51-b6d7-eb035eee1b42",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a3e1ce-09b5-4a02-9c53-4720875657a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "017c0b93-7dba-47ae-b88e-75f04a581778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d5f50d-ffa7-4be2-af52-f8a5ca857029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417499dc-cafe-4702-a218-4d88d2357496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57af6fe8-79d9-4bfe-80af-4b1158e3fa83",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35860e84-fad3-4754-bfaf-ee52fb680b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f53d1f-6903-4de0-a109-1d41bff9454a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfc8840-a5da-41bd-bd35-963e4eb75e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec59cb1-733d-4265-8d76-55ee2ed2b637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2659abf7-6fa2-4ed9-a1a1-d29d5e0216e3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363afa09-9046-43c2-8c3f-90857fd36257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "308e84a0-7d6f-4adb-affd-16a77a2c6ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f63a530-1a79-4d2a-8aba-5436ab6635dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cb2d87-542c-49b3-9ea7-18f24b7641ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94166d2-15f3-4d73-a92f-456c1aa8034a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed1d3fe-1f8a-4088-b004-1aef9ae7e27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07bccfb9-1022-45ed-ad90-1cc5064a357a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211ff362-16ed-48e9-82fc-a9fd04b97def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621cf0e8-9924-454a-a153-da0f56bee7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966b7cd8-239a-4c40-b1a8-ac130b484d5f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c763f6d9-d487-4570-87fb-aa2b79f4ba7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd9dfb5-e391-4306-ab65-1a6ccde76339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9b5178-77fe-4736-9968-aa885a7b9de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7154bea-9014-49b6-9395-6f7e90ea79a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359ef5dd-5f41-47e2-b6d6-b5b4fd3204a3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80295dba-3d39-422c-97a7-7ef4e83c9c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a1b573-85c5-4f7b-a17f-878dc9700806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaedf1b-c78b-432a-93c2-9f6a24fdaecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d5789c-ad5b-4ed2-8e93-f911fdab22b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a460d365-3f83-4ee3-b238-0003da56bfa7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05377e27-f7ca-4e7a-9dee-6b3c78d17d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a1a113-241e-47dc-bed6-7201e08fffce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbd5c9d-8400-4fe4-ac00-394485c4b1d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f48f892-0a8c-49eb-b444-379f77d6dcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5e5245-cd68-4f13-bbda-ff8616d74efe",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfe633b-dfa1-4a4b-b0ef-79922bc78c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e75f49-6a5c-479f-8bab-190a411d01f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f946d8-9bc2-4dc9-8b2f-7bbac35a237d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f6fa10-9b5c-4e9f-9888-3d97ef51b9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a823f3-207b-4199-a3fe-bfd0df5d4d88",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afab8207-d68d-4165-b508-c9bcb7b1ab0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a600b563-90b6-463d-ba5b-13602706dd0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8714a9-479e-4950-9d6b-38670d4110cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f83344f-2193-4985-96f6-69579767e5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3265fadf-802a-4a05-b092-460a8732aa29",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd013373-1ca0-4a9f-877d-4e31dda0219c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa649d0-9949-4124-ae32-3743596de907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0ad631-3f10-4ff3-9fa0-6b7e7ed2da59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d359854-a74c-4ece-a89a-453db048c117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e24abfb-c851-414f-8d59-9360a61d5b67",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3e6895-bea8-4048-9f55-2d013f806672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e9bac7-9144-407a-b9a9-9fb76f0cf573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5695391-5e37-49c5-88a2-ff7392f93d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40562e75-be5d-48ef-8f46-c1d7c93ba741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb356ea-d97d-4f10-af62-c5814147a867",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ab4587-d583-46b6-acc6-66e341a9ffe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48519f28-e915-4801-9227-fdb9b35af270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b10c9a-782a-4a93-b21e-93c702874150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50319053-f6b7-4a84-95e3-50cd08134e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b4a971-5b35-4066-a245-f6f1f3df20e6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e157617-071b-417b-98ee-67dd786b0fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978d3389-4966-49a7-968f-badcdf8461ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994e5bf2-f579-4c0e-ba70-7f996668b430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383ac77d-443b-4c8d-bba0-cbde9c9681f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d29425e-5184-4db7-930e-e5e5a7eefcb2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31461b12-8297-4b2e-a476-17c3ef025372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c56b6cc-22b7-4f66-b12f-0da53775d5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2ee2a5-eaab-4098-9f97-bd8422561c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc25ef5-1224-4ae5-8041-4306118a7a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37976156-96ca-49ee-9baa-0124caf3fb41",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d009710-eb3b-414a-ac0f-fe70d10a3e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3578ce24-eec0-4e54-93cd-9e811f1ee52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d59b7c8-a4db-4862-bab9-2abe2ac7b42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da5e994-20d8-4ed5-8dae-04c013c8f196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d213c6d3-3d15-4360-a807-7610977218b5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6982d513-52a1-44ee-aadc-c4414463f9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8f9a26-4f41-49e8-bd9f-24c8d01ee46e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de36d700-f9b2-4bf2-bdec-06fe15185f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e61dc5c-db85-4d89-a8df-8b3266c01f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f67d5a-0375-43b0-bc4c-24623800d2c0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87efb2b-4ae7-414d-9dce-bb2f05684eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd925c39-1aeb-47e9-99b9-1d2ca7b66a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c859c9cd-43fc-49b7-bc17-efb625b2d078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd92be6b-599a-4d47-b9fc-3e177ca2d6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3ba219-ddc4-4323-a3f3-444b57ffee34",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61df0904-1e42-4c11-abb2-ac2111983b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd8e792-4861-482e-9676-c0f24b197996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dba28b-3da4-400a-89e6-8cc7c078a4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b6fb30-a0c3-4312-882e-a6c5ca217d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4151f0eb-1315-4329-915d-3cca2fe97277",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7480df71-2a9e-4653-9364-3f83a3318640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1b6663-6b4f-4256-ae51-9171c8817627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bf1ad7-64e6-4c7c-ac15-9e3fc01139da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0769bde1-5416-4059-97d6-157d68a83eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18218e65-af47-4965-a0f4-7d3ab4851ec4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e40229-bf24-4cdd-9599-0c49bc3e6a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0aec42-c4d1-4442-843a-d5c1609ffebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6235d7de-809d-464e-9021-80a81809393b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b77361f-895f-4610-8e82-227d1f29fa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffa390a-2517-43a7-b7af-53c3a669b00e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a4492b-1b07-46ca-b698-d590b7d90b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e20c37-45ef-4c11-8f57-ab5226855ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d72bb13-6fec-4473-a99d-9c18eb961c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0431d453-2406-4004-ab3f-021df68fc936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4551e8a-c5c6-48e1-bd53-ead204192389",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbe3527-1fc5-4435-bef0-3fd4ac669f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a260ff-37d5-4906-9a7d-1540440c33d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da9a505-1b24-4d3d-bc9e-c04767622056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db4478f-52ec-4ab2-8d6d-61f1c0af45b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1f547d-4d54-4650-982d-537f58c98f3b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b874ba05-3ca5-4e18-98ac-1893a21817c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367c27e5-6265-4f5b-9e74-ba4f3d339262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08393723-0c82-4140-b05d-297ca7113fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02188fc6-eccc-4082-8913-1612ec90ca71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696651e6-3c39-42e4-9a01-278fd087e5ce",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe1dcb2-3042-400c-92af-6e3efde05fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60384491-51d6-46b8-ba89-cae229a913e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db07dce5-eb7f-4c12-b4c4-42339f02a534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ceaab7c-c907-4a31-aa83-bec6a55eac1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313cedf0-4ca1-47c5-8dce-f687c18849fe",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a28dd5-7d80-4834-82d6-9ec27103c231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3175555-0544-435d-a6d0-e64812ceacea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f8a201-2d1d-45cb-8aab-0e82c732def2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f825dd74-162b-4a26-a190-787c7e688e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2627715-18f5-4064-b273-dad660c14c5e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4eb601e-f074-4d4f-845a-d6bba273a20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7e555d-b697-43f2-9e22-5577c924c9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0ab614-3660-4db8-9612-c49269efe331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179043b1-f097-4f72-978f-f9fffffb8fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62aaf51-a383-4f75-8ce2-5a695140a6fb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0faf42-a95a-409b-8b5b-5b6175c864c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8344ceb-0146-48d0-bf3e-28cd2a5c0e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a862d218-c89a-45b9-ba99-d7f0d653f26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f2ad43-c161-483a-a99e-2f42b2173193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21869862-e5bc-4f4c-b6cb-c0473b9aea01",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a48f200-e79b-4db5-8018-b596af034ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec7b9dc-981c-41ba-b5f6-e02badbbbf0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a913de-057a-470b-afc6-dc71de71b77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31376325-d522-4bd1-8ae1-6aab9e692acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff695cc-5eb7-4927-adfd-39c27ed0b0ef",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63eea234-2198-44c3-b0c2-6644fee2a681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bd81bd-2008-4be0-a2cb-51688e7934e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a3a7ea-b5d5-43a3-883a-3dad1d928f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60b8039-da30-460d-8149-05a0ec4c1cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0890ac0-3d49-42c7-8d13-1f906b77d92a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b151cf95-ad70-46bf-ba97-161312765279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628474c7-9b7f-4889-80d4-b585315dff59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb2f915-8938-4e06-b2de-48071a1f2a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04aa7518-a4ff-4dbe-8007-f00fa0bf1021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ce3d6b-8e7b-4149-a4b2-6f491fa2c57e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de152a54-4fcf-4a07-8d63-21e4083c9eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d793d0c1-21f5-4a6f-b42d-3ae5fbd5a5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7cc342-c0fe-42d0-9d7c-ef23b74a7c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f771a3f3-bc01-427f-9b6a-fbe14c952a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f01cb8b-0deb-4069-8b24-077551ee0c3d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6603d2e5-18cf-45ea-b7d4-2b923b3989e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d26585-e54b-4f76-b2ae-8c92b47dcceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ffd16f-1145-4f7a-b06e-0cfc8aa6eb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679da725-6c69-4184-bc3b-5be38f8dd9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bc001b-3679-4b44-a07f-04dd9a1f0469",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df269765-6db0-4e99-be90-aa327e621cba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87643dad-4cca-4fbe-a80e-432bd3328cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07a1dff-0334-42a6-b0de-1854ecd96962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16d950c-137e-4662-b2dc-ae299ac5ca1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8168533c-555f-434e-bb88-b1eb155ecc6a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b408b1c1-445b-4ad2-b29e-878a41218b36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c6d5a9-d466-4f91-9100-97fbbeecc02f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9769142a-6933-435c-8d91-3c171cda2e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34b1a9d-e2e4-4cc6-b6a8-7e6387cbf4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dbfebe-509c-4748-a1d3-6981e9981b91",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ef0f27-956f-4097-8b02-142f17b0fa9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31e2cfc2-2aa4-414f-970d-59f5d2e04e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1486b6b9-d434-4f84-b657-0b0e0e0674bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfce6e8-cc8a-4092-b891-11425e492750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f1ffd1-f839-495b-91a9-ddbeb8d74e86",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cba026-fc7c-4f47-a8c2-57a345bcfeea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73cf3754-85f1-4ef6-840a-499b50edfd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523b0d71-6b77-4e54-9b6f-190939dfb600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928b6539-1ce2-4af8-ae90-9d2476a3beec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8bf63b-f6e7-43d4-9f2f-45e3652a94f8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1068e172-3f87-4b57-9f38-a076c0f286de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "475086d3-c5d3-40fd-897c-d9b130de8745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828107a7-2eba-4667-8cf2-df7c0f5bb0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4530a3c1-0004-458e-862d-c42035991ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a64c6e-7f99-4b7a-af33-fe5b713c7430",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a603a101-f672-4490-87cf-ed8d69fc0668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "265d6c14-f4ac-4370-b0b3-4dc873d5ff38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8d04c4-ac2c-4f10-8e88-7e5c503fb66e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fa295e-0667-4fb4-a47c-0d8db011f886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3946032-c9e7-4d66-a441-8919c8c93c3c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbdf4af-629e-4a41-b26b-dd3d1338dcf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "973df201-55f7-40d5-bf07-246f7cad1fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f97911-9dd6-44ff-b189-3b5c52c6acfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae90cac9-9fbf-490b-a426-074fbc612441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648ced3c-df52-4bbf-a79b-34db751483e9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704ee2c1-9b21-48b9-ac75-62cc7da1d7ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc09ca0e-5bbd-41ca-b4b1-2a66f7923071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0575e41-d26d-43ed-aa96-e06131803532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b767d6-72b6-4a1b-8bf9-98e83b5d9d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6550bf9c-55fb-4d1b-a0fc-6ee5a7ce5304",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb20d031-3a53-4892-ba4d-d35da09a557c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d006524-70d4-4668-a6ff-5bec133e2e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b8f671-a28b-43c3-8e60-2866d5f55ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3863cc-9455-4c78-9d7d-31b4e6a70cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a7070b-df6e-47ec-aaca-cda81e755f92",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3b9412-cb16-47a0-b1e1-753275aa6a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f1018da-b0ac-4df7-889f-5f660fb6433e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa25827-51fb-4777-96a3-ba408d07e585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e63704-1f50-4d97-bacf-48ac9ae8cee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84cbf65-220b-4f38-963f-d3edd9503350",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32dc154-6cc5-4686-9448-90b75c7be71b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2684d854-b593-4d8f-939d-78b0e75473b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b29acf-30c5-4f62-8ea5-221539d78f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0918fad8-54a7-465f-95cf-7c37011da319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceca43d6-82dd-4da0-b8d4-dbeb5ab8d854",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fcc01b-a8ef-48e3-bf3c-209aca0d9b7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de8ab4ab-2b80-4955-8fcc-adeb44c58fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0067d67-bd2e-481a-81b7-ddc1100c88f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bedcf306-788e-48cd-b3ee-2e01f6022db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae21546-d840-40b9-b8ae-7edc554f3930",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897c9269-8f1c-435c-8ce5-84a73c659cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178a4ef4-f858-4da1-b166-3dc6e4ca2b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39774f30-2be0-4093-8c7b-ccb0631520cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893395c2-7c48-4219-827a-77e28fcc5799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc70803b-4cd9-4909-992b-2c97478790ca",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3181da-6d6e-4361-92da-1d9942390147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4609d57-b0c0-470f-9425-0cdf93cdf958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a725610-fdda-4d84-9ff4-8874054e88ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743edebb-d2cb-4a83-bd53-b31446654842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309c03fe-5e58-4145-aaac-b41996769c83",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4c2bff-536c-4458-95d8-99beec97505c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c31822-caac-47cf-bb72-33974fcbcad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769610c0-bc03-4f32-a576-d65f4a99534d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2acce51-796b-4a9f-838c-187000529e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ac0c20-fbe8-449c-bad5-8e9393087057",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35500a3-e3b6-4dfe-a797-3c6ae8199547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f4611e3-4f0e-4e0c-86dd-19f85ba073fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caeb7ab6-0908-4c7b-ac3b-0da50f3890cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9cc0c1-8fc2-409b-bbcb-d7cb68bd6056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73392e8e-f54e-4c45-8ab5-ae4c7314ff84",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc0f059-8f77-4fb7-9da6-658e1f9e5168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf8d0f0-65ae-41b4-b4e6-9caa34eb601a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49311c03-f8fc-41d0-9580-cbf9445bdfa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d6fe70-d28a-42f6-a9af-2e3c4548aa99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f4b9fe-a412-4977-84db-4bec583d79e2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36849778-1d27-46a2-9694-82fdb7da207c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7159652a-3a6b-4c7e-9f73-cf741eef65db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df67ae7e-5b41-4293-9a68-d23d2df3eef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b581719-9837-4cd0-9490-4f2871962b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2bf682-e682-4d7d-8f01-5b885eecba0b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda7df90-eb14-4287-bd6a-5f1aa951a654",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4c1f0df-b9b8-41cd-8b8b-4b3e626dd0d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8807c95-48fd-4d6b-8ea1-b70cca65db39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8ff5ff-9578-48d3-bd15-79541bbaf540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a6574b-5010-4d07-85a4-47254127164e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebed6d7-4ce0-41ed-b031-d8088b3773ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6c1b1d5-e550-4250-8b3d-d5d9ed864766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee607f56-12b1-4b60-a41d-84757c52bae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963aff83-2ac7-480c-896e-b53c29f1007d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ebed2e-8732-4e88-868b-f5a63edde090",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0466313e-b485-41ec-9c26-f7d042282948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "362bb316-d6a2-4780-9af5-05da8f8c3022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e051e546-9556-4e0a-b668-c8d022e02c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3f7f0c-efa5-4db5-8411-1e618e53b4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f11037a-1b51-421f-8253-855fdce20f6d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923ddb59-36bb-4529-b2e8-5be9bcf0b18f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d8dcc8-aab5-43d2-9d08-42d18b54599b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7023c963-bf04-4eda-96d5-c4be2fea4ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be27002-a522-4ab4-a036-e09393f5c487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19aaabf8-e617-4c67-94da-e5fa636843ce",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d0bea2-6193-4700-8ea9-92fa24423c18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "418f06fc-3ff9-4e59-a348-25c77ff2da31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "438ac94c-f207-4024-b634-e2faf58f7769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364a7964-8d8a-496c-a4f5-58763e67fcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e3e48c-2969-4ce4-bf50-1492b4376898",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae023139-1067-4c80-b34a-101834615644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19607de7-21ab-4483-a709-03c3d6af055a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa781d0-57aa-45d5-b5eb-85e238335b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ced4a3f-f43a-4829-9661-17f92e90b355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3937dc4-4f59-43e6-a77f-00e3d28fb526",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8625f692-abcc-47c4-bdc3-cfe6e077a91a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d810821-1d94-437e-b420-e731fe94e8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1137dd03-4c60-4547-a2d7-87bcfa9eada9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f769bfe5-4c0f-42c5-96bd-706520cbcdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c8cde5-decc-46f2-8468-5b26fe825353",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953b5dbd-5895-4eef-af2e-12af407e2293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb51490a-dab2-4a6f-9ea8-c3fa5b24b87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4568ba35-9b46-4d84-bdbf-24d6c4f2e333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8fd472-423d-47b7-88ab-d9ef1a401d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b35412-a87b-4f46-b1d1-7cf1a0dd7021",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b13365-83ae-4d86-981b-3372da5ec74e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71016b72-7cac-418a-b22d-446d881c84f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0610e973-b4a4-48a7-8ed9-5419c7c7d01c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a32ec6-45e2-4d14-a1a6-2f2fa5dda1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a652079f-41f9-4fb5-9f7c-0341a97ab278",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277f684c-8c39-4ed9-ab67-135831db8455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "087f8f4e-1ab6-461a-8129-d70127944d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52079913-c24a-4512-9f66-d17dc645331b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e45a875-55c8-4efa-9a51-243557d17743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc92663e-2ca8-4a0c-82e5-044004eac1f7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ae8728-0c8e-4330-aefd-a42c05b37577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75087010-34cd-4f6e-80b2-7f8ba35761d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73118628-9ae4-4c2d-8f12-6033cc6f74aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5270fe9-5a81-461d-8286-d664231e6251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e411b503-797d-4351-ac1f-1129282be630",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1430e1f1-70fe-419f-8958-8343ae13cc32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48571dc9-5340-4e8e-98ab-eebccc574d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39884f1-735d-4931-b487-2b59cd693893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6978df2-251d-4370-9d5a-1f49f2062a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b611ebd8-d569-4424-b7c2-de08bd45437a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563443de-4ada-42a0-b7b5-904c1845e55b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f000c674-6557-4236-9a35-27737becba8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1185e3-91d8-4582-9284-0ce44b63a2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafc6f80-1f40-4488-925a-ca7688e3c428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e246e0-4d69-4646-a9fb-4503bf55df34",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0491cb5-b676-488b-85df-22f1365a0327",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e337f98-1ca3-4b25-b4af-299c630b1c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea52d1f8-2ab3-4b82-a4c7-1a5279f1545d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cefac9a4-42a0-44dc-9ea5-efb435dbbfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48ac7a3-aa7e-4de5-b691-8290f5c4b0b5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6644f4de-e61c-4b94-aab6-b4dc295e5c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c7f60cd-5b02-4381-8330-109c181fe285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ab4113-adda-44f9-94c1-88b6c8c789e7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd38c9a-c6e5-4705-9f9a-7f7b58bae668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a78478-8d95-435c-b43b-eb9e6d652381",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decbea9d-a319-402d-81ab-ac490c1ed485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5bad89d-0f64-471a-83bc-4d0475379b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df43202-d80b-46bc-9ac6-a40917e7bbda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4206f39d-1a0a-4fa0-bc5c-d14efc8a1033"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a554e69-f5a3-4407-9092-b8b49295c39c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c2ff059-e077-4a92-b608-0776e0f0e9c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aca64d8d-5128-4eb8-bc50-3758141c2f58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "248721e0-43b3-4164-8b54-72d80edf078a"
                    }
                  }
                ]
              },
              {
                "id": "2b626278-3201-482b-ae7d-6ffd0cc461fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ca6acd7-853b-40ea-a8a9-b3bbca774c4b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bbfaa9-aec9-4ddd-9c7b-c65e5d8bd33e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "02ad97f7-504a-49c7-9cdd-6c5004769f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fbea38-f6ba-4301-b46f-112b4febd767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad219065-522d-4dcb-b37a-42fc0c782a1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2a8636e-801d-4f8d-8f22-59f489fd0384",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52bc738d-49fc-46e7-af6c-154c87dca76a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfc0f62d-6580-4464-b245-57ff87affde7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b00a8fe-e5d1-4502-85bc-6784938d59c7"
                    }
                  }
                ]
              },
              {
                "id": "08f29bea-be33-47c1-89f6-6289fe36f70f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "464bb3ef-2894-45f0-9e81-fc588691f269",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f671e8-7bdd-4fd2-a72b-ace4665f9846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8a69a60d-ed48-4fc7-a024-daac7d133395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf547ff-e3e3-4d9e-bd47-e99a749a9aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e907645-a625-442c-b05d-91dde9a6b0eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "64901795-72ec-43c7-8641-7f84a0bc43e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8779c139-8432-4d8f-a7f7-add0ffe5fcaf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf27efd0-8130-4140-bf76-303125268292",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "954ddfd9-c97d-4b52-897c-771e2144a9d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d29f8da5-e2ec-463b-bcde-4e0e5ac25a77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4dba05db-979f-4d9f-b34c-e632efc7c566"
                    }
                  }
                ]
              },
              {
                "id": "e1406cf8-949f-4413-8e14-189fb00cd2e8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cbe63ef-baa5-4578-b350-17c0f230ba82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "90a22263-cf3d-43e9-9f39-c4eda831d1fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d9b1b39-49ea-4ffd-ae0f-062a2551e959",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d60afcae-cb5a-4f02-8bec-8fa6e100b1ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ef50af2-503e-4b06-80aa-d8fc725918ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "190d7268-0de2-47d8-979c-526726ec1288"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca04d2d0-a0ed-441b-bfb4-36385913dbe1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35cad90d-929f-4441-9f7d-220ed66fe153"
            }
          }
        ]
      },
      {
        "id": "88877bd6-f123-4f4f-81ec-872f7c81762a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "91ce81f2-f224-4704-ba1e-d5b7d83b315e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43df3795-f3f0-4ffa-8141-95ae091ba4a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f41b3da4-7344-4be7-9066-4267693799d9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424d9bc7-32a0-4a30-84fa-8a39da385af9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "74c27446-3b5d-49ee-9c78-cab1e5aae591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530b47b5-63b3-44d1-9942-e754048acd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1621a3a-463a-4ed4-9405-6e423b477d46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69f81a65-04f4-4447-b0a9-4a6c8d9ab84f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2dedd39-0461-4e1d-a029-76eec4510715"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0585e20-34de-410a-b1d2-f2d42380dfd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07da3c22-264d-45a4-92b1-aec27e774c06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6545040d-9de6-483a-b421-4e90d82bb4cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3ee31417-03cf-46a9-8119-1a4702835c99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "442b0e40-c61c-487e-898b-6b863784482b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67564cf8-5ea1-41d9-ae35-a16017ce6241"
            }
          }
        ]
      },
      {
        "id": "4f212bbb-8434-438a-be81-fe34f60a1294",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "13250efd-d021-4a0a-8002-cec2b093e077",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f23fb9c2-8d91-42b9-a323-50a8efb35825",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9775e9cd-d0d6-4b3b-b0b2-e136db08ef01",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad47d139-dd63-4a68-b482-e0535f542ab7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28755384-a8db-46f2-99ed-58267f6bc4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29e800d-9d2c-4b4d-a745-612268ca2ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b18ce04c-61a4-4927-bc6b-4e93b3242cd8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "768d56c4-513b-4fcf-99f0-006f1966c40c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72685bb5-2376-40bd-8f45-169c38226834"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cac7c22-d3ec-4643-8d05-4bbcbae13de2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1914b4db-b633-4458-9fe6-49b1a7b25a2b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b41e7d62-61d1-4d9f-a7f7-46c4516cfd0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "43d685fe-8cb7-4e19-9ba3-214b2013474e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d43d1497-7cef-46b1-9ba6-e941d9cbf150",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5dd4a532-558e-4dd1-bcee-4c2b1d97ccdb"
            }
          }
        ]
      },
      {
        "id": "30ad2882-a874-4b7b-8288-796134f58c54",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "842ef297-1026-48e7-89ff-7f565b418a6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac00edc4-6787-444a-967d-614265d05b39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5aae16f1-e4bc-414e-b709-a792c9c07797",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4295d47a-bad8-4068-81d8-30e3ca158c69",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d187634b-9aab-4444-ab13-a9fdef0424eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f85e268-472c-415c-adfa-2b2e29c49bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7519743-333f-47de-9ee8-d2655f264dc5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02f27851-fab3-4a4f-b8a7-95ed43ead07b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2633d88-df3c-4fc8-ba23-5b8f12cb5e6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d4600c6-7c52-4aad-949c-1417703894ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e66cf9d4-c66a-4231-a9fb-e5bb60d8d852"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cb01998-2404-4d51-9a1f-a6794f4713d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "250176f7-7230-4059-b006-fee321bdee22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9963fc0-0153-4e63-bb39-d3c6b71bb849",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a414a35-8322-4dca-8722-6ca053c2a3d8"
            }
          }
        ]
      },
      {
        "id": "0e558522-e9d2-4223-8970-e0bf760b9493",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "756506b9-2319-4ec2-90fd-f41d0e1ebf55",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd2373b1-5e52-4d80-9e4f-6d790302d207",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "00524f4d-6d1b-4c88-909a-d39cc53d838f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ac69fbd-1c36-454c-b79f-7ea4b3d5ef17",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d29273eb-f5ee-492a-918c-72e32ebb705f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.341549295774648,
      "responseMin": 2,
      "responseMax": 275,
      "responseSd": 25.197380656843706,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697157270516,
      "completed": 1697157284235
    },
    "executions": [
      {
        "id": "d406e368-a726-4899-a5ad-a3872088ee45",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "33aa712c-6027-45e8-bd13-cf684d20b56c",
          "httpRequestId": "009d8007-8e75-416b-bfdc-8c6a3654addb"
        },
        "item": {
          "id": "d406e368-a726-4899-a5ad-a3872088ee45",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9c87515b-b6e5-4959-83b6-897f371cdc5c",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "51d13dc2-5cd0-4b4f-a805-3cadcc19d21a",
        "cursor": {
          "ref": "66c95e47-31b4-41ef-ba6d-a0bce2606d43",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9b61e0f9-47b1-4f2c-ba79-c05c5805bb9d"
        },
        "item": {
          "id": "51d13dc2-5cd0-4b4f-a805-3cadcc19d21a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0918ae09-98d8-4865-a14e-6045ad7fe52b",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "089d1821-e7e6-4141-af13-d3c16aef482d",
        "cursor": {
          "ref": "88637c5a-e9f6-4472-b8e1-54acd69cfe59",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "510b5b56-4dbd-4cb3-a7fd-74c06c69254c"
        },
        "item": {
          "id": "089d1821-e7e6-4141-af13-d3c16aef482d",
          "name": "did_json"
        },
        "response": {
          "id": "61c697ea-26cb-4fdd-96ca-dc1313073f67",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b54eb58-593b-4cea-bf9f-ef8767a77790",
        "cursor": {
          "ref": "208a976a-af3a-41a5-9f8e-5a3dacc13b32",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "66b21374-b480-4bee-a992-36fb473a9043"
        },
        "item": {
          "id": "4b54eb58-593b-4cea-bf9f-ef8767a77790",
          "name": "did:invalid"
        },
        "response": {
          "id": "d71c8eb1-8d12-49c7-8dff-55b020b46f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b54eb58-593b-4cea-bf9f-ef8767a77790",
        "cursor": {
          "ref": "208a976a-af3a-41a5-9f8e-5a3dacc13b32",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "66b21374-b480-4bee-a992-36fb473a9043"
        },
        "item": {
          "id": "4b54eb58-593b-4cea-bf9f-ef8767a77790",
          "name": "did:invalid"
        },
        "response": {
          "id": "d71c8eb1-8d12-49c7-8dff-55b020b46f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20c23e7-5075-4c74-a163-e9c5f4650f0d",
        "cursor": {
          "ref": "5b32bf7a-694c-4916-99aa-9b8b336b1f2f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7de04095-ee75-4376-b141-b48684e8ef4e"
        },
        "item": {
          "id": "e20c23e7-5075-4c74-a163-e9c5f4650f0d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9c044de5-ebf4-417d-bd5c-98a5f05b3d73",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948b3dfb-bfad-4852-ab7d-8f9a7c065177",
        "cursor": {
          "ref": "775a00b1-fb1a-4f78-ab0a-f9db4f39a5ad",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "eaa95981-d1ab-4012-9125-a9839b0b1a7e"
        },
        "item": {
          "id": "948b3dfb-bfad-4852-ab7d-8f9a7c065177",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f2f0b6bb-f127-4ec8-a1c6-0d39ce1c7dd7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c909c6c0-a6bd-4bda-828f-91febb768aae",
        "cursor": {
          "ref": "8794090f-ebed-4c9e-9bf9-d3749b036e2f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8de23659-28e7-4286-89ac-82a5daebb168"
        },
        "item": {
          "id": "c909c6c0-a6bd-4bda-828f-91febb768aae",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dcb37c61-07db-4665-8968-0436725496a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58434dc0-0f23-4ff0-ad1b-10e5ffee5f13",
        "cursor": {
          "ref": "34f93718-8127-4e8b-88ed-e912d0179656",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7f459590-f19b-492a-b64e-eb3f40a7dfb9"
        },
        "item": {
          "id": "58434dc0-0f23-4ff0-ad1b-10e5ffee5f13",
          "name": "identifiers"
        },
        "response": {
          "id": "52138e15-0e65-4824-8b21-efb48e9dbd9e",
          "status": "OK",
          "code": 200,
          "responseTime": 141,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59605a5d-7602-4a6c-883f-ba424468da23",
        "cursor": {
          "ref": "72af85bc-3d3f-4684-8784-6a1a701f9a5a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "85fae536-58bd-4aec-9c91-2ab2c0bb4df2"
        },
        "item": {
          "id": "59605a5d-7602-4a6c-883f-ba424468da23",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cecfd0e7-889c-4348-9dfb-1bef467d0969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db140b7-b8c4-4340-9dd2-7467adf5af33",
        "cursor": {
          "ref": "8a18aa6b-281a-4746-9e6c-0b44679d080c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3f9d144c-d62b-4565-9cde-d15bcf11d3ae"
        },
        "item": {
          "id": "1db140b7-b8c4-4340-9dd2-7467adf5af33",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8e5fb60d-6b82-463f-b90c-d0ae4818b471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6fdf9d-64de-4e66-8fbd-fd5948959069",
        "cursor": {
          "ref": "2c41755b-f4de-4ce2-a243-948a8d27686b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e1c2bb55-d907-435e-a810-6a80c1abeb5d"
        },
        "item": {
          "id": "cf6fdf9d-64de-4e66-8fbd-fd5948959069",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1f04d819-07a1-479e-ae85-fd44655e0bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae85685a-c759-4623-8655-13fb1524c924",
        "cursor": {
          "ref": "994858fd-992d-420f-bc36-7c242858647e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "97d4aad4-62b0-47a2-8cfd-51a0213343b7"
        },
        "item": {
          "id": "ae85685a-c759-4623-8655-13fb1524c924",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1890565c-5ba6-4014-a2ef-1ae96455d11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e6b43d-6879-4862-aa5f-75abcbf03379",
        "cursor": {
          "ref": "4e024ff4-b832-4db0-bb45-203fec6a19d6",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7c37cd1b-0cdc-463a-8c8b-24c62bc243c5"
        },
        "item": {
          "id": "99e6b43d-6879-4862-aa5f-75abcbf03379",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7720621a-4e1d-42b8-aa91-b4913961ca29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1edf343-7ae9-408a-a089-1ea0959fb8f9",
        "cursor": {
          "ref": "fddc7662-df2d-4b49-a751-afd2b9f23b67",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "43a5a48e-af17-457e-8b10-a102ade85fc8"
        },
        "item": {
          "id": "f1edf343-7ae9-408a-a089-1ea0959fb8f9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f576022c-8804-4f66-bd09-eacd32a88841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf4a2a2-07ea-43a6-a0c6-e6d88716d736",
        "cursor": {
          "ref": "080a43b4-8733-41ab-8d0f-12d97c800f69",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "04aefec7-d71a-40ec-a6d9-781b820d49cd"
        },
        "item": {
          "id": "1bf4a2a2-07ea-43a6-a0c6-e6d88716d736",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e90e9c78-fabe-4be3-a6ef-f0b2ebffea3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ffb6b3-d58b-44f0-8606-c045f230d199",
        "cursor": {
          "ref": "2ef3efb8-9353-4d3b-a156-d28d6a2b213f",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "df37c827-6852-428c-a36f-c066fd47f40a"
        },
        "item": {
          "id": "f3ffb6b3-d58b-44f0-8606-c045f230d199",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "72a0d3d2-b340-46fa-8095-22255fbbce18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d1f205-6d0e-4c31-89b1-da29a6c3b4a9",
        "cursor": {
          "ref": "7dcfc1b1-5299-44fc-b344-4cdcf5ffefb3",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a8fa6486-15ee-4a6f-8c25-19b3a56ab618"
        },
        "item": {
          "id": "81d1f205-6d0e-4c31-89b1-da29a6c3b4a9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f6c1c669-58fc-44d8-93ad-58a1d5762ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b298a9b1-3cda-4c38-9379-61ece4195974",
        "cursor": {
          "ref": "8b5ce69a-cb9c-4e8e-82bf-c07c9b505e3c",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1c194772-7ceb-4a34-8b89-eea6e9a0e237"
        },
        "item": {
          "id": "b298a9b1-3cda-4c38-9379-61ece4195974",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "72e1b6ae-86eb-458f-ac7f-1634584e5d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78df83e9-5c32-4892-8a07-c67072420bf6",
        "cursor": {
          "ref": "125d22d2-44f2-4502-9188-392a53491a16",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "612df9f1-e9ac-4940-81c6-81b56815e390"
        },
        "item": {
          "id": "78df83e9-5c32-4892-8a07-c67072420bf6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "074616e6-ef22-4158-a6e1-fa06a270cac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29a1e59-ca86-4b00-86e8-e794d15dc464",
        "cursor": {
          "ref": "63a9bac0-b2ee-4f32-babc-01d4045acd0e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fdb5aeff-7349-4d6c-9191-22b3e185a580"
        },
        "item": {
          "id": "d29a1e59-ca86-4b00-86e8-e794d15dc464",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8901410f-7b0d-4610-97c6-f40d1ed58103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80594d0-d360-4f98-bb2a-2acdd3d432e2",
        "cursor": {
          "ref": "5cc741e0-40a1-4dbd-b3ee-bef88121eb91",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "59fc32fa-ec92-495a-8794-c1f7bc1c3c3e"
        },
        "item": {
          "id": "e80594d0-d360-4f98-bb2a-2acdd3d432e2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f98f05f0-85e0-4983-a3d2-4417a597e995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728d3506-53d1-4bd7-bc0d-615ec3424ba8",
        "cursor": {
          "ref": "fe15781c-8fbb-4d61-aff5-07f62d836a4f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "096246de-f001-4396-b1ac-74c1eadd0434"
        },
        "item": {
          "id": "728d3506-53d1-4bd7-bc0d-615ec3424ba8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ef093864-a004-4694-8c6f-18dc84b5c893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540eaaba-cde4-4970-9376-10882ca078c8",
        "cursor": {
          "ref": "72dbca31-703b-43df-9a1f-4122117545c2",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d87e1728-d864-4159-b597-5e8add62b985"
        },
        "item": {
          "id": "540eaaba-cde4-4970-9376-10882ca078c8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "445c2b58-2646-4ce8-9276-7f944e5912e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62127f3-159c-424b-8bc7-a09b7e967424",
        "cursor": {
          "ref": "05bf4bb8-ac4d-4edd-bfc0-630ccac8e918",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a10ba515-f3a6-41b1-a906-c9ca58c9968d"
        },
        "item": {
          "id": "b62127f3-159c-424b-8bc7-a09b7e967424",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2e4bb380-705a-4f13-b210-a0f43de06f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da0b736-1e6d-4582-8f2b-fa489cbc0718",
        "cursor": {
          "ref": "da56e305-bbf1-49dd-a4bf-f3f23b60c03a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "723873ac-405c-4366-b761-5d6b8cb49675"
        },
        "item": {
          "id": "1da0b736-1e6d-4582-8f2b-fa489cbc0718",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2d56af8c-aa45-4ac0-9e62-7330f639ed29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b62604-1d5f-4188-ada2-a52e7c2cc37c",
        "cursor": {
          "ref": "1fc827ef-3f3a-48c9-90f6-a6bfec018194",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "41acb11c-b722-4984-9257-62788108a4c1"
        },
        "item": {
          "id": "b3b62604-1d5f-4188-ada2-a52e7c2cc37c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d4dda364-a929-4de7-8d0b-7f1822a17b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80d5868-4dd1-4648-a940-216139b3ed9c",
        "cursor": {
          "ref": "4e353430-20bb-47a5-a4f2-e9f3eb308c16",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "542ec939-9082-479f-9ebe-07ca9a9781ec"
        },
        "item": {
          "id": "f80d5868-4dd1-4648-a940-216139b3ed9c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "026ba7c1-d7bf-4d60-be6e-ce1f3483d98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b620aa99-1648-48be-9523-358eb759b065",
        "cursor": {
          "ref": "621e7d2a-4896-41b4-ae8f-0e88ad191d48",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8a3ca049-4471-40fb-ba0b-8aba831e7842"
        },
        "item": {
          "id": "b620aa99-1648-48be-9523-358eb759b065",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6706f1a4-1e8a-4c97-af71-f0df5c888e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd57969-f8ca-453f-b44a-b281d7340814",
        "cursor": {
          "ref": "7f1e1ecf-4488-4f61-8e48-71f4ae11501a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e0972311-8675-4e0a-bf47-24b9ab4bd34f"
        },
        "item": {
          "id": "9dd57969-f8ca-453f-b44a-b281d7340814",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "31ed16d7-08e2-4b0c-866d-1925c434f7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfea40d-c4ba-497d-a281-1a5c241b08a7",
        "cursor": {
          "ref": "9be08f7f-0b35-4f0a-9268-e14a68a7afc7",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2116efdb-0a7e-4da4-9117-98442922c1d9"
        },
        "item": {
          "id": "4dfea40d-c4ba-497d-a281-1a5c241b08a7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e013b4ce-8922-4156-a333-7730a4a5a206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f3f39d-160c-4834-b39b-c054ed209427",
        "cursor": {
          "ref": "ea6fafac-554b-4306-b036-2cd734416a99",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "316ebcbe-6803-49ff-9d7e-7e993a217a87"
        },
        "item": {
          "id": "80f3f39d-160c-4834-b39b-c054ed209427",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "86af110c-bd32-4307-ad99-ba076743d26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a94685c-0201-40ee-862c-4597d18f947d",
        "cursor": {
          "ref": "0602dc6b-b4ab-4438-8b6b-dbcddf301e6d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "413ef471-db9d-4f8b-95f3-46971981c4ef"
        },
        "item": {
          "id": "8a94685c-0201-40ee-862c-4597d18f947d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b45e0775-f8eb-45bf-99d8-ac3305032fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794c61f7-b8fc-4b44-a7d5-5e034b426004",
        "cursor": {
          "ref": "3d3a2843-049c-4492-8823-b3d67ced1e7e",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7cd28b2a-81c3-4c3c-b692-807d93142735"
        },
        "item": {
          "id": "794c61f7-b8fc-4b44-a7d5-5e034b426004",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d0422580-8335-4858-bf16-938a974edbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b203b9f-0368-471e-a9fd-7fb3bd095f0e",
        "cursor": {
          "ref": "02b474eb-fedb-4558-a07c-d4e808fb4599",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3a26092d-1869-467d-9a91-dc79c08ff17a"
        },
        "item": {
          "id": "8b203b9f-0368-471e-a9fd-7fb3bd095f0e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "01c4835a-0a30-4f5e-8787-ddf683193feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d47f1d5-c7a9-4933-96a2-a993ecccf639",
        "cursor": {
          "ref": "2e2d456f-c024-47f6-9c88-44ba81206256",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "abe7c6b6-d173-4e7f-b30f-2d09ed50f916"
        },
        "item": {
          "id": "0d47f1d5-c7a9-4933-96a2-a993ecccf639",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5f1a847d-437e-4775-aac7-fe0f1d932e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229ba660-01d8-40f3-bf1e-8d802bc5c400",
        "cursor": {
          "ref": "0ef43d6e-86e8-44e7-97e5-f0e8eb406b69",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "783a46fd-b0d5-4376-a327-6aa97a68396a"
        },
        "item": {
          "id": "229ba660-01d8-40f3-bf1e-8d802bc5c400",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "41cfe3d0-1cbc-4771-92aa-3faa6092ed38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e302369d-89ed-4199-9b79-aec425bd62ab",
        "cursor": {
          "ref": "c5c7a3c4-e0a3-41aa-b798-e60fb6048b63",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d45d1b0f-4ed9-4188-9495-05ec82e48ad8"
        },
        "item": {
          "id": "e302369d-89ed-4199-9b79-aec425bd62ab",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "81a3e600-0824-4afd-9860-d8ccfc4ca828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e367ce70-6041-479f-b18b-f4c65fd7d027",
        "cursor": {
          "ref": "303ebec0-e9bd-4034-accc-9e9316350ed9",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "54fde4fc-7c06-49d8-9160-cd717259df1f"
        },
        "item": {
          "id": "e367ce70-6041-479f-b18b-f4c65fd7d027",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "533e80d2-0ca2-441a-af6b-97fc94d3c8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def76cf5-9f24-4c0a-80dd-d4e6828b6f6c",
        "cursor": {
          "ref": "1d1c2bcc-88f9-4194-8f79-ab2996992070",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b0a9491d-1b9f-4e83-93cf-80c10dc218d7"
        },
        "item": {
          "id": "def76cf5-9f24-4c0a-80dd-d4e6828b6f6c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0f537299-bcb0-45df-a817-4ca7b99784d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae0edbb-5043-472b-95e2-2e2736759914",
        "cursor": {
          "ref": "eff2b1a2-fe5a-4a9b-9a1f-1ac6da61ba17",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a229af12-d25b-4b85-99d6-4502a1632365"
        },
        "item": {
          "id": "9ae0edbb-5043-472b-95e2-2e2736759914",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "51062f33-1ba7-4a60-8a4b-3f7169fd978a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b74422-ae18-4848-b551-b729be6517bd",
        "cursor": {
          "ref": "d07737b1-6995-41c9-a131-35611017a68c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ce51631d-1103-4666-99f6-08beb7b09307"
        },
        "item": {
          "id": "01b74422-ae18-4848-b551-b729be6517bd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "933da3f0-ab43-4422-8d90-d7b3e5888e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb98cb1-7a01-48b2-88be-06677c64d32b",
        "cursor": {
          "ref": "3889ba46-2bb2-441e-b7f7-0bf2b91972a2",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c48fdf56-1e69-4fa6-a98e-383f64b5c5fe"
        },
        "item": {
          "id": "9cb98cb1-7a01-48b2-88be-06677c64d32b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3afdf6de-c1c9-4b85-896a-af2d5827452c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb9cc84-53db-4a46-9499-7720861bf2c8",
        "cursor": {
          "ref": "754ec176-3b4e-4de8-8573-3078bebc15cc",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f029da93-2367-410b-b570-5b310205d10a"
        },
        "item": {
          "id": "afb9cc84-53db-4a46-9499-7720861bf2c8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b8247a76-c7d5-497a-a2cc-d4bce22c5213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407881e2-1a38-497a-98a3-aa79e9f41581",
        "cursor": {
          "ref": "d7f6b7e6-b61c-48fd-944e-7f083fc58bee",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f084f160-0271-4cc2-a4d2-4a2e49724f0a"
        },
        "item": {
          "id": "407881e2-1a38-497a-98a3-aa79e9f41581",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1641de52-ba79-42da-807e-82db3222b6fc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3897b1ee-5bda-4afe-bbcd-47f4242be3e8",
        "cursor": {
          "ref": "3681794f-41f5-48d6-a8b0-ea82b56d408a",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0a8854ac-861f-4ebf-b2fb-740436426b17"
        },
        "item": {
          "id": "3897b1ee-5bda-4afe-bbcd-47f4242be3e8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a759a1a7-dda7-409e-b58f-63ab1db1cb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539cae96-ba4f-4aeb-bf09-ecc5ed106928",
        "cursor": {
          "ref": "6197341a-769a-4770-8125-1791e90c98a1",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "923210c9-989b-4826-be87-edbe86d18e4c"
        },
        "item": {
          "id": "539cae96-ba4f-4aeb-bf09-ecc5ed106928",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b14176d3-aa21-422f-9716-fbdb333afd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4532e3-cc07-47dd-9d7e-154aa2c6202a",
        "cursor": {
          "ref": "e558e2ad-0379-4198-8a37-2d8520ce1b37",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "84c6aae9-dd09-4508-9569-18fd7f0b58ee"
        },
        "item": {
          "id": "7a4532e3-cc07-47dd-9d7e-154aa2c6202a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f6ca5c13-9842-4c44-ab3f-0cd20969c262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7221357-0fd2-48a4-9ba5-163ed18b9752",
        "cursor": {
          "ref": "d0e0665d-c496-48cc-acc2-df7c20195e2e",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7a772d35-1b48-48d6-812d-e4decd5fd184"
        },
        "item": {
          "id": "b7221357-0fd2-48a4-9ba5-163ed18b9752",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a374f5b3-cc7a-4bd9-9487-d70c14b79772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ff5a8f-f17e-435d-a7d9-b3698976f275",
        "cursor": {
          "ref": "45925e77-9b61-4ce4-acbd-226ad6ff7fd9",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f28c8bee-758c-4858-9cea-ac3358415d69"
        },
        "item": {
          "id": "57ff5a8f-f17e-435d-a7d9-b3698976f275",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "59c5e196-abbe-40e0-889e-a385e5c9b43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cccd503-bb0c-444c-9364-a8313df86a99",
        "cursor": {
          "ref": "29fe2aa2-6a6d-4564-b59c-c0342be36e1d",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4f34eabb-f95b-4d9d-8f8f-2220f116febf"
        },
        "item": {
          "id": "9cccd503-bb0c-444c-9364-a8313df86a99",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c53b2b80-62fa-456c-aa82-08b46f157b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b253d3-f7e2-424a-b0ea-14824059fac8",
        "cursor": {
          "ref": "58e52d4c-b4a2-4a3e-8c3f-7e49b0589061",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9611be41-6360-46d4-bb86-75da1c905741"
        },
        "item": {
          "id": "c8b253d3-f7e2-424a-b0ea-14824059fac8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ac25f2c0-6dca-43c3-a028-252727205b06",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 22,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c55f8a-3a33-47b3-ad05-a59a20c650cf",
        "cursor": {
          "ref": "902cbace-3a9e-425d-a183-1ebed2936b32",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "78793bb4-94c6-4874-8b17-ef9c8b09bf59"
        },
        "item": {
          "id": "47c55f8a-3a33-47b3-ad05-a59a20c650cf",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0e7aec2b-e417-4075-8e53-ae45eebc7084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49e702e-18b5-4e97-8d16-5fc36c733627",
        "cursor": {
          "ref": "97600e7d-bbeb-4452-bf1e-5c0eb613bea1",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d5363e13-b589-4771-a2fb-51cac05fe454"
        },
        "item": {
          "id": "d49e702e-18b5-4e97-8d16-5fc36c733627",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bacf729e-cad0-497d-b48f-c42ec1aa240a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cb1307-cc7e-4175-9b43-77b66279aed4",
        "cursor": {
          "ref": "5d5904c9-64b5-4e9a-b67f-8356a2e4ed3e",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2f503b71-62bd-4b25-99e5-77c912d8169f"
        },
        "item": {
          "id": "41cb1307-cc7e-4175-9b43-77b66279aed4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d70b524d-d911-48f4-af01-cfb70f0b9b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410cfc2c-5b48-4ee3-9356-efcdda67d5d3",
        "cursor": {
          "ref": "b7866ebc-f922-4599-be71-6970818f9d35",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "04295c91-f09a-4201-ad0a-fa846c4446ad"
        },
        "item": {
          "id": "410cfc2c-5b48-4ee3-9356-efcdda67d5d3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a7966e88-2a9a-4c99-b315-c7c2ac336172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c519ec0e-dcbb-41d8-844b-ecdd7d072737",
        "cursor": {
          "ref": "4143a6f0-b1b5-482d-8fd1-edcf74bbd4e9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9f58dd9d-ecb9-4110-adbf-e994e7ba4d63"
        },
        "item": {
          "id": "c519ec0e-dcbb-41d8-844b-ecdd7d072737",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "42bf0bf5-dbdc-44d4-a241-9e74f4db3204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b8e3ac-7e86-41b5-863f-41497d7918fe",
        "cursor": {
          "ref": "5ab20b16-b70f-40a7-9cd7-bb0eb369e3d6",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "efdddc85-71dc-4780-87a7-b9e588a49262"
        },
        "item": {
          "id": "84b8e3ac-7e86-41b5-863f-41497d7918fe",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "98e926f7-d0fc-42f8-b0ff-2e20790aef84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf25415a-dbe9-4797-915e-ff10069dc46d",
        "cursor": {
          "ref": "06d42252-4432-4733-b05b-72c64adc919a",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dad17e9c-da33-4091-af5b-454aa830e9ab"
        },
        "item": {
          "id": "bf25415a-dbe9-4797-915e-ff10069dc46d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "76ab8c5a-8fce-4327-91c5-ee48eeceef2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4487d7-9eba-4e2a-b55a-8a489f72f3e9",
        "cursor": {
          "ref": "f2f2dd99-6a83-4d0c-9424-deabe281c284",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5fefa214-5998-49aa-b57f-8e5f000e1780"
        },
        "item": {
          "id": "9e4487d7-9eba-4e2a-b55a-8a489f72f3e9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e0bc147e-f656-46fd-89ad-365fdeec5131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be4e585-1ebd-451e-883f-a5a63e8bf48e",
        "cursor": {
          "ref": "723931f2-61a0-4e05-825e-f7e9e9cb46ca",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "260e6e43-1535-4f1d-8073-dc3386279d02"
        },
        "item": {
          "id": "4be4e585-1ebd-451e-883f-a5a63e8bf48e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "36d17855-11e3-45d4-a282-300b14f3bc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eceeec8f-df39-420b-b6d2-f9cb632ec15f",
        "cursor": {
          "ref": "04f6b753-ddd3-489f-899c-81b664dcf6d2",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2fda99f6-0f71-49a0-82aa-858e1885ea53"
        },
        "item": {
          "id": "eceeec8f-df39-420b-b6d2-f9cb632ec15f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d9f1714d-0a6e-4f33-a6ef-0a1205eb38db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce2b7dd-9d9a-4642-b328-a17f654d1913",
        "cursor": {
          "ref": "e4025ffb-1ff7-486e-91b7-61eb5bea282c",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2f53f343-6cf4-4d6e-833b-291426eb1b30"
        },
        "item": {
          "id": "0ce2b7dd-9d9a-4642-b328-a17f654d1913",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b74944cb-607c-407b-b2bb-0da10d1da67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ab1af3-b37a-46d5-9418-e0ca938078da",
        "cursor": {
          "ref": "5e3b08b5-4a0f-43ca-ad3b-b8a46673a088",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c9baa2aa-f774-47fe-984f-fc060200e827"
        },
        "item": {
          "id": "07ab1af3-b37a-46d5-9418-e0ca938078da",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "df6c22b9-0831-4974-b4ea-57f4cb417809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe3c492-7443-4594-87c3-b488641c0234",
        "cursor": {
          "ref": "d6f7b7c9-d8d2-420d-aad0-66baa3830aad",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c7e634f5-b795-4e02-94d0-8f7daed15420"
        },
        "item": {
          "id": "6fe3c492-7443-4594-87c3-b488641c0234",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e5777caa-2106-4691-9934-8883f8a7767b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2691c0-0cfb-4225-934a-2df19eba39e0",
        "cursor": {
          "ref": "8ab07a63-c8d5-4f87-a2df-a2a11410809c",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4f056286-11e8-42e7-bc8f-3f7589cd9310"
        },
        "item": {
          "id": "bb2691c0-0cfb-4225-934a-2df19eba39e0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5de3e3c3-e76c-4ac1-975c-7a5427c1937e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ae2dc4-1452-4879-82af-fdd4c1319003",
        "cursor": {
          "ref": "830a54c0-421c-4e4b-a31d-0afe579a0376",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "602173fe-f5a5-480a-bb4c-237cfff701a4"
        },
        "item": {
          "id": "25ae2dc4-1452-4879-82af-fdd4c1319003",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "df33cc6f-7705-4ca4-ac10-dc3bd0a53f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ada70d9-6e7e-4c11-bd7c-12a5d3ce7ba8",
        "cursor": {
          "ref": "6b65b939-159a-4c78-baed-bed91feee92f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4619b8c0-702e-4b9f-a102-87f429c56573"
        },
        "item": {
          "id": "7ada70d9-6e7e-4c11-bd7c-12a5d3ce7ba8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "aa22ea8b-e0be-4d5d-8b02-8c9215a2de83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164d1ba0-d783-4ca2-967b-7dbd2b538c2c",
        "cursor": {
          "ref": "87888fa6-39cd-45eb-8ba1-e2a772f3eaa9",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f433d2ca-a6a3-48f2-addf-c7067037af0d"
        },
        "item": {
          "id": "164d1ba0-d783-4ca2-967b-7dbd2b538c2c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "79308655-b218-4f53-a9bb-c8360028271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b0429e-31fc-4b41-a020-530cffcda86a",
        "cursor": {
          "ref": "b306fa65-a8a2-4861-80f8-e3382dd0c9a2",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8f8bb272-1b03-4722-a353-6943eef4ae59"
        },
        "item": {
          "id": "c7b0429e-31fc-4b41-a020-530cffcda86a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5f34d2a5-3f95-49e0-9da6-c2261850750f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf75df61-433a-4878-890b-b8eee052dc8d",
        "cursor": {
          "ref": "d945ab6b-46be-477f-a8af-6bc6caba0225",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a8d6ab5c-3629-41e8-9924-71fe6f3ff687"
        },
        "item": {
          "id": "bf75df61-433a-4878-890b-b8eee052dc8d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "380910b2-2fe8-425b-9516-e039a3dfebe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f574ec-1409-4eb3-8604-9d2575abf304",
        "cursor": {
          "ref": "61ca6925-bdfe-4ee7-b105-c1abf6295d33",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8b5af5c0-dbc8-409c-8dc9-f98f812370d4"
        },
        "item": {
          "id": "b3f574ec-1409-4eb3-8604-9d2575abf304",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3ed5065f-a9af-49b1-b6da-1431335fa008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef031e9-bcc8-49a9-bf54-c36ac015017b",
        "cursor": {
          "ref": "b75ca9fa-a3e1-498b-9a9c-b1835fd15f2c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9bfdef25-342c-4b85-88bb-bb44a2991930"
        },
        "item": {
          "id": "1ef031e9-bcc8-49a9-bf54-c36ac015017b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d9041e38-b254-478d-bb58-34dec083304b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c704e3a2-7ff1-488f-a3ef-3d2551861ec4",
        "cursor": {
          "ref": "475e22cc-688c-4f07-88fd-dcaaba959968",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ead001db-dba0-404e-bf0a-06ef592fce55"
        },
        "item": {
          "id": "c704e3a2-7ff1-488f-a3ef-3d2551861ec4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "55f450d2-83e4-4c8d-ba52-af3f8dfbc43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9dc896-e209-4041-b08b-fe4b10c7a4ac",
        "cursor": {
          "ref": "bcdf15e3-489e-4815-97fe-c0b925837a5f",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "11f7d4e8-4a18-4882-8a3a-a51b404d7899"
        },
        "item": {
          "id": "1c9dc896-e209-4041-b08b-fe4b10c7a4ac",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "715ce0fd-fbf7-45ef-badb-edf4397c84ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13172ffc-d419-43b0-bb5d-4133eabbb532",
        "cursor": {
          "ref": "b51e0143-4ec4-42e8-9bb0-21ccdc08ef4a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dd4e84b1-cad5-4c8a-b301-2102ef94e3fb"
        },
        "item": {
          "id": "13172ffc-d419-43b0-bb5d-4133eabbb532",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5dd767cf-6601-4455-b1bb-718525377f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5ddc09-2d2d-4ec9-9f8b-5de997b34e3c",
        "cursor": {
          "ref": "eca4c92e-2b7a-4ee9-b7be-549034605874",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "792adde4-a124-49ba-a159-c5b54b988bd6"
        },
        "item": {
          "id": "cb5ddc09-2d2d-4ec9-9f8b-5de997b34e3c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2516f6fa-2b13-4f7a-982c-e185121c42e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33293ef-9d8f-46a3-90fe-e10d0369432e",
        "cursor": {
          "ref": "8d52679e-d634-442d-8f04-7982e605dd15",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7f5b6115-4c11-4191-9777-e6a59a5708ad"
        },
        "item": {
          "id": "c33293ef-9d8f-46a3-90fe-e10d0369432e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9f175ee0-197e-42f9-87a3-be11f4cdec3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f416f639-745b-4492-8090-f799a519889c",
        "cursor": {
          "ref": "89d3b963-609d-402a-a7d7-541d46b8d149",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "327f6ada-f072-48b6-bf93-5640fcbdeee9"
        },
        "item": {
          "id": "f416f639-745b-4492-8090-f799a519889c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "956a16ca-3c33-4756-9ee1-b0428a358ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86039d6d-c1e4-4ffd-b37d-f6f9f0dbbd53",
        "cursor": {
          "ref": "aa61a738-129c-4fb3-9b0a-0e30b5091b1a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c33ceae6-a86b-4d3b-8190-adb5e997942d"
        },
        "item": {
          "id": "86039d6d-c1e4-4ffd-b37d-f6f9f0dbbd53",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b9d93966-ab2b-4c53-8414-57d761f94a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9106168c-c212-42b3-a861-00a494ae527f",
        "cursor": {
          "ref": "f14cb004-0009-4d0c-b6d4-978531b3a451",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ea0057d7-0027-4a6e-b964-aa21f3e83632"
        },
        "item": {
          "id": "9106168c-c212-42b3-a861-00a494ae527f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "58517b67-b6f8-460b-a890-7ffbd75905e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9682a88b-2e22-4691-a210-cd951aee7872",
        "cursor": {
          "ref": "fb25c358-fea7-4415-be05-1a0efae71d7f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "47788f65-f78a-412e-9f17-3093e405016a"
        },
        "item": {
          "id": "9682a88b-2e22-4691-a210-cd951aee7872",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5d24a39c-0f0f-4120-9dbc-50bfdccc83a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c3d3bb-b2b6-49f2-93a5-44288ce83cac",
        "cursor": {
          "ref": "3a9e2cc6-1ad5-4069-b215-a9a312c29a28",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4a04b9a6-f174-4db2-87fe-902da78ca111"
        },
        "item": {
          "id": "e6c3d3bb-b2b6-49f2-93a5-44288ce83cac",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8c693f29-e675-49eb-91b0-675b5fcd19e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f43b47c-57cd-4a5c-b293-d8b023aafc59",
        "cursor": {
          "ref": "ba2f7fc3-e9f5-407e-85d1-602cde29c8d1",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "263189d7-fbc0-42ca-ac15-77f22f89240b"
        },
        "item": {
          "id": "2f43b47c-57cd-4a5c-b293-d8b023aafc59",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "10bc921c-fad4-468f-abfc-04a57742f5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf37d55-af30-4f4c-8493-3774df3bd6de",
        "cursor": {
          "ref": "4c5a08da-15c2-4428-aace-4c60834b4f22",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c6eb2f0d-78cc-430e-ae39-ed0d76e5d751"
        },
        "item": {
          "id": "cdf37d55-af30-4f4c-8493-3774df3bd6de",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e372de3f-4c95-4f28-af3c-bf5c5ae8544f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d559158d-9ad9-4268-9ce1-c1da4cc7b4fa",
        "cursor": {
          "ref": "b07e69a6-ad46-4bfd-a792-8a2fdf321e70",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6356f534-4882-4f96-b6fa-858a62b67797"
        },
        "item": {
          "id": "d559158d-9ad9-4268-9ce1-c1da4cc7b4fa",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6c8c1c33-ab4f-4dc6-8e73-3dbe7b2d0f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480aa1ce-854d-46d6-82cf-b0404e5eded4",
        "cursor": {
          "ref": "cb3782db-a9e7-41b5-a9b6-0fb4bde5eb57",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4c370f96-b3d6-46da-9af4-5875a16fd798"
        },
        "item": {
          "id": "480aa1ce-854d-46d6-82cf-b0404e5eded4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "de3b3953-7a05-48aa-873d-3e9897bac428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba438bb4-1c9d-4375-884e-73772511a297",
        "cursor": {
          "ref": "6827c136-92f6-457b-969d-8364156f1972",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8d868fc3-7577-4bd3-b7fb-93a947fbb7df"
        },
        "item": {
          "id": "ba438bb4-1c9d-4375-884e-73772511a297",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "869b4272-3793-4267-9254-9d7b8cdb4ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc1061a-6cfd-4a48-acaa-029a6b1167e5",
        "cursor": {
          "ref": "7a5407b8-5c71-481a-86b5-72605c1edc33",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0093ca94-3210-43b2-9380-f3f94c441ec2"
        },
        "item": {
          "id": "acc1061a-6cfd-4a48-acaa-029a6b1167e5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fb8f5662-f45a-4a0f-824d-0661c0eb763d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85f0471-e36d-4466-a920-7b375a57df6a",
        "cursor": {
          "ref": "ff8f42b0-a9f2-4240-81cd-6533e6fa9220",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "66da5ce9-3872-4d8f-9597-281b0ca2e49f"
        },
        "item": {
          "id": "f85f0471-e36d-4466-a920-7b375a57df6a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dbd4d153-a7eb-469c-b836-34801abc76e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104ddebc-6eb2-4cbd-8961-8e8869de3911",
        "cursor": {
          "ref": "42009e37-160b-4c5e-96dc-bb104915a1ae",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bd3632bf-95ee-4b57-9115-9b4a42017d3e"
        },
        "item": {
          "id": "104ddebc-6eb2-4cbd-8961-8e8869de3911",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "01eb752c-36bc-4009-984a-0bb6f8fffb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff26994-bb8f-43ce-aa71-25c9289b1415",
        "cursor": {
          "ref": "1680aec4-4d26-4d0c-9b31-d2f6939c911a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fe3a81bd-e5be-4710-abbe-2bfc96d6a952"
        },
        "item": {
          "id": "8ff26994-bb8f-43ce-aa71-25c9289b1415",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3fc11b4f-975a-47f4-891d-c7721639055b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453cfcb7-16b6-4c9c-9442-4bd8ab0bf371",
        "cursor": {
          "ref": "fe7d8ecc-af49-46df-a21b-81990a2ce7ce",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "53b96970-9c85-4d0b-ac7d-8d86aacab8a5"
        },
        "item": {
          "id": "453cfcb7-16b6-4c9c-9442-4bd8ab0bf371",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b1c2cff6-051e-41f5-9cc6-2a79a19a86ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcb7992-29f9-4eeb-8bc1-ed09cb33836f",
        "cursor": {
          "ref": "60e1c720-d046-41f9-abaa-de1abb14333c",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ef2da744-4771-46a3-be71-c21f1f2a4e59"
        },
        "item": {
          "id": "3fcb7992-29f9-4eeb-8bc1-ed09cb33836f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1fc1eddf-4ee7-4494-883b-27f245e81450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ed48a0-378f-4d3a-81bb-65b2ad85e8c0",
        "cursor": {
          "ref": "9ec72f7f-fd80-44c9-b0ac-6f92fe58b7fa",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a032bdde-b494-45ee-81e8-661b40b74da9"
        },
        "item": {
          "id": "b7ed48a0-378f-4d3a-81bb-65b2ad85e8c0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "209b2a64-2ab8-4be8-856d-c37755534632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8c5fac-5491-4468-8083-63d11ef53583",
        "cursor": {
          "ref": "a314c18b-fa81-4144-ab55-cd6ad6be62bd",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "daa6e427-0d97-47ce-90c6-b221b1b546b8"
        },
        "item": {
          "id": "ef8c5fac-5491-4468-8083-63d11ef53583",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "114aacd7-69c5-42f6-b0e6-797733e5b60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91e693f-f2bc-48a0-a2bb-ddeda8cbb0f4",
        "cursor": {
          "ref": "647e8da0-8e69-4adb-b0fa-3db7ee9e65c1",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1e04328c-1013-4397-b691-c367c4549ffc"
        },
        "item": {
          "id": "b91e693f-f2bc-48a0-a2bb-ddeda8cbb0f4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "daa5b22e-99e7-4f18-be1b-e6c027609a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9253af10-0078-4e01-a9f1-f2a55f6fdc72",
        "cursor": {
          "ref": "0a8df46a-5cf4-4bc7-8052-7f36896a485a",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cdba6273-cc26-456a-81b7-8f1002bf3582"
        },
        "item": {
          "id": "9253af10-0078-4e01-a9f1-f2a55f6fdc72",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e44a0ae7-f09f-4c01-866f-ac1f76e57832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dab062-1724-4a10-9c2b-b31b72941132",
        "cursor": {
          "ref": "801603fc-b7dc-4e25-bf5c-58b15a90f919",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bd9ac87d-c829-49c1-b412-e137e4ec3c87"
        },
        "item": {
          "id": "84dab062-1724-4a10-9c2b-b31b72941132",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c20ba063-e552-4e27-8b2b-90079385acf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3b1882-12ce-4aa4-bf7a-a18affe554aa",
        "cursor": {
          "ref": "dbbd8d83-4faa-4e8c-8449-cf8fd63018cd",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "444309fd-6af2-4032-959d-0e7ee146c409"
        },
        "item": {
          "id": "bf3b1882-12ce-4aa4-bf7a-a18affe554aa",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c6f1fe61-a339-485a-87b3-b4c038bce057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfec277d-0865-44b2-8e3c-fd6f7f9a5ff6",
        "cursor": {
          "ref": "3ecfb8b9-17fe-4891-8b48-acc5c6f0d27f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a69f3721-8b78-4b4a-a9fd-325e20120af2"
        },
        "item": {
          "id": "dfec277d-0865-44b2-8e3c-fd6f7f9a5ff6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8089462a-2dd9-4f50-919d-cc7effa3b9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5151006e-f882-4d83-9a98-a7a4cb8e577f",
        "cursor": {
          "ref": "7724a254-aa1b-4805-8b00-b34e058ae978",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6e654e34-8647-4325-80b6-d6e02d496f79"
        },
        "item": {
          "id": "5151006e-f882-4d83-9a98-a7a4cb8e577f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "12242d55-cac8-453b-b63c-ac4de71b2396",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcee97c9-a773-4c5a-8a81-ecb5c2f383e5",
        "cursor": {
          "ref": "3d137b73-04b8-4bdb-8231-a0386dfbadc4",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d16cbbe7-79e0-4d17-8030-b396d58e68ff"
        },
        "item": {
          "id": "fcee97c9-a773-4c5a-8a81-ecb5c2f383e5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "65ee629b-9ae2-4c6b-82a2-903ca1cb46dd",
          "status": "Created",
          "code": 201,
          "responseTime": 43,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2308420-e6a6-4445-88a2-aac01764f889",
        "cursor": {
          "ref": "b754514d-2c0d-4280-b8d9-70a161309d1e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3d35776e-72a6-41c6-9785-5562702686d2"
        },
        "item": {
          "id": "b2308420-e6a6-4445-88a2-aac01764f889",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2f1dacd4-995a-4764-8f07-945fe0addbeb",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd467302-5510-4e26-b187-97d193d42fc1",
        "cursor": {
          "ref": "3ec961db-9995-4081-9cd8-8dc9299c0940",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8503ccc1-b9d5-4a00-81ca-78bbbba5bef6"
        },
        "item": {
          "id": "bd467302-5510-4e26-b187-97d193d42fc1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "590996ff-8646-49b3-9287-46f906e22706",
          "status": "Created",
          "code": 201,
          "responseTime": 275,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "720d06bc-ab44-4787-8d1a-529aa7dfd129",
        "cursor": {
          "ref": "8064128c-efae-4cc1-a1f3-419ce4bb53b4",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e0315ef4-bc9e-4973-928c-144f3840eb87"
        },
        "item": {
          "id": "720d06bc-ab44-4787-8d1a-529aa7dfd129",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "47b5d78a-7cdb-4c32-9673-8f30c1bd2826",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1494cd-d2f5-4f3d-bb75-6aec0c465b2e",
        "cursor": {
          "ref": "7f084ff0-6696-404c-a872-3037c046ddc2",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a62063a3-772d-4286-a642-beaf37090ee1"
        },
        "item": {
          "id": "ac1494cd-d2f5-4f3d-bb75-6aec0c465b2e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "211cb4d2-32e2-49f1-8af4-fa4e9888ad1b",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c6afa4-51d6-4a43-be5e-f0e23f1192d9",
        "cursor": {
          "ref": "7270a840-b3b1-4436-9853-d5566d3e1b92",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "780cecde-f45c-4dc8-90e2-cdd10b902290"
        },
        "item": {
          "id": "33c6afa4-51d6-4a43-be5e-f0e23f1192d9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ff799ba2-4b48-48b8-8746-c7449c62ba76",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58322b54-10e1-4d29-bba4-c462eae48d3f",
        "cursor": {
          "ref": "2dd49932-4694-4571-9022-fe4fc0412340",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "29091661-4e3d-4188-b3cc-9bd3edb57390"
        },
        "item": {
          "id": "58322b54-10e1-4d29-bba4-c462eae48d3f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c74b0119-67e4-423b-8ab4-3d8af57c3db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49175d14-cbfc-41a3-8f93-a82a4195e7bd",
        "cursor": {
          "ref": "4c74fdda-a892-46ce-b798-61fa1534ede8",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "506e1a53-d1ad-4425-992f-d5f43ed6bb3a"
        },
        "item": {
          "id": "49175d14-cbfc-41a3-8f93-a82a4195e7bd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b80c4bb3-49dd-4e8a-af0f-04f532117a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbbcba9-59f9-47c2-8e3e-e490497c57db",
        "cursor": {
          "ref": "e4ff779d-fdfc-4257-a188-4f567d83e07e",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6d2904fd-6cc7-49f8-b4ce-0427ea3c3410"
        },
        "item": {
          "id": "bfbbcba9-59f9-47c2-8e3e-e490497c57db",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6a872113-ff27-4f76-92c6-35642603e29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3e039e-08c0-4e57-9616-1c0d2597bd4c",
        "cursor": {
          "ref": "7c0d6922-10d5-4006-9451-5d49084d1bcf",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "268cb0b8-6383-4ce8-8eb1-16903925a1ed"
        },
        "item": {
          "id": "ec3e039e-08c0-4e57-9616-1c0d2597bd4c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aa590133-9bff-49da-b7e2-c22773e3408a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b419f05d-6166-4cb5-a278-0b291c2648eb",
        "cursor": {
          "ref": "da8f8ce7-cd67-4874-b3c6-8d3e657f7853",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "73a74f2a-2113-446c-a1e2-cb9071e2c6f4"
        },
        "item": {
          "id": "b419f05d-6166-4cb5-a278-0b291c2648eb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "de2a83cf-f1cf-4beb-a788-7d8b02d85f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9326132-d147-476a-90ee-3c872ce46d98",
        "cursor": {
          "ref": "be52c9e7-3522-4cb7-afe4-25628b7b5c48",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f5094bd7-7798-4d12-b09f-8bd4bf85a6d7"
        },
        "item": {
          "id": "b9326132-d147-476a-90ee-3c872ce46d98",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "16917de4-eb98-4603-b988-2f75034dcc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a67e07-e197-4ebd-adb8-dd10faae1053",
        "cursor": {
          "ref": "06ce7bf2-6839-4ae7-99e0-78f5ba922e05",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d3b98b72-22e0-47a1-86b0-8bb8a19cca27"
        },
        "item": {
          "id": "c0a67e07-e197-4ebd-adb8-dd10faae1053",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9c1f246d-9827-4102-aabc-003eec918ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f171340-65ff-45c5-8db6-08710e4a1c9b",
        "cursor": {
          "ref": "d6b0e706-7467-4d84-b24d-a8f3e9463d40",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0293d221-7946-48f0-84eb-13bc72473f64"
        },
        "item": {
          "id": "1f171340-65ff-45c5-8db6-08710e4a1c9b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b30dda74-7f88-4e90-b41f-bdf26a05e75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cd32b9-c686-4d10-b20f-f728a9fdc082",
        "cursor": {
          "ref": "06b27888-d819-4be4-9047-bf6008405f0f",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "05e8074b-2d54-4f7e-8e4b-58262d378b6b"
        },
        "item": {
          "id": "a6cd32b9-c686-4d10-b20f-f728a9fdc082",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8ed5be07-3adc-445a-a7b2-4124092f072e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca43139-5805-4924-80ad-a7bcb9f05ee1",
        "cursor": {
          "ref": "90142b9f-aac5-46df-bdd3-650b5b58a13d",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ecbad165-d169-4deb-9520-4291bf16da08"
        },
        "item": {
          "id": "1ca43139-5805-4924-80ad-a7bcb9f05ee1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "473e1ede-5d36-4878-86fb-8df96309f7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc122088-9673-4a86-b10f-129d6ba70ad3",
        "cursor": {
          "ref": "d11e2c59-e2e7-4fdb-a827-47f0d8f03b3a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6dc0b837-9f1a-4d72-bc3b-888c36165b7d"
        },
        "item": {
          "id": "bc122088-9673-4a86-b10f-129d6ba70ad3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1a4b2f2d-54e0-4c41-af8e-0c31a8e463b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a2d11d-958d-4432-afa1-a4a3d48c9594",
        "cursor": {
          "ref": "b7d6ae0f-63b3-478f-87fb-bc5dd5765440",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "87a08090-441a-45ea-845f-475cd9dd60e8"
        },
        "item": {
          "id": "d0a2d11d-958d-4432-afa1-a4a3d48c9594",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ba42f3a2-b44c-48f5-b926-74bca1d237fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9927eca7-eeab-4a45-9d73-453131768eb9",
        "cursor": {
          "ref": "66a23599-e1e5-4ab8-aef9-1e491550b436",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d6aad78b-2a51-4ba3-942a-3526919dab49"
        },
        "item": {
          "id": "9927eca7-eeab-4a45-9d73-453131768eb9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fd91a007-5411-4420-a7f5-e09edf60a810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0164fe6-633d-4787-b180-70820c1e7e08",
        "cursor": {
          "ref": "1cace550-c679-4edd-8008-1282ddfc7390",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d02b8cdc-f5b3-4fe5-a936-eee441782b26"
        },
        "item": {
          "id": "a0164fe6-633d-4787-b180-70820c1e7e08",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "38e6e6bd-3eb7-41a0-aa25-7da9b4c8553f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfaced7e-b5aa-4bf8-af1c-880e1b2367ac",
        "cursor": {
          "ref": "a33a4961-36d4-4bb5-ba0d-3b8ca1e2f5b2",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0b39f3f9-b993-4914-9bca-07ce0d26c70a"
        },
        "item": {
          "id": "dfaced7e-b5aa-4bf8-af1c-880e1b2367ac",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7ec24351-d2f4-47b6-bf81-d4b071031008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f9337b-6dbc-4d0b-b89a-88c5a5771ce3",
        "cursor": {
          "ref": "815aa632-0258-401d-b554-198a39908895",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ff037f3a-a358-4245-9528-72248bd1c442"
        },
        "item": {
          "id": "73f9337b-6dbc-4d0b-b89a-88c5a5771ce3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b4c4f36d-8875-4f2f-9983-947340a6049a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12348579-3e36-4ed6-bd06-d586883cf3b2",
        "cursor": {
          "ref": "c8c27d4e-4d53-4293-8619-b0fe1c344db3",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "808451e6-5825-46e7-b422-2771521dd639"
        },
        "item": {
          "id": "12348579-3e36-4ed6-bd06-d586883cf3b2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6c2fd157-997e-429f-a5fa-1924df6563d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389b66d0-a792-46eb-97e4-639526fd80ec",
        "cursor": {
          "ref": "cab555f8-7f0d-4dec-ab4f-7aa6d3c67789",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "468723c6-39bc-4d2c-a1f2-4558fabf5691"
        },
        "item": {
          "id": "389b66d0-a792-46eb-97e4-639526fd80ec",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "13396646-7263-41de-9288-6ca8fa6be5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606851b1-9261-4822-b316-b977af2c955e",
        "cursor": {
          "ref": "1fe0dc13-9325-4dfd-a9a6-1f55e7999535",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "33bdf3e2-59a0-4ffa-8622-cd15f94df45e"
        },
        "item": {
          "id": "606851b1-9261-4822-b316-b977af2c955e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "eba2c17c-035f-4db8-9e10-dac6732f7a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff1087a-2104-4698-b5b9-a4f2919efe80",
        "cursor": {
          "ref": "562af130-e1d4-4b4b-8b6f-95360fab01ac",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4d685597-4128-45f9-9dd6-fda233f5ca85"
        },
        "item": {
          "id": "9ff1087a-2104-4698-b5b9-a4f2919efe80",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7148b361-7ad5-49a8-a064-be825f1fad04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd453ab5-237c-40b9-8432-90c9863c06d0",
        "cursor": {
          "ref": "1c28ad8a-829d-4ac5-99b9-652241048b4a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ed20c639-d4ba-42c6-b690-e1a9fd3ee76f"
        },
        "item": {
          "id": "cd453ab5-237c-40b9-8432-90c9863c06d0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0b8526d8-9d08-4f92-b901-5e814cf927cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b45d16-5eee-49be-a482-c2484aa62a31",
        "cursor": {
          "ref": "cc85650c-0961-44ed-8aa8-ac0ba4b50d7e",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "df2adf36-4996-496e-b095-f0be6b1740a6"
        },
        "item": {
          "id": "36b45d16-5eee-49be-a482-c2484aa62a31",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a5884082-81fe-4047-bdaa-8cfaa96efa94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ae41ea-9f06-41dd-a61f-f47d0417e4c0",
        "cursor": {
          "ref": "1fb73fde-3d45-4d63-979b-c85b2de9131c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9eb29309-2b6b-44f2-b2eb-b11abf43533d"
        },
        "item": {
          "id": "61ae41ea-9f06-41dd-a61f-f47d0417e4c0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8fcb73de-bea5-452a-ba16-caea6b99e818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf0a86f-d2c7-4178-971b-368dfc7bd01f",
        "cursor": {
          "ref": "f8c400fb-47ce-4221-b414-2f87d10a9ca3",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1ce71c31-882b-457d-bbc9-974f98b0779d"
        },
        "item": {
          "id": "7bf0a86f-d2c7-4178-971b-368dfc7bd01f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "35684ba5-8e7a-4423-9f20-3a03d0297d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cd9fc1-aa82-45f5-87bf-053229b50b66",
        "cursor": {
          "ref": "38f6763b-14c9-4a35-af3a-d429dde2dea7",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b18d0935-4ca8-4a3c-988b-2aa53a498f91"
        },
        "item": {
          "id": "b6cd9fc1-aa82-45f5-87bf-053229b50b66",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "706d7d22-7dc0-4b1d-8bf5-82badc7c246a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f815536c-11ca-4ad9-98d7-00e08cae34e8",
        "cursor": {
          "ref": "14d20a2d-d18b-4f72-8068-648f44504971",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "28028f3b-0b84-46b8-957e-e2dbcdccbefe"
        },
        "item": {
          "id": "f815536c-11ca-4ad9-98d7-00e08cae34e8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8c87c5cc-8947-48a4-b38b-78725d009ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d742917d-d86f-4eee-86e4-857efb4efe5e",
        "cursor": {
          "ref": "cebdf20b-a1e9-4496-9337-4ccd2090a0da",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "20302b9c-8410-49b0-a22f-f3ae416a6d7a"
        },
        "item": {
          "id": "d742917d-d86f-4eee-86e4-857efb4efe5e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e02814a1-aac6-4ec1-a587-a4c95d056b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c93765-4c78-459e-9e80-c9146c1b9ecd",
        "cursor": {
          "ref": "847d00a3-909e-4053-933a-6876946b2f88",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5a163cf6-5630-48b0-92fe-b6d3aab5bf56"
        },
        "item": {
          "id": "b9c93765-4c78-459e-9e80-c9146c1b9ecd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cd99a3b8-28e0-4880-918a-8ddbe8738e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1c7e06-e3f0-4b41-8814-4a329f413755",
        "cursor": {
          "ref": "bd9198b5-483c-40c0-8ad7-b01f5e4d8873",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8321ee38-6056-4ed6-a1d7-8e5e6d39c52e"
        },
        "item": {
          "id": "cd1c7e06-e3f0-4b41-8814-4a329f413755",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "072323f5-6811-4f8f-ae06-637d95571b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad9b7ea-9603-4ecd-a7ab-937c729519eb",
        "cursor": {
          "ref": "dbbe4315-1f6a-47a9-a82a-33258fde9975",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "90df1cf3-e3c9-4937-bf23-dbce5cf1a870"
        },
        "item": {
          "id": "2ad9b7ea-9603-4ecd-a7ab-937c729519eb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "40488f7a-8f70-4dda-be70-b30d2f15917b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5877eb2-e631-4230-804a-c1ddf9bb78ed",
        "cursor": {
          "ref": "7191e76f-11a8-45db-8320-85dcfafd0cdd",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "29bd0137-45af-4d51-b590-f86731183cee"
        },
        "item": {
          "id": "e5877eb2-e631-4230-804a-c1ddf9bb78ed",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f1bba3a2-1e7c-4bb6-8b58-02bf96b4e13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2febd52-29c8-4599-ad35-e868b5c6f8bd",
        "cursor": {
          "ref": "a789ce40-2185-472d-9863-de51b5a37a1e",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "730c4f64-c980-4e51-b7f8-579d75b1f08e"
        },
        "item": {
          "id": "d2febd52-29c8-4599-ad35-e868b5c6f8bd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "af8c682b-a295-4545-aefc-a28d93fb75b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c407a3-78f0-46fd-ab63-3257d0eb72eb",
        "cursor": {
          "ref": "308f743e-990b-4e8b-91b2-81a3b50cb489",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1a4b05ce-01f6-484e-9a65-02522ec069fc"
        },
        "item": {
          "id": "88c407a3-78f0-46fd-ab63-3257d0eb72eb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c926209f-7b24-4ac3-ba70-907baebff47b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c472f0-a1f0-4196-bb43-9e9a80f038a4",
        "cursor": {
          "ref": "d6d7eb6f-8c5a-4d08-a82d-4d1a0547f84a",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9b895bf8-c5f0-41b0-a758-19f620c59bf0"
        },
        "item": {
          "id": "59c472f0-a1f0-4196-bb43-9e9a80f038a4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b97477a9-bbf5-4e49-a120-618667780b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c62d48f-1674-4cf4-b549-b4f0aa284e95",
        "cursor": {
          "ref": "73227c3a-10f7-455d-9e29-f36c7dd43193",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "04d456e8-d7fc-4aa5-a4d6-863ddd445693"
        },
        "item": {
          "id": "4c62d48f-1674-4cf4-b549-b4f0aa284e95",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5a256658-f665-47ae-8e85-c18f358deb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ddb767-fa94-4d93-afab-7f7f6d3f57c3",
        "cursor": {
          "ref": "64ab69b6-e9c9-4010-b740-33e7ed0b0d0d",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9a44dad7-28f2-4757-be13-15ce9ed1da07"
        },
        "item": {
          "id": "c5ddb767-fa94-4d93-afab-7f7f6d3f57c3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7de1d220-e080-4fc4-8c67-d7c039c4ef7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0539de03-5a34-40e8-87b0-825141aaad77",
        "cursor": {
          "ref": "46ed828f-6632-4e7d-9cfc-7ae583b90b99",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e6ce0a90-f31b-4778-83b3-025d1c4585f9"
        },
        "item": {
          "id": "0539de03-5a34-40e8-87b0-825141aaad77",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d9d02020-c382-4e48-8107-c513006a567a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df9cecf-c485-4dcf-af40-37ddd4627a98",
        "cursor": {
          "ref": "ff2152bd-7409-43be-80f2-2c8d7fe97074",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c36dd2c2-c948-4c5e-98e0-e092ac7710aa"
        },
        "item": {
          "id": "0df9cecf-c485-4dcf-af40-37ddd4627a98",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a1ea991b-04e2-458d-954b-957024a82976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffcf084-730a-4a6e-b952-6ef21ae81b8d",
        "cursor": {
          "ref": "10f9eca4-d77c-424e-bb6f-e80329f46f58",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "805efbc3-f2b7-4777-8de9-36fb7ca54434"
        },
        "item": {
          "id": "4ffcf084-730a-4a6e-b952-6ef21ae81b8d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8d4f92f6-ab97-4796-b2ee-e51e152f3213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91fa44f-8eb9-4c9d-9455-aacf0f446509",
        "cursor": {
          "ref": "9ce42e75-6ce2-4e9b-8bdf-b793c1ae36b1",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dcd08959-e736-41a5-bce5-22422c602428"
        },
        "item": {
          "id": "f91fa44f-8eb9-4c9d-9455-aacf0f446509",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f7bda9f7-8045-419c-a1e1-7ee652e0cd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa4f317-ef66-4f09-a9d9-bec50267d027",
        "cursor": {
          "ref": "9d4eef87-5a82-4c2d-bd94-99f5abe405a2",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "017f64c0-d3eb-4f84-9c34-013824dbf57d"
        },
        "item": {
          "id": "3aa4f317-ef66-4f09-a9d9-bec50267d027",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9fa552ac-bbbf-4152-83a3-0e4dc821cc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791b3e10-fa32-4a6c-b2c5-5d2be7981148",
        "cursor": {
          "ref": "97cc6cbf-7946-4fe4-ae6d-8cecb8046b79",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "aba458c6-391c-42db-bb06-95b18a0a8bda"
        },
        "item": {
          "id": "791b3e10-fa32-4a6c-b2c5-5d2be7981148",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6ae28cca-c1e8-45a4-a01c-927abe421908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552da1c3-7083-4e49-8b13-6294c16fda8b",
        "cursor": {
          "ref": "9fca69ec-ef2a-4397-bee2-75292285bfe7",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "25fa90de-3df9-48ed-a809-028efcef41bf"
        },
        "item": {
          "id": "552da1c3-7083-4e49-8b13-6294c16fda8b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5e0f1589-97fb-44f4-9cc6-280eb6938db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb7ab80-2993-4fdb-9e1f-e0022f23067a",
        "cursor": {
          "ref": "96eab514-8f6d-4175-bc29-f08bc3da7dee",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "45cb8350-8cb0-4474-95ba-830cc54dc401"
        },
        "item": {
          "id": "9bb7ab80-2993-4fdb-9e1f-e0022f23067a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c679a72f-f047-4112-8fe2-6142fe846049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fb47fb-6f9c-477a-bbc7-d99ccd69c41e",
        "cursor": {
          "ref": "68357e6a-f1e2-4283-991e-ea02fc9e3658",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "097c14dd-fecb-4645-a37b-abc6727e2da6"
        },
        "item": {
          "id": "18fb47fb-6f9c-477a-bbc7-d99ccd69c41e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8d3209e5-41f1-4771-9667-1792b9578897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ff0cd6-1d0e-4ece-a17d-8a14a0e40bd2",
        "cursor": {
          "ref": "e6e9127c-9530-4c9e-94a2-0a05e1317a69",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dde3402c-3c00-4145-99d4-e04a4e4ce31d"
        },
        "item": {
          "id": "65ff0cd6-1d0e-4ece-a17d-8a14a0e40bd2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "178935f6-bec6-4879-81eb-2da3516bd6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c3490b-3af7-442d-8c4d-6691995f3a8e",
        "cursor": {
          "ref": "4c4fa1ff-740f-4f2d-916f-2ca2e5a4a56b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "07d5691f-ba18-4e2d-98ab-3528d26389d0"
        },
        "item": {
          "id": "98c3490b-3af7-442d-8c4d-6691995f3a8e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5f3519b4-5fe7-4fab-a210-a526ebcaff5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68ff338-f56d-42a2-857f-5cc3d73a8d55",
        "cursor": {
          "ref": "e24d9bb6-4f50-4797-98fa-6929c87b92de",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "132466af-b260-463c-b7b7-b3d10c621820"
        },
        "item": {
          "id": "b68ff338-f56d-42a2-857f-5cc3d73a8d55",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7609e7dd-a3f3-4126-85f4-cc7b61bbe749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6aba5dd-9ac8-4b0b-baf3-35a49a6caf42",
        "cursor": {
          "ref": "96759d3b-d632-4a60-b605-21d89661afc1",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bfdfd6f4-477a-478a-a236-978ab244f4a2"
        },
        "item": {
          "id": "c6aba5dd-9ac8-4b0b-baf3-35a49a6caf42",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ad45aad4-7805-468f-af74-f0ddec6090aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c31daa0-ae98-4cac-b86c-b155bbef5e75",
        "cursor": {
          "ref": "050085df-d216-4f92-949d-fb5f6cba935e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a855cbc5-47d4-42fc-8fe0-30a9d9d71a82"
        },
        "item": {
          "id": "4c31daa0-ae98-4cac-b86c-b155bbef5e75",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fcb9302e-a9ea-449c-a12d-53d61b29718a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06026d7b-c5cd-452d-8948-ba6864ed0285",
        "cursor": {
          "ref": "8f140a19-df54-420d-adf5-351bd777ec98",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b743ab3c-8827-468a-b1d1-677974ac7f3b"
        },
        "item": {
          "id": "06026d7b-c5cd-452d-8948-ba6864ed0285",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "efac048d-182f-4427-998e-98bb853b63a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33789eae-0fdf-4cad-8cb3-36e5138f17d7",
        "cursor": {
          "ref": "fd857774-4bdc-4bbd-a158-2bfe28f12be2",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "52958da6-801e-412d-bf1e-7d415571f4b7"
        },
        "item": {
          "id": "33789eae-0fdf-4cad-8cb3-36e5138f17d7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "62cc1021-4931-41ed-a3a1-8da8f87a7c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a40d05-f666-41d4-a22f-4bcf87a5357a",
        "cursor": {
          "ref": "3b726428-752e-45d7-b5d7-401d2d04ad4e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f38a37d0-1eea-4d17-8676-0e6e12d42287"
        },
        "item": {
          "id": "31a40d05-f666-41d4-a22f-4bcf87a5357a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dc99ca3f-e448-4658-8d22-449ac657beda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c664e52f-fb58-4ad6-ae9e-7fc067debda9",
        "cursor": {
          "ref": "ef08dc8f-3a22-4865-a6a0-5dbe82b0064d",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "136fcbe2-f32b-4e01-aa56-df6c41b78a85"
        },
        "item": {
          "id": "c664e52f-fb58-4ad6-ae9e-7fc067debda9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bfb8efbd-2e5d-4021-a9a0-cb3eff19b2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c49d016-8370-4a70-9e71-8d7a3c2b7966",
        "cursor": {
          "ref": "911a5257-d017-4c0b-9b90-4a1e1acf674d",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f4feedea-aa07-4b2f-b412-2ac016c49e30"
        },
        "item": {
          "id": "7c49d016-8370-4a70-9e71-8d7a3c2b7966",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "732f1276-315a-46ae-9cf5-3a45a95f09f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57598997-926d-4295-b1a3-3a3f851a8402",
        "cursor": {
          "ref": "33ff1c9b-483a-46e5-a2be-5e457a82f432",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1ac51e7f-8c95-4599-9cf4-7acfd84d9f90"
        },
        "item": {
          "id": "57598997-926d-4295-b1a3-3a3f851a8402",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "183f69c8-9914-4c5e-8a52-d40d75420f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657daa74-9c3f-4965-90cb-34c046f64421",
        "cursor": {
          "ref": "7a48f017-8b24-48fb-81ca-04d5547f1c45",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1d441b95-c769-439d-bf39-e8d5ce3cc02f"
        },
        "item": {
          "id": "657daa74-9c3f-4965-90cb-34c046f64421",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "25e65965-413a-4aff-8e11-79f97ebbe2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703975c0-2bdc-48ab-993f-4d3fcb08f783",
        "cursor": {
          "ref": "ccef0d0c-2aeb-479b-ad38-b37bb28be9c0",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d4e068fc-d888-40f3-a78d-751058359b38"
        },
        "item": {
          "id": "703975c0-2bdc-48ab-993f-4d3fcb08f783",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5a9be2aa-3525-4779-b646-14364d93e36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdfef0e-b67f-43a1-8c25-892a9b189875",
        "cursor": {
          "ref": "98980a3d-bab3-42ee-9928-9c0214df3712",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3cb20f98-f743-43e5-921a-1f58134b4929"
        },
        "item": {
          "id": "5bdfef0e-b67f-43a1-8c25-892a9b189875",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1bb0884f-d68a-4d15-9fe2-5a8a58f40f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde66c7e-a83f-41eb-af91-166a4c2671e3",
        "cursor": {
          "ref": "476bb257-8261-426c-8efb-50a43e67adb5",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "52db5e8c-ad5d-4fcb-9931-62be68d1cece"
        },
        "item": {
          "id": "dde66c7e-a83f-41eb-af91-166a4c2671e3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "99fe5d56-556c-4986-b0d5-a793fc5a1c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be957ecc-5208-49e9-9a14-f79fb48f1c63",
        "cursor": {
          "ref": "3423b255-f39c-498d-b0e4-e481fca129ad",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8363fb45-60f0-4be6-8ad9-95781748f683"
        },
        "item": {
          "id": "be957ecc-5208-49e9-9a14-f79fb48f1c63",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bc4434b8-1bab-43c2-8c9e-1c7494bd40cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06356449-852e-4892-b10a-46801b283897",
        "cursor": {
          "ref": "d2b401a7-c765-4750-a325-ec5d96f086bb",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9e568dec-ca4e-4a00-a362-85927b6128a2"
        },
        "item": {
          "id": "06356449-852e-4892-b10a-46801b283897",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f7c7588f-647f-4625-9328-97124e9cc4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7784ecc5-64c9-4dd9-afec-73fc8772d98b",
        "cursor": {
          "ref": "7a5bccbb-0db2-484a-89e6-b1dd54db81ab",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ac4c4d8a-3c0f-4d89-8b74-9a584a89e143"
        },
        "item": {
          "id": "7784ecc5-64c9-4dd9-afec-73fc8772d98b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f7df9c28-21c2-451d-acaf-b96fc3338830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a54516-bc66-41c8-8abc-d00acc7df47a",
        "cursor": {
          "ref": "8a3eebc0-d143-41a8-be2c-5bacf02e844e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cf1376ed-f08f-46d8-91e8-ac6f2fd94289"
        },
        "item": {
          "id": "01a54516-bc66-41c8-8abc-d00acc7df47a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4ebc5d75-bacf-4ce2-bf2d-9d7086d16227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb848c56-672e-4bd9-ae07-0117d4402aec",
        "cursor": {
          "ref": "0fc84483-7b39-4f6a-a35b-5fd202d0c74d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2382be99-7dae-455f-978c-0df728686966"
        },
        "item": {
          "id": "eb848c56-672e-4bd9-ae07-0117d4402aec",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e8d46f9e-3e68-4cc4-947a-aecefca2b4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa954ccb-6e99-4cad-a74e-b931766bc50c",
        "cursor": {
          "ref": "4c0cca1c-b523-4aca-b25d-d5cacaaeed2c",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f58fb256-f0ef-45b1-b83d-f9b3ce3a2497"
        },
        "item": {
          "id": "fa954ccb-6e99-4cad-a74e-b931766bc50c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e21aefb6-aaf2-49db-a3ba-b6579950c9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3840ad-5cd1-434b-a1ae-6bd3278d309a",
        "cursor": {
          "ref": "bbda3149-5289-4acd-8ecc-27e2897eb0f0",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "77aeaec2-3100-40eb-a4b2-caee4d56583b"
        },
        "item": {
          "id": "6d3840ad-5cd1-434b-a1ae-6bd3278d309a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b1691a71-da7c-4a6d-83f0-a15c332187f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4050ae0-03b4-44e5-8ff0-088be27c77bc",
        "cursor": {
          "ref": "0b9b5f93-4ae0-4fd6-996b-cd5270ffed1a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "18855c14-27db-46bb-9461-49ad604290d3"
        },
        "item": {
          "id": "e4050ae0-03b4-44e5-8ff0-088be27c77bc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "667ffcf2-7804-4599-a38d-09e6eb3fb124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262051bf-bcff-426b-bd8b-67c7f8f2886d",
        "cursor": {
          "ref": "d79d309c-c294-4405-b11f-281ed1c229aa",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "eb111111-34aa-4abb-8e81-dbd6fbc44a04"
        },
        "item": {
          "id": "262051bf-bcff-426b-bd8b-67c7f8f2886d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a5ec2c7f-80f6-44f8-98ab-7dddc1a2b47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719e90b1-b7f9-4488-a042-5d6581dbb241",
        "cursor": {
          "ref": "e15ae92c-5da5-4cd1-8c0d-5b387ade0b2e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d817f388-4b0b-41e2-b8e8-198b3f74cbe7"
        },
        "item": {
          "id": "719e90b1-b7f9-4488-a042-5d6581dbb241",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0887e6f2-ed1d-4dee-9e00-f5f6691c35df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783959f5-1789-4680-a62f-b050dc2bb72f",
        "cursor": {
          "ref": "3414aa51-4e6f-4ebc-8c0e-0112d7447e05",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d818cab2-4af1-403f-96a0-c198983f1754"
        },
        "item": {
          "id": "783959f5-1789-4680-a62f-b050dc2bb72f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "232a533d-50b3-415b-a941-f38d8599c4d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cbf70b-b0cc-400c-b5be-36bd5262da2c",
        "cursor": {
          "ref": "3b94ac1c-d768-40ed-8a06-193cbcb09e35",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d0da43ac-7b90-4edd-aae9-f804effe2e6a"
        },
        "item": {
          "id": "97cbf70b-b0cc-400c-b5be-36bd5262da2c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e7f4ee04-875d-4f6e-98bb-79e5b7bfaedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce422fc-c65f-4f1a-95c0-7fe76c62ba06",
        "cursor": {
          "ref": "72d4420a-93cb-413c-9423-dbe5c2c0a265",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a0211de4-97d0-4601-bfab-3550ebc6bed3"
        },
        "item": {
          "id": "0ce422fc-c65f-4f1a-95c0-7fe76c62ba06",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "95669e33-f0b8-4e49-a92c-652a0001a3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e803f13-a53a-4f55-9720-fe68d3f1f03b",
        "cursor": {
          "ref": "2fb52185-a338-44d0-a5d4-d85a86231113",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "25a656e5-e6fd-4472-ad06-cebc0dc329dd"
        },
        "item": {
          "id": "1e803f13-a53a-4f55-9720-fe68d3f1f03b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5b15b974-3550-4e0a-883f-af932ef4a628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0bc88d-b0f3-4d30-9323-98ae27b44856",
        "cursor": {
          "ref": "d1a66b9b-b8d6-44e8-bdeb-7f9ab5e415c4",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cc602ee7-0954-4115-bf84-3cc396a856cc"
        },
        "item": {
          "id": "db0bc88d-b0f3-4d30-9323-98ae27b44856",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "da917bbe-d2dc-4057-a10e-574f5ba6d14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c4cca5-9949-41b6-a5ad-efa6619411f7",
        "cursor": {
          "ref": "828876ee-c427-4b74-a83d-15730ac6b25e",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0bce0b24-bf39-4bb7-9f5c-58dad90a850c"
        },
        "item": {
          "id": "94c4cca5-9949-41b6-a5ad-efa6619411f7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3edd17e2-01b3-4ed2-8eac-e2c16877eb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df39d88c-d642-423a-bba2-bf5183c31826",
        "cursor": {
          "ref": "5ba43c0e-6085-4f8a-8230-71433dcac6ec",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3a8c80b5-0000-4161-b660-793249e37f9d"
        },
        "item": {
          "id": "df39d88c-d642-423a-bba2-bf5183c31826",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c65aaf07-eed3-4e92-a948-0e065be60ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf479388-f0f7-45df-9493-ecd2b22b7d31",
        "cursor": {
          "ref": "975e24bb-8aea-4c6f-a76b-38230a1a8101",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b03d49c2-739d-43dd-960f-9944a776d825"
        },
        "item": {
          "id": "cf479388-f0f7-45df-9493-ecd2b22b7d31",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "574220a0-d8eb-4dbc-abb2-35a6d6c8a318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a48136-b746-47c1-9484-6378cf93c0bd",
        "cursor": {
          "ref": "c27f3b1c-fa64-4668-8cc5-79101010a941",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a598eda4-3ab3-44f7-bdc9-060a60d8f39f"
        },
        "item": {
          "id": "22a48136-b746-47c1-9484-6378cf93c0bd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "46ac7f34-875b-4fe0-b322-a6fa2716677c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6164c4d8-a31e-4439-a35b-b8bd690b6325",
        "cursor": {
          "ref": "eb321d40-f906-461b-9d01-15de43460c55",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "eb28b7aa-2645-4883-b2c4-229adb8200af"
        },
        "item": {
          "id": "6164c4d8-a31e-4439-a35b-b8bd690b6325",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "83626667-622e-4206-9157-add5225a1d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88925379-0044-4ad4-9ff1-3a1dae3e494a",
        "cursor": {
          "ref": "0693b64e-7bea-4d95-ab1d-178354279017",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ab0788c3-54fd-49f3-a72e-7eb72ace23f2"
        },
        "item": {
          "id": "88925379-0044-4ad4-9ff1-3a1dae3e494a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9c81bf31-bf5b-43ca-b200-278f5c214524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da74a825-339e-4846-9f1f-8a220077e4bc",
        "cursor": {
          "ref": "02979f0c-3a86-4ff1-94cd-2a78fd0a2068",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "15a1cd38-afca-47be-b2b7-4a80a3cfe3dd"
        },
        "item": {
          "id": "da74a825-339e-4846-9f1f-8a220077e4bc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6f6e1737-bcaa-42f1-b5ec-67c836612464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7691f9d-b6ac-4966-a196-71aa2d827f69",
        "cursor": {
          "ref": "af1edfc2-eb84-4a98-bb68-eb922042cf6a",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fcca190d-d887-4a26-90ae-3ae9d3c3e9dd"
        },
        "item": {
          "id": "c7691f9d-b6ac-4966-a196-71aa2d827f69",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "22cb48a6-9f28-4fec-923f-020bd2603122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5427cc5d-9a0c-4a10-afef-ff65d6ab4fa5",
        "cursor": {
          "ref": "f80224fb-0521-43a4-9813-2ad1e048b6d8",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "01f39bb4-ac68-41f2-bdc0-f791f23abc77"
        },
        "item": {
          "id": "5427cc5d-9a0c-4a10-afef-ff65d6ab4fa5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8cc943f4-07f5-4931-81fd-5ac11abf9257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282ae109-9f71-4abd-9b54-b2c1aff1fe08",
        "cursor": {
          "ref": "77d817d5-dd4e-44ff-b06f-ee8d47db820d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "afe4e740-f900-47a8-8653-d03975becf04"
        },
        "item": {
          "id": "282ae109-9f71-4abd-9b54-b2c1aff1fe08",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5538c3b0-c8a8-41d1-95e0-e149fb960191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d77fde-1190-47e4-8e91-fb2e6d163b88",
        "cursor": {
          "ref": "6907af07-5a79-4c71-a117-5faded17b56b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bf090a5f-ba94-4cdb-86a9-c32e27f8ff3a"
        },
        "item": {
          "id": "e2d77fde-1190-47e4-8e91-fb2e6d163b88",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ec8d0e57-4328-4d32-b854-fea15c1d45b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f024af-2097-420b-9b91-052841578585",
        "cursor": {
          "ref": "fb8e4497-5ffb-4ed3-8b22-be538312d4b9",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7a890e95-a9c2-4316-98d5-fbee2cc8f9f7"
        },
        "item": {
          "id": "b6f024af-2097-420b-9b91-052841578585",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3cc6cd5c-016c-4ff6-a6a4-823ae6e7355f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58051032-923b-4a34-be8e-05b05ac9beb7",
        "cursor": {
          "ref": "409fcd96-6a80-44c1-9810-a31fafbd4335",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f37c2c2a-168e-4749-be5d-522451e1b38d"
        },
        "item": {
          "id": "58051032-923b-4a34-be8e-05b05ac9beb7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "37dcb59a-04de-4d5c-bf1f-62f504dbe643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb52d23-c52f-4b48-89bd-7aba0af50b49",
        "cursor": {
          "ref": "941800dd-2afd-4872-8405-c0f32f501e72",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "717e04d6-38ab-49f6-9a51-9e3cf46b5896"
        },
        "item": {
          "id": "1eb52d23-c52f-4b48-89bd-7aba0af50b49",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "00ccf9a7-5a9f-4031-bf54-bc9db66f2165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f58786-e596-40fc-bddf-de706126a996",
        "cursor": {
          "ref": "dde2d2c3-4d5a-47cb-9c6a-04a125663d02",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "adf6d16e-74db-4b55-bf4a-331b328e07c6"
        },
        "item": {
          "id": "93f58786-e596-40fc-bddf-de706126a996",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ef799d7f-502c-4596-b8cf-5c120720d235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c10f1f3-7705-4ae5-b128-3f748fbac31a",
        "cursor": {
          "ref": "7e581fcd-a5ea-48c5-8959-29e8e055f869",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "563e3700-abd5-415e-9bf0-782af76b2546"
        },
        "item": {
          "id": "5c10f1f3-7705-4ae5-b128-3f748fbac31a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c7530364-a670-4f6f-87e0-006ad3f1df43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151ec853-3387-44e1-94ee-78387c376598",
        "cursor": {
          "ref": "ef5ea1e7-c299-4544-be02-828448f6984f",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5374c40b-eec8-4aee-9e62-75d2b91510d5"
        },
        "item": {
          "id": "151ec853-3387-44e1-94ee-78387c376598",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2a90db56-4079-4543-ab19-ad767b2a9c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b6b4a8-8c80-4267-bf92-04578aabd89f",
        "cursor": {
          "ref": "d51b231c-2633-41b2-991b-15adbd1b55fe",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2b326f6a-5df5-4e57-a8e1-474684a2294b"
        },
        "item": {
          "id": "18b6b4a8-8c80-4267-bf92-04578aabd89f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "345c268f-7440-4479-bb50-bb2684f9c5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e623f52-31b2-4144-ab13-3cb40bca2ff3",
        "cursor": {
          "ref": "7467ac20-2337-46b4-8691-5a060609bbd2",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5a11d3c2-bc68-4c6c-a2dd-e6a3f6cd9227"
        },
        "item": {
          "id": "3e623f52-31b2-4144-ab13-3cb40bca2ff3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7233979b-431e-412c-a865-2f35b6213d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207df351-839c-4962-84c0-53b3f517d0e3",
        "cursor": {
          "ref": "340150d8-f036-46ce-ac03-ec79cb4b6ec5",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "db95c9d0-df56-4002-ad11-27db0920c229"
        },
        "item": {
          "id": "207df351-839c-4962-84c0-53b3f517d0e3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "18edfce9-a5a2-4245-a5c5-860515c852a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb1a862-abaf-4aaa-9bb7-43f4bb04aa43",
        "cursor": {
          "ref": "e98cf99d-8ff5-4eab-8eb1-fd5abdd81ff3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dcb3d90e-b5c9-4041-88cf-3f7e535148bd"
        },
        "item": {
          "id": "5bb1a862-abaf-4aaa-9bb7-43f4bb04aa43",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "14ec5e58-31b3-44bb-b5f8-8d2f526959dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eea4d33-e4cb-4e94-81e2-2aa23506f143",
        "cursor": {
          "ref": "10454e3a-988c-467e-ac3d-2a9f54c0460d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d632fe36-63a7-4392-b84b-269440e20dcd"
        },
        "item": {
          "id": "6eea4d33-e4cb-4e94-81e2-2aa23506f143",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "11f84f74-0b33-4fdb-a9d5-919fac644a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc2a826-c085-4bfd-b9c1-40136d78cb70",
        "cursor": {
          "ref": "4a00926b-e19a-4d03-81c7-ace6ced72933",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6351006f-7af4-4b15-9dc1-14ffee6032fd"
        },
        "item": {
          "id": "bfc2a826-c085-4bfd-b9c1-40136d78cb70",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c8f05e66-f7df-405b-a606-726c8ba9180f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563cb5bf-c3d0-43df-bedb-79daeca00ef3",
        "cursor": {
          "ref": "5fedd553-455f-44a7-a832-a66f28b12843",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "aaad95b0-568c-4d02-a73e-6a4fc57cab7d"
        },
        "item": {
          "id": "563cb5bf-c3d0-43df-bedb-79daeca00ef3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "49c394e7-788c-4ee1-8124-2f7f8bd24c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afdda51-9ff3-43e6-98a9-2b5a55e3c2dc",
        "cursor": {
          "ref": "b34b77dd-96cd-4ed8-82b0-7ce9e59b1ad8",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4e14717b-5b8f-4bee-9e43-9d6dc2fc4ea9"
        },
        "item": {
          "id": "6afdda51-9ff3-43e6-98a9-2b5a55e3c2dc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b82733ec-4d00-4e6f-aa97-fed760745512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc683c9-e9c5-473e-9800-41e3f90f7dae",
        "cursor": {
          "ref": "6c75b48f-7818-47d0-913a-62e249d06886",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cf329c3f-8cad-4395-92a4-54a5777a5d00"
        },
        "item": {
          "id": "cbc683c9-e9c5-473e-9800-41e3f90f7dae",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1df72146-94da-4ea0-a018-b26e999f6d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01bb69f-7ab7-4a0a-b385-c66dd02a9bea",
        "cursor": {
          "ref": "bfd0776b-77c3-4d11-872a-c023d80247f2",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d4fdeeba-4f50-4c68-b892-9c1685ce974b"
        },
        "item": {
          "id": "a01bb69f-7ab7-4a0a-b385-c66dd02a9bea",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "15aa50fa-d26b-4754-b941-37305d6491c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0028fc33-877e-4c51-b6d7-eb035eee1b42",
        "cursor": {
          "ref": "a28574b6-6b6d-413c-a0c2-4f06d8aebfca",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dec97077-7811-4692-a66e-10be1769ce34"
        },
        "item": {
          "id": "0028fc33-877e-4c51-b6d7-eb035eee1b42",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a5f2ce23-9827-433c-8491-d66dd8260a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57af6fe8-79d9-4bfe-80af-4b1158e3fa83",
        "cursor": {
          "ref": "4daead84-5ed6-4883-8687-4c820f58148d",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "057ffa59-61ae-4718-b545-e43f61307b66"
        },
        "item": {
          "id": "57af6fe8-79d9-4bfe-80af-4b1158e3fa83",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6f70a877-86eb-4465-accc-f249af776a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2659abf7-6fa2-4ed9-a1a1-d29d5e0216e3",
        "cursor": {
          "ref": "87a74434-e8a9-431a-a144-72e05ae77213",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "73d42242-eb28-4bf0-8d45-2d63cd96a11f"
        },
        "item": {
          "id": "2659abf7-6fa2-4ed9-a1a1-d29d5e0216e3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "87d65b88-6c99-42d2-b8e3-0a0853b4f66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94166d2-15f3-4d73-a92f-456c1aa8034a",
        "cursor": {
          "ref": "81b5bb22-b41c-4fc8-8838-6d594e88b45e",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7206bc78-4a23-4ce5-9f9d-74cd0712041c"
        },
        "item": {
          "id": "c94166d2-15f3-4d73-a92f-456c1aa8034a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "18ead0d7-1eea-4844-a10a-221825a95c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966b7cd8-239a-4c40-b1a8-ac130b484d5f",
        "cursor": {
          "ref": "334d4bdd-981b-4b7e-bf09-0395feee5c77",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1bddf5a2-a1a5-4c22-89b5-2e8bf7aad570"
        },
        "item": {
          "id": "966b7cd8-239a-4c40-b1a8-ac130b484d5f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "33e1e499-c57f-4ee7-9d57-0122958ae23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359ef5dd-5f41-47e2-b6d6-b5b4fd3204a3",
        "cursor": {
          "ref": "74a6fc04-7cd9-4d87-87a4-705dbefa9317",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c68088ed-ba77-4927-af92-f835740ee3d7"
        },
        "item": {
          "id": "359ef5dd-5f41-47e2-b6d6-b5b4fd3204a3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a894c6df-e174-4fd5-9ae2-b12f04e0b48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a460d365-3f83-4ee3-b238-0003da56bfa7",
        "cursor": {
          "ref": "8f00224c-c7ae-40e8-8592-409a867bd2ac",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "24f0b3ee-7a5e-4e11-ac1b-425d613fe05c"
        },
        "item": {
          "id": "a460d365-3f83-4ee3-b238-0003da56bfa7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9b490bdc-7b94-45a4-9b51-535add38f178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5e5245-cd68-4f13-bbda-ff8616d74efe",
        "cursor": {
          "ref": "fb140311-cd20-4eff-bf36-885daa353fdd",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "026ed4b0-17b0-4fe1-a08b-f0919c9e643c"
        },
        "item": {
          "id": "bc5e5245-cd68-4f13-bbda-ff8616d74efe",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "06c4a2f2-2195-404e-8ca4-9c583aaabc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a823f3-207b-4199-a3fe-bfd0df5d4d88",
        "cursor": {
          "ref": "d74ea346-cdef-4dcd-94a7-546de001333a",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f8acc353-98d8-4be6-85df-b8a57b7c7377"
        },
        "item": {
          "id": "78a823f3-207b-4199-a3fe-bfd0df5d4d88",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "299fcb3f-a58f-4b71-8e33-78f23b052c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3265fadf-802a-4a05-b092-460a8732aa29",
        "cursor": {
          "ref": "231783f9-cc92-4ffa-94ff-a3b5ff255dee",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9259a020-89af-40fe-81d6-777a0c8100fe"
        },
        "item": {
          "id": "3265fadf-802a-4a05-b092-460a8732aa29",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "037b243a-92f0-4110-8848-551cae62c4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e24abfb-c851-414f-8d59-9360a61d5b67",
        "cursor": {
          "ref": "129fc4cb-3f9d-4f0e-8f67-cf05fd527f4e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c6664274-914d-4016-98c9-684ba962e0da"
        },
        "item": {
          "id": "3e24abfb-c851-414f-8d59-9360a61d5b67",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c50ea1bf-1230-43bd-b69c-01cd0674bede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb356ea-d97d-4f10-af62-c5814147a867",
        "cursor": {
          "ref": "4f95581a-6b8b-48ea-a606-1749bb279516",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "74b01452-b16a-42ba-a5fe-3f901272fbba"
        },
        "item": {
          "id": "1eb356ea-d97d-4f10-af62-c5814147a867",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3cae667c-1193-4be4-86b9-4698234bdfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b4a971-5b35-4066-a245-f6f1f3df20e6",
        "cursor": {
          "ref": "930d38ae-3c91-477a-bf95-a6d72018f31b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ca19b49f-f076-4500-a37c-807240f8d853"
        },
        "item": {
          "id": "54b4a971-5b35-4066-a245-f6f1f3df20e6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cc31b0dd-0f39-41d8-b252-22f61c5e32b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d29425e-5184-4db7-930e-e5e5a7eefcb2",
        "cursor": {
          "ref": "3de63a66-fa3d-49ab-b4b2-1699960fcf2e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "aa649153-5bd0-4314-bd59-617388419b06"
        },
        "item": {
          "id": "3d29425e-5184-4db7-930e-e5e5a7eefcb2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d3f3bce0-99d8-43e5-b3fe-d5de7dbca0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37976156-96ca-49ee-9baa-0124caf3fb41",
        "cursor": {
          "ref": "df47d835-34a3-49b9-b552-f9243cd39c59",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7f3168f1-8110-4c97-a79b-15baacc5cd0f"
        },
        "item": {
          "id": "37976156-96ca-49ee-9baa-0124caf3fb41",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "70442ae2-3d4f-48fa-b412-b329cc3db449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d213c6d3-3d15-4360-a807-7610977218b5",
        "cursor": {
          "ref": "57547977-c128-4f3f-9801-06692c5ab44f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "118a2ac5-e676-4fef-baa8-f1d1b03d267b"
        },
        "item": {
          "id": "d213c6d3-3d15-4360-a807-7610977218b5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "65af5d22-50e3-45da-b2cd-412a9f6a7676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f67d5a-0375-43b0-bc4c-24623800d2c0",
        "cursor": {
          "ref": "04b6c510-e1b2-4232-a0da-9f308ed3c1bc",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "70e430ed-4070-4c7b-9f29-f084e6692ca5"
        },
        "item": {
          "id": "b6f67d5a-0375-43b0-bc4c-24623800d2c0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "684fde00-f988-4a23-9b2f-b6f0d2711413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3ba219-ddc4-4323-a3f3-444b57ffee34",
        "cursor": {
          "ref": "deb1124b-1f7b-4f6b-b194-3c84f4a4d22b",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0dbda2a1-8be5-4061-83a2-7856f1896b5f"
        },
        "item": {
          "id": "eb3ba219-ddc4-4323-a3f3-444b57ffee34",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5071158e-4bc8-462f-a0a6-f3268b82ad8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4151f0eb-1315-4329-915d-3cca2fe97277",
        "cursor": {
          "ref": "25cf9e97-0f90-4c4b-928a-aae24e277c62",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e6eada0f-094c-4caa-9baf-e10c76e0fa9d"
        },
        "item": {
          "id": "4151f0eb-1315-4329-915d-3cca2fe97277",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cfdfa220-5afc-499c-94d6-51fcbf7edbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18218e65-af47-4965-a0f4-7d3ab4851ec4",
        "cursor": {
          "ref": "ddaaf4c5-b305-4df0-b1df-4a5454b813bd",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4844d59f-880d-4ec5-8ba5-4a72ff84daed"
        },
        "item": {
          "id": "18218e65-af47-4965-a0f4-7d3ab4851ec4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5aef17c2-27cd-4d18-900d-305b73f09103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffa390a-2517-43a7-b7af-53c3a669b00e",
        "cursor": {
          "ref": "e3126744-3206-4b77-8ef2-145cd272176d",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b0d9c8d7-c7e9-45a7-a100-15f53c7f90b7"
        },
        "item": {
          "id": "7ffa390a-2517-43a7-b7af-53c3a669b00e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1eb8ceec-7566-4c33-9518-fb4e2a8b5745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4551e8a-c5c6-48e1-bd53-ead204192389",
        "cursor": {
          "ref": "2351a791-5d0e-486b-a120-0eb6b2ffcd46",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "286a6d52-8f47-42a9-a977-876ec11fe1e3"
        },
        "item": {
          "id": "b4551e8a-c5c6-48e1-bd53-ead204192389",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e578c114-4f94-44c1-8fc7-aa98e9bf7815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1f547d-4d54-4650-982d-537f58c98f3b",
        "cursor": {
          "ref": "9946d107-f2c6-4788-ac4e-2b5b3506e3cf",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "98534d12-3cf4-4d11-80e6-6b9c8012398b"
        },
        "item": {
          "id": "8d1f547d-4d54-4650-982d-537f58c98f3b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ebabab9e-7b29-432a-8957-4ae05d47c11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696651e6-3c39-42e4-9a01-278fd087e5ce",
        "cursor": {
          "ref": "ee3baed0-d22d-402a-a85b-31bc5884e2f0",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6f77f3c3-514f-41e3-ba46-3beb966fb1c3"
        },
        "item": {
          "id": "696651e6-3c39-42e4-9a01-278fd087e5ce",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d2f0c314-dc34-4020-baf0-5060d64673dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313cedf0-4ca1-47c5-8dce-f687c18849fe",
        "cursor": {
          "ref": "561847ec-c4a5-43bf-be8a-ebfa29f0fd26",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "74f0fcbe-e414-49ee-ae3b-e5a4fa61dad0"
        },
        "item": {
          "id": "313cedf0-4ca1-47c5-8dce-f687c18849fe",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e9a67b3d-0567-49c2-9e20-1303a5a61b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2627715-18f5-4064-b273-dad660c14c5e",
        "cursor": {
          "ref": "63b8fff0-911e-469a-8e13-953fa37c8639",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4f131c6b-e4e7-449e-a79d-0e1674a3e057"
        },
        "item": {
          "id": "e2627715-18f5-4064-b273-dad660c14c5e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4c9fe43e-9d8f-482a-9455-974d6c60de35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62aaf51-a383-4f75-8ce2-5a695140a6fb",
        "cursor": {
          "ref": "19a296a5-44f2-4fa1-bcc9-51b6adfbe728",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8a7cca62-7b8e-4080-81ab-2c047fcc0803"
        },
        "item": {
          "id": "d62aaf51-a383-4f75-8ce2-5a695140a6fb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "beddeaa5-192c-4603-bef9-6b3e1d72a7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21869862-e5bc-4f4c-b6cb-c0473b9aea01",
        "cursor": {
          "ref": "1a9b2c01-b15b-493a-b494-43280ca8e92e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "656e8b12-8bfc-4451-9aa9-55ac701af736"
        },
        "item": {
          "id": "21869862-e5bc-4f4c-b6cb-c0473b9aea01",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7d3670d2-05bb-44a9-9c6b-7d089b602a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff695cc-5eb7-4927-adfd-39c27ed0b0ef",
        "cursor": {
          "ref": "7bce4937-8eb8-40bb-bffe-56be19ed1760",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c5dc1d9b-ddd3-4d6f-8aec-4f866be1c918"
        },
        "item": {
          "id": "dff695cc-5eb7-4927-adfd-39c27ed0b0ef",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bf580f42-608d-460b-a263-dd45a35e530c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0890ac0-3d49-42c7-8d13-1f906b77d92a",
        "cursor": {
          "ref": "0ebab1f7-97de-46bb-a63b-65252abb4969",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f5e63a7b-b604-4a89-88e3-8c3ee628d32a"
        },
        "item": {
          "id": "c0890ac0-3d49-42c7-8d13-1f906b77d92a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "37b16dfe-8f33-4590-95c4-7fe94805805e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ce3d6b-8e7b-4149-a4b2-6f491fa2c57e",
        "cursor": {
          "ref": "47eb3970-b252-4bc4-8d44-acb177b89423",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7dd0ff77-447d-439e-8f0a-d220928ccf7e"
        },
        "item": {
          "id": "a2ce3d6b-8e7b-4149-a4b2-6f491fa2c57e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0e2c333b-1949-46e7-8dac-96030c0577ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f01cb8b-0deb-4069-8b24-077551ee0c3d",
        "cursor": {
          "ref": "54e5568f-62ae-4bda-a0c5-4ae198933f47",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6aec8e7f-622f-4f45-9cf5-9322c450876d"
        },
        "item": {
          "id": "9f01cb8b-0deb-4069-8b24-077551ee0c3d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cbd9cea0-f12c-4cea-9bbe-87db9e7d3075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bc001b-3679-4b44-a07f-04dd9a1f0469",
        "cursor": {
          "ref": "d5002e6e-fe5c-4021-9150-4006f174f17d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bbce99cc-fe17-4cdd-87a6-9b8db3b3a43e"
        },
        "item": {
          "id": "f9bc001b-3679-4b44-a07f-04dd9a1f0469",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "16f71bf4-4d49-487f-ac26-cbfa3d93065e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8168533c-555f-434e-bb88-b1eb155ecc6a",
        "cursor": {
          "ref": "1059e563-cbad-4430-80df-2c3890f4f438",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "be1cdad2-f3c9-4d34-bac4-0f6a267e08be"
        },
        "item": {
          "id": "8168533c-555f-434e-bb88-b1eb155ecc6a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "353c9df5-87be-41c4-b010-d322d2007190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dbfebe-509c-4748-a1d3-6981e9981b91",
        "cursor": {
          "ref": "bebdd618-4028-40f7-aa16-8b9464e84cba",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b95fec1d-467c-47a4-ba86-7be098ce0f9a"
        },
        "item": {
          "id": "90dbfebe-509c-4748-a1d3-6981e9981b91",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "45f9cb70-2a1c-4cec-8fb4-2b8bdc0cdb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f1ffd1-f839-495b-91a9-ddbeb8d74e86",
        "cursor": {
          "ref": "08b45d5d-8a6b-43b3-8500-477c47aee266",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "42bae7b2-208d-496b-8ad8-e9d00c7e18c4"
        },
        "item": {
          "id": "15f1ffd1-f839-495b-91a9-ddbeb8d74e86",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "040ea88c-5e8a-42d3-91fe-bafb4d16fb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8bf63b-f6e7-43d4-9f2f-45e3652a94f8",
        "cursor": {
          "ref": "ab6b21bf-fb81-4980-86f1-41c692d73f5a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a1339f64-3d32-4bdb-8753-de53573f3778"
        },
        "item": {
          "id": "dd8bf63b-f6e7-43d4-9f2f-45e3652a94f8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "290051b5-466a-464f-95da-8850e40e3d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a64c6e-7f99-4b7a-af33-fe5b713c7430",
        "cursor": {
          "ref": "74682e48-fede-4104-8aed-edda59e7f191",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1b531938-8a3b-401f-9a4f-65c42b565c40"
        },
        "item": {
          "id": "03a64c6e-7f99-4b7a-af33-fe5b713c7430",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "89abd99f-e9df-469f-b27f-7c47b72ec980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3946032-c9e7-4d66-a441-8919c8c93c3c",
        "cursor": {
          "ref": "07a7afce-cbe6-4fa6-b6df-865c8b8fcefe",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e686250c-22e2-453a-97a2-97c00ac54969"
        },
        "item": {
          "id": "e3946032-c9e7-4d66-a441-8919c8c93c3c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "730886bd-946e-47dd-a3b7-d8c59d766b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648ced3c-df52-4bbf-a79b-34db751483e9",
        "cursor": {
          "ref": "d9c3d2f1-b0d4-4012-8330-cc332a5f4dd7",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d218237b-d21e-47d1-a4db-0d5b98f896bd"
        },
        "item": {
          "id": "648ced3c-df52-4bbf-a79b-34db751483e9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a89ccc6c-2c4f-468e-a9dd-ca157a9b14c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6550bf9c-55fb-4d1b-a0fc-6ee5a7ce5304",
        "cursor": {
          "ref": "2d5bd313-b3ba-4778-a1cf-36e9eee78cda",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d679955a-7f3c-4fb9-a7e5-3cbc9ef3459f"
        },
        "item": {
          "id": "6550bf9c-55fb-4d1b-a0fc-6ee5a7ce5304",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e04b2769-5a60-417f-ab11-f2deeeb20fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a7070b-df6e-47ec-aaca-cda81e755f92",
        "cursor": {
          "ref": "9f0101c8-76fa-43a7-a38e-6cbc98742fbd",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f80a662a-d53d-4423-942a-821fd99c87a4"
        },
        "item": {
          "id": "c5a7070b-df6e-47ec-aaca-cda81e755f92",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c34dbdf0-31c4-41b2-8710-3e27368ef193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84cbf65-220b-4f38-963f-d3edd9503350",
        "cursor": {
          "ref": "604114a4-62d4-4812-9ceb-92e997fca2c3",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7b7fd301-42da-4ef2-8f3c-55d13597cdfe"
        },
        "item": {
          "id": "a84cbf65-220b-4f38-963f-d3edd9503350",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f1c5db4c-659c-4974-a760-c57ead567549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceca43d6-82dd-4da0-b8d4-dbeb5ab8d854",
        "cursor": {
          "ref": "a3229a18-5020-4316-931b-866747494abc",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e89331c8-96df-49d5-88c0-2164cd21fb7a"
        },
        "item": {
          "id": "ceca43d6-82dd-4da0-b8d4-dbeb5ab8d854",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2dda21fb-1536-4698-bab4-456c73e5df87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae21546-d840-40b9-b8ae-7edc554f3930",
        "cursor": {
          "ref": "2c7d169c-4050-43b8-a56c-4fe18298f0c8",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6ce77150-6f84-4fb8-b19c-356c12bdf7f3"
        },
        "item": {
          "id": "5ae21546-d840-40b9-b8ae-7edc554f3930",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "73c0f0f3-d59a-4ccf-9b7a-fd69fe8a34e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc70803b-4cd9-4909-992b-2c97478790ca",
        "cursor": {
          "ref": "b51bf00d-a2b2-445c-b380-f92105dab48c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "baec7688-9083-411a-a045-72a192dec68c"
        },
        "item": {
          "id": "bc70803b-4cd9-4909-992b-2c97478790ca",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "284935fe-a1f7-41de-a395-06adb9359cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309c03fe-5e58-4145-aaac-b41996769c83",
        "cursor": {
          "ref": "1112d7d1-c4df-4c0f-99dd-f5a2ecf88e9b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "62962447-eb69-406e-9248-deec8cee978c"
        },
        "item": {
          "id": "309c03fe-5e58-4145-aaac-b41996769c83",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "246bcb1e-5bcf-48d3-ac49-d2533a964d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ac0c20-fbe8-449c-bad5-8e9393087057",
        "cursor": {
          "ref": "d4aa1cea-7da0-4642-aabb-aa5ed7e8debe",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "02b7395f-098a-4967-a362-6c09a46395ae"
        },
        "item": {
          "id": "03ac0c20-fbe8-449c-bad5-8e9393087057",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0193f9d6-fb36-4fa7-b2e2-9608f5c7c635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73392e8e-f54e-4c45-8ab5-ae4c7314ff84",
        "cursor": {
          "ref": "525b4060-d98c-4cfc-ac73-f9a2d6106bd3",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "81f8f653-dc08-4a7e-9e58-b1e108b6b36b"
        },
        "item": {
          "id": "73392e8e-f54e-4c45-8ab5-ae4c7314ff84",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3dfc0ff0-048c-46a8-81c1-4f04b985d655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f4b9fe-a412-4977-84db-4bec583d79e2",
        "cursor": {
          "ref": "fbe5c44e-7e8c-4908-997a-72ba4ccb1fb7",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3cf4a102-538f-45ff-9712-898dd46f303a"
        },
        "item": {
          "id": "d3f4b9fe-a412-4977-84db-4bec583d79e2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "76fc4d11-89c3-4f16-aa34-0755cb5d95f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2bf682-e682-4d7d-8f01-5b885eecba0b",
        "cursor": {
          "ref": "d39df354-7d40-437b-88a9-03329570b88d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "52c607ab-3008-4e41-a643-4510671b5daa"
        },
        "item": {
          "id": "2b2bf682-e682-4d7d-8f01-5b885eecba0b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3bd72074-8aa0-4db9-8cc4-afafb837dfd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a6574b-5010-4d07-85a4-47254127164e",
        "cursor": {
          "ref": "3e963218-3ae4-4608-bdaa-44d7ae208bd4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f2e64747-f866-416d-857f-9e45dbf121ef"
        },
        "item": {
          "id": "38a6574b-5010-4d07-85a4-47254127164e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e5338a4c-5269-4d8e-b0e4-756f333663bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ebed2e-8732-4e88-868b-f5a63edde090",
        "cursor": {
          "ref": "237724f3-cb2f-4925-95c5-f44aee7c114e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5cd41cc1-a285-4343-bafb-8ec6bf6551ca"
        },
        "item": {
          "id": "e6ebed2e-8732-4e88-868b-f5a63edde090",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9b86f8a1-d5bb-4dde-bc71-4b113cffc0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f11037a-1b51-421f-8253-855fdce20f6d",
        "cursor": {
          "ref": "5e070026-4efb-4f60-ab07-730ce4f15e57",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b4ead43d-e2f9-497a-a11d-c7253e65efc7"
        },
        "item": {
          "id": "6f11037a-1b51-421f-8253-855fdce20f6d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "db788700-7471-4e0c-95a5-9d9b84d6af2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19aaabf8-e617-4c67-94da-e5fa636843ce",
        "cursor": {
          "ref": "303048d1-daac-43aa-acda-2e3cf0761f60",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "10f4f4df-b9f6-496e-adc1-29b265e2165a"
        },
        "item": {
          "id": "19aaabf8-e617-4c67-94da-e5fa636843ce",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c1fd7541-7223-4126-b0db-efe0342ea114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e3e48c-2969-4ce4-bf50-1492b4376898",
        "cursor": {
          "ref": "43b721d9-2ca7-461d-a068-e36d47a007e1",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fb75d54d-6820-4537-b122-2350900bdf79"
        },
        "item": {
          "id": "23e3e48c-2969-4ce4-bf50-1492b4376898",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c30d16a2-f1e7-40e9-9a87-3dcd7dec4d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3937dc4-4f59-43e6-a77f-00e3d28fb526",
        "cursor": {
          "ref": "3e3a04bc-b4ae-4435-b585-525da7200c44",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c298f92a-2996-4e30-994e-32d74ea535df"
        },
        "item": {
          "id": "f3937dc4-4f59-43e6-a77f-00e3d28fb526",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a84da727-4771-4c6b-92f2-856f6b6ce16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c8cde5-decc-46f2-8468-5b26fe825353",
        "cursor": {
          "ref": "a093c873-1188-4902-a8ee-8feb6a2233a5",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "064fcc19-ff90-41d3-8353-9b43471b41e3"
        },
        "item": {
          "id": "76c8cde5-decc-46f2-8468-5b26fe825353",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "405c93e6-726b-4d74-b1ba-2157c7a1d3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b35412-a87b-4f46-b1d1-7cf1a0dd7021",
        "cursor": {
          "ref": "7952d02b-080e-445d-a535-74273cd2f783",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "207fde1b-8671-446a-964b-8863bd978cb2"
        },
        "item": {
          "id": "23b35412-a87b-4f46-b1d1-7cf1a0dd7021",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "16ad54eb-daf6-4b45-a01c-1abd83b3481b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a652079f-41f9-4fb5-9f7c-0341a97ab278",
        "cursor": {
          "ref": "fba8a18d-cecf-426b-98f8-9f04d1a0cb9d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7f702ed9-632b-49c5-bed1-f155dea1b253"
        },
        "item": {
          "id": "a652079f-41f9-4fb5-9f7c-0341a97ab278",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6d9a5716-51a9-4d0b-a949-eb1b5f6813d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc92663e-2ca8-4a0c-82e5-044004eac1f7",
        "cursor": {
          "ref": "1b4f86cb-6735-4121-9c9a-df8e9d411280",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9a561a5f-0fe4-4636-8b1f-06c6922e39b9"
        },
        "item": {
          "id": "cc92663e-2ca8-4a0c-82e5-044004eac1f7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "28b5e495-2f0e-48e2-8519-5af6d18d109c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e411b503-797d-4351-ac1f-1129282be630",
        "cursor": {
          "ref": "d8f2ffb0-3887-4dfc-959e-e73a01e623f6",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "71afc2c0-8bf9-4618-9b6a-7d894521e100"
        },
        "item": {
          "id": "e411b503-797d-4351-ac1f-1129282be630",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5a770b07-bd16-4167-a673-aa64ecc3893e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b611ebd8-d569-4424-b7c2-de08bd45437a",
        "cursor": {
          "ref": "a40bcffe-0d28-43e6-9ae0-eba7d5c9b9d7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1c72795c-9eb3-43ae-a5b1-ea95db585a80"
        },
        "item": {
          "id": "b611ebd8-d569-4424-b7c2-de08bd45437a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "97771bd6-6a95-406b-bd4f-20c9d1b5def9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e246e0-4d69-4646-a9fb-4503bf55df34",
        "cursor": {
          "ref": "45b67b1d-9ed1-41d3-b4a0-efe8f2ec195e",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e75019d5-7ee3-4d1f-ac67-a47985dd4f4d"
        },
        "item": {
          "id": "43e246e0-4d69-4646-a9fb-4503bf55df34",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "036b440c-3760-461a-9ecc-9a100d60489a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48ac7a3-aa7e-4de5-b691-8290f5c4b0b5",
        "cursor": {
          "ref": "6bc0821d-f6a9-4d5d-810f-08ee79925ca4",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a30671c4-8852-42ed-bcec-4e34bebb5591"
        },
        "item": {
          "id": "f48ac7a3-aa7e-4de5-b691-8290f5c4b0b5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "436dfdbc-52c9-4b35-b0ba-300e73daf0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a78478-8d95-435c-b43b-eb9e6d652381",
        "cursor": {
          "ref": "b78206e6-a154-4a7b-a026-efa37ca933e8",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "10c73167-7fdf-4792-88ef-9589e0a081f4"
        },
        "item": {
          "id": "b3a78478-8d95-435c-b43b-eb9e6d652381",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6baf133f-5b4f-497e-b66e-8b2b3b164049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca6acd7-853b-40ea-a8a9-b3bbca774c4b",
        "cursor": {
          "ref": "bf3a06f6-70b9-4239-894c-119a7d79bd40",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "44b625ee-7111-4d67-80d6-6927932886cc"
        },
        "item": {
          "id": "0ca6acd7-853b-40ea-a8a9-b3bbca774c4b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "050d9785-a5cf-4129-a710-f67f235d6f04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464bb3ef-2894-45f0-9e81-fc588691f269",
        "cursor": {
          "ref": "2e539cac-aaac-4f9c-b74a-614faf4b3286",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "129aaf82-fb06-4247-a73c-f7cf59a9bb71"
        },
        "item": {
          "id": "464bb3ef-2894-45f0-9e81-fc588691f269",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "65cf1fbc-eb15-41b8-ac9b-9b0dc6088624",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8779c139-8432-4d8f-a7f7-add0ffe5fcaf",
        "cursor": {
          "ref": "259a5877-e1cf-46ec-a94d-5585a37c497e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f3709b8e-b75b-490d-93e5-04e98377d02c"
        },
        "item": {
          "id": "8779c139-8432-4d8f-a7f7-add0ffe5fcaf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "df1dd608-9185-47a4-b124-535b80a53f9e",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1406cf8-949f-4413-8e14-189fb00cd2e8",
        "cursor": {
          "ref": "3cab10d2-2c7e-471e-a48c-fc865749ad9a",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4d868b07-102c-4bb4-bf37-8ad0248460b6"
        },
        "item": {
          "id": "e1406cf8-949f-4413-8e14-189fb00cd2e8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "710b705c-613f-4afb-87fb-639629c5447f",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41b3da4-7344-4be7-9066-4267693799d9",
        "cursor": {
          "ref": "40a984b7-d514-4238-8bf4-15d597940f86",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f5caab5c-dce5-49ba-8e87-a91cf0e40b04"
        },
        "item": {
          "id": "f41b3da4-7344-4be7-9066-4267693799d9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "61eae44f-2a0b-4dc9-8243-77537b1abbc6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41b3da4-7344-4be7-9066-4267693799d9",
        "cursor": {
          "ref": "40a984b7-d514-4238-8bf4-15d597940f86",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f5caab5c-dce5-49ba-8e87-a91cf0e40b04"
        },
        "item": {
          "id": "f41b3da4-7344-4be7-9066-4267693799d9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "61eae44f-2a0b-4dc9-8243-77537b1abbc6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9775e9cd-d0d6-4b3b-b0b2-e136db08ef01",
        "cursor": {
          "ref": "6a2615a7-8a30-4ee9-b2b7-310593d3e280",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2dfdb7a3-76c9-4e6d-a607-876a7398ebcd"
        },
        "item": {
          "id": "9775e9cd-d0d6-4b3b-b0b2-e136db08ef01",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e22ce2b6-bae0-4e36-a0a8-a33d5bccc6f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aae16f1-e4bc-414e-b709-a792c9c07797",
        "cursor": {
          "ref": "b9492ff2-e2e7-4b2c-98ca-01edea589fa7",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7432fc1f-61ec-4e82-84db-d886d3afdaba"
        },
        "item": {
          "id": "5aae16f1-e4bc-414e-b709-a792c9c07797",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3bf693d6-b8de-4937-a34b-3b57207f9d7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}