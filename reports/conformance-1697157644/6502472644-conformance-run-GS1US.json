{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fd515d91-4f15-4057-a469-1b5028c2e5a4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bd99c045-37a6-4957-bb8a-fd533f5dc2a4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "120c7f4a-e0ec-4a17-96f0-f4902bd72a20",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "39893e93-fb77-4bb5-871a-e5ca603c8eba"
                }
              }
            ]
          },
          {
            "id": "4ffa944b-03eb-4e7b-8b69-b01f16d1b13b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "329275bf-f23d-4afb-8460-5c248ac311a8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b4fbe742-66f7-4242-85f7-99a58eae4a66"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "684d55e4-418e-4038-84db-5afc79702e2d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "845f6c18-5f78-4436-a084-fb79105ea72b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8f79772-ff45-40f2-84bc-f115d0c27862",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a802697-85ca-4559-ad07-442531444a40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29155a10-b21f-4e3b-bcd2-5db057a69a7c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "96cdf024-bbac-4a0b-94d3-17c512c725a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4cfb5d5-c8b3-402f-9587-dea525f931a3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c1ac122d-f327-4369-b470-c24d10ebbe4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "164b9486-d980-47eb-9836-6e73521ba13c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a0de095-09d4-4bdb-abb4-fa11660417c3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d359e768-0219-41c1-878c-c270e0713bb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "528f8a3c-263e-4c23-a2ba-f71eb21d2d33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33cdc479-a1a3-4ad5-8122-a66b9c2e54ba"
            }
          }
        ]
      },
      {
        "id": "e32fbc8b-2505-486d-b323-5d299ecabd7a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "96fc613c-0e60-4be1-ad73-bdcbfde094f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "065b2693-a105-4477-9903-6983144de977",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f3e4e42a-7b20-4fc5-a4ec-ecda9fc3dd68",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfffd4f-943c-40ac-ad40-f9b58e5ba5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "889e8f51-7b4c-4d8e-8a99-1c5ebf5adc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6ec026-1140-4e8c-829f-8ba582378ddd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70e5c01-5e19-42d7-bf71-3c81ab9e9a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3a3bc05-e9d0-4182-a573-4691e86d53ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36e7bea-a05a-477a-aebd-a11f837a8219",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5404365-4f56-4b4a-bc6b-be70af4446dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbb55494-56a8-4a08-b89b-38955a49bdb5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a0e735ec-ffc2-4a41-b61b-19a626ec4203",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "351210a8-6ff3-426c-9cbe-f2b39992a11a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fc63ac-54bb-44e8-8704-d2f18856932a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b98a1e35-c052-4102-9d53-258419c80005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e98e480-7e22-48f4-b0ed-009b52c2ad61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c5c178-9713-4e55-867d-eaae92f85307"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9c35bfc3-f564-45c5-b00e-58e5440f67c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "917f7a42-cc8d-43da-abdf-b9321f034073",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b543dbaf-4fc9-4ced-a319-e6f91d8ff0c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "797c30eb-d79f-451c-9635-779e0d203771"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03691cbe-7a1a-4e3b-8f20-c33a8d3dbf7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f1c49174-96a0-4e0d-ab8e-fecf27dbec1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8a0e380-0388-4c58-896b-e0d6ca9d9187",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbbe535b-4009-4682-a9a2-14c1b56da303"
            }
          }
        ]
      },
      {
        "id": "69d37630-b536-4771-b6ad-9a1844569c74",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9a852415-3c64-4e50-87b2-bb62bdf43b0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec9aa5a1-a4c3-44b8-965c-d8a2688c5224",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9f458485-08dc-4464-af05-f7aac9a545f5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85116fc3-b787-4ad3-b4c6-afe5ece25886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0710aada-48cd-4eb4-9e23-2629a97de149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a18dcb-b34c-4552-971c-781c72ea4142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d033facf-7a52-479e-a75c-9ff03dc884c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5e9dc7-222d-4c02-80a7-d2fbad0f3985",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf67caaa-3ee3-4f4d-876a-d572339c1dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cf9ab8-b1e0-4a65-b67e-b53a10db0773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbeefe3-4329-4093-8bd8-b4604c362240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff93782c-d42c-49bd-8040-9e258816b1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5d9157-c57e-4433-965b-e3af168ade99",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528f1929-ab92-4a80-a0be-a5a2e27c92f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d9b497-ab44-4b36-987a-874819eb58bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71080d5d-18de-40da-8577-13d5f09438f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19cef916-a474-47ce-b424-48200e469b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5de9f1-631a-4fdf-a88e-2dd2883d2ae8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71b8e00-c4e1-48d2-b187-db73a47df9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d5f1e7-5621-4aee-9096-e7f45a7db372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a12180-e7b7-4ef8-a7b3-07e57e1b4058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6903a2a8-69f9-4fc3-9454-6e452cc4d3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfd6e37-93a1-4381-84a7-221cf9f8fc9a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5969c8-2eee-4455-a4b6-12265339c902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697fb93a-2265-4fe0-8b85-12ecd5ed2f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c74ee9-5179-4d11-a1a5-c852deeaa00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4fb68c7-d2ee-495a-ad5c-ab061937ad69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0d9a2a-20d7-4ba3-ad40-a1be0e7491a5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9556fd0a-5d63-4f22-8b8b-aef8a70c7cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f4e339-98d9-4c5a-8775-a0495cd123eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0cd099-97e6-4f8e-b6dd-ebc9012cc862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08e49c43-bdee-4b76-8401-37d2de7accea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3d94f2-39d0-4b54-a803-d3dac43156e6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a4365b-04a9-43e3-b907-139d448c4af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e091a214-7660-49ef-9c05-4924e3121697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0a6415-70e0-4549-be03-33af7ae62661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac0280a4-20c0-422e-878f-37ff2755e629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4812dd6b-4542-4351-b339-1dc5afaa9b0d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b9edaf-c924-4f39-9e6b-8df37f6862c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb65148-532c-4c39-bd30-6d01db4f9d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dc2b66-515e-4113-b98f-5702c2297461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac8e9436-360a-4a9b-862b-ababd57f0286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1a3590-335a-4712-82a9-3dfb00749a55",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9dacec-8602-493d-9be5-7142d77979db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d43624-0489-451f-af7f-2f8f3edcc968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66888766-db68-48a4-a497-12a15a86f433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01274af9-b8c3-436f-ac47-b6e1a0d5bbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3a2fed-336a-4d92-8302-ae7c980c4c11",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faa29b9-fa65-4f76-a783-96ac1cb39774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6fb908-15e9-48d8-b502-ee44808c3f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a165192-bd48-4f7c-ba24-6b49a94d5c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "633bcbe9-6150-4ce1-80d9-77a6fc2c122b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350c0103-c888-4c79-a907-6ceabe883958",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85837757-03c0-441a-bf8b-8c9de8fddde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef575a8-065f-411a-9369-3885aaac01c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b9b27c-bd9f-43a9-8a63-99fc3fa5f81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f030fedd-6503-4ee0-a15a-d9e49d8b1795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa6f853-10a5-477b-b7ba-e91bcb0841b9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cc27d4-d12c-4131-8efa-c7a3e3153b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9981e597-3e24-47b4-a6f8-e87fbbf84675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db9e7f8-4421-4887-a140-b8f45882933d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6063d55b-34f9-47f0-b98d-bb3b3d82797c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a911be98-6be9-4e04-b18f-87faa9e98aca",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19093619-f749-45cb-9f9e-a5b243b02185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd856178-45c1-4d88-8148-40f3999982cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f753797f-56d8-4af9-ab39-d3188f175e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5b5c5c4-cda9-4881-abfb-236f9f84ae29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf35e7d1-a6d5-4cc5-8959-05096c09e964",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3700dc5a-73af-41fc-b945-9b51f45a5a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285eb512-eda6-4f63-adc5-4c6fc4caa247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96adf4e4-736b-49e6-9a1f-d46755ad71cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45a89d4a-6daf-4505-81ca-ce3944be8e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2287878b-2185-430f-9bd4-a9a0c012eb6e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613d43ca-70c0-40ed-adfd-40b45093a743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6f99bc-52cf-456f-aecc-746c6dce0a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d03d78-ba66-453a-befb-a8024727dc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61ce7af4-1f66-49e5-b354-05a528f334cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0e37d2-e93a-41f1-a968-d4b8a1bd3efc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac7ccba-e3b0-4392-81ab-11febd917be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e7e91e-c00d-4735-bd50-1d9f45830a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bda3f95-5851-4db4-9ed6-08caa12c368b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01f7b3e9-81c1-4ef9-92f4-05be55b68c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da84cc8-4ac8-4bbd-98f5-11a4aeef846b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f56501-940d-4d4e-8462-da6e640c8d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5401e3f-ca5b-4063-a1f0-f6e7e0bf1f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623d3998-8531-4c2d-81b5-5571e66e7142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72be64b6-9a98-4379-923e-0ee87849bb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09d9c72-92ee-4423-86a6-976f08c231d3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64d3bc3-0716-436f-a204-256b6cc30e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2785ef72-1f29-42c7-8c30-26f7ff3d4b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ada9dc-f32e-4f79-8718-4048c5f04a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b208b4f-4612-460f-8208-8239c7a91924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2548aaf3-90e1-40ab-b8fe-e981ce3a51de",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2caad6-097d-4f68-aae9-6a12f42f06d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd0a08d-6a74-444e-9b38-fc7b4b519f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f6ccf5-c908-4b5d-b338-27a4cc13e469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13de6f8f-9723-40dc-a6bd-b647de46b167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d66c1d9-4598-479f-94aa-06cdf0d7ba3a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd558c1-4c68-46c4-9ab5-a6e03a1d3165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbf63d9-4f01-45b9-88f2-fc0fba62aabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c73878-9c96-4b5f-84f4-e42f15ffd115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "341146eb-3f1b-4c0c-bcf3-d1d72cffe229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991e9c9b-4b61-4b6d-b4a7-cbf9b870386e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11ba806-192f-4019-b260-f48cd621dc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b00a945-f1eb-4200-965b-be88c96f6e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503738c2-9747-48d5-8fde-67338cf61dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7ff35a-c2c2-4362-bb38-ea2f2ffb49a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d8b5b7-cbd5-4f5b-9d0a-c096f3be21a7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce886c37-8c4f-4c4b-a2f8-abe7a074a71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4be9cfb-9489-4363-878f-6ac11b4ddd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d41e623-d53d-4766-bca0-a50dcc68af96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8f1028-befd-499f-9409-95cea849deec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bdefe8-6fce-426c-baa7-4a5cc621b8ce",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65bfbd1-2a58-44de-bece-58e83cdfcc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b65cc5-e4bf-4f9e-b703-afb52cf35c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b87ebf5-04a3-450d-9a1d-f7f9990a538e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ff1927-dd83-4c19-91ed-6d7894e91cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b023fcce-e771-45c9-b7cb-78f73008ed7d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a09feb-33c1-4e4f-8db3-9a467ac9a38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4379dab1-b07e-4377-a6f7-e88a25c5afbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fad5878-db2f-45b7-bb2e-99a5e7d8f0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b2ee40-57e7-4386-8a6f-ffee7d0bd2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b96413-44cb-4a10-8975-d3c5e4783bab",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cf33a1-3014-4c92-b706-664a4948f9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec98610-d3ae-4070-bd58-250886c1e4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f257ea-999e-4b1b-8b40-dbaaaa4d26c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75e5da64-e73c-4e35-b811-29736566be41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76856e15-5f04-4e84-8042-f84deccadc32",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325e1bec-e7db-44ed-82c9-6ac6a46c333b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab56220-53b0-4a24-b3dc-cedc7e5c6c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17b12b4-2ddf-49a4-9e97-adfddd24483d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7daf6cf2-d82f-45dd-865c-508a5b3294b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe3a6cf-ef49-4324-abb5-dfb405add2e3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf56158-d938-4b75-85da-28d6a5f7dc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9ef306-71c0-47bc-8cda-253c05c46710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7768fdaf-72ea-417a-87fb-72e57b343444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a69f705-9a71-465f-ba2e-50a6b55f2b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1229e0e1-1c2b-43fd-9b0b-7513fcf8b484",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b83ef34-6ce4-4db6-8bfc-d5fb8c420337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12eb94c-bac4-441f-9169-32727ae0255a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0108426b-8d0e-4b4a-89f1-0b163da3c73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa325d47-a134-4e5f-bd0f-5aff7343bee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31301d96-a5cc-4c48-9642-c3cdd2d8b7d0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e6942c-cb98-4418-b7e7-f36daf705a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0951037f-95ab-4dba-94c6-6469c627e27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dd2244-41c2-4ee0-a4ba-58ab132333c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9940bf5c-b853-4c6c-b432-766bbe7854ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51b3168-5361-4d8e-8e62-9c2b18819cdd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff67a122-d34a-4876-ba32-1ae0d80dbad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8a827b-8005-42fa-8e4e-d1e3383ab612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336c194a-a007-4ee9-a3de-4fa5dff3b8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "af837baf-d044-4755-8cc3-edc394001824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff51e66f-c444-445c-b2d8-4673e769935b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34efe7de-7211-483b-8ae1-e62d5f1930d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5296800-6ce7-4f60-88b4-eccf1e9574b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a1dc56-b0bf-4936-8ee1-aec93b1ab50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e09c18e-65fe-4982-9191-9c3255b3327f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada1237e-eee7-457d-98a0-796e460f7d5f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f838610f-4613-45ef-93d3-3ba9619e0a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c391c2ed-2572-4137-86f6-d0250ded5868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c12c8a-b1fc-4b74-a79a-4e9250568d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2a7bbe-616b-4055-b75d-faf3b6490f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d647fa4-e46e-4f8b-a3ef-624e558ed7bb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d608d9-9ea9-4701-8c64-9abab3cf2efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3b37b5-4022-47e0-8e96-7f10ff75f931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661237df-d816-4719-ac8b-d7810e2ae870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f535b9f0-8bcb-4fd0-a26a-6fcff23b3f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a0f8a8-f64f-4339-9265-f616978e8e5d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea57eb03-9934-450d-8b30-569b214330b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4c3c3a-3b61-487e-b1ff-332be9d3a718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c37afbb-8b26-4f48-8fc2-f5f851049f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82d89a5c-291e-42f2-9ce0-85a085369b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2bd2df-88e1-4687-bdfd-672b997dbd55",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fdfb75-5ae6-4ef2-9ea1-8f1856e1eda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d4aa3c-95ec-4cbe-8a64-dca77f66405c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51467565-93c6-4409-b0f7-9f65b2b249bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbd0f73-f8b1-4803-8bea-222400ee01f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374ab5f1-71c5-4f46-850d-8807e6467a08",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4324afb3-a122-4775-8536-0afa0eb1756b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbee528d-2ed1-4492-9ccf-37c0935d91ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7c515d-02af-4f6a-a3d1-af8bfec35c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27628016-418d-4ee6-9f2a-c34300e77818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcbd90c-a553-48bd-8fc8-5608bf526751",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8359931-1a7f-4638-b21a-60e762cc9888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0681889-065d-4bb0-86d3-de9c0239d227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc4bf0f-af6b-4b4e-90bc-41299300a615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb501ab8-ed02-4ad3-912c-b17ddea01b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73899c6-7204-4cb9-af6e-b11d3fe60a1f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0959fd47-7903-434a-844f-f10693af15da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15adbaa9-c7bf-4e63-92c0-f778c4e2a5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad4dff7-c8fc-4c86-b5bf-dd10d55216c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "73438f20-579d-41df-a7f4-680526a539f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bc55fa-2c46-4bcd-ba0a-59757119168d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38e5182-56d3-4a6d-b40a-3b64c41cfcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6ea058-c02b-4a58-b27c-713da9bca237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27fc406-0e04-4085-a528-3fe528959d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6228c031-41ab-4e67-ac7a-5dc4b0d1094b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336f99d9-38a5-4c1f-93bb-1cdf9e0c082f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06e2f1d-f342-41f4-b067-c65ba03c246f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1409271c-ac70-4a09-bb8a-615a44bf6997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d9d703-1178-48c6-8603-b30a049d2af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c320083d-0d73-42fd-b026-5f4ac56d1d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25bd096-7686-4c16-8e3d-94bc6037594c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bce5157-8820-442d-8262-8ab994c9dc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdd3c71-f731-4c4f-accc-a59eb9521531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd41364-bb7b-413b-8798-abb19e816cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "459d05bc-f5db-46a0-8683-b98625a62c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b9a477-04cb-46b5-ae53-be290ddc72db",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fc2986-9c4b-4096-bd85-481b366b12c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59dbfdd-d723-4856-a227-ff8a4e25f4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20929f12-365b-4c46-9e1c-661b18737d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c73e76bb-8089-45ce-8941-7e80f8246f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d75fd4-b23c-4a79-a017-6e27f4f4858f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fea8236-b850-4f24-bac0-55707c3cdbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b28da07-143f-4d18-bd7f-119ffda7291e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb8d167-2907-47b2-ab1c-cd62d5191101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4e48ac-5414-414d-adee-633c6356392d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97754b20-6f88-41e8-b381-035e7f2f045a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc8549d-f349-4362-8e16-436512fe9530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1660c5cc-6387-4340-a739-4bdf8a07f804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1798841-801b-4cc2-86d9-535fd821f643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa15b08-5cca-4564-aea4-be653354d88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2f6ef3-7588-4568-901b-c2f0adeba127",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0685bf08-e833-4f15-baf9-e9339a67b38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f23fa99-7760-46d6-b95d-c89c6efb8e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfe7e3a-d97e-4b97-93c3-9d98fb241459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a71138f4-d1ec-42c1-a6f8-5dca3005ba41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad4fdb0-39cf-4908-b953-d9524ef891f5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28849d11-4576-49bd-8163-51b214ef9865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352a93e7-5f54-4865-aead-fc4f40834a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8c16e2-2618-418c-b4b0-3f4a0c297fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa1152d-111e-4a0c-a918-ffb085812760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312d6006-745f-44bc-a751-27ea221947c7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99cea7d-e9a5-4ea3-84fd-2810a0d05ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57bec0c-481f-4cbb-a59d-c853731a5179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5623c023-31f2-4905-90ef-7ee15abd4792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b833122-15a6-4db7-bf37-52ac4aceee72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf718c94-7271-4c3c-a41b-1e98d83a53fd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a44de83-c419-428e-a9d6-341e490b5822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7248796-da65-40a1-be19-8ad7929f52c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473c494d-ec82-4f60-b1ee-c93435e8572a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30738fa8-b4a5-4cf8-a573-cf513d21072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c748511-baa1-4f6d-a5d0-835edda351df",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09da6429-3262-45c8-8ee0-5c0ce5e505b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7f5782-ec17-471e-9fa8-43e10aa9f551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a342eeed-dac2-4da9-8b25-c41f739b0fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "899ea597-efd1-4816-bb16-9d5cd6dd8b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a79c4ed-3492-44bf-9cab-8cebf151ff65",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b6004a-5af1-43cf-ba89-b6ea56ac322d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456b2cad-2a9b-4cf3-8440-5c59a1af2631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2c5ff0-314f-43a6-b162-e91d8d6a57bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bcd8bc7-6022-424b-ba18-c3ce47717913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cead6d92-a67a-48e1-bd3e-3612c890e049",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c5676e-0a72-4103-9fff-6649bbcb79ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284f5e47-9b24-41c5-ae5d-305d57a19459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf9bf04-f0da-4b9c-810b-51cc31f8de2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e70d1f-4b42-4e8d-b268-ef560bd38e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd0b4a8-abf9-495b-9cb4-b28931c2955a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff707d9-ac91-44cf-9064-7d8812fdfaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf64a06c-0c15-447d-bc67-00c10f5343ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409a43e8-f21b-4281-877e-09938296568b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e69f3a2-9b43-472d-b395-9551dde3f64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a053d32-bb4d-4276-8f4c-235fde5bf955",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002c7bcd-0ae3-4ee7-a87e-3038983d2820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e854750a-8224-4983-a51b-9b8f470cc10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ab4530-3b47-4ca9-9249-1ed06427f7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4965f9-1b92-4cfa-8c65-d6261dadd99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6652a7f3-cdee-4156-a89a-a98746bc1abc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725ae369-f06a-477a-9469-b0b37cbf78a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c28e7d-41ec-4f87-b2b0-5ec26d433c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fa3938-4751-4d48-a389-266d33cf4b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "815b9cd7-dabb-4d12-b94c-de1d03b855b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee38431-34bc-40f8-87ee-380fdc56c3a9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e91dd3-3c4d-48b1-a78f-b98fc9d04783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c9c149-b6aa-4c7a-b322-42bd570edb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf242d8-8097-4e6f-ba96-75d302a32b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a02a8d60-1265-4aff-9001-9ba1cc360443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2a2ffd-0b22-46b9-981a-ecb2f63487bf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5254d403-4427-46f6-b97d-a114323a868d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34b7462-ce14-44a1-bfb7-9737b07412c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a211bb9-94af-4bb9-8585-9ac28f1f35d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ee1d4b-310c-4cc8-8efe-f9f05c7289e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98cd574-84e5-411b-a1bb-dedbc1628ce4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467ac83b-39d6-4059-a45f-8a6a26259970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6930e3f8-695d-40f3-b983-b82ccccc4f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb75286-8021-40f2-ad3d-41921f6ccf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8fc0566-f9eb-4796-a0a3-19716e7f7c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcc7a1d-99ba-41b0-933e-1cf1cda98fc5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16372352-736b-4ce7-90f3-d957bb1c5418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efa443e-2cbf-4426-8715-1fd93d4b1da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a839034-e0b7-448b-bff8-5333ffaedd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "88efb288-4bb7-4d97-bc1d-e58fe3721a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcadb23-dab7-4e31-8784-b8ad01bc0f81",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357f0c42-b238-44e3-99c3-ff58f9b0217e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055153eb-0864-43ed-8187-371592e2a67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ab6373-2d46-499a-a8e7-b098c8e82020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1db56849-7bcc-4eca-8c44-71dcaafcdd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8237cc87-527d-4512-bf79-fe875795332f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9eb855-1f2b-4a8e-a4c2-ca695f5dfc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e555ed-a1db-4fb0-81ed-e8eb557d198b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692445f7-201a-4eab-a35e-7071d65443de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0f19d0-8769-449c-9422-81479eddab2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03a9400-f7c7-46a6-aa9a-6fc64bb3d9b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea7ae2c-48e9-4a19-a1fc-aabd06b231ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9c58e0-ded6-4176-9269-78c4c58cf595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cdd4bc-d52f-482f-929f-d569d2ad83aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd545aa7-c628-416e-9eea-f9ed4b20fdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6e6cc3-1e86-4eb8-ac4d-56af857e2e2e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2a7782-c626-41bb-bfbf-a6f655bd7204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fdc544-8a2c-4dd7-a735-2e84dbd98f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fd83b4-2e42-4845-85ff-d8554453d940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b77376-3908-4936-b19e-2a4ccd7d8067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ffbbdc-07d3-4638-84a4-d3b7cc625993",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb0d95a-ff5f-4ab2-b98f-c6365f9d52f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa9f795-1da8-4cdc-bee1-3be465c4f73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e12309a-c2b1-4e29-9558-eba4149438c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "75154013-fa84-46d7-b2b7-7bd2d149b3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9166a7-dd03-4c24-8372-536a14167957",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5253f5-eb9f-4802-aa88-f7a6810a55e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4adce2b-6c0d-458d-af04-fcde0db276f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90660c5f-b7ed-41fc-8f18-2946a6970470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "577fd92e-17cb-462e-8064-4a4a5b8da356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac63dea-ff6a-4d51-aa0c-359206b2de5a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50afffba-d424-46a0-9e79-16a4650b4a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca77867-1e50-4b79-b410-0de3405027c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb82759-157c-4d88-ade7-d7b02d137b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1823c231-471e-41f2-ab64-6818464e77ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905d37ca-c767-4dfd-ba3e-c42831959ad2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85dd1e9-cb4f-49f6-b59d-714375fc4537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03754b77-9b31-4088-a839-c0e06602f445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38d5ed3-da88-4649-ae39-7ef7e748ce72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76b416e8-3e13-4f40-b372-df2f1f3cf610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09c83c8-8496-4513-9ba4-17aa563bf725",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495a01b3-1554-43f4-878b-dae965ee59ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06037da2-2fe1-4c0e-8e11-d79d0a9afe98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cef550-2be7-43ee-bc12-eb8b2ae24810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93045077-95d6-4628-8a31-d648380c357a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc4cb58-2f65-4f68-b8f7-a90e3c47a3f7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762b248c-cd56-452a-a231-b3635d581b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c136a987-d1eb-40bf-bb53-1d1eb2aa2e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb6da82-a48b-4cc8-a7b3-6babd1fb79f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "be59e8e4-a486-4e3a-83b6-da3276cfbc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb01898-fefe-4c1b-95b2-20c2fc87d1ef",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023b5289-d9fc-401b-a504-7440d258100f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047d730a-6ab6-4992-a534-439ebe1d03ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387103a3-9669-4134-a2d0-be0c7ffe1343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "62e663f1-f89d-4fbe-8f56-166a7de794af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4707caf4-f0da-41d0-aa81-07515075de57",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f43c6a6-b6bc-4e43-9f26-0f07494800c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7de847-7f29-4964-91d6-0a2d8f3451a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5e8f75-8529-4086-8b93-d0a26dc5e7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c59a7dd6-0b9b-40dc-b6d9-e8a41e17ea78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d8335e-78c1-4d63-b1c0-a7e51cb21d56",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa4a79a-f35b-4118-8990-8ecd3229d2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4c1d26-c2e5-44ca-accd-5f0d4f951ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79648ba3-be3e-4600-9bfc-efd7703cc8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fd4262-1496-42d4-b3f4-b5801d26c14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0816aaea-a1b6-46dc-901f-98b6c1b8941b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a17c93-0ef4-4c44-af9b-04ba3d204f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a52fdf-a1b7-4ca4-8410-67bd5bc78a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136ce47d-cc72-4e1c-8225-bb854eced4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53b57e86-629c-4473-bd2b-725ddf47cab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a4ff96-7a4f-45f3-9845-5632c8b4bbf8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517b687d-5d66-4e8d-9bb1-6f29c06bdc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9986aead-fa2c-412f-81e0-8b4d85ba76d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5824484e-1477-433d-87e5-d69170ac5f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6ecea3-fc06-4611-8dd2-7ca1d583465a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3253b22-50b5-480e-8770-e0e9d66fa84a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f7ecde-b147-4b41-b82e-0bc89ca40ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e20cc50-ba44-489a-9cf1-020fc2451a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9877a52c-d513-48f6-b15c-b05f0f6f1ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9d8ef6-8b50-4c50-b0ab-55e7404a2201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c88151-73e4-4fc5-b062-66302c8044b9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bf742f-18eb-4639-9387-ad1eba06b941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e342a05-9ed2-402e-a99c-c20a86e080bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f34f86-6bab-4060-8cbe-9a07799e5ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8dd09e9-1595-4bd4-acce-2c3fa9ff2e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc06996-7b19-487c-a9b7-f07d06ef0e34",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0109580-a048-4902-9c2a-259ac09316ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8648b79-b12f-48ef-859b-4760257c343a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef4ba2b-ecca-4e2f-8600-a564e8b15694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe3872a-2da6-4a5d-8066-15b04eda143c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a818e7ab-d229-403b-91ed-87636ae790e0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a541824c-96c4-417e-a969-5b743677db10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd8d6c3-4d82-4d90-9b1a-99f2b1b20bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552a0fc4-06a0-435d-bc36-ddaa0984e818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a38465c5-e392-4bb7-87c2-a8e417f787bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab482d7-e17c-40ab-8412-6d8c2bf392b3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da590d67-c8c1-4119-a008-a4e39df39c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0173233f-a5cc-4634-b56a-f3b434f66236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd77bc9-4c0f-4f76-9e71-7b8095445ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09ad8b53-b041-47ae-909c-36a4daf0b574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0532ff-05db-4158-a1b0-08f02d397f3a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b192c66-334f-4d18-b65f-3b3f8bbcc454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683310ea-411f-47ba-b320-a3f73b1b23a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11427f75-7deb-45ce-bc1f-a090760f6a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a27b142-8c7a-4c70-b606-c015c259606b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac7a7dd-6634-473c-8764-3ee692a43ae4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccff617-3738-44b0-8598-9f80a01b52c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5855c5d-d453-4271-971a-8353385ae026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b591da6-0880-4089-b876-11fecf7f8ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51decec5-1064-4466-b1ed-891d68fbfbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aacbac9-8da6-4ca0-bb0a-9b5aac18db4b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce2e37f-0b78-48e2-a405-4fd581140abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f338a978-a1e4-40d7-a1ab-1c4b684506c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0781bc1d-fcba-447c-8f41-5af8a2d66516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "84677e49-4ef7-4064-880f-5fbd1d9f633d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7958dc-5ae7-4829-a15c-50d5ab24c034",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462d08d8-7054-4f97-af2b-12876c1ff7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ba30da-15d8-403f-a72c-fc973d5caa5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dda9dd-58e9-4dd5-ac27-f1526c92fb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae3f2a9-af98-4b72-936b-9f371faa3743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dda87f-2421-4974-b231-3e3f9d86baa1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b32171-1fef-4735-af8a-a997ff7b7937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545790dd-f7a7-4728-9672-ef988e0af165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b706a4-d9ac-4a50-9ed9-14c1cfe10922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd71cae-891c-4ed3-8090-63f1bf0e11c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b3fe7d-5d14-4b1d-a2a4-bf31a275a5ec",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6866617a-ed9c-4414-9eb4-7d6f7615c958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e884cece-e88e-4555-8f66-84459199aa2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b49023-41bd-48e6-92a7-76cee3085264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c37cdc0-fe2f-40a5-9038-cdf69dee6d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ed9f08-df3d-42b3-adaa-d546e00f3b36",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a31275-6c1d-4e48-b90a-f7c06e8eef38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e638a84-dc4b-418e-b9e9-9fc137dd3afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665dbb9d-2e38-44ac-a45e-93087649cf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "207d978a-5a8b-4de1-b895-504813a292b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c21003-e359-4fd2-ad44-a8b1887b19bf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241ae079-ae61-4993-a3ef-984c6c741a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98c287b-d8e0-4734-939d-8d5a42def80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc95d3c-fd8d-4ee9-b8a0-f91da1257590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52c2b1ab-6877-418d-9874-3bbe96cf7fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92231c5d-7e1e-4b4e-b323-507cf9ae4487",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7308ed81-5628-4bc0-9aa0-be471e893b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15173ef-27fc-4e0e-92c3-c9563e69e017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbbcf6e-1f87-4579-a962-f2ae561a89be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f1d7a4-50eb-4802-a4ea-a1ee4a4a5088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78d7036-68f1-4b73-a983-bbe270e94698",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678b65e0-c0af-4aac-afb3-75a55f19373b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d06def-55ac-4b7d-b0d5-c6ebe0a57a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2261bb78-36df-4869-915c-1b520ddcabf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "88e7a283-e5b8-476b-ad14-c5634fe58ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbce282-2fa8-4f49-b505-baad1063e655",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d13a939-593a-4eee-8805-2777b96ce2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8b5fc7-8594-4efe-b8d6-a8932dae48e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ee8b4d-dddc-42dc-891e-f90f5c92a5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "320aa497-1829-4a49-88d6-e8206ca14109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d26c668-82dc-4c2c-8d50-e1575fa2fe0d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db9516e-46b5-456b-8139-be6c846c5cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6149e4-4421-45d7-adad-31e9d522297c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31feffb1-99a9-4732-b098-437ec03b824d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ff1ff7-43da-4825-9be3-9d921bb2d7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf5b237-99dd-493d-be2e-6c58b6019aae",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83939372-87ac-4a24-9144-bc9f9a7c211a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2439b371-a9f8-4c27-878c-379b5b6dcca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3aa8b1-5ee2-489e-a255-923e67cb4775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e247208-13d3-4273-a124-a9a6571b450f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c98fbe-5cfb-49b6-977f-8e8e70a3c2e1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569238db-4a4c-4902-a1ad-29b4289f029a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0a234eda-ff12-408f-a18c-551b8b59bce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb075a8b-083d-41bc-a064-8c9807fb5dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "88f77201-892b-4c9a-8390-5cf5319d3590"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d2d8d73-b809-4b91-9a3b-2585aabf6639",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb54dd3b-3a18-4078-97a5-58871eadec79",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170b068e-a722-4f22-a2b2-dabd8d596480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5da90c87-f2c4-4925-b390-bbc54f30f51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc7c21e-33e3-4d62-8658-f69783d10a17",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e25615f6-f2f7-4948-b298-88d1528f72d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbcce71c-8141-4838-aa81-597220fd4678",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd7d66c4-2471-460a-a186-5172c0119cb2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3173891-41f7-4ec4-8069-ed1bbf0e60d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e735591-6f96-43ad-b0da-9c29a0e4cf28"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d2743a62-461a-4fff-8359-705097e8f505",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d2fbddf-5776-4cad-a52a-20d5034e3b96"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fc6ef743-48f7-4ef1-bcd5-e65fd09278d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8cfb0af1-a018-4b03-a265-589a6d7c0562"
                }
              }
            ]
          },
          {
            "id": "3a509650-6b82-4741-aafd-3767d5649cd9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33d4fe3a-9c8f-44ab-9365-32e4ba7dbaf1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd0e412a-f383-4b6c-8262-ca5bb53948a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3a6297e-fa38-4d0c-8180-c33c590d4067"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f62f4e6-2802-4a59-b08d-903fb76a6c6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9fe52595-377b-44ed-84c2-f2cc0fc7b74d"
                    }
                  }
                ]
              },
              {
                "id": "322ec8df-151d-4e57-825d-0f8b95303e7d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d0743ec-5af3-4706-ac91-d1c8e4482248",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "871a6ae2-db6a-4962-a9be-bed0f56acb98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4c4084f-5c93-4a2c-8ff6-9d2067615464",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "29b27fc4-e788-49fa-9777-4c81dc7daa6e"
                    }
                  }
                ]
              },
              {
                "id": "9b2f3e9e-8a3b-4017-becf-35a4745ca1c1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0283352-78e3-4b3c-b223-3031509bec30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "920e8571-4f3a-4d22-b965-39b857ec4050"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2b82dfe-e879-44fc-b9fd-90191994616e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0bd36d5-31be-495b-9aef-b143e748f160"
                    }
                  }
                ]
              },
              {
                "id": "6e227039-114f-4c38-b0cc-23d47d91eebc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c222fbf8-87ec-45aa-a6ed-b07522aaff4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0b8099c-54d5-4a03-8add-81a20d480431"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9df365f4-c35f-450c-ad30-7b9bac1914eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "41706b28-a307-4c8c-b9cb-8fb659275d90"
                    }
                  }
                ]
              },
              {
                "id": "b7cef10e-3d02-47b5-a51e-61138f5b9e13",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b9536e7-ab92-4a1b-b00c-03ec05eb21d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3757f202-7a8b-4ea5-be82-973ab114d44b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "045c0272-0fb8-4f35-8e98-0ad529010112",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "516dbc8b-0112-47b3-846f-e5fb24200303"
                    }
                  }
                ]
              },
              {
                "id": "3365266a-06e3-4e80-ad9a-7aabc806c1ae",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e3e5663-7b28-49a8-b787-08d26d5fecc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dba57cd6-01ff-4e8e-bc67-11f8fc1d367f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a93d9c0f-52cf-4519-a0dc-494888929d4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "086a8192-fd5b-4010-927c-e7314941ad1e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6d0176c4-3fb9-43cb-8c6d-2071c93f9cb1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad612b48-9624-496e-a99d-4ddf93623bd4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4939b036-4d5c-4077-b6c2-ec9ecece5a13",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3756fa2c-9d85-4a00-9f2a-ce454fdc84b6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d6674d4-3b5b-4ec8-9936-694e219a896c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "69dcd2b4-2b83-41e9-92e0-dd65414f86bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ceedbbfb-4e31-465b-afc9-b609be969a25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9004ce9-1b3f-4d1b-82d3-aa53a7d73cbb"
            }
          }
        ]
      },
      {
        "id": "bf811d67-bf11-48bb-8248-488c9df9c70a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "89d7f46d-7e6b-4248-852a-6ac945444256",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f77b115-d2d7-4ab8-9820-007ca35dd264",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fe672dd4-a248-49e7-b792-9fe5e6846c03",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf72ca72-9ceb-47d6-b7f7-a95c10104596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713d2ca5-fcde-4f33-9c28-3e013a969bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0208e2b2-eea2-43d2-9159-74b0b63b4c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e88dc50-3316-4212-9d83-deb75e8ee8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf48cd72-316b-46e2-9fbd-5a31a9c3e789",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d252b6-5551-4011-aaaf-08acd5b5b4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ed8640-0292-4e72-b51f-865bc438e911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d21b19-974b-4a80-86e9-09b9213f5a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7090e8e0-cd7b-4431-9205-4205006b5634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c057ba02-141a-4398-a4b3-8bdf1f89f30b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53374f2-0ec8-4516-a911-30a513e951c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd2056f-e052-4a54-a1f9-fdbe1d0b75d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d006ee7c-7d92-47be-b745-552e3c39012f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1510a0-0116-48fc-8c4c-199d420ba1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba52eb8-7c0d-4a73-b823-b43c823333cc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c41fb4-986d-49f7-9642-f2bd4029094d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d09d500-c8ff-4efe-beb4-77f5cf75538d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a330dd1a-c252-4c5f-90b2-f4636a44d5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9a6430-f6e3-4cf1-9241-68e22585a561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba47d99-b4b6-48e1-bf6a-d06820fdd1da",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e196f8-0fc9-45b7-a51b-c227a169fe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb0d53a-2757-4d05-835f-7738e0f9e98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc34bcc7-4759-4227-bdfd-56928bd4be8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b12552-6af4-4abe-b2ee-9e60121830c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2536ac03-3062-455c-87c3-70661f898144",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739a6f55-86b9-43a5-b0ad-d872a1d81bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee10f45c-7204-443c-9ea6-5a7dff82a69a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ee0d00-2fa7-453f-8900-0be4e52bc720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdcc686-f28d-41ff-b04b-f99d14ad489b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972091a3-1686-4497-b629-7977e6ef80c6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625f9d56-5455-4c9a-9af8-829a6827118a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942fe7e2-a99d-4938-92a1-f3d47487ba50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6db56c-db1e-4e8a-b661-45820b9f66be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe37d041-580a-4876-b51b-1e5cf0c58069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924b4b8a-07a2-4e6f-b130-b35fe788b3ee",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e4510c-ce2a-4e64-a454-a22f46350449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5969ae8b-7125-42ca-9954-564ebfc3d557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeeebec5-c1e0-464d-9f7a-2cf6fd0a1858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e90beb22-39dc-4a6d-9c10-c3e9ad1692a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7c2561-a55e-4032-96e8-013e7c606d6a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5bb1b0-8fff-4d3b-a812-5d1602e2d92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75136d55-18a6-4376-8ce7-ad58feb13aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e0f6fd-9342-4e1b-94a9-1c06a417242a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd07874-8e76-4d0f-8fb6-147a5f56673b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b732241e-9c98-4011-8da9-e990617955cd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573a25a7-2d5f-47d2-ba14-f6713df7cf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa98c12-491e-4485-ac97-c30275e96bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1347ff6a-b195-4e20-b8af-57aca417bbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "943e815b-fc02-4b54-ac0b-6d8479922028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf85104-de4c-4bd4-812b-48d0d29c6faf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfe7ec7-8281-459a-bd9f-91777fa8385e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f041e37-199b-42e3-ac3d-46b554848a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4eb17e8-1c1b-46cb-b901-bb6db8d1df6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "49d0f70e-106a-4c33-8827-0da1a5f3d26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ef0caf-c7b6-4967-b6fb-508fd59aabf4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c461d17-1a5b-4745-8829-ca35de784234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3844c03-50cc-417d-ab69-b16a836942b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ddf32c-56f7-4c1d-823a-17bb874f5769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "868fc8b8-c43c-4f4b-9bf5-5dacc44287e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64758fe7-b704-4bfa-b4da-c70e6788b441",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61e06a1-d2e1-40b2-9c23-a3dff0fd1410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7403f1be-6819-4df4-966f-0e211d205b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c2efda-433e-4dab-8a49-93ea2cb49cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95dadf64-bc78-4000-bd09-42d2eef21bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df0bf41-4bb9-44fd-a994-f7e232143215",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ea586b-8cda-4171-9b60-fabdc8c5a53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc02b60d-7b88-4c0f-92fc-7f21406f2d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdaec43c-8f95-4807-9587-60ae59c1b642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ba97a1-07da-4bd4-8065-c6aae71b37a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9325a08-f459-4721-8bfc-de4f8f49c1c0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b034aa-f21b-45fe-a6d8-d12cb01d860b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a800a09-658a-4644-b635-4a90d6ae6575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44400424-42ab-41e0-ada9-1cdf1c162e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba986a8-0ba8-4e53-a6d8-f30e5f0c45a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103cb680-8e96-47ae-9ded-bb9954637089",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2177f31-8613-4a2a-a7dd-434d42f1113a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3e0918-24e2-446f-b4cb-05fc3e8a0832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9bfcae-765d-4ef6-982c-3d5ad3ed8383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3edf25b-58e7-41be-b606-5cdd526247cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a7b212-b0d6-4497-843b-2abcd0fae236",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8f8639-1a50-44cd-9a0b-1d4a87a8e58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b518ca-b9f8-4552-b5e2-eebb2678ac5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb3a62c-b631-49d3-b1f5-455df95ebeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "227ba876-44c7-4b41-b5c6-bd2c98dba1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c44a96a-4949-4a5e-8974-e2347a2ecd69",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16a7317-70b2-421e-bf21-1593f9a1e400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8e8bb2-2132-42fb-a898-d1a560f7aa5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fe223e-9394-4c7b-92b7-7791ca4cb848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67cbbdc3-f3b5-4137-bbe8-fdf64ad5f684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e66f07f-15cc-460d-afbf-8d8c678a3beb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1147d3c2-d29d-4178-a56f-b9c1dfcd66e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9bcac5-ab75-4f57-ae55-d423b1ce290d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd7583a-24be-48d5-864b-e8d8090314c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff01513d-e35b-4535-af68-6757a9d74ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d06616-cf75-4067-a983-65bb9039bc45",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85da63c9-856d-4acb-878f-a7697e7d85a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4f7f79-2e4b-4a0c-a6f6-9cbaaec9b585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a732ef-a55e-4f23-8252-0ad0415678f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a11cd5db-bb63-45d6-8a9b-8732e1907902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478d4259-791f-49c2-8b3c-da019fc18c4e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7e3be3-c2c4-44e1-8f55-d1e0fa8a9e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a3fc14-9cee-4f44-a028-ea198da30ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c57b125-2522-4314-83ad-dfe0bdef6735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45e8f486-433c-4be3-bf96-3498c3c3832b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16af7412-afae-4631-ab29-4493c58c7898",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3a4c95-6e29-4ad6-a982-bc4db44eb778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76a1c11-4f46-41c4-bef6-6504f19437f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb73390-4de8-456a-a082-704441d48f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2df026-46cf-4d88-8357-0808b01ed504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7ffbc3-d18b-4dca-a1bc-c59d908055b7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8454be46-7fe7-41f1-80cc-d095a8cfeb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb1f478-687f-4275-bae7-430d2719c372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef9c0a0-745c-4a4a-ba34-09a5445d9b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "facc7e92-dc3e-43bf-ad60-9ef371051906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f4176c-65e8-4f9a-b800-6d1f6e2a7981",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371906a4-bf24-4004-9487-2e8d045caae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290258b2-6a02-46a7-8715-32883ba96031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b621e79e-8df2-4ae3-9ecb-3f10df790fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a835b57-6e86-4a3e-aa55-26b57a18247c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7767c3c-5f68-4d03-baae-4d11d1abac0b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f57ee3-9443-4c3e-bd30-39a7973f856e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b2a5e8-ccb1-4e7c-8dc0-954dabfb9626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde96322-dbb6-44c1-adcc-d302f49f1f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c20b620-7dc3-430d-ad21-c6833428ddf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137b7ec7-7b99-400e-a643-8336f7c3e3c4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cb94b8-9d8e-4661-a141-c372a7d92d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf41d725-fd94-4002-89c1-811b1a650d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da9c069-9726-48d9-b71c-c533d6738c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ce645c-ac78-4c20-831d-e71de514e5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afc1bc7-3e8e-4b49-abc6-cd84943b62ea",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787e2179-47e6-4869-9de6-6997851f66b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5a25f5-eb16-438a-beeb-5e4ee430c252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c0f697-0d70-4b41-84e9-2215a01b72ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "884c6e46-3478-4099-9bca-ce2a6b310443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573d5848-e8eb-4d08-870b-02a370c0229c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932cf000-5208-41e5-8568-04844bce89f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898e5209-d5ac-45d2-9485-1de266b876a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfeb68f-0610-42d0-b570-ae00ab04f6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54a0fcd6-dc77-48be-a189-ed0176ce88d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7b2952-5015-48c9-adf4-9761bd0f0cae",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d84a21-993e-45a0-a15b-cc84569121a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d12aaf-37f8-4862-bab1-785215d99cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26261951-3bac-4f41-b8fd-7fea6bda7376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca8bfcc-e2b8-41e1-944e-4ad3b6cdb0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86a9a2b-56e8-4e52-a521-b93a61d9f918",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba642dd-ebad-4604-b602-05a974c13a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2169295a-4799-4b2a-b511-a2f55076a6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2da8b4c-7066-4706-9fb4-7f4aac8bad1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb29c14-1882-4bc9-9d89-6a47ae2deb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ed5d5d-8f1a-421e-9bee-4a47b6e7289f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70447ec-baa4-43c8-8a4d-d740d1151359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67bc2af-c61b-4d6e-a2e0-226b67b205dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10411506-3ef9-4853-a4a0-c281e0d4dccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a873876-681e-4514-a0b3-97b0dcd29135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c92417-c734-4ec5-a23c-f37aa69a3b8a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a73a645-5533-4100-b35e-f5c6a2841982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff3cfb1-60fd-43a2-90af-135a5a030905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5376989e-bf45-4b87-9566-79c51d3670c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1595f28c-acf3-4d8a-a9a1-5de48b940328"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "33897ec7-e866-4c4d-9c14-ad0fed0752a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87d69a27-43f0-48b9-8a65-81e5d5e52962",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477121b5-b832-4683-bce2-c767d6bc1c44",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5ca7a9-aba0-4167-8320-1fd7d98f33b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39881e5f-7871-416e-80c4-7401296cd02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "158fa2e1-ac69-4708-a01a-bbfed4400c35"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0189afd1-a53c-4f44-a9b5-1ddffc7997f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3808c036-dcfc-48d9-aa5f-4131e150bc12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f86b299a-e427-43f8-b2fd-52817f5cae80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39166075-487e-434d-ab86-736e1be492bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "059d431f-4238-41f2-8c56-669b0b4d79a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3d1b2213-6f86-4728-b9b6-7aad0339bf62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2230d84a-bdea-4fce-9780-41d0b22f5a4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2c922b1-8737-4484-a911-5f4c482c008f"
            }
          }
        ]
      },
      {
        "id": "058d2766-0f97-48ed-82e2-f48aa7e3e294",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8fcbd53e-3ead-474d-9952-3f77545a3405",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5eda1b0d-d794-4e6b-892f-a588824c9f73",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2713ed5e-0f16-4cbd-aed4-779f56ff5982",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e909fb89-fd6b-4d35-8741-ef0d7ba302d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b29038-b7c5-4979-861c-2a54768165cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a17e08-de2d-4aee-8ec6-1ad775008b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2ed87a-9978-497d-bead-a4653cd880f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75800ff-52e8-40ac-88cd-f68d8ec1b4cb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb9a288-3055-4dc9-95da-04fdf4d94e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01c07f7-a9f6-4e4c-9961-39c1252109eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b3e735-0813-4513-b5e9-232cdf4ac931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8985b80e-ba93-4717-9742-a7cff9ddb441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ef1c39-cd69-4cf6-89a5-94b0fb41db72",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d32c131-0e0e-4918-a2d9-c26a66eff8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde5bdc9-92b9-4e65-ba20-a1721b224b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87580207-43a4-43e8-a2cd-8e2b5d8de772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f898ca-c345-4140-bb69-2c4ba66f35eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a517f0d9-99a1-4f2e-81bd-ea1e2b35fd5a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2feb517-92bb-480d-b37c-1a98d214f3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20febd7c-f0a2-4586-8dc0-71aa6c171063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badad053-6102-4d9f-8fd7-0d79b1da8162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f7a736-3104-4cb7-a524-af03c3532b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95544c99-627d-413f-885b-367f8f99fe73",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a193c5-30ed-4748-a25a-fc130e0d81f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65551d9b-adb7-45be-acd4-b72e3455d271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6077c2c5-b95b-4619-afb6-98ed68f5c315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57a1ac82-0dc9-4ece-b92c-429ffcc330bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5e7cff-24aa-464b-a2e2-1a435b9595a9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e094cd4a-0d20-418d-9926-aa21b732a116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d4fb36-c46f-4ccd-9b90-00b5d85f7db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1412858c-fa11-4a51-8ff4-d903eeda25d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5df0aef-ee06-4950-842b-615820cdba58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc91f0a7-ccac-46ce-9f70-fbb253c35af3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a82391-bb6c-4fac-863c-351cad618c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b5584b-1182-447c-b742-62c47fd75b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c7d929-65ba-429c-b6a9-e5c0cd12007b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "246879fc-b228-4adf-9e60-69d326e8531e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8c7209-52e8-4bad-84c0-4ac35415af31",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e38840e-40f8-4daa-86a6-69c758b05281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6580d7-a90a-44ca-88dc-0975b27e2e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468f3cee-3c5f-40de-a7fd-3b258adc0412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb1c573-541c-46f3-a97a-c707b29ada38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bebd95-09db-4e67-abf5-4b4cf593bc6a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fd257b-47f5-4ca8-97c0-0442f3e68afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2a1912-7512-443e-a24c-1024f18983bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10d0ce3-b175-4322-b22a-c70666f97772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95d2f09e-b86d-4132-9a50-d3fe7472c2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dff5d3-7d84-4741-95a0-676922de9fa1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac4ead9-a680-4333-bc20-a5af79d2d1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad473ba0-334a-4636-b178-34675acb92bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1164083-5cff-4c0f-b532-1d16e19386e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0183471-621f-416c-961e-7d9d9202207c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af5ac5c-e878-4aa7-81d7-0d767256d350",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753c288d-fcb4-4301-bd11-c7a7f5e5dc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce52d83-960a-4f31-9034-4df833da1a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377f16a5-1f59-47c9-9528-613293056691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5c175970-bcf6-478c-ac2b-90e83fe8bf53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b3dd6b-a675-4a22-9607-fc98a2585999",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b833f1c-2eea-4b40-9a5c-85cd4286cb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c50490-b9f0-4cae-9706-c2e1c647377d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29be1b6b-706a-4d40-bce0-eae57e8602df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8895f9-5b8d-4aaf-9dfa-406ffcc3f9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19efbbc8-a50b-442b-b0df-7f09815563fa",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc8b38c-01fa-4ea5-8639-6f841aa79fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053b1803-16a5-473f-84b6-c056ee2b0710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbd070a-5169-4458-a438-a6215dc20580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "162fb081-4d41-4bb8-b4cc-11e7313c5af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ba3a72-a8da-4d9f-b1fe-524df0764199",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be924f14-fa73-43d2-91a9-f653aba1db84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11e8bcf-4e35-4c08-9ddd-cf7d1b6d5564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af04bf42-6c40-4cea-a50d-4d283435010e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "87bbc214-ee26-470d-9a07-3da27bc2569b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc50ba7-b9b2-4b52-8404-433d4be727d6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688fba8e-825b-40c7-ac70-251d7a01e486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe763b53-afa8-4e85-90dc-f5b2e01aa6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3115be63-623d-4d1b-8562-ffb4d6cb2796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "40ae64ce-6c47-4e6a-b079-bd017639842f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94490de9-3fad-45ac-bfba-bfdfee61e0b4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc24ce21-9f29-4a3a-94f7-34abafc948e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849fd12d-0813-4883-b9be-1a35d17b6161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6631678-6705-4288-bf73-9c1f2a78b4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0305dbbc-7604-463d-84db-fbc3f683085b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914f226e-801f-43e2-a256-52e538b1ad1c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0206eb00-4233-4489-8a52-69f182f6dec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc053ff-8936-4d49-addd-d1bee0e65b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b29276-585c-44c5-ad95-a21c2bea3906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5741f635-b729-438b-8b57-d83c547c8568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df31d4a-4edd-4706-b0e0-5f57f1a77f1d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc281706-9974-4530-834d-7dac2e63d494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7aa074-8361-4707-862a-5bcab2fb4858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7a6eb9-a479-4572-b3f7-01f985d76bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "18cb205f-4e1a-41ab-99cb-3e3e2e73c37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff9db0d-8606-45de-8df5-6716a84ead97",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4835deae-7de0-46e6-8699-c060f78c1a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d363e1ca-8292-41c1-96b5-0c66a636156f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2325003-35bb-43f7-9207-a3eb9c8c1efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eabb750b-c0aa-4db5-a765-9d1d839a92b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d55066-34dc-457f-9558-fdba53e59591",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1805dc3-f08b-4669-8da8-20d57a2e36df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02ab6d9-12d2-4200-b5b1-4a80129ce038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25506e6c-b53d-4c4b-8c1f-ec400e34aa72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6601f8-1dd2-4637-8d4b-53f1b6ffdc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ef7428-de12-4422-acaf-41c1061c1288",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c199e5f-c52b-4c2a-a6a4-fe6bea52772a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38a7fbe-1a98-4cf5-869a-ea93cb0a8308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777dc105-1b02-4ad4-b750-9352239aaf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e03345e-a086-456d-af3a-6e47c0c59682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711a0998-7a48-44c3-8f97-f6d464ffd0e6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6b69f1-ecd1-4086-a17d-5dcfe17465cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09b99e4-375e-4593-9418-e3de95845b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb840472-9835-4b7e-97be-34722b634b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df7912d0-35aa-4fa0-944b-f4d16fd3680f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd87705e-045c-45ca-aaa8-85c17f00210c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faad021-1946-4a3f-874c-b4bb6a04828c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c43fe7-53d1-43e0-8b16-4f58e469d505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a26bbe-9777-4693-b5a7-d6b7c8a7e7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59c7fc60-ba4a-4035-a46d-aeba18916080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ec23d7-1607-4ea7-ad30-67c95cb6ce59",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a4a4a9-56a9-4ca3-967c-58cf6e5342c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ab80df-2d1a-4c58-936c-91c77dcb1d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb9c4c3-2c36-4769-ac53-470bf0e02614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32083c07-2acd-443c-8548-c44dd587c4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5bd722-c6f0-44e6-9dd7-6c3ecb3b28f8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1244af3-237d-497f-92d0-77327c53b373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda4b9d8-8e70-4ce3-ba6a-be3a0e514af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adba7ad1-d516-4b2d-826d-1e01f41f24db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c448a78-02cc-4f15-ae8d-30145d54bc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e58337a-9763-4f7c-917f-dd64ff8a6b44",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0244b7b-bdc4-44b7-b061-35baf3889cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256840d3-b044-432c-a0a3-cb42dfb0340f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a5a473-9dd5-46de-96c0-b9843cfe51ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6293a1-1a38-4178-abed-d54e71bb7db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96011858-f2dd-4ad4-bfc5-7c7df5c7de9c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decb34e7-27bf-411d-bc0c-3d1f001fba40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ac30f1-ab7b-4ff7-8cfd-3cffc70eb77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2caff5-b737-4900-badd-dd37b4760920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c18aa0-1f88-48f8-a9f5-b877f0674ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7929b1-259b-4d0d-b8f8-2faa2a4f03a5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f2d1d9-4664-4b97-beba-894218acb39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6420eb-614a-4bbd-91bb-c83b98173d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a724b50a-1506-44b9-ae86-7c00cd54f3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "643a5c7a-7d02-41b7-b796-87c3a69aacc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2cf3c6-e63e-4e44-8456-4c87c10ff423",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d691e95-d96a-4f50-93d0-26db76304e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fbc515-cbaa-4e07-ba78-235996fe947c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc1e481-c653-4a5d-b0fe-58b095f020bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c08f945-87d1-46b6-bbbf-64941efb9804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccb75d4-6c0c-41cf-b551-c7303a6afa8f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d76d13-8206-4558-85a1-2ee904aafcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5fb6c2-f2c6-4c82-b156-fb3cb43ef5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfcccb9-4291-4dc0-ba11-f3070451ae9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffb47b4-5705-4e69-a084-a28f130869d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf16c02-30a9-4ae1-8c90-2985f811103c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb790c68-3471-4163-a96a-6742d71862d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5e90ae-39ec-4520-bdfd-9aca06996523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db40423-f9b5-44b7-952f-9c266d5a03b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "209cc475-8633-47a3-9a11-99323661ac83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1a707e-6e87-450e-a1f4-c85845c58636",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0210a1fd-425c-400e-9ae2-4fc40c617afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6de9d5-b803-4f52-bc29-2d4f243db71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98464588-24ee-4a55-956c-75120e127b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45b3e6b5-1f3a-4414-96f9-bb5ad997438c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2109157-edc9-46e1-ac73-6ebd3ecbb7f2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cb7c87-77d0-4461-b8b0-36f7676c80bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdff931b-c54b-4159-bf79-c28a153872f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52658e81-eff8-4093-9826-ed0136605770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11778353-3b0d-4ab7-b39b-d855c78ba660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cb7771-3603-4df8-a0e9-a4242ab2c6c6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8102c7a4-5c71-498a-92ae-530d4eeea1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7799f484-836f-4b31-8814-c5a77c2f57e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc6e094-3b50-4448-9d4a-45d88d2958be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2b5af0-eeff-4f68-a0e1-cf87f56ff717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fe86a5-e09a-424e-8fe6-9ca710058567",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021e6b24-be2e-43b5-b358-9d91ce968ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd7c217-1d34-4e7a-ae79-1cf7cc4c25b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4a0eb8-bb53-455a-acbc-942e63d25bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11942b25-afd8-4708-bf0f-eabbf1e746b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65dd398-ddbd-43a9-b5ed-0b09576a3bc9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d16d425-f617-4d25-aa33-6a69d06fd234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df462bdd-328a-48ba-a58f-dc070c65a841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6739d0-cd15-4941-b3d7-3156cdd6622d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da3bb3d4-7ef3-49b6-861d-ba5965d902a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe47d42-381d-4d59-bbb5-d8644194b5ae",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e87b15-e2d6-456e-a674-ef12cfa3d99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1044b0e-5a37-4252-9e5a-68fc44d8fbc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f92afd7-4069-4137-8a88-6d44c5ddb89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0537a5cb-a7e1-495d-a34e-e325c9365ae6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "701f4189-8f17-4cc0-ae55-670c48e2cc53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7497aed4-65bc-406a-b0e8-9cbc858dd329",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11a74a9-287e-4f5e-a28e-75210b57dbd7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "81677a28-695c-449d-87e9-dd02b58bd516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9cedf3-2c88-4135-9039-06e4efe63aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aab023c5-54d6-4da1-993a-93a88511a862"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "994e40b1-33bc-414c-8e83-8364b9e64702",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "755fe9e3-49d8-404a-9f96-5cfd61b5f463"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4bbbf35-8e0a-4450-9af4-26d0aaa7b7bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec81c664-f3c9-4f94-9b31-e227a49166ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8983ee5f-58bc-41d4-95e5-a9e196c076f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f6248d1e-9c3f-4519-b1cb-1899678bd6b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bf6a738-cb28-4192-8c7b-ecc6bb949dce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a27d4b1e-574b-441d-99f5-ee55523a49e9"
            }
          }
        ]
      },
      {
        "id": "07f0669e-0152-4e84-9335-2f1c0e0967ea",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "82366ee6-6ef0-45dc-8d58-a52a3bbba9f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "655f0232-4576-4ab5-a02e-858f2e02d7ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ae299c80-22f6-442b-ae5a-7268d2a62b43",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d18cb9-7870-4387-80d1-f31a8d6d20ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfe1d9a-01b5-4987-bfb8-c2c20bcc863b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e841de5-c9c7-4356-90cb-ea106c929c42",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6757599f-38f9-4025-adc5-789536ed1ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46936d5b-20a9-419c-b067-86c8532c2c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ec5c3e-cbe9-4808-80c1-13c9dac219d5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd03ca8-0563-4081-85ef-9e6b3fc427ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71550d8e-62ca-4149-b3c4-8dc682514658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2148bf-03b0-439f-b286-b6d4dcd27f22",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc77a3ae-367b-4815-af99-19f781efbfae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea76a920-21d3-4f23-854d-d9961b6ed8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37a7b87-8b62-4366-97e0-b12ae08e7d45",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fe98fb-0919-40ac-9d0e-d92ee01d80b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af792dc0-de8f-4d7c-b1e3-0ef3166829fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04564a1f-74f1-4d9e-8ba1-b0f93ad426af",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37177863-827b-40f0-9a61-9ba6451fadb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844cb32a-61b7-4e45-8ea2-007ec30b2784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4dbdc8-bc04-42f7-96fa-d0813c714fe1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7fa58b-f1eb-4246-9045-ba0e470c74fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6f7c9c-160d-449d-8cad-074a273798a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3351c99b-8073-4a77-9654-d1efd0fb1750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22d6968-eb03-46cf-9688-00954d52ef70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4470f1fe-ba89-4deb-ba38-c111dd8411f5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705a312b-ad09-47d5-a172-cb2e1b181ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a3c1d4-9d98-4203-9169-0a1c66b8b826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675e556d-1b89-4fa6-87d9-7468182d661c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26ebecc-b269-409f-8ffa-4268bbe51660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5a6e51-1db1-4973-a0c3-ae91eb2e10a2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac031ac-5dca-43cb-b7bd-19c0cb6b4062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8895b795-493b-4afd-a132-16f1ecec5a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e785639-fd75-407b-82b4-feb7e80de731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b632984e-ee3c-4e45-839e-c9fd6819e1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73403eb6-458a-41d4-b994-ec1159f6c57b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be10ca1b-bf51-47c8-91ad-06c36f7c4f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc70c56f-d87d-473e-b1b8-4a90737d464b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e509c4-2255-452b-998c-0a0399d7bfc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffa66c0-0c64-413e-8641-df9f34333765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4739928c-ed71-4e11-b8fd-d348ca5aae50",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ab2f26-e88c-4ea0-87bc-9b93134e975a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee271aa7-9c2c-48c5-a4bc-795ee2549796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6631752-6d5d-4c41-8a06-c66d9c78b9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c02b5c3-b013-4fe4-a95f-41d159b1d15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789cb7ca-fd06-425b-82f3-54b2df6d718a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddba02c-ad9d-413e-bec0-b07afa958f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee06116a-64ca-453c-b37a-be174589dc16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ad5757-7565-45ff-9532-fbfa23820e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815ecde9-ea45-43ff-9025-07411ed78548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c84453-5f5b-4d89-88ac-50428b83073b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a0a870-9d96-4ce5-a885-f1cf8e61f550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "200ae115-c146-426f-8bba-d83b2aa62a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7300cd6b-1d05-4463-a7a8-0f3ca4ebf017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b479bf4-83a3-479a-9800-5ef7342e0e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0058dd-17c7-4f23-a710-5d4e70b7d0fa",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9c7308-0390-43b0-bacd-36be15c993cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e53f26-c992-4cca-b97a-a252411471a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5e39c2-180b-424f-995a-112bc79ec1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7baee38c-62f8-48f3-971d-6324df76a768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d246286-6b17-4d9d-82f1-187d79acb167",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5bb7e1-31d6-4868-ac96-78b6fa810264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01e3598c-f472-4267-b819-939bddf4c360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be174a2-79a0-4fd0-acc6-a521de77efb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c120b6c-41e5-4ec6-aad6-2dd37ebd1177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073cc905-321a-4512-a654-a9747bda0d76",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7ef351-78b4-4db1-acf9-7c6d56940ac4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90dd7f60-0ff4-4fb9-8091-2593908ecc56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a7f712-f9cb-42d9-805a-a6ce4e6e688a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba43e65-5f29-488c-9f49-da251c32c5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be069eb6-cfb8-4c80-9c6e-85b61f3bd447",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3722765-e487-43ce-b843-02b5a18070f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce424ed4-b6e6-4c83-afe8-32f79315e21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d26822-4820-47f0-a0c8-b303e660d723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a6840e-fa29-41fe-862e-bf22ab58fb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda4ad72-a0ed-45f0-9d0c-299ea87a54b3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3c7fcf-b204-4949-b39d-5675c27b7f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9298ba09-91c7-4beb-9500-f4e4db3b8cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4f514a-9c3e-4ab0-afdf-7bd3d4a511ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d0ea73-b00f-4658-84ca-ef70db0805af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78431cc1-9609-40c0-a496-16ed9edd259b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49bcb82-1507-4950-8751-b96527dcac19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5b3444-63f8-4d12-b5e9-e5bec7a7e10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bed7c99-b51d-41c8-a58b-ead6fcc6fbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3b111b-5b5e-47e2-ab14-92baa098aaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff61b230-9112-4463-b709-0a4da70e8566",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4c5cde-776c-4666-9e40-39619d8cf5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348f8299-266f-4e6f-9c90-36bb0f161416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab632fd2-b0f4-4c85-ac3c-01204384ed5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ec41cf-dd8e-4148-a92a-cea3f4fe6d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a0fbb2-c4d5-4aac-98a5-fb118fb301ad",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb3bdd4-82c1-4e66-84f9-fea60acbc309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18032dfc-3cec-4dfe-bc17-8e11013239d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b17e51-0991-4656-9136-1041fa7174e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d31a0e-605f-45fa-ac04-eb4f4a5e8b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e7528d-1c8c-448b-9f27-d1ee22467800",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1a7d66-cf9b-4c86-8685-0494da0b99fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a8c512-f517-432d-a262-3e9f9099e6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8495c2a2-e668-44ee-8a4e-800225873317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb26eb0-b58b-434b-af7e-a739f1daf8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711c30b7-bf78-448e-9452-7d0864d771ba",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a492d7-7838-4cc0-a578-a843ceda1365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c938f726-512f-4325-a5ad-cc806c1b33e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978cfd38-da07-4b01-aaef-369cc754d759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fd0a4a-2223-4ddf-b49e-08aeb02209fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b85f6f-67c2-40f7-88e7-638eb331ca06",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e5dd56-563b-461e-9743-ee4a09b37aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16f0c447-b698-4294-820d-9f9ac8880182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f365fe2f-be7b-4179-82e6-12ca6e3a5de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d43f443-6944-4a35-807c-796482c8f21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79d7b80-c4d4-4579-8f3a-abf4a956b181",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f3f324-aad9-463a-b361-750913b60e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6fc70c9-0321-410c-b3e3-3840523c1a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5035b005-996a-47c0-8daa-96de1da681d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e732f30-95b7-4434-9942-50ade7d71615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baacc67-f5a9-4abf-990a-7b6cf21a4822",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1867b3-98fe-4d25-ae5d-bbf8e19e3fed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c97cc26c-6a3d-4369-88e2-cb867796ae2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290f2193-6206-4694-9fad-f2a89e37103d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a095ef1c-da64-46dd-ab98-b7179c0b2840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b63246-b7dc-4c0e-8208-481edc0663e9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be189aa-a857-49c2-a7cc-e7fcb01915f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc844c69-56d4-44b2-9720-65c8fe2f669f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469b27aa-e8f7-44f1-9012-99a2332fa219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d91356e-5663-459a-abfc-002b047c0bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b0b5e2-155b-40d1-b237-b5bf7a524ae0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ea69f8-7f1f-4b09-81d9-92fe0708dd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a258a84-36e4-4b2b-9cfb-ec796b7066f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fde8f85-7ace-4b5c-9e4b-b6eedd1ebdac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f98221-f21b-4d10-b13f-f1bfa51883c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202d5242-c45a-4086-81ff-f063d8382464",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5daf25-2a89-41cf-9e79-e7573456668f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e2af463-2c43-4258-b341-2903b6cd0d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770a6ba7-bc7c-4c83-9358-502ae9e16ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24fbcd7-2a82-4a1d-b988-3ca08db18e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b35ebb6-c360-4bd5-b0e0-15e8cc4eab68",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22fd730-13b9-4585-90b5-364d85468282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f6a7b58-b8e8-4dad-95a2-aa2614dd33ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c0786f-65ac-4f55-9c0b-97757b22795d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330f55d5-6a6b-4aa6-b74b-ca11df0f9e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d23ae8-ab3c-46e0-abf5-20ce975dd8da",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97715a73-5867-4f9d-9f00-e505a155a232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e28f9e56-8fba-4013-88f8-60781c6d5e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d067171-91bb-43ef-8e27-62f0d34e8446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79596764-1751-4852-9e7c-fa2d8b13a3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f386a3-aa2d-4ce0-9c7d-b33523155626",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a02f5d-4c87-408d-a435-c63e4087ab7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a04072-1bb3-4823-b383-76ed1e4fa60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58663ec0-3030-47f3-b425-a9aac8577b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72dc098-f447-4bd7-b67a-fb53a2cd570a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dbf704-f0ae-4ca3-81f7-e8d2b6695bc9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6249e0f-a336-4bd8-84ff-45573a2028d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5bd0bf8-0979-47ce-8e3b-ea486c5a6cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d3d468-2927-482f-8dfe-61ce02410fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0474d9-e73a-437b-9cb1-839d7c9d57a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16df1ada-53af-43ea-a537-dcbfa7364f75",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fea7ad-913f-4f4b-926b-c8899f6914aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae34ffe0-a4f9-4df2-b6c4-79bc096f8159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5380cf08-dd1b-4d9b-bdb6-439fd54d5998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d569077-0ce2-4fbf-b2e7-9dea02789478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a49e84-7f0e-41ed-8b6d-7e68dab3b015",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedcbd7d-4d42-47d8-a8f1-f243caa90678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51eae57e-058b-4c7a-ad11-9d9ebf9ebe4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2771173-fecc-4a3d-8f0b-9a0f951293d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e477ed-4721-4388-ab9e-21de31399fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2198da98-de8e-40ba-aaba-2ad8f1963103",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e347512-c6c1-4d24-9635-919349bb4b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93de4d72-a410-4efd-bcdf-bf668af47b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13ab6b8-aa5d-4c51-bef3-7d3c4b4f0949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509f06ff-26fe-4dc5-890e-848393bfbf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b392671d-d6c8-4473-8bee-0cab964e43fa",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0331a895-18e8-430f-89df-025440b2204c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57edcf1-743f-45a3-a8c2-f447c810b2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c6ce83-d6df-4af3-9891-b594ab10283f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd9ea68-62b4-44aa-a8d6-7243d19653da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c0fdc9-5e4b-400f-9181-d8de6b14a507",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69536fc-e0ae-4c91-85b5-bc68047ece42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc32df9-a250-4bc2-b155-629a8b07f191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3442506-50fd-4147-9885-df5f829b7170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c51ced-b363-4b78-b834-1d10ab16fcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f61c17-e354-4888-ae5a-343de1c05dbf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aad2c4e-b635-4f1b-9d36-d0fbee6e0cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5c5861-3352-44ce-81de-4e669683d01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd47c59-95a0-4c54-917d-49ee80e9dbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67887d3c-69a6-4646-a7ba-976f666afa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8467f920-9289-42c1-9c9a-2e074645f9c1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5274abf-68e1-4641-b6ae-90651671a154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4824cd-f76b-4235-af98-1b3f459ddbe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1800b1-40e7-4793-a77f-49b9e6872430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb87249-bcc7-4fae-98a4-c5c1de56bacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54610cd7-36b3-4215-a4c8-a44d2b0de54b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbecf188-efd7-4ee8-84cc-c08c681701ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2b59d3-670d-4c41-b8e0-30fb90f8f882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc616bd-68e5-4136-948f-85067a115456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5416e09c-78c1-43f8-8359-2965178202e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52844332-12d0-4ac3-8b74-f59872ac064e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a24bc3e-b0ce-41e4-b31b-c8d38d82d8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2053b5-c565-4b3f-830d-5f3686a6c1d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73ec779-a20f-4be2-90bb-7f1e47c2d580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0005e5-d914-4532-80e1-2da1669e8e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e59e9b-a6bf-4c01-9ecf-ce4a4796ec91",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17acdbd-8cc6-4c10-b76c-63207ec730c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f705fc-8566-4e61-acaf-f2b4e4b818f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf4ddf6-b6bb-4275-95ba-ac7465ed82e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc5ef25-71f9-44ee-b64c-d248caabda8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72546804-9abe-4a65-8e0f-6a510b52f7f0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbe8800-fad9-414e-aa80-528e16ccd53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26079d3-963b-4e54-9795-e6c80032b005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "856e0c0e-e7ba-4660-b0e7-06c3de887e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b5d289-e9e5-43e2-a9e1-1f5cdeec0065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58595154-56fb-4e08-b4ab-239b3221e12e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ad3963-0eaf-43b0-b733-49e75cc2e0ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6397cd54-49a9-4eff-a63f-258ef6adcd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd4cc48-e960-4d0f-9a44-0e0c4a373ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2505fc0-9b46-418a-bc16-2a66410e46f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56869f48-251a-4c30-991e-f213be1cce15",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae80b788-df66-4eac-a877-f6a349aaf693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da285e6-8162-4899-bd53-5f563b0a558e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84153ecc-5ee5-4ffa-9858-b1abc2e8b6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8da88c7-7613-4dc0-98de-46aa7f777dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10384373-acc3-4f26-bc84-21738429c7e9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2c4348-ba43-48d2-a511-fec75ecfb6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e0b1be-a98a-446d-b08a-f1dc5348d6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dcdb3a-df7c-4d9c-9246-6940a741cdbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2843b25-e67a-44e8-b75c-3ad4fb6c49da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aef223a-ef91-4823-b491-c111125d4224",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81764b04-ea70-4c82-9912-95db22c619ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c536be5-62f5-462a-adcf-a6953c5ab55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04f80a2-78db-413d-8f7d-eb366df49908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbab63cd-533d-494e-99e9-5e25d8d52478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8f113f-5ec3-4998-a3c6-ffaf3383fd3a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ded3ae-de6b-4142-b6bc-f7236c06867e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074b7659-f967-4f88-8250-46fb92f39292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be98ab5-4326-4179-9146-70173c59e04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd24ac16-5854-421e-bc71-fd420feec52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6a8efe-ebf6-4b21-b512-00801f5a5970",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5e2090-81fb-4252-bb56-f02603f08cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6af1ac-e2eb-4689-b22d-ab919aa4f009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d32ead-de41-476e-b0e7-f519f853e820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0b1ec1-7e21-41f8-b579-687d5a414da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de2997e-c7a5-4b5b-a4ff-c78b1d9812d0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6686b8da-9011-4b85-bc38-7ad1721a97aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a819ac-d811-44d1-8153-a631e74ec4eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58563f02-e6f4-4e93-966b-2c676a224885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54aa2d53-8562-4e5c-a204-8f656fb5013b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e72630-d900-446b-866d-0aa83ca4a5e6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13231ead-d3cd-483d-ad70-97f860a36aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba787fc2-fc04-4955-9916-5e1226c99710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349cb0e7-9944-4210-a8a5-cff4956e1485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ea5d6e-5f7e-4e7e-ab0b-1b33139203c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0565284d-8ebb-4c9b-a9d9-21bb7243b09e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4f6fad-dda9-4fa6-92b2-a8bde9778d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213a1949-22bc-460c-9273-eec0e42d92d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3b742e-4153-4c22-9c87-2fb2fe7fc2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275772dc-1308-4917-97a0-f2b351ecdfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff8172f-c60f-4599-aa26-15a614c88cd8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c036a452-0e02-42ca-9d03-ed20bcb594c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb32e75-a419-4e9a-8a3d-ae6997774fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec73d50f-32cf-456c-815c-70fc5eb0b7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af4f2d4-6778-491f-8962-02490afde5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c476098f-9fe0-42ef-ac8e-f984d5257dcd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b346c1-049c-4709-9f0d-3f2a391802fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274d4f94-bc43-4871-8566-4efc07a1bc1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643a5f9f-aac6-4877-9edd-d31b379297b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5def57ef-5469-4905-a1bd-3eea9b004770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9feeb97-9d8a-42b5-b834-7b9b4c5dd479",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b8e120-1cc5-4e47-ad56-f8a96cd3776e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81801b9b-8b01-49a9-a29e-7da5d4dc0dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a032b0-2665-49e0-894f-d5ede46f5279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7013d79a-aed8-4263-9192-e3fe89954e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59ec4cc-d6e8-46f3-b12d-4ab2451f5280",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab83030-4b6b-464b-b7f8-333992ea0edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a29ae9d-7b6c-471b-89c5-bdfcb9636e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4568b8b3-d372-43aa-9a49-6e4163ffaf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913021b5-32eb-4819-809a-55c42af89eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efae354-a50e-4b4a-86ec-f9e1d2eee8ed",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa101fa2-d778-4d8f-9c0f-061fff5a50bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50a5751-2589-4c8d-a2de-4287e8b3027a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba92ef9-b9ec-4dba-8ac7-221c0912eb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12b25a2-6d2a-4362-8771-da2087d29841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2b9ffe-31f7-4119-9236-4475f75b650b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e56122d-1045-4f0b-b248-96535f042b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c7e1dd-8245-4ecb-82c6-c202d189e33c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c536fa7-760b-4a88-a63f-5095a12228ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59401cd-99dc-45c2-a658-3e9d180c9faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0729139-97d8-4448-819d-0444f4799028",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85681a7-5316-4dbb-83fc-c843f2d79b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352ec70e-849f-4ba2-9008-16890251be84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16a8860-50f7-48df-aafe-b3ad432b0512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3f7689-8b0a-42a4-aed9-94a8c683d62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a84bb18-2f41-4fb8-894b-178c19c5f1af",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffa49a4-c4c4-440d-ac45-b090c6f712d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d44b592-9bd0-4736-9e4f-ee4b07b00aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6ae35b-600b-4b77-8094-41841d7dc717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca0d017-da2b-40ea-82a2-a37027d2b88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efec1ce-0c90-4a5d-a8b4-1ee1e4cdea2a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35c6009-cf6a-4a57-8512-2202298af517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb51084-9274-46f1-b343-0c06af39a06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9824729-0292-4236-89d1-c478c3c29977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb164300-a92f-4c5a-a12f-0aee8b06b911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e11207-20bd-4b3c-8445-459831da26e6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37584ee-256f-46b1-b887-ced82ae939da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a90d27-0890-4873-b622-5bea2ebec1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da31e22b-697f-47e5-851b-ca3bf22aafbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd476052-c5d0-4ec4-bddd-1d427c0a6890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bb670e-8880-464a-ace3-75c7cd2961a0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d818122-d103-45f7-a941-62260c41364f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e728b8bc-d3f6-42ab-8745-4e84cf74b778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cf691e-defd-4839-a573-524a536fa93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab689c5-4130-4743-a487-c6200e5e5872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bd74bd-bf55-4194-8019-11171a63633c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059a765e-fad6-4829-9845-5ab15c9ef7c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d9f39b4-d4db-45d8-9fcd-b97e08d0f840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c511714-321b-4366-b519-2adf355d8616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ee141d-0293-43f4-9872-1203898c58ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2d9be4-7853-48ae-815b-3afac1df041c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601aca84-20ff-4a74-9cb1-a03e9833b99b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9a4b695-b64d-4b9a-a8cf-355027df85d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a970049-35f6-487f-808e-356f52cd754a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f6e68a-5c71-40bf-a20f-0a25a463096a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dfe340-eeed-439a-89db-5fd1c4d2f3ec",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b7dcb7-9be0-4ec5-9092-20cb10cb7862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51e3acdd-fc10-4d49-a957-4c5611661804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69541501-28aa-4ff6-a6b8-ac07e2712422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2f1b4f-2b2f-43bf-b4e0-d353bf951f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e60474-e28f-4309-9217-6e97f12b2828",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17f066d-55c0-4377-b4dd-49ddc3e954cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c13050fa-b847-485d-8ab8-7250aa3ca450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f2155f-35b2-42d1-8092-dfeb6fe0d6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d5a12c-79d2-4120-accb-2f1bc91b70d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788daa1a-205c-41e0-abb6-c7210b82bc3d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401ce028-521f-46f8-a44e-22319db19427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20ca6e98-02f0-49b6-9577-d13072a86bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bc0a24-90ac-4567-b375-b3921a6a252f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15519889-1e35-4942-9f6c-7bebb7ec00d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d14d29d-70e3-47d2-a899-5f39af1b1846",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2b9404-f51c-49d2-9779-f79059f0a498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "680c8542-d747-4fe4-90be-ce658ac6e71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b7ef44-5541-46b7-b640-a368e79463fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d241a2-c813-4fbc-8eea-6cc13380a032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee3a115-bba5-407a-857d-9243b1006997",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164d7caa-2ab0-4d5f-91f1-176ca8a1de3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce469c08-91fe-4fe8-9d53-bc3e0165fae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8105d2ff-f1b4-47f5-b629-f0bbe9b9c8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9653260-f8fa-4309-834a-08f0de39a90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f1059c-b492-4ab7-a20c-f2b1792426b3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b4c448-d9a6-4dd4-9b4a-666557b9644b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ed8abaa-3048-48a8-b528-2421b9bb13e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e588c364-15f8-45e8-8143-0abf64c5ed9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc524db7-d32e-435b-9e5d-925f36721999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36237316-e9a1-49e9-9870-8b5717fe5f82",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8ef534-f36e-4353-8cb2-75f3a9903714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55695d98-06b5-432e-9b76-2695b5a4eb96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc72452e-cdea-419f-83b7-c7f78f842ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e64581-b080-41bb-b26a-0152dd28eb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd69eb38-2289-49d7-b88b-930d67e23608",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36ad763-856b-4e68-ab71-5a83ee61238c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbb9030f-b1d1-456e-9754-8c80d1b6e3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c7371a-92ed-4b51-82c8-69098aef4987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66dc56eb-fb62-4499-80dd-0a5f7c4749d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d08dc30-b6ad-419b-8db7-10aeaea8adaa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f53972-8f84-4464-bde5-9f8a36dda902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89c579ad-28cf-4526-93a9-86c53b75de74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6f74c9-057f-4270-aee9-62c67c385b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efd7080-a573-488e-88ad-1a5172a3d6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ff252b-c625-44b2-925f-9694ac6f7845",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a9cd14-d05c-4e02-941a-7bed9d530537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999e297c-f347-4218-bd7f-a5db351d2313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ff7c3e-0b31-4729-bb05-b8057da1036f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80adca42-0d6b-442a-8055-2228f8e046c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b749c0-2b99-4ba2-b9e9-898734788883",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88a6edc-b3a7-42fd-8da1-4356af0dd077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18e4d8f1-4ad7-48bd-a58c-e5ec113934cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "416f52b3-1bfb-44cf-85ed-c6d6ce29ecac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4802e6-32e5-4cad-96f2-52cc25e29cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5280a2-7f72-42ae-9ea4-a72382f90479",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c994817d-83b4-4082-8ce5-bed19c94ddae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5104f77-c2b2-4b54-86bd-206981a1157f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316f6893-7132-4d65-bfed-6501b709e912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af869f2-aeff-4685-8534-9f107a136f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8546031f-c197-4b8f-aa60-3ea382009c28",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d44fe6-24b1-401c-8904-7f6597a8c64f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "098c8266-e090-4d89-be5a-a917f273164a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac1dcde-79b9-4c69-b096-e9ac9da43bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660f4469-09f8-48d5-8647-3a1e62fad36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb24cea3-a41e-4c8f-bbad-5146b8a780c4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad5bd9b-3f49-4fc7-a86c-702126c540bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "059226b5-8eb0-474d-85ae-bae2fc28c8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03aa4e8-3739-4d9e-a772-9519c18466f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b56200e-d6de-4147-b6e8-e044edcd99e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f958218-e400-4c0c-aad4-2cbc2295db39",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a92e40-2b2c-4cf8-a5da-a6003c21852a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0285f2c8-b05a-4fc8-9b9e-079d7c4bc70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3427e6-248b-449c-a698-7780c36bc717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548ccaca-5029-440a-b597-7a05618442d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88f8e6d-fc6b-4662-a05b-8223f4104d57",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bf1ea9-eabd-4bb0-be1d-f1ccf90b06e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cf0c89d-a72b-4828-820e-cbb1788da8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99098251-6da3-4111-88f6-4dc4bac7d369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc40c5c-dc76-48d6-92fc-4e120c22463b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd1a42f-a330-4aff-b04f-c61c5e27ec3c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cbfb51-d6e9-466a-a151-4cf92fcdd8e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e7c0e4-2a70-4483-b402-cac9bf824b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613c8351-bd20-482d-ada9-1be7e4de8ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5388d7f8-0a59-42fc-9859-e4727ff062cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d028c3-d97f-47ad-a43b-c39c5148527e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba97943-1ff7-43e3-894c-74f49908cc7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2924b1ba-a5fd-4d0f-9761-f26a4fe47d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30a3b0e-f9c6-497f-8cb6-ad55fdd69150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951e6bc0-00c2-4f64-b320-4c4cbdfa4c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41858a8d-1c4f-4b32-a5c3-5813b8c88f41",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287fd4f5-d828-49d9-b1ff-c08e19b5a2ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a213baf8-bea5-48b4-973c-4c23a4551b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea50b38-87d5-4cea-8366-4b36e040008d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58b0ccb-9fcf-4ff3-8714-3bcff605da88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c054f9-330d-44c7-a311-03a3af1f4892",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412f2619-0a65-4a56-8dd5-bee2474bab17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "309b4c5a-c022-4b13-97bb-d5f99c3492de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f515d69f-c8e3-4080-846b-900ca0d97fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed2b801-259e-4426-bfc3-b7a3d1f462ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7371bb-efa9-42ed-b696-8bb2b780006c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41ddc09-3962-4748-91c2-1dd440e4f268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcbde7f2-3910-4fbb-8ed1-514b102d6676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64ebe3e-6df4-4a09-a865-4274292b1406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7dbb2b-0437-4f1f-98d0-02a18378a74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c828c3-e729-47d0-8a92-21db6d832d72",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a070b3d2-e42c-4910-9130-faa73e25896a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b83c823c-0328-4e56-82c2-0562b04b0b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefd2fc7-629f-4e6a-afad-3d02eeec0cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122e4229-a92b-4717-a419-87b3e011f5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd083f2-ca1f-4102-beba-2afb8e71266a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2a5835-2d3c-4631-ae21-38aefb21a5c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ff5885e-4d9e-4a22-9d18-0219642f9893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c242a9e6-1f94-43d1-8c99-cdb06a604f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf31c85c-90a4-4080-819c-98543b0fe30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8052f32a-3786-47cd-99a9-a59a8f25bd1b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447cc823-af23-4ea4-846e-eb3bbdff8ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e68403ab-956e-4614-9eaa-116a59a703f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15227114-f306-4c87-9ff6-84fbaf0bfd18",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbeec9d1-b20e-49e1-a64f-1a04ddf947fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96de312f-855b-46c7-a307-6ab64c5b5343",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645ea4b1-0637-4dd3-9cbd-ac75693441e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f033cdb2-50d2-4c6d-8aa8-c3fd4963a3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c5ae69-cd8f-4c54-b3cb-e7d4d35c4396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0894e230-ca11-4c08-93ad-cc8b25b1fd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9841c7-ab0d-48db-8bd6-39ea668b56f9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef17ba13-9018-4951-b12a-6cbb4df39c9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c93649e3-be07-41bc-be59-66af86525c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b968455-6a51-4b7f-b805-cf2b7ddc08ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4653688d-6cfb-4228-a01d-2d45b91da965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b3abe2-7fa3-47a8-a1a7-50ea9ada6603",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1f74ae-3ab1-4f5f-8728-1ed4d8ebc192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dc3b4fc-53a7-4bb2-860c-6d4fd7446c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af28164-cdbb-4372-9377-220471abb639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbda262b-a7dd-4c36-9e34-09b1689bd538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbeb9cb2-791d-48ab-a719-11cc15f60a3f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805f0cab-2015-4e70-853a-d80bd0c86406",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7675be15-9922-4124-b0f5-b175a5514049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0645335b-9c17-41a6-8ab8-d65b15a9d99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ebe414-49a8-4ff6-acc6-5298cb81a2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c179a7-29f0-43de-9098-69a9ff92fc53",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2764c1d6-f381-4a82-b132-42c0b28cc20f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d171e420-4368-462b-8498-7ccd193da1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59f983a-56c0-41f9-bf57-cee8870856c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ee3cf1-bd21-4ed1-ad18-798aae3e8950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35beade0-3986-4137-9d3d-60161983eeef",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8910d7-466a-4673-83f7-f02e22397cbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e1f10b-bc61-4e24-ba4b-c30b786f0a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a48a70-426d-4895-9081-7841dce10c45",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6204b26-b743-4978-b7e7-61a391a6b95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6ae0ee-ccaf-47fc-8897-371056ce7cc2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c19108-43a8-462b-9440-e45266e739d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b339795-ef51-49c6-b05a-9a307b064608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b27f88-7ccf-4cf2-9cab-855fe6b757db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07133439-a16b-4c8a-a880-eba74c8921b6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a3b1dad-10f4-44de-8c2e-67df1e8170ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a5549df-7040-45a2-852f-f1cfac61358c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48828a4c-f74b-40e0-bb7a-f8cd8717340b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1f2e731-dec3-4872-850d-0bc04e728559"
                    }
                  }
                ]
              },
              {
                "id": "801f47fd-5285-4418-844d-99bbff44fd52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c6867d1-f802-427e-8b10-b25bb85a4c24",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3c6058-28c2-44fe-874e-bae55159f818",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dccccdf0-9df2-4425-87e3-9ace5fa3dd05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca01b71-ce44-427b-b327-c25c7907df46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf8d4414-ccd4-4027-aa50-2be0bb29a7c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7490cb7f-48e7-44cf-8cc9-640472b47725",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4914b88-ad33-4587-805b-9de6a6cc7c77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4877ee1f-f464-428e-ac6b-47f74596eba3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35965e68-13bf-42b3-83ac-867c3ed9b44f"
                    }
                  }
                ]
              },
              {
                "id": "1b56c0cd-87ca-4bd3-9e23-71ae0e9f8711",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "94c307f4-1628-4a37-b17c-935eccf215da",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634a9fac-fb1c-4169-a3f9-3042c095be63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a6eadef7-3db4-4b1c-b2c1-c67aa2304a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fcc002-723a-4344-884b-42f2d211445b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b25fd3-6db6-4934-bfa6-a40d0bcb6459"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1a8b950e-7fc2-4984-9ec7-808a5d981275",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e8120b30-048f-4903-bca6-f418a96db939",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63e1b255-a550-45f7-8323-d863c2375ac7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a29ea7f3-8f04-4099-9e51-822f951c991d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d99babab-8a71-434b-b1a3-12205fd73c24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0be91fa2-4d1d-49f6-8c94-25e3ab43cd83"
                    }
                  }
                ]
              },
              {
                "id": "1079f61b-637d-42c5-86ce-055d98f0a36f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "222a04c4-2985-4574-b2ac-cbc0638e5633",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dd2d234d-a00c-46ca-9bbc-41ddf4f5b641"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73148d61-5526-42f9-876e-88895cd6b37f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3ed1510-cc21-4294-adfd-97b470279dbf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a63f1bb4-8277-4dbc-ab8c-4ad1715d88a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ac6dd69b-a880-40a1-9826-cde781b1aec8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75500623-8831-4259-817d-575426272618",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c970ed8c-2368-4d86-9a8b-f84ff05188cd"
            }
          }
        ]
      },
      {
        "id": "d3581a96-93ec-4553-8ccc-57a0c5234c85",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e58f928c-2301-4e16-a88c-1592c6362556",
            "name": "Negative Testing",
            "item": [
              {
                "id": "028409d4-6109-4d61-8bd0-da51a2c82a7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00d9b5b0-fc1e-450e-ba4c-40e383ce7d55",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d93620-274e-4948-b4a2-a63cc3240831",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "89841688-7760-4197-8113-1155a8c0561a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4503be-0196-44dd-887e-e98d0da831a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e225278-cc16-4b08-adaf-7d73ace7b442"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "664cd515-2962-4c6b-a15e-4dcbaecfd3a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba345057-16a4-4f67-b8d1-d2c950685f8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ee49620-ec36-4fe3-95b4-d32bd65c22ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b03de2af-bdec-438b-90d1-eb07df9e534c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52e39cb9-4539-49d1-b430-84307e628836",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2f02e293-17d4-4436-81ea-5e3dd76e5743"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7c87375-6fba-4dbb-b14d-6a984817a495",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "385bb828-13a8-4672-9b27-3c1bcf56d3fc"
            }
          }
        ]
      },
      {
        "id": "cf8a4339-fe97-4abc-b3e6-95531f3d4f24",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a795df27-55b3-4ecd-a2ed-e0106fe6f843",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16891c7f-b885-4324-8156-82e19def6687",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b886ba6-d429-4c17-9fc0-edb1ddd738cb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4b7dbb-b630-49e3-9e61-fb6e206fa917",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beca5902-d37b-48ed-817e-8f74c236ec5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc560d9-087f-423b-aea9-26a6c678bba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "631e2626-4b58-4627-b840-124ae511ba1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcde8c29-a99b-45e6-854f-f02a3a53952f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9b20ac9-9187-45cf-a538-2b952674d0fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36c441c3-68b2-4c68-8eb3-1e72acbb5d96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fbc3da0-3cb1-46c3-ada8-1f470ebca8dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "691b40f3-08db-4ed1-9f25-88325332937e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "45d05007-372d-41b7-a200-e0df12230da6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52a84ae5-b834-417c-aeb2-de3a3238fdb7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "650ae7f6-5636-4d13-b5e8-e277942c6c28"
            }
          }
        ]
      },
      {
        "id": "78c01493-6e2d-47db-8e29-7a9c99302d9a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ca9bc73d-eed6-489a-b416-ffaff8fcd05d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f2abf25-ba28-4e2b-a652-14430bf9050e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "701a4166-7b42-4b83-ad1f-6d9a01fb4e49",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4b1f4b-cc3f-4e0b-948e-5eb6a48ba6c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b09b595-c8ae-4615-ba5f-eb1cdcf80343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e4df70-7580-4c9c-a837-48db76aab29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c45d10ee-2123-47e6-be5a-248bc0876b28"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfc7a20f-1673-49a1-943b-708b45086125",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78ab974b-6c31-41db-93a8-d168d34ccd29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd42994d-d7cc-4658-9b83-79f8d45fd616",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81854689-ab55-4e25-88f4-d9e872de5aae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1eb75d38-304a-4359-9ccf-e9ed4af766c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1bce3a3f-e121-4285-96ab-dc50242ffcde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1173dc16-bb52-4b09-af67-4d96f1d8e74d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb783c7f-2b4a-432d-815a-6101dc17d7e1"
            }
          }
        ]
      },
      {
        "id": "b864ef88-ac94-4905-a73d-c1946d86c161",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "676d70f0-c9d5-4802-b4f2-bc9bd8e5c893",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "189ae1ff-1183-4882-ba6d-c1d64963a950",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e81594c3-1003-4217-81b3-6eca8535250b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d2459ed-cc78-426d-b765-dfcef6778007",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "000eb66e-2537-4ae1-9bae-234145f9ca51",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 95.33098591549293,
      "responseMin": 11,
      "responseMax": 4654,
      "responseSd": 398.8323401114132,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697157279302,
      "completed": 1697157320901
    },
    "executions": [
      {
        "id": "bd99c045-37a6-4957-bb8a-fd533f5dc2a4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "67f8979d-f33f-4786-b552-08b4b1244677",
          "httpRequestId": "f9e10f21-15e0-4a05-aab7-e71ede1b8d40"
        },
        "item": {
          "id": "bd99c045-37a6-4957-bb8a-fd533f5dc2a4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f2934925-b35f-4e7f-a01e-68f686cf28aa",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "4ffa944b-03eb-4e7b-8b69-b01f16d1b13b",
        "cursor": {
          "ref": "df774506-88ae-4abf-9a37-4e222293c2d3",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "411a9227-8c4e-4313-9e2d-4d0cd53d7c60"
        },
        "item": {
          "id": "4ffa944b-03eb-4e7b-8b69-b01f16d1b13b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "65e4d3f3-af48-4297-a719-fe8a43b9e216",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "a8f79772-ff45-40f2-84bc-f115d0c27862",
        "cursor": {
          "ref": "affb9a42-2286-4487-a281-1bccbfabf995",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9da23204-723f-411a-827c-6d823982a4f4"
        },
        "item": {
          "id": "a8f79772-ff45-40f2-84bc-f115d0c27862",
          "name": "did_json"
        },
        "response": {
          "id": "83a3b740-3477-4c94-8d43-93d8db2cd44a",
          "status": "OK",
          "code": 200,
          "responseTime": 175,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e4e42a-7b20-4fc5-a4ec-ecda9fc3dd68",
        "cursor": {
          "ref": "e25b1d2e-2a30-4bcd-bd1d-fa44e7f01bb1",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3f1186b8-83c2-4686-810d-abf5351c9a43"
        },
        "item": {
          "id": "f3e4e42a-7b20-4fc5-a4ec-ecda9fc3dd68",
          "name": "did:invalid"
        },
        "response": {
          "id": "29309111-4cb5-4bfb-987b-6fc98f268868",
          "status": "Not Found",
          "code": 404,
          "responseTime": 651,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e4e42a-7b20-4fc5-a4ec-ecda9fc3dd68",
        "cursor": {
          "ref": "e25b1d2e-2a30-4bcd-bd1d-fa44e7f01bb1",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3f1186b8-83c2-4686-810d-abf5351c9a43"
        },
        "item": {
          "id": "f3e4e42a-7b20-4fc5-a4ec-ecda9fc3dd68",
          "name": "did:invalid"
        },
        "response": {
          "id": "29309111-4cb5-4bfb-987b-6fc98f268868",
          "status": "Not Found",
          "code": 404,
          "responseTime": 651,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6ec026-1140-4e8c-829f-8ba582378ddd",
        "cursor": {
          "ref": "aaf6a4c8-4fd9-4295-9ddb-17f5b07bb8ee",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8c51e26e-5a5c-4229-af10-a9a097a78b55"
        },
        "item": {
          "id": "cd6ec026-1140-4e8c-829f-8ba582378ddd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "55187c53-d1ba-4f3e-8c3a-8810e5cab263",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36e7bea-a05a-477a-aebd-a11f837a8219",
        "cursor": {
          "ref": "c73bdfbe-3060-4922-88cf-b1ad8ed819aa",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "24dcf81d-7c73-4d8d-9e7c-ff831e0133e9"
        },
        "item": {
          "id": "f36e7bea-a05a-477a-aebd-a11f837a8219",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2fcc531d-9715-4fc0-8500-edd5711481a1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351210a8-6ff3-426c-9cbe-f2b39992a11a",
        "cursor": {
          "ref": "b2e948ac-d30a-471c-9bb2-d84f53dda9a6",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "998885cb-8523-4642-b075-f8fa8bec0b0a"
        },
        "item": {
          "id": "351210a8-6ff3-426c-9cbe-f2b39992a11a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4be1a320-52bb-4130-a806-32e31c6cbbad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917f7a42-cc8d-43da-abdf-b9321f034073",
        "cursor": {
          "ref": "7a07be5b-8ed1-4ebf-b91f-fdddb54d49f9",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3637a2be-e487-42c5-8ec6-5edcf6d82e6a"
        },
        "item": {
          "id": "917f7a42-cc8d-43da-abdf-b9321f034073",
          "name": "identifiers"
        },
        "response": {
          "id": "f0e4934b-547c-4240-bbd0-5b3a04d5b3cf",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f458485-08dc-4464-af05-f7aac9a545f5",
        "cursor": {
          "ref": "8a130cfe-cc8c-41bc-8f75-78152dcf871b",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2f13af10-f2ef-4f69-9e33-a518076aa36b"
        },
        "item": {
          "id": "9f458485-08dc-4464-af05-f7aac9a545f5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1796b1b1-eaec-4946-826c-4af241638d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5e9dc7-222d-4c02-80a7-d2fbad0f3985",
        "cursor": {
          "ref": "03db71a5-88dc-4dfd-8889-6678d2b8e75f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3e3c7670-3b8a-4d39-90ed-bcb35a2090f0"
        },
        "item": {
          "id": "cb5e9dc7-222d-4c02-80a7-d2fbad0f3985",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d2f82a4f-e817-48e6-92ab-79f98515d51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5d9157-c57e-4433-965b-e3af168ade99",
        "cursor": {
          "ref": "a1934aa9-b0b6-4986-ad46-b9a84e565088",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e8f79851-45e1-4083-a20d-217cdfa51189"
        },
        "item": {
          "id": "bb5d9157-c57e-4433-965b-e3af168ade99",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "93ec60ce-a9e1-4c42-b600-4561f6ea6475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5de9f1-631a-4fdf-a88e-2dd2883d2ae8",
        "cursor": {
          "ref": "bc1bfdbf-685e-4f91-838e-23f85501db84",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b8ddc81b-0f40-44e2-91c1-6df237a80a67"
        },
        "item": {
          "id": "4a5de9f1-631a-4fdf-a88e-2dd2883d2ae8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "92cd8cef-1e8f-4404-ab45-3156f1310350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfd6e37-93a1-4381-84a7-221cf9f8fc9a",
        "cursor": {
          "ref": "b23d2b38-9b5a-4897-bcfe-e0aa7e35670a",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5e43b4a7-0966-4250-bf81-01b0a17d6a9c"
        },
        "item": {
          "id": "1bfd6e37-93a1-4381-84a7-221cf9f8fc9a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c545d304-845c-45eb-a16a-24cec753add7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0d9a2a-20d7-4ba3-ad40-a1be0e7491a5",
        "cursor": {
          "ref": "576b9741-0883-4176-b241-9d1dfd10a2d5",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5a959a6c-bc50-4fdf-9a30-f16bc70cdf2e"
        },
        "item": {
          "id": "ac0d9a2a-20d7-4ba3-ad40-a1be0e7491a5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "01ceed1c-bdf3-47e3-9a2f-5d25a8892b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3d94f2-39d0-4b54-a803-d3dac43156e6",
        "cursor": {
          "ref": "35e4ed7c-7cf3-4387-a5b1-991231eced49",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0d5d2c76-f5e7-4396-a508-ccf7dc4cf1d6"
        },
        "item": {
          "id": "bf3d94f2-39d0-4b54-a803-d3dac43156e6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "64cf6309-f82f-4e14-931b-2c67b8a79175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4812dd6b-4542-4351-b339-1dc5afaa9b0d",
        "cursor": {
          "ref": "613c26be-6e95-4013-aa45-a1349856200e",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6fa86541-3741-4fed-ac98-5fcd66dd805e"
        },
        "item": {
          "id": "4812dd6b-4542-4351-b339-1dc5afaa9b0d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6c10fa91-8fa2-4055-979e-3721933e94ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1a3590-335a-4712-82a9-3dfb00749a55",
        "cursor": {
          "ref": "63ee7b7c-b26e-4f52-ad49-2ce60c9b0b21",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2b7da639-77aa-4130-82b3-d3f08459c64e"
        },
        "item": {
          "id": "7c1a3590-335a-4712-82a9-3dfb00749a55",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8b0b5566-a85f-4953-ade4-10370b1a8f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3a2fed-336a-4d92-8302-ae7c980c4c11",
        "cursor": {
          "ref": "bfba31e6-1a0d-4585-82a5-af1cc085fb76",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d65ffd5e-e01c-42bf-a6ad-e1260d3a7bc7"
        },
        "item": {
          "id": "fb3a2fed-336a-4d92-8302-ae7c980c4c11",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8c34263b-0b68-4af5-8f40-a6d14dd04108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350c0103-c888-4c79-a907-6ceabe883958",
        "cursor": {
          "ref": "dfeb55d8-51a9-45ed-8afd-415e8ae2a43d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5cf97dcb-1cb5-4de4-8c6e-0513c7633b2d"
        },
        "item": {
          "id": "350c0103-c888-4c79-a907-6ceabe883958",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3503c520-753e-4113-aa9b-1eba33ef035b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa6f853-10a5-477b-b7ba-e91bcb0841b9",
        "cursor": {
          "ref": "cd1f046d-48e2-4f1c-87d6-8988428227d6",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ed926d23-e952-450c-8916-9275b8bc8484"
        },
        "item": {
          "id": "faa6f853-10a5-477b-b7ba-e91bcb0841b9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5aa41fc5-d566-40a7-9a59-c9cb3535a268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a911be98-6be9-4e04-b18f-87faa9e98aca",
        "cursor": {
          "ref": "923b8748-6b79-4925-afdd-530ca41f983d",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "33b2e773-d06a-4e3f-a1a8-5117aeae5331"
        },
        "item": {
          "id": "a911be98-6be9-4e04-b18f-87faa9e98aca",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7d7be9f2-ba8e-44d3-9612-2d79c2df47c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf35e7d1-a6d5-4cc5-8959-05096c09e964",
        "cursor": {
          "ref": "417ca75d-51af-4b60-bd3d-e808b8e59cca",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "94675a5c-88b2-4569-9a09-a9a179e6bca9"
        },
        "item": {
          "id": "bf35e7d1-a6d5-4cc5-8959-05096c09e964",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1b12aaf3-4f4a-410d-a668-348ec9fda7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2287878b-2185-430f-9bd4-a9a0c012eb6e",
        "cursor": {
          "ref": "9122e141-f96a-414f-968a-f5f194534aca",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "37b3db60-b358-4daf-b155-c4bf1f6592e3"
        },
        "item": {
          "id": "2287878b-2185-430f-9bd4-a9a0c012eb6e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "015b8319-898c-45c0-b63f-b0ab6838520d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0e37d2-e93a-41f1-a968-d4b8a1bd3efc",
        "cursor": {
          "ref": "7dc74564-6a0e-48f3-93ef-d445c4659362",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4383c7d8-3b0e-4038-9265-611c15174b7a"
        },
        "item": {
          "id": "da0e37d2-e93a-41f1-a968-d4b8a1bd3efc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ec813db6-2785-447f-9d36-e871b63da655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da84cc8-4ac8-4bbd-98f5-11a4aeef846b",
        "cursor": {
          "ref": "89e79d8e-b728-4ea1-b20d-86f0cf28b015",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4390ab77-aa75-4c12-856f-63fb745c2ca9"
        },
        "item": {
          "id": "8da84cc8-4ac8-4bbd-98f5-11a4aeef846b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ac62c205-5abd-4d71-9bff-d31e7aa90f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09d9c72-92ee-4423-86a6-976f08c231d3",
        "cursor": {
          "ref": "fd87953b-105a-4770-918b-a41052205e92",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5e6959ba-a9c9-48dc-8e8a-e01231040530"
        },
        "item": {
          "id": "f09d9c72-92ee-4423-86a6-976f08c231d3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d80c73d5-b5f1-4e1e-91df-1f2aa0c536ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2548aaf3-90e1-40ab-b8fe-e981ce3a51de",
        "cursor": {
          "ref": "7519283d-6f5c-4617-9c52-6b4ea78b1c8e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2a71ffb4-2878-4680-8917-cc0f71b298b8"
        },
        "item": {
          "id": "2548aaf3-90e1-40ab-b8fe-e981ce3a51de",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a11f4051-cb3f-47d2-91ab-0783c5a2c077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d66c1d9-4598-479f-94aa-06cdf0d7ba3a",
        "cursor": {
          "ref": "9a548d76-5769-4543-834d-35a29851ec2e",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2bfeb8af-35c0-4fb0-b9b8-366727e68a6f"
        },
        "item": {
          "id": "0d66c1d9-4598-479f-94aa-06cdf0d7ba3a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b61ef3d7-fec4-44b8-8fce-f41cc7128b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991e9c9b-4b61-4b6d-b4a7-cbf9b870386e",
        "cursor": {
          "ref": "1de6e414-0e18-4ab5-9209-143745035bb7",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "57e5a822-37e7-4789-8339-e9c53e3ccd91"
        },
        "item": {
          "id": "991e9c9b-4b61-4b6d-b4a7-cbf9b870386e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "74ba80c7-4abb-46b2-aff5-8f0afcd36341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d8b5b7-cbd5-4f5b-9d0a-c096f3be21a7",
        "cursor": {
          "ref": "c18882ee-abd7-4635-aa04-786fe8fb4568",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0f04adf2-5118-4572-976e-72fa7c1d8c3f"
        },
        "item": {
          "id": "e6d8b5b7-cbd5-4f5b-9d0a-c096f3be21a7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4ed9555d-ff1a-4e6d-90c6-03ed799b11b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bdefe8-6fce-426c-baa7-4a5cc621b8ce",
        "cursor": {
          "ref": "7e29a241-29b2-41b2-90a8-5eea4f0a1236",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "464376e2-bf8a-4dc0-991d-141adee76943"
        },
        "item": {
          "id": "e8bdefe8-6fce-426c-baa7-4a5cc621b8ce",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "54c6632c-1302-4af2-b696-4e4de5b885df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b023fcce-e771-45c9-b7cb-78f73008ed7d",
        "cursor": {
          "ref": "9f018ddf-8990-403d-80e3-edf22af2285e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "72cc013a-be28-457d-82a8-a49d722af055"
        },
        "item": {
          "id": "b023fcce-e771-45c9-b7cb-78f73008ed7d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bc4a7457-ee05-49e9-b708-df10e0599cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b96413-44cb-4a10-8975-d3c5e4783bab",
        "cursor": {
          "ref": "a1767b02-c267-4522-b1c4-22671ab3b0ee",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f57d1d68-fd10-4774-9c75-34d5e377ae57"
        },
        "item": {
          "id": "c1b96413-44cb-4a10-8975-d3c5e4783bab",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "16ca2e57-7c2f-44bd-8dd9-9a13e3afdef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 903,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76856e15-5f04-4e84-8042-f84deccadc32",
        "cursor": {
          "ref": "44a2827d-864c-4424-8dbe-5784bfbcaf9e",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b0aac692-3b25-4379-b3ef-bdca4b2d50cf"
        },
        "item": {
          "id": "76856e15-5f04-4e84-8042-f84deccadc32",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f48ca642-2858-4506-98a4-b0a28cfec989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe3a6cf-ef49-4324-abb5-dfb405add2e3",
        "cursor": {
          "ref": "cca2f732-5a18-4c1f-b054-16d6fb55c8bb",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0dc25aba-1518-48ff-9013-0a2c9a0bba2c"
        },
        "item": {
          "id": "ebe3a6cf-ef49-4324-abb5-dfb405add2e3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "97b32995-68e9-4c11-9e69-1c9640b96096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1229e0e1-1c2b-43fd-9b0b-7513fcf8b484",
        "cursor": {
          "ref": "d40267c9-e299-4756-88d8-6763bcfb9564",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c274dd34-59cc-4bfd-b0c9-02a25204cf0e"
        },
        "item": {
          "id": "1229e0e1-1c2b-43fd-9b0b-7513fcf8b484",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1d1a9c02-579f-4631-b737-eec1505382bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31301d96-a5cc-4c48-9642-c3cdd2d8b7d0",
        "cursor": {
          "ref": "eabd132f-03f7-4088-b970-9cbed6a192de",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "af1584b6-078b-4e39-9201-4ba5b31810af"
        },
        "item": {
          "id": "31301d96-a5cc-4c48-9642-c3cdd2d8b7d0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7cdb7091-f993-4e1a-a61c-836e01c33659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51b3168-5361-4d8e-8e62-9c2b18819cdd",
        "cursor": {
          "ref": "f8c76b15-9f2d-4154-b920-29294acf5e7e",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "83a0f084-2f54-45ba-8ca5-e6ef6ead54d1"
        },
        "item": {
          "id": "d51b3168-5361-4d8e-8e62-9c2b18819cdd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "19fdb93e-0f65-421e-9b2c-5732d84b872d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff51e66f-c444-445c-b2d8-4673e769935b",
        "cursor": {
          "ref": "3e920f4a-2aa2-42d6-bb62-24a15be4d008",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ee666311-b24e-4f71-8919-007fe6337e99"
        },
        "item": {
          "id": "ff51e66f-c444-445c-b2d8-4673e769935b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "707b3ab8-9452-438c-ae0b-077d9d60ef57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada1237e-eee7-457d-98a0-796e460f7d5f",
        "cursor": {
          "ref": "e10cbaa5-f316-48d2-b6c1-effaa834e4d5",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0fac08ce-7add-447e-a816-34e77849d1f1"
        },
        "item": {
          "id": "ada1237e-eee7-457d-98a0-796e460f7d5f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0b1ab8b1-2c0e-4508-9aa3-ce14f89f8105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d647fa4-e46e-4f8b-a3ef-624e558ed7bb",
        "cursor": {
          "ref": "12ad0515-491b-46f4-bd93-d05073092b71",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9210337d-df47-4808-89d2-a41309593eab"
        },
        "item": {
          "id": "1d647fa4-e46e-4f8b-a3ef-624e558ed7bb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "05faa133-1fb2-4a96-891f-b30fb6cd272c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a0f8a8-f64f-4339-9265-f616978e8e5d",
        "cursor": {
          "ref": "d799f9e1-952c-4a4c-a52d-b45169ca8ea7",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "78a493d0-2739-4803-9445-a9c4d0be0911"
        },
        "item": {
          "id": "70a0f8a8-f64f-4339-9265-f616978e8e5d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "167067e2-8d93-4dfa-9819-701bfbf166a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2bd2df-88e1-4687-bdfd-672b997dbd55",
        "cursor": {
          "ref": "21416eef-ecc3-4d21-bd89-1e0940b594dc",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "be735d95-7972-4e92-9e9c-43b5782b60ac"
        },
        "item": {
          "id": "df2bd2df-88e1-4687-bdfd-672b997dbd55",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cf34912a-afdd-4d83-9959-8f3b6094ae1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374ab5f1-71c5-4f46-850d-8807e6467a08",
        "cursor": {
          "ref": "bb76e0be-3e93-4777-958c-c8e934bcbd08",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "30abfc5b-5efa-4171-a13b-4922b1139003"
        },
        "item": {
          "id": "374ab5f1-71c5-4f46-850d-8807e6467a08",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3fa3fc31-5e62-4390-ba39-a4386c3060fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcbd90c-a553-48bd-8fc8-5608bf526751",
        "cursor": {
          "ref": "d48c69d1-fef5-4e50-9bc1-bde8946b6a14",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c560430f-4ee7-4b5a-8be2-79bbf18293fc"
        },
        "item": {
          "id": "3fcbd90c-a553-48bd-8fc8-5608bf526751",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "47c208ff-8660-451c-9923-c0eec579f690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73899c6-7204-4cb9-af6e-b11d3fe60a1f",
        "cursor": {
          "ref": "47ad2cbe-7bcc-4e7e-ad7a-d5381e7478f2",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1a448517-c79f-4f3f-aa48-98d32a073dda"
        },
        "item": {
          "id": "f73899c6-7204-4cb9-af6e-b11d3fe60a1f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9b41e952-4eb8-445c-b778-99b7105d11a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bc55fa-2c46-4bcd-ba0a-59757119168d",
        "cursor": {
          "ref": "830807a4-e656-4d1f-9f8c-5dea9ea23fb7",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "86395902-bb5a-4a95-b620-0f0442a12f6c"
        },
        "item": {
          "id": "45bc55fa-2c46-4bcd-ba0a-59757119168d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b6692b85-48ec-459e-be99-bf10d57a5c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336f99d9-38a5-4c1f-93bb-1cdf9e0c082f",
        "cursor": {
          "ref": "6b99b108-ad7d-4eab-b9db-4b80ee662ba6",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "80f6dd47-0af6-4d4f-907b-43596c4c0f8d"
        },
        "item": {
          "id": "336f99d9-38a5-4c1f-93bb-1cdf9e0c082f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ef1c29f6-6395-403e-9162-bcd8a6be0099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25bd096-7686-4c16-8e3d-94bc6037594c",
        "cursor": {
          "ref": "546a4334-6e05-47e8-b9f4-cdd6e8ec0743",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b3632660-aaa3-4486-bf91-f28e655a985b"
        },
        "item": {
          "id": "f25bd096-7686-4c16-8e3d-94bc6037594c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ead549fb-86b2-4019-a32c-4c90fc43ecf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b9a477-04cb-46b5-ae53-be290ddc72db",
        "cursor": {
          "ref": "f6487a2a-1fdb-4b88-be07-b33ac561c0e0",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "175ffb32-cf25-4457-8d6b-77937fe37ed4"
        },
        "item": {
          "id": "a3b9a477-04cb-46b5-ae53-be290ddc72db",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5837ca2a-8c3b-4d9d-8b42-fc714ab5cf47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d75fd4-b23c-4a79-a017-6e27f4f4858f",
        "cursor": {
          "ref": "577d2e27-5e8b-4313-a7a3-269cd978c1e2",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9e8b1b13-f4f3-4ffc-98e4-81398d4015fa"
        },
        "item": {
          "id": "a6d75fd4-b23c-4a79-a017-6e27f4f4858f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e4be2745-7810-43dd-b132-81748364be39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97754b20-6f88-41e8-b381-035e7f2f045a",
        "cursor": {
          "ref": "a3337c80-6759-41fc-9c37-1ec134f59475",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1b20fde7-199e-4f47-a82b-55cb20818fbc"
        },
        "item": {
          "id": "97754b20-6f88-41e8-b381-035e7f2f045a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d686dc92-90c9-4957-9462-a704426f5d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2f6ef3-7588-4568-901b-c2f0adeba127",
        "cursor": {
          "ref": "54d782e3-d8d7-4bec-8013-0a51fbf51e5e",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "66f015bd-157d-466c-8317-b8db49a5301b"
        },
        "item": {
          "id": "db2f6ef3-7588-4568-901b-c2f0adeba127",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "88f6d3ee-8691-43f6-b8e8-0e4505baa096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad4fdb0-39cf-4908-b953-d9524ef891f5",
        "cursor": {
          "ref": "766584d3-77b1-4420-9233-739bfae9f43c",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "737aa8ae-d149-4b0a-8616-911641bc9849"
        },
        "item": {
          "id": "4ad4fdb0-39cf-4908-b953-d9524ef891f5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b1513805-c5c7-4546-b1f9-2caefe67fcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312d6006-745f-44bc-a751-27ea221947c7",
        "cursor": {
          "ref": "be7d52e6-f124-423c-9f80-97f2c3b75b81",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a8e4dc2d-47ea-4719-b91c-7d3cb329aa15"
        },
        "item": {
          "id": "312d6006-745f-44bc-a751-27ea221947c7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "843343f9-62da-4e74-b538-a4374a46c688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf718c94-7271-4c3c-a41b-1e98d83a53fd",
        "cursor": {
          "ref": "95aebc89-0ab8-4ef6-b841-bfe5b95f1fe0",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4aa76f57-2714-48b2-9467-c66a43822210"
        },
        "item": {
          "id": "bf718c94-7271-4c3c-a41b-1e98d83a53fd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a3fde8df-7f6f-4f9b-b565-d5b6ed2a22b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c748511-baa1-4f6d-a5d0-835edda351df",
        "cursor": {
          "ref": "601ad3d5-f7e1-47ba-a4b0-edc43411b25c",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ca60b26e-ce11-422b-b211-ce7c7b8db8b5"
        },
        "item": {
          "id": "1c748511-baa1-4f6d-a5d0-835edda351df",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bf25a474-c441-4474-8166-ef76281bf6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a79c4ed-3492-44bf-9cab-8cebf151ff65",
        "cursor": {
          "ref": "035add50-aacb-4c48-b564-1c201f59b110",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "71f73c96-7846-409a-a361-739f9285b63c"
        },
        "item": {
          "id": "2a79c4ed-3492-44bf-9cab-8cebf151ff65",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "733d4a84-870e-4539-914a-559be1cb5851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cead6d92-a67a-48e1-bd3e-3612c890e049",
        "cursor": {
          "ref": "b2f5971b-4eeb-49f2-8ebd-6a3e31279cc3",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b928ea28-9c93-4dba-8dcd-47291b701c37"
        },
        "item": {
          "id": "cead6d92-a67a-48e1-bd3e-3612c890e049",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e7ab6bf0-06f0-4544-8e92-cff25cabaa48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd0b4a8-abf9-495b-9cb4-b28931c2955a",
        "cursor": {
          "ref": "6b5e8fc5-c962-4910-9135-576660d724e5",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ed12c159-0082-41ed-b782-d4c1bc981997"
        },
        "item": {
          "id": "0dd0b4a8-abf9-495b-9cb4-b28931c2955a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "354da7ee-6271-417c-bef3-9b104c602614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a053d32-bb4d-4276-8f4c-235fde5bf955",
        "cursor": {
          "ref": "0f53855e-b6bb-41fe-84fe-50e6d10f4248",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9bf7aafb-3829-4c60-a56c-9bc51267c9d9"
        },
        "item": {
          "id": "9a053d32-bb4d-4276-8f4c-235fde5bf955",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a7b2051e-fac9-4b8a-9406-609f28d947ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6652a7f3-cdee-4156-a89a-a98746bc1abc",
        "cursor": {
          "ref": "7bd0184a-b65c-4465-a5eb-2d58660a2ad0",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8b65d507-d7ab-4991-b4da-6db7037f5b06"
        },
        "item": {
          "id": "6652a7f3-cdee-4156-a89a-a98746bc1abc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d88f7338-37b2-43ba-8d7d-441bde75e755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee38431-34bc-40f8-87ee-380fdc56c3a9",
        "cursor": {
          "ref": "9b5c0002-bbac-46c6-b1fe-266e0797c24e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2ecaad02-7807-4922-960d-6732ba1861ce"
        },
        "item": {
          "id": "1ee38431-34bc-40f8-87ee-380fdc56c3a9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "347c0a7e-d4a9-4188-a694-d63d9e651dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2a2ffd-0b22-46b9-981a-ecb2f63487bf",
        "cursor": {
          "ref": "0d9ad580-8caa-40be-81f1-5e3cfc054b04",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "19823983-9843-4444-b4e6-58585398735a"
        },
        "item": {
          "id": "ed2a2ffd-0b22-46b9-981a-ecb2f63487bf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c8db6cc4-2a51-4123-8268-f80b472f3946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98cd574-84e5-411b-a1bb-dedbc1628ce4",
        "cursor": {
          "ref": "ba76a564-ac9d-44e6-8009-8dbc4c98712b",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "123c8040-e289-497f-bc12-31caa5717cd1"
        },
        "item": {
          "id": "c98cd574-84e5-411b-a1bb-dedbc1628ce4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f8ee5a3f-8487-4cff-90d3-32d0d939d6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcc7a1d-99ba-41b0-933e-1cf1cda98fc5",
        "cursor": {
          "ref": "5bd07a49-dbf3-4a72-b9fd-716a731506a6",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "eda64943-1c3e-4a84-b02a-efbdcc3552de"
        },
        "item": {
          "id": "dfcc7a1d-99ba-41b0-933e-1cf1cda98fc5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5fbb8c50-d29d-4e25-bb80-fc02bae7d4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcadb23-dab7-4e31-8784-b8ad01bc0f81",
        "cursor": {
          "ref": "ceb7359c-b816-4125-bd39-964789e59dac",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "09ccc759-280a-4668-9757-a79d21997d18"
        },
        "item": {
          "id": "cfcadb23-dab7-4e31-8784-b8ad01bc0f81",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5b3f4e9d-a328-4740-8fd2-4cf11e27c9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8237cc87-527d-4512-bf79-fe875795332f",
        "cursor": {
          "ref": "d4770e6c-89a8-4845-9f58-bfed76b3d320",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1192b4f2-702e-410a-9677-2b17f5290933"
        },
        "item": {
          "id": "8237cc87-527d-4512-bf79-fe875795332f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "60d675ed-fc2e-4718-855c-6856cd0bc3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03a9400-f7c7-46a6-aa9a-6fc64bb3d9b4",
        "cursor": {
          "ref": "c30bee04-70ee-4d1c-bdf9-9163ed2d8f26",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9bd1b79b-b3ee-4af5-859e-a09deb766321"
        },
        "item": {
          "id": "f03a9400-f7c7-46a6-aa9a-6fc64bb3d9b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cdad685a-ee60-47ea-a208-2ddbe67ea682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6e6cc3-1e86-4eb8-ac4d-56af857e2e2e",
        "cursor": {
          "ref": "fe78c5ea-e222-4d64-925d-e4b3e7d748ce",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4b755593-f434-47c5-bd74-398015c9d0a5"
        },
        "item": {
          "id": "1c6e6cc3-1e86-4eb8-ac4d-56af857e2e2e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2b710f2f-398d-45a0-99dc-1e95350d8be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ffbbdc-07d3-4638-84a4-d3b7cc625993",
        "cursor": {
          "ref": "3af6b8ed-d77c-4f79-9c5c-a4e7f8cae489",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "30353c0b-949b-440f-a108-4d3b99de421e"
        },
        "item": {
          "id": "01ffbbdc-07d3-4638-84a4-d3b7cc625993",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e09dad87-a4ca-4bc4-afeb-60ceff93b5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9166a7-dd03-4c24-8372-536a14167957",
        "cursor": {
          "ref": "6fdec3ef-45e6-4d16-a2b6-d561c9f6f3f6",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3adb54ef-d16b-451d-bfb6-4757c95c53db"
        },
        "item": {
          "id": "ea9166a7-dd03-4c24-8372-536a14167957",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "da74099b-0ee9-45d3-b865-907e67a4a8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac63dea-ff6a-4d51-aa0c-359206b2de5a",
        "cursor": {
          "ref": "b0f23ca2-7a3c-4959-9ab0-e2e8c533a4a0",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f8b09afe-2553-43df-97b5-7987c7a7bc88"
        },
        "item": {
          "id": "eac63dea-ff6a-4d51-aa0c-359206b2de5a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ced86f19-30b9-41e2-be5d-98bd3258a8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905d37ca-c767-4dfd-ba3e-c42831959ad2",
        "cursor": {
          "ref": "13d8d5c1-21ab-4972-9f86-74b388f29b73",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7abcc08b-181e-410a-83fa-7a9c9fa7bdda"
        },
        "item": {
          "id": "905d37ca-c767-4dfd-ba3e-c42831959ad2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6adc394b-b60a-4e23-a1aa-95c04719421b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09c83c8-8496-4513-9ba4-17aa563bf725",
        "cursor": {
          "ref": "71f8dded-12ad-4a0b-87a1-83f4879b427e",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3f1e0d68-1bb5-4cad-a25f-b34e6bdfc19e"
        },
        "item": {
          "id": "d09c83c8-8496-4513-9ba4-17aa563bf725",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a504efeb-cce2-468a-afc5-b64ab31cb58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc4cb58-2f65-4f68-b8f7-a90e3c47a3f7",
        "cursor": {
          "ref": "a1d39b1e-3423-482e-9c7e-84a567f73084",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "96699958-79f8-44c6-ab23-f9755668f650"
        },
        "item": {
          "id": "5bc4cb58-2f65-4f68-b8f7-a90e3c47a3f7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "82635a28-645d-4db7-ba7d-3f2129abc20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb01898-fefe-4c1b-95b2-20c2fc87d1ef",
        "cursor": {
          "ref": "c8d1c503-827e-47d0-8302-335738ebbd5d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2a46b85d-957f-40d9-8ab9-9c7ec992ffb1"
        },
        "item": {
          "id": "0bb01898-fefe-4c1b-95b2-20c2fc87d1ef",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "aa4cc4bb-4e1e-417f-8910-b7ee86899541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4707caf4-f0da-41d0-aa81-07515075de57",
        "cursor": {
          "ref": "2d91187d-9f84-4a58-aa9a-9543241b864f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1c6b0bac-eb52-4a27-8400-c03cb43be076"
        },
        "item": {
          "id": "4707caf4-f0da-41d0-aa81-07515075de57",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "83dd6375-adae-474f-8827-978d598d98e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d8335e-78c1-4d63-b1c0-a7e51cb21d56",
        "cursor": {
          "ref": "1be74d81-de12-4a20-9fe4-6babf525a18a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cc48f561-ecfa-429c-90f7-e01ce1baa143"
        },
        "item": {
          "id": "b8d8335e-78c1-4d63-b1c0-a7e51cb21d56",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4eb37c3c-975e-4e61-8c53-3b150af0ec09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0816aaea-a1b6-46dc-901f-98b6c1b8941b",
        "cursor": {
          "ref": "99ddfc86-df6f-46e6-9c34-05f61824f978",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0ce7314a-485a-4019-98fc-447740ac270d"
        },
        "item": {
          "id": "0816aaea-a1b6-46dc-901f-98b6c1b8941b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "699cc965-228e-4599-8827-98adcbfed536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a4ff96-7a4f-45f3-9845-5632c8b4bbf8",
        "cursor": {
          "ref": "aed1d762-07ca-4bb4-b0ad-d37e04fe6500",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7ab22637-217c-45f3-b5d0-7e09d4490a82"
        },
        "item": {
          "id": "d6a4ff96-7a4f-45f3-9845-5632c8b4bbf8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "953f9e9b-9a25-494b-b73f-2c21715c4190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3253b22-50b5-480e-8770-e0e9d66fa84a",
        "cursor": {
          "ref": "e55ce664-c217-47ce-9723-0667d594e254",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0e6bc1e9-8974-4f91-aa4d-7e1926ced260"
        },
        "item": {
          "id": "b3253b22-50b5-480e-8770-e0e9d66fa84a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a26f8b89-b0c4-4a51-83e9-906ce2717e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c88151-73e4-4fc5-b062-66302c8044b9",
        "cursor": {
          "ref": "f3ceb529-5f15-43d8-9446-6087e5524ccc",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3cd69e1b-7511-4c50-b1ea-65519babf7d4"
        },
        "item": {
          "id": "64c88151-73e4-4fc5-b062-66302c8044b9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "31edda3f-08ed-4634-8afd-8088ab6500e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc06996-7b19-487c-a9b7-f07d06ef0e34",
        "cursor": {
          "ref": "2d6b75df-b4d2-4eef-aca4-905cf7428851",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b89ccc5a-d41a-42bb-ab3a-03993cbfafb3"
        },
        "item": {
          "id": "9cc06996-7b19-487c-a9b7-f07d06ef0e34",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4737885e-2917-4906-8671-b1bb876bdb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a818e7ab-d229-403b-91ed-87636ae790e0",
        "cursor": {
          "ref": "4150a230-9cf1-4526-9513-39ef40176dfc",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d1c68384-2fca-4623-b779-63cc690d4b09"
        },
        "item": {
          "id": "a818e7ab-d229-403b-91ed-87636ae790e0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4ca23483-ecb4-4f54-a8a8-56b11c787717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab482d7-e17c-40ab-8412-6d8c2bf392b3",
        "cursor": {
          "ref": "25160dfe-69ee-4b2c-92fb-0ac6a6b93c92",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b817eefa-2050-44be-9506-e3bde794ebe1"
        },
        "item": {
          "id": "2ab482d7-e17c-40ab-8412-6d8c2bf392b3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ccc0724c-99bb-4460-a347-9ef3c278fccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0532ff-05db-4158-a1b0-08f02d397f3a",
        "cursor": {
          "ref": "fe9e0a75-eda6-40fd-9961-212996e474ec",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a678b197-37b8-4dd5-bd43-5311cde50c7a"
        },
        "item": {
          "id": "fa0532ff-05db-4158-a1b0-08f02d397f3a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ecf0d242-1589-4129-b4fb-f838a2bfde35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac7a7dd-6634-473c-8764-3ee692a43ae4",
        "cursor": {
          "ref": "85eb196e-169c-432a-8797-e6e4a03d07c5",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d4d25791-51a6-4198-8786-50bfa1e7ab39"
        },
        "item": {
          "id": "1ac7a7dd-6634-473c-8764-3ee692a43ae4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6d94194f-a368-4165-ba12-acf4ef5c5b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aacbac9-8da6-4ca0-bb0a-9b5aac18db4b",
        "cursor": {
          "ref": "5286742e-1cca-4c28-9cf5-3247ac24e008",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e72f7264-6208-49b3-b482-a6768e9a83a4"
        },
        "item": {
          "id": "2aacbac9-8da6-4ca0-bb0a-9b5aac18db4b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5d9214df-990b-4ab6-bbf1-1136befc59eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7958dc-5ae7-4829-a15c-50d5ab24c034",
        "cursor": {
          "ref": "d51c10e6-2e92-47b6-a506-6c0d65f9248c",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a3be650f-9b63-428b-8d3b-b7169859118c"
        },
        "item": {
          "id": "2e7958dc-5ae7-4829-a15c-50d5ab24c034",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6bef7a49-1aae-4fc4-abe8-dd29678b4c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dda87f-2421-4974-b231-3e3f9d86baa1",
        "cursor": {
          "ref": "ec151b2c-8899-472f-b99c-fef877a886d5",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "03f9295e-c256-4d94-a2af-ddb63a855de3"
        },
        "item": {
          "id": "20dda87f-2421-4974-b231-3e3f9d86baa1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3014beda-5498-47c4-80d1-da51fe296889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b3fe7d-5d14-4b1d-a2a4-bf31a275a5ec",
        "cursor": {
          "ref": "84e44a8f-9bd3-4406-81e8-6b587a0fc24f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5776fc12-08f1-4304-b3db-5bc9695aac05"
        },
        "item": {
          "id": "92b3fe7d-5d14-4b1d-a2a4-bf31a275a5ec",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a83ce17b-76cd-474e-a5ea-5f8eca00c993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ed9f08-df3d-42b3-adaa-d546e00f3b36",
        "cursor": {
          "ref": "cf854768-99df-4156-a7be-b965fe16f720",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b4009df2-3176-440b-8453-c6b1096f79e8"
        },
        "item": {
          "id": "54ed9f08-df3d-42b3-adaa-d546e00f3b36",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f97d0e97-a677-4c6f-96a2-c375efba471c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c21003-e359-4fd2-ad44-a8b1887b19bf",
        "cursor": {
          "ref": "04127e16-e63b-48a2-8bc6-7e570c2c3121",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fe24fbf9-e095-43fb-897c-96e1c3a6921b"
        },
        "item": {
          "id": "c6c21003-e359-4fd2-ad44-a8b1887b19bf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4c9fe9af-2cb3-45b7-9c38-8c39498b862b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92231c5d-7e1e-4b4e-b323-507cf9ae4487",
        "cursor": {
          "ref": "798c8a36-35c7-4f62-ae3c-07ed5ded2c03",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "01f1ccfe-b78d-4803-bb45-6590772c4f7b"
        },
        "item": {
          "id": "92231c5d-7e1e-4b4e-b323-507cf9ae4487",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ce7906b3-4201-4e11-ae93-a632e78289ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78d7036-68f1-4b73-a983-bbe270e94698",
        "cursor": {
          "ref": "62ec8572-8ce3-4b51-9b3e-6e84768ad398",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "92098520-cbf2-48df-b10f-9d424f9ca3d9"
        },
        "item": {
          "id": "b78d7036-68f1-4b73-a983-bbe270e94698",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f8366da3-f10e-47d2-8058-8bcd1b2e26d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbce282-2fa8-4f49-b505-baad1063e655",
        "cursor": {
          "ref": "02c8f6c6-8b6f-4a5e-9e67-af7f030c9d97",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b133f331-9f49-4b2a-9165-ff795ee00037"
        },
        "item": {
          "id": "8dbce282-2fa8-4f49-b505-baad1063e655",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1ee49757-05d2-4b61-a0d2-78eb0e483a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d26c668-82dc-4c2c-8d50-e1575fa2fe0d",
        "cursor": {
          "ref": "aef68210-9a8f-4968-bec5-7becff3ab9ba",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "55c652e9-69bf-4ef1-ac3e-933537795c5a"
        },
        "item": {
          "id": "2d26c668-82dc-4c2c-8d50-e1575fa2fe0d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cd8d436c-852f-4ab9-90ea-33987b0e3f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf5b237-99dd-493d-be2e-6c58b6019aae",
        "cursor": {
          "ref": "ed6a5092-75be-446e-b20e-e4208436b237",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cc355d46-207f-4140-8a9f-d4d11cfb3e68"
        },
        "item": {
          "id": "cdf5b237-99dd-493d-be2e-6c58b6019aae",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0ddc49e9-60a4-460e-8cb1-b77151e669f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c98fbe-5cfb-49b6-977f-8e8e70a3c2e1",
        "cursor": {
          "ref": "c341e1be-3f26-4eb9-bbab-a193dd636d54",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2dd6ca8b-6eee-442f-9091-726e669f5064"
        },
        "item": {
          "id": "13c98fbe-5cfb-49b6-977f-8e8e70a3c2e1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9deba997-d446-4c7e-a9d2-8b4f3afe5a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb54dd3b-3a18-4078-97a5-58871eadec79",
        "cursor": {
          "ref": "df5dafdd-c56e-45c7-b341-901ec25bde78",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "065299c6-ca22-4c88-8768-5a7d9f46c13c"
        },
        "item": {
          "id": "cb54dd3b-3a18-4078-97a5-58871eadec79",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6e06af23-b988-4592-b948-26e24f41771c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d4fe3a-9c8f-44ab-9365-32e4ba7dbaf1",
        "cursor": {
          "ref": "a346a93f-56e2-417d-a03a-05d684dbde55",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "89b0a3f2-3208-4e2e-96c4-87a765d980dc"
        },
        "item": {
          "id": "33d4fe3a-9c8f-44ab-9365-32e4ba7dbaf1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "36b39ae1-41a6-4492-9d51-27892a3dc09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "322ec8df-151d-4e57-825d-0f8b95303e7d",
        "cursor": {
          "ref": "6b3dfabd-f5b0-42de-9530-4132966f136b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c12ab28c-db8c-4ab4-9ca5-516701a86040"
        },
        "item": {
          "id": "322ec8df-151d-4e57-825d-0f8b95303e7d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7b6bde5c-0278-4523-9092-74782c95c931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "9b2f3e9e-8a3b-4017-becf-35a4745ca1c1",
        "cursor": {
          "ref": "7384e859-5753-4b06-87da-132f8ef3021e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a9268896-5c27-4fd1-a701-151aee2a9211"
        },
        "item": {
          "id": "9b2f3e9e-8a3b-4017-becf-35a4745ca1c1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "64e4e128-4f33-431d-b579-7194eb1cd865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6e227039-114f-4c38-b0cc-23d47d91eebc",
        "cursor": {
          "ref": "401028f8-ca72-4fe9-b6e0-f27b0388a291",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3c9aa2c6-3332-47a0-9a4c-0ca4ec396ef8"
        },
        "item": {
          "id": "6e227039-114f-4c38-b0cc-23d47d91eebc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1f02c40b-2dad-414e-8dfd-67f3d1460df4",
          "status": "Created",
          "code": 201,
          "responseTime": 4654,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cef10e-3d02-47b5-a51e-61138f5b9e13",
        "cursor": {
          "ref": "89737548-237a-4e48-a1d4-06b3b38e23da",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d4531c68-c1dd-401d-94bf-e4b2f6fd309a"
        },
        "item": {
          "id": "b7cef10e-3d02-47b5-a51e-61138f5b9e13",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "02050bd4-9cec-4c55-9ad5-64ec013ab97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3365266a-06e3-4e80-ad9a-7aabc806c1ae",
        "cursor": {
          "ref": "6f48b495-3057-48b5-b819-9659f84773ef",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4c283fd8-8d8e-42e0-a690-e3d72749262d"
        },
        "item": {
          "id": "3365266a-06e3-4e80-ad9a-7aabc806c1ae",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3f8b6028-3cf5-4671-b9a1-afd6c146c313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "fe672dd4-a248-49e7-b792-9fe5e6846c03",
        "cursor": {
          "ref": "4ff99606-d858-41dd-bdae-8b07814f715e",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b5d07ae1-acd3-44e7-9913-11f04a06e7f0"
        },
        "item": {
          "id": "fe672dd4-a248-49e7-b792-9fe5e6846c03",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ba06f4a9-dad0-473c-a295-4205f76ee554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf48cd72-316b-46e2-9fbd-5a31a9c3e789",
        "cursor": {
          "ref": "7ffc7443-81f7-41fc-912a-aeb89f09a557",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "436f9160-6a35-43e7-8e8c-5df2da454b8a"
        },
        "item": {
          "id": "bf48cd72-316b-46e2-9fbd-5a31a9c3e789",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3c182693-5544-47e1-9c18-948f5d096c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c057ba02-141a-4398-a4b3-8bdf1f89f30b",
        "cursor": {
          "ref": "e1ddf67d-45f4-4dfe-bc75-a8cb5d44a62d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e2f6ca4b-3736-4912-9c15-5a963f625a79"
        },
        "item": {
          "id": "c057ba02-141a-4398-a4b3-8bdf1f89f30b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "19f04704-d858-4436-b9a5-dcdc4f6abfc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba52eb8-7c0d-4a73-b823-b43c823333cc",
        "cursor": {
          "ref": "ee1fa1b5-b448-468e-a8ba-6bd36ade1946",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "24d7955f-9947-461f-b250-6b6bd10a2423"
        },
        "item": {
          "id": "3ba52eb8-7c0d-4a73-b823-b43c823333cc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "398d72f7-146e-4684-9eec-d5cc08c484e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba47d99-b4b6-48e1-bf6a-d06820fdd1da",
        "cursor": {
          "ref": "239e6981-5b2e-4e14-80b0-0502b4e42448",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "56c4b09f-ce3e-4ed0-ba02-adf28ea3a1ef"
        },
        "item": {
          "id": "8ba47d99-b4b6-48e1-bf6a-d06820fdd1da",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2050605d-85b0-4044-bbff-352d26ef0dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2536ac03-3062-455c-87c3-70661f898144",
        "cursor": {
          "ref": "d296c922-6dd5-4b77-bbc4-82dad64fd333",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c40000a9-3694-4740-8c72-b8ca25cd3f52"
        },
        "item": {
          "id": "2536ac03-3062-455c-87c3-70661f898144",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bdefa06f-4acb-4fdf-9e2f-ec43f026f4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972091a3-1686-4497-b629-7977e6ef80c6",
        "cursor": {
          "ref": "473b8328-adc4-4b14-893d-27be49597da8",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "97fcdb0d-cee4-4767-8ed5-ddf4bbd3e3de"
        },
        "item": {
          "id": "972091a3-1686-4497-b629-7977e6ef80c6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6f0288c1-0cbe-4812-a7f5-a42e23b7a9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924b4b8a-07a2-4e6f-b130-b35fe788b3ee",
        "cursor": {
          "ref": "2394a3da-a0dd-443e-a638-a942cc473f97",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "779ac612-6b0e-4874-b145-d7aa8f9ba1cf"
        },
        "item": {
          "id": "924b4b8a-07a2-4e6f-b130-b35fe788b3ee",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8b5906d9-c3df-4451-bcd0-bfba01b49b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7c2561-a55e-4032-96e8-013e7c606d6a",
        "cursor": {
          "ref": "69b91f52-d719-42e5-97f3-ce803f6b73c5",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "726db7ff-4263-4978-8423-2157abd82482"
        },
        "item": {
          "id": "3b7c2561-a55e-4032-96e8-013e7c606d6a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ef87d15e-d783-4807-abe2-72cda63ff59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b732241e-9c98-4011-8da9-e990617955cd",
        "cursor": {
          "ref": "79e66782-50a8-4902-a1cc-48ebc865b8ac",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f9b94e04-5d04-4904-b085-727599aadc08"
        },
        "item": {
          "id": "b732241e-9c98-4011-8da9-e990617955cd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5c55e725-efdc-4f4a-931a-288c834f73a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf85104-de4c-4bd4-812b-48d0d29c6faf",
        "cursor": {
          "ref": "104f02c3-7b5e-438d-95e8-3c31cc0c158f",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "afa52c06-68c1-4438-8af0-d60b5190e27d"
        },
        "item": {
          "id": "2cf85104-de4c-4bd4-812b-48d0d29c6faf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2d13938f-3b50-4803-953b-d64c9c00610b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ef0caf-c7b6-4967-b6fb-508fd59aabf4",
        "cursor": {
          "ref": "d8f80ea0-a26e-4c67-af2d-b689c10b1650",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cc699ead-0c1b-46d7-b0a3-e043bfb81681"
        },
        "item": {
          "id": "f4ef0caf-c7b6-4967-b6fb-508fd59aabf4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ba1bbdbf-a622-432c-b21c-02f8b91837db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64758fe7-b704-4bfa-b4da-c70e6788b441",
        "cursor": {
          "ref": "af7819c9-a0ba-4390-a117-99052a885567",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5439134e-a5ee-4b10-8850-c9d78ae1e5bb"
        },
        "item": {
          "id": "64758fe7-b704-4bfa-b4da-c70e6788b441",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2c645077-36b8-476a-a87a-1c0f11bbecee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df0bf41-4bb9-44fd-a994-f7e232143215",
        "cursor": {
          "ref": "24039a8f-558f-48fd-8e2b-029c25a2cc64",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d7e938cb-a0b4-4e30-adb3-43f8cd886295"
        },
        "item": {
          "id": "4df0bf41-4bb9-44fd-a994-f7e232143215",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2bc80ad7-916c-46c6-894e-011ff2f3ebe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9325a08-f459-4721-8bfc-de4f8f49c1c0",
        "cursor": {
          "ref": "ccf81728-12ed-487e-9eeb-24ae4eb39981",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "08ed977b-fabc-407f-98e1-95c9a3feca00"
        },
        "item": {
          "id": "e9325a08-f459-4721-8bfc-de4f8f49c1c0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "84ecb0d4-a36f-46b5-8ae2-6e33660e7e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103cb680-8e96-47ae-9ded-bb9954637089",
        "cursor": {
          "ref": "d0e01c0a-996d-4ead-b2a2-fbe4d02a3d2a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0df67801-af07-44c9-8575-cbf079d879b9"
        },
        "item": {
          "id": "103cb680-8e96-47ae-9ded-bb9954637089",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c172f2fb-230d-422e-901e-eba8f361a0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a7b212-b0d6-4497-843b-2abcd0fae236",
        "cursor": {
          "ref": "85b34fc0-f9e2-4b98-9fb9-2290a16f2a18",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5434452c-de6c-4fe6-8732-f44a6ffe3891"
        },
        "item": {
          "id": "16a7b212-b0d6-4497-843b-2abcd0fae236",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "61afa2e2-f295-4c3c-b5ce-5e6e4db819a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c44a96a-4949-4a5e-8974-e2347a2ecd69",
        "cursor": {
          "ref": "d3920345-ebb5-48cd-bc6c-8b142cf0cb61",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6350a7fb-b06d-4895-b937-aeacf7aae784"
        },
        "item": {
          "id": "8c44a96a-4949-4a5e-8974-e2347a2ecd69",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f77b3d41-b70f-4933-8342-cb8e97c4c6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e66f07f-15cc-460d-afbf-8d8c678a3beb",
        "cursor": {
          "ref": "3a594609-fcb8-4e60-87ce-e4ec1b2fa1dd",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1b49ba01-b431-404b-9d19-f95c82d33bc0"
        },
        "item": {
          "id": "9e66f07f-15cc-460d-afbf-8d8c678a3beb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ef6f936d-f45a-456c-917a-09cf026e7919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d06616-cf75-4067-a983-65bb9039bc45",
        "cursor": {
          "ref": "abb4462c-645b-4075-8f9f-d4a090618600",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "98e073a7-31b3-41f3-96fe-1f3501e4a8e7"
        },
        "item": {
          "id": "89d06616-cf75-4067-a983-65bb9039bc45",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cd6a38cf-1735-4b71-925c-badca9170108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478d4259-791f-49c2-8b3c-da019fc18c4e",
        "cursor": {
          "ref": "e2864577-3ce6-4d68-ac45-02b1479be70c",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "68be1535-3d10-4bc8-9b59-258f755fcbe0"
        },
        "item": {
          "id": "478d4259-791f-49c2-8b3c-da019fc18c4e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8694a418-b9dc-4db6-9841-76b6eff26f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16af7412-afae-4631-ab29-4493c58c7898",
        "cursor": {
          "ref": "442e9039-fade-45db-824d-68158a5eef0f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "47aa537d-72b0-479e-9cfa-685c3d303310"
        },
        "item": {
          "id": "16af7412-afae-4631-ab29-4493c58c7898",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6287bac1-b57d-4cb4-bf02-569e08d31c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7ffbc3-d18b-4dca-a1bc-c59d908055b7",
        "cursor": {
          "ref": "8424ee9c-2e06-4c7b-ad0f-8c5f3b0f36e6",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1392bbcd-c88e-4f49-bcd4-bbef87cea2bc"
        },
        "item": {
          "id": "5c7ffbc3-d18b-4dca-a1bc-c59d908055b7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ad52f58a-a5fc-4eb5-ba4f-d597b520e80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f4176c-65e8-4f9a-b800-6d1f6e2a7981",
        "cursor": {
          "ref": "26d6f156-619f-4856-94d3-e8f87b5c5388",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9bc9dbd3-65a9-4af5-9c5f-8c66d91587c3"
        },
        "item": {
          "id": "35f4176c-65e8-4f9a-b800-6d1f6e2a7981",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d11077a8-2d3b-458b-a147-87ced7c30669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7767c3c-5f68-4d03-baae-4d11d1abac0b",
        "cursor": {
          "ref": "35256f9e-0c51-4870-bcb4-c590d9524d3b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3d8124e2-b088-4b6e-8c7b-f0d9d57b1ce7"
        },
        "item": {
          "id": "c7767c3c-5f68-4d03-baae-4d11d1abac0b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a809f274-1456-4592-8685-2fb0e064652f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137b7ec7-7b99-400e-a643-8336f7c3e3c4",
        "cursor": {
          "ref": "7716afc5-7e8a-4d4f-bd01-3e602eb63aa7",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "89ea78b8-b96a-48de-9997-e249ef837a06"
        },
        "item": {
          "id": "137b7ec7-7b99-400e-a643-8336f7c3e3c4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a6015bba-0a70-43d5-a996-a4c11e687fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afc1bc7-3e8e-4b49-abc6-cd84943b62ea",
        "cursor": {
          "ref": "8910a1af-f7f0-447c-9e12-668009e24271",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "269ab48a-1443-45b1-aa04-b9ee86122b22"
        },
        "item": {
          "id": "8afc1bc7-3e8e-4b49-abc6-cd84943b62ea",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bc36c1f6-479b-4857-b64d-32d485f05757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573d5848-e8eb-4d08-870b-02a370c0229c",
        "cursor": {
          "ref": "d1100ba3-9485-4a80-96b3-66bce5ebb669",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e50d11b5-87ba-4d46-b55d-1b9342d12816"
        },
        "item": {
          "id": "573d5848-e8eb-4d08-870b-02a370c0229c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "547f7c41-8bc5-483e-9240-28a2769511e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7b2952-5015-48c9-adf4-9761bd0f0cae",
        "cursor": {
          "ref": "69c6a40e-b814-41ef-b140-5d7001c87826",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1a0c698f-6b40-4dc6-ad92-db6ce087587c"
        },
        "item": {
          "id": "fe7b2952-5015-48c9-adf4-9761bd0f0cae",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "06bbdb8d-7f36-40ad-92ca-02ae2c697139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86a9a2b-56e8-4e52-a521-b93a61d9f918",
        "cursor": {
          "ref": "fbf9012d-bf1f-48a2-b145-a005651805fa",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5492a678-ede5-41c5-9637-867f14cb8db8"
        },
        "item": {
          "id": "e86a9a2b-56e8-4e52-a521-b93a61d9f918",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "86390890-ebd7-4711-b470-847b3aed2598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ed5d5d-8f1a-421e-9bee-4a47b6e7289f",
        "cursor": {
          "ref": "cb82c109-ca61-4e5e-a2a6-8aec9be7434c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "219eaa9a-5023-4a72-b1b8-1eb5e92a2bde"
        },
        "item": {
          "id": "b2ed5d5d-8f1a-421e-9bee-4a47b6e7289f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a05ad60a-e641-410c-a97c-119fd068d924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c92417-c734-4ec5-a23c-f37aa69a3b8a",
        "cursor": {
          "ref": "f19f6c28-34cc-4375-a2ec-ec39de4a1be3",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "60dec3cd-21f7-4d59-befa-aec3d3772e28"
        },
        "item": {
          "id": "e5c92417-c734-4ec5-a23c-f37aa69a3b8a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fc6266ff-2cde-455e-a4c4-9e6abe0e462a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d69a27-43f0-48b9-8a65-81e5d5e52962",
        "cursor": {
          "ref": "dfb52c52-d02c-4741-aa47-a8129f1758ef",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "93b614b4-7f7d-4b9c-a606-720f8e929141"
        },
        "item": {
          "id": "87d69a27-43f0-48b9-8a65-81e5d5e52962",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "055d5968-a063-438c-98c1-d1ac8e0ec95d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2713ed5e-0f16-4cbd-aed4-779f56ff5982",
        "cursor": {
          "ref": "ae869bf9-002a-4800-81f3-ebfc684c233d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2b6a7949-3858-41d8-87cc-aa3295543029"
        },
        "item": {
          "id": "2713ed5e-0f16-4cbd-aed4-779f56ff5982",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "690b39f4-5118-49d7-a876-b6b55e234783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75800ff-52e8-40ac-88cd-f68d8ec1b4cb",
        "cursor": {
          "ref": "c7bba7ac-a96f-4393-a563-b36d7d62bb19",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4d360104-5160-4faa-8f17-84b29c103e8c"
        },
        "item": {
          "id": "d75800ff-52e8-40ac-88cd-f68d8ec1b4cb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7369585f-40bc-44c9-8181-671e8fa537af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ef1c39-cd69-4cf6-89a5-94b0fb41db72",
        "cursor": {
          "ref": "1974d043-0029-4307-b4d3-b8f7537a80c4",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b98bbfbc-9e7e-40f6-8fc0-5ab8b4739149"
        },
        "item": {
          "id": "56ef1c39-cd69-4cf6-89a5-94b0fb41db72",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "513b9e73-7856-4b7c-a3da-babb3a44e0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a517f0d9-99a1-4f2e-81bd-ea1e2b35fd5a",
        "cursor": {
          "ref": "e8cbfb61-710d-4851-b5d8-c909f5f7844f",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dff35060-8d1b-4686-859f-91754450a08d"
        },
        "item": {
          "id": "a517f0d9-99a1-4f2e-81bd-ea1e2b35fd5a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5ba11883-271a-4f83-8e57-4920082ba549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95544c99-627d-413f-885b-367f8f99fe73",
        "cursor": {
          "ref": "9d283dc6-b23b-4fb8-85a0-18d940dde112",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c59f063d-86ab-4a4c-83fb-4c5b32a68308"
        },
        "item": {
          "id": "95544c99-627d-413f-885b-367f8f99fe73",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "20e384f9-aecd-4e15-b3b3-fe22474147fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5e7cff-24aa-464b-a2e2-1a435b9595a9",
        "cursor": {
          "ref": "a8ec5711-1eba-4520-80e0-0eec7ab6e89e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e5899393-01e5-4ae1-938c-f163174b84a6"
        },
        "item": {
          "id": "fd5e7cff-24aa-464b-a2e2-1a435b9595a9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3dcbbd96-e4ec-4bfa-9e3c-9ef5f058def2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc91f0a7-ccac-46ce-9f70-fbb253c35af3",
        "cursor": {
          "ref": "84b280fc-c4a3-4c2b-bad3-cbef7bb06008",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "74bf91dd-25d6-4870-8383-f9972e5c5886"
        },
        "item": {
          "id": "cc91f0a7-ccac-46ce-9f70-fbb253c35af3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "68b04c2f-a706-4088-a586-f8324d6392ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8c7209-52e8-4bad-84c0-4ac35415af31",
        "cursor": {
          "ref": "d7071607-5cfd-4457-a2a5-3d4cb6f3c60e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d583330c-52b9-4e9a-aeb7-51bffacb61cc"
        },
        "item": {
          "id": "de8c7209-52e8-4bad-84c0-4ac35415af31",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f96b9ee6-970f-4592-98eb-e0397d57c546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bebd95-09db-4e67-abf5-4b4cf593bc6a",
        "cursor": {
          "ref": "e91b27e6-d077-41dc-9830-c1ed1c869c14",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3279b706-63b9-48ca-8123-814aa78cc587"
        },
        "item": {
          "id": "b5bebd95-09db-4e67-abf5-4b4cf593bc6a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7c0da51e-d708-4000-b5a5-c05ece89423d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dff5d3-7d84-4741-95a0-676922de9fa1",
        "cursor": {
          "ref": "14e77b10-5c6b-4a4c-9877-c6ee60347e48",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "40d3fb59-3156-4f78-afc8-0e6200f847c1"
        },
        "item": {
          "id": "a5dff5d3-7d84-4741-95a0-676922de9fa1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8852756c-69e2-4aef-b5bf-4f94ccd7b85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af5ac5c-e878-4aa7-81d7-0d767256d350",
        "cursor": {
          "ref": "13bdb73e-47b4-4472-9563-248ae2985b13",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c86e9202-79fb-4dee-bc4e-cfdbca04d303"
        },
        "item": {
          "id": "5af5ac5c-e878-4aa7-81d7-0d767256d350",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "21fb2ed9-b787-42f2-8b5d-aa33b79ff6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b3dd6b-a675-4a22-9607-fc98a2585999",
        "cursor": {
          "ref": "a466cf4f-20c1-4988-ad5a-5d02c7fef20b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a4050be7-54c6-4e21-8ff9-913e5219890a"
        },
        "item": {
          "id": "d1b3dd6b-a675-4a22-9607-fc98a2585999",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "708f667d-37fb-45e6-8d49-8be33ad6ac26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19efbbc8-a50b-442b-b0df-7f09815563fa",
        "cursor": {
          "ref": "084b9ac7-26de-48df-a812-f8f32fdca5b2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3359415f-0f7f-48c1-b8b3-71b8646d1f2c"
        },
        "item": {
          "id": "19efbbc8-a50b-442b-b0df-7f09815563fa",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b2381e08-c11b-483d-a4f1-4206f20d8824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ba3a72-a8da-4d9f-b1fe-524df0764199",
        "cursor": {
          "ref": "319fb29c-78d0-4b87-9b96-a97aa44a7fc0",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4bcfdcc0-dbb3-4685-aba5-a0c0bf16c882"
        },
        "item": {
          "id": "b8ba3a72-a8da-4d9f-b1fe-524df0764199",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a71ccb10-328d-432f-85c2-e7879d462550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc50ba7-b9b2-4b52-8404-433d4be727d6",
        "cursor": {
          "ref": "af1f969b-60d9-4432-a53a-21fafd3ef1dc",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "946e0758-f289-4117-a20a-9ce28e40efe9"
        },
        "item": {
          "id": "cdc50ba7-b9b2-4b52-8404-433d4be727d6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "089dd218-9a08-4098-b29e-362f114bc2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94490de9-3fad-45ac-bfba-bfdfee61e0b4",
        "cursor": {
          "ref": "930a4e76-b6a5-4dc3-b150-8c7bea88a037",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0d7d1e69-c568-4588-84c1-752a9c09132e"
        },
        "item": {
          "id": "94490de9-3fad-45ac-bfba-bfdfee61e0b4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "627e07b2-0c37-48db-b95c-39a2b75056a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914f226e-801f-43e2-a256-52e538b1ad1c",
        "cursor": {
          "ref": "9e1152ca-28f6-425e-bf73-0fe7a0a1921f",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5ac15e82-88ce-4038-a289-9bc5f4e8dc5c"
        },
        "item": {
          "id": "914f226e-801f-43e2-a256-52e538b1ad1c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d9c830c0-bb44-4d5c-aa5d-69d1a541660c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df31d4a-4edd-4706-b0e0-5f57f1a77f1d",
        "cursor": {
          "ref": "aec0a75f-1d72-4915-bae2-b56a2b7fe8b2",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3a0dc81b-f1ba-4c7d-a956-1be271f8cde7"
        },
        "item": {
          "id": "6df31d4a-4edd-4706-b0e0-5f57f1a77f1d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b1a909d6-6896-4629-80e1-b9e7bb7af05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff9db0d-8606-45de-8df5-6716a84ead97",
        "cursor": {
          "ref": "5c040f70-a5e3-4857-8ad7-efaad6da8128",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d8eb3a41-660f-4e95-9008-2c5b1a65b851"
        },
        "item": {
          "id": "9ff9db0d-8606-45de-8df5-6716a84ead97",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "240e934f-65dc-47e8-ac55-ffd88747e907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d55066-34dc-457f-9558-fdba53e59591",
        "cursor": {
          "ref": "a620a848-34b4-4fb6-8288-b5c185ae86a9",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4e5e039f-c5e7-48d7-982b-cddec4f41581"
        },
        "item": {
          "id": "e7d55066-34dc-457f-9558-fdba53e59591",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "db073cdf-b32f-4bbb-a9f2-4170b13786dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ef7428-de12-4422-acaf-41c1061c1288",
        "cursor": {
          "ref": "093a6480-7420-4ae5-80a8-849d6c99306b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b7a4537c-4322-471d-8f2e-3d87b0b483df"
        },
        "item": {
          "id": "c5ef7428-de12-4422-acaf-41c1061c1288",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "11fbe23f-bf96-4f44-95bb-67aa9fc3e41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711a0998-7a48-44c3-8f97-f6d464ffd0e6",
        "cursor": {
          "ref": "e90d4e75-ee74-4632-8af3-2aae06aa509c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "24a4fec8-b71c-4f0d-89dd-ee5f85590075"
        },
        "item": {
          "id": "711a0998-7a48-44c3-8f97-f6d464ffd0e6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ba28b644-9b66-47d9-9828-fb0b9e5b9a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd87705e-045c-45ca-aaa8-85c17f00210c",
        "cursor": {
          "ref": "07e2b5b3-6cf2-47d2-b2ec-6fdb0e605431",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dbad6929-fdb0-4eba-83c0-19e239d1a0ce"
        },
        "item": {
          "id": "fd87705e-045c-45ca-aaa8-85c17f00210c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "98c7767b-dd14-4953-b80a-a6a2abeb0d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ec23d7-1607-4ea7-ad30-67c95cb6ce59",
        "cursor": {
          "ref": "bcfeac65-4238-4bb1-80ec-97b7498408c8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "576b02b5-f42a-4822-a651-3ad79eb982d2"
        },
        "item": {
          "id": "84ec23d7-1607-4ea7-ad30-67c95cb6ce59",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "16bf7470-861a-4ba8-96d3-4ceac1bab815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5bd722-c6f0-44e6-9dd7-6c3ecb3b28f8",
        "cursor": {
          "ref": "aece1c1d-ff71-4d40-aa93-7abdf5fd39f2",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4fb9ad48-2b11-40e9-90f8-21075086b8f0"
        },
        "item": {
          "id": "cd5bd722-c6f0-44e6-9dd7-6c3ecb3b28f8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cd102fd1-998d-4f83-865f-8560f039b7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e58337a-9763-4f7c-917f-dd64ff8a6b44",
        "cursor": {
          "ref": "ed19768a-7bb1-4ed5-b33a-2d3bbc444cbd",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6b24d303-55ab-4a60-819b-fadd4211aba0"
        },
        "item": {
          "id": "0e58337a-9763-4f7c-917f-dd64ff8a6b44",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "60c7929d-1103-4680-8e6c-52a9720e4f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96011858-f2dd-4ad4-bfc5-7c7df5c7de9c",
        "cursor": {
          "ref": "09f20743-2c8d-4c5e-b7e9-eb5905648ce4",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d6da2135-7e72-4f69-b136-19dacee95092"
        },
        "item": {
          "id": "96011858-f2dd-4ad4-bfc5-7c7df5c7de9c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "df1f176d-6799-4b38-9d18-b39cbaa861a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7929b1-259b-4d0d-b8f8-2faa2a4f03a5",
        "cursor": {
          "ref": "f9cea9b4-39e5-46a7-b3bc-3f6e32ec8670",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ede92ebe-16aa-420a-b24e-b9a6ad45c22a"
        },
        "item": {
          "id": "0e7929b1-259b-4d0d-b8f8-2faa2a4f03a5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0e2f0ae3-105a-4fdd-bcff-9caeebde7e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2cf3c6-e63e-4e44-8456-4c87c10ff423",
        "cursor": {
          "ref": "1df943c1-a3aa-456b-b0d3-8420e6da92d8",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "93428856-d962-4927-9694-989cb7eb7998"
        },
        "item": {
          "id": "bf2cf3c6-e63e-4e44-8456-4c87c10ff423",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9d112526-4216-4f30-9798-35b7636237cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccb75d4-6c0c-41cf-b551-c7303a6afa8f",
        "cursor": {
          "ref": "8a1ff1c3-e75b-4725-a499-4f6a73f3173e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a0f06faf-bc7d-497e-96b5-17698b4141d7"
        },
        "item": {
          "id": "4ccb75d4-6c0c-41cf-b551-c7303a6afa8f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "31aebd92-6cca-410a-a77d-4eb04846021a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf16c02-30a9-4ae1-8c90-2985f811103c",
        "cursor": {
          "ref": "1d51a68c-24a4-44ae-a0c7-00a67dbe7041",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4d3d614b-414a-4450-b227-048b96fbb07e"
        },
        "item": {
          "id": "bdf16c02-30a9-4ae1-8c90-2985f811103c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f2f3c20a-1104-482f-9a46-dac9c33edadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1a707e-6e87-450e-a1f4-c85845c58636",
        "cursor": {
          "ref": "70571b6f-ca00-49ab-9f2c-a569443d8654",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e3292259-ed13-4f3c-9dbf-1d34e5df5c8c"
        },
        "item": {
          "id": "ba1a707e-6e87-450e-a1f4-c85845c58636",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "96677bb2-a522-4821-a862-eb447f3bf012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2109157-edc9-46e1-ac73-6ebd3ecbb7f2",
        "cursor": {
          "ref": "bb2e7145-1d3d-4ddd-ba6f-d8f4c29257cf",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7c82dd9d-d3bf-41d5-9e6c-637615b31061"
        },
        "item": {
          "id": "a2109157-edc9-46e1-ac73-6ebd3ecbb7f2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ad7eee69-df2f-45ae-8fc4-7a38e1a4a525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cb7771-3603-4df8-a0e9-a4242ab2c6c6",
        "cursor": {
          "ref": "5ec6b399-f1ba-49c5-94f9-6f524672d0ee",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "00745ab3-827c-4e3b-8f28-511d10d56f2c"
        },
        "item": {
          "id": "18cb7771-3603-4df8-a0e9-a4242ab2c6c6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d07fbf38-92f1-4a03-9612-e0c515406bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fe86a5-e09a-424e-8fe6-9ca710058567",
        "cursor": {
          "ref": "70e876e0-095e-4991-9fd4-80b948494c77",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0358d63b-7793-4209-b734-332d42235633"
        },
        "item": {
          "id": "c0fe86a5-e09a-424e-8fe6-9ca710058567",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2cb0b48e-25ec-47ab-933c-6dc34876e4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65dd398-ddbd-43a9-b5ed-0b09576a3bc9",
        "cursor": {
          "ref": "2dabb99c-0d23-4e93-a177-fb5026668222",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8dd2e337-9bae-4e9b-8544-024df7237662"
        },
        "item": {
          "id": "b65dd398-ddbd-43a9-b5ed-0b09576a3bc9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b56a5c2a-57de-47cc-94b5-3df8af009173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe47d42-381d-4d59-bbb5-d8644194b5ae",
        "cursor": {
          "ref": "20c5169f-b54d-4d3d-97ee-42e06d9d7155",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9fb5bb25-ea78-421e-bf81-d11e28c4a889"
        },
        "item": {
          "id": "bbe47d42-381d-4d59-bbb5-d8644194b5ae",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d427e26a-e8d4-4a6d-9a1d-e2f745e957f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7497aed4-65bc-406a-b0e8-9cbc858dd329",
        "cursor": {
          "ref": "3eb7793c-c2f4-41b8-95aa-df0974394c19",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3a4b75c4-5c21-4f44-afe2-fc69b62eacf6"
        },
        "item": {
          "id": "7497aed4-65bc-406a-b0e8-9cbc858dd329",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "087b509e-66dd-435b-b1cf-6f6c13fb365a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae299c80-22f6-442b-ae5a-7268d2a62b43",
        "cursor": {
          "ref": "3dd4bc2c-1d2c-4151-8d2c-a9eab5b7ad3b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c2370169-0c38-4954-8a6b-983993f1d58b"
        },
        "item": {
          "id": "ae299c80-22f6-442b-ae5a-7268d2a62b43",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4f10ce0d-721e-4166-b4a5-b65783d7916d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e841de5-c9c7-4356-90cb-ea106c929c42",
        "cursor": {
          "ref": "e8c503d4-ad9e-40f5-93c4-9336b7d30178",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "64b63dba-a657-4384-b8fd-8aab41767ab0"
        },
        "item": {
          "id": "7e841de5-c9c7-4356-90cb-ea106c929c42",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "93ce38aa-5552-4105-8aff-974a7304ebc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ec5c3e-cbe9-4808-80c1-13c9dac219d5",
        "cursor": {
          "ref": "aa2595f5-ac8f-43f8-bdc4-954ca326765d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ba0e8e02-2d5b-4c35-b4fb-ae2a7b7ad7be"
        },
        "item": {
          "id": "05ec5c3e-cbe9-4808-80c1-13c9dac219d5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "25d4d767-9056-4b08-a8b1-9622ce16d332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2148bf-03b0-439f-b286-b6d4dcd27f22",
        "cursor": {
          "ref": "5dadc05f-b882-4457-9f62-b02fe47fc044",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8aba55f7-4c2b-4e12-8091-c90f587e74a9"
        },
        "item": {
          "id": "ac2148bf-03b0-439f-b286-b6d4dcd27f22",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9ae6303c-6b9b-44cf-b9b1-6ae6438fb1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37a7b87-8b62-4366-97e0-b12ae08e7d45",
        "cursor": {
          "ref": "88eed663-8b51-474d-a453-276377c21c36",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c00a7b8f-0012-408f-b3f0-ca68543ae510"
        },
        "item": {
          "id": "a37a7b87-8b62-4366-97e0-b12ae08e7d45",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9a0ea320-4c8e-40a4-a0bf-fa36cf54f2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04564a1f-74f1-4d9e-8ba1-b0f93ad426af",
        "cursor": {
          "ref": "23eeeebd-4a65-4283-8ba0-5a225662e915",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "63de03b9-9e5c-4d2b-ac5b-e923a1c9710a"
        },
        "item": {
          "id": "04564a1f-74f1-4d9e-8ba1-b0f93ad426af",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "49f7c536-9cb4-4691-8d49-214d7a2e81bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4dbdc8-bc04-42f7-96fa-d0813c714fe1",
        "cursor": {
          "ref": "1e4815fd-3272-45d1-bdbd-2465fa3dba6d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a9577d27-e30d-47e0-9977-0a456cb7d459"
        },
        "item": {
          "id": "4c4dbdc8-bc04-42f7-96fa-d0813c714fe1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "42fbcd2a-7b48-4969-bc7b-26852379c69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4470f1fe-ba89-4deb-ba38-c111dd8411f5",
        "cursor": {
          "ref": "587fa73b-bffc-4f34-ab0e-67eab6d2ce72",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d8507a82-4a7c-497d-9744-ad634e071e84"
        },
        "item": {
          "id": "4470f1fe-ba89-4deb-ba38-c111dd8411f5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a5dd712b-4fcd-47fb-a7ac-96e81df687bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5a6e51-1db1-4973-a0c3-ae91eb2e10a2",
        "cursor": {
          "ref": "52dd9e57-cc30-4f90-8203-d8140b937a03",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d3a29438-d9ad-46b9-9eac-33f378e2bc74"
        },
        "item": {
          "id": "6f5a6e51-1db1-4973-a0c3-ae91eb2e10a2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a16bc6a5-7494-43e3-b988-71b4162750e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73403eb6-458a-41d4-b994-ec1159f6c57b",
        "cursor": {
          "ref": "c57ce957-b7b7-4eeb-9b76-59993769b1e5",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c72579dc-e250-488c-8d85-7d46bbd2e822"
        },
        "item": {
          "id": "73403eb6-458a-41d4-b994-ec1159f6c57b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "85054609-943b-420a-8d36-969e9d60ea16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4739928c-ed71-4e11-b8fd-d348ca5aae50",
        "cursor": {
          "ref": "9d567218-1ec9-4277-80ca-0ea6a179bb7d",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "64a36786-c08c-4dd7-b12e-d2cd114be654"
        },
        "item": {
          "id": "4739928c-ed71-4e11-b8fd-d348ca5aae50",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dd6c25d2-d07e-4324-b6da-c7012447bc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789cb7ca-fd06-425b-82f3-54b2df6d718a",
        "cursor": {
          "ref": "7a21183d-9044-4d3d-8f5e-38ab2c5644ba",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e2488f21-b704-48e8-a4d6-1d6703590104"
        },
        "item": {
          "id": "789cb7ca-fd06-425b-82f3-54b2df6d718a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "07abcf73-ec42-4ddd-8d43-8752983c6caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c84453-5f5b-4d89-88ac-50428b83073b",
        "cursor": {
          "ref": "de887655-9214-4815-b09b-6addc78e48bd",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "481fc176-68aa-40dd-86a5-7b8b3653d894"
        },
        "item": {
          "id": "d1c84453-5f5b-4d89-88ac-50428b83073b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d1f822c4-6681-427e-b2ae-a9169fbde87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0058dd-17c7-4f23-a710-5d4e70b7d0fa",
        "cursor": {
          "ref": "0d80f4b4-dad2-44aa-9559-0959e5e58d2b",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "85a9ce43-4723-45c6-8f4e-55294dfc5a5a"
        },
        "item": {
          "id": "3a0058dd-17c7-4f23-a710-5d4e70b7d0fa",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "34b9d3e5-9522-49e1-aef1-f3a664c110ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d246286-6b17-4d9d-82f1-187d79acb167",
        "cursor": {
          "ref": "547aed0b-f8c5-4d87-af39-278a13de3371",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "eb966485-4038-433d-a7f8-51f8d3b3ee4d"
        },
        "item": {
          "id": "5d246286-6b17-4d9d-82f1-187d79acb167",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d84253a5-bfdd-409c-9e82-1de0781f0b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073cc905-321a-4512-a654-a9747bda0d76",
        "cursor": {
          "ref": "72a3a679-75f8-438c-b657-bc954670307d",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ffe75547-57b9-410f-96d6-e01e22cf574e"
        },
        "item": {
          "id": "073cc905-321a-4512-a654-a9747bda0d76",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "80bf11ec-e6e6-4264-844d-634d05fb6422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be069eb6-cfb8-4c80-9c6e-85b61f3bd447",
        "cursor": {
          "ref": "c1178dd3-935e-4b71-997d-0645109c43c2",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d69a8b02-f30b-4a77-a356-ced1b9b991b6"
        },
        "item": {
          "id": "be069eb6-cfb8-4c80-9c6e-85b61f3bd447",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2abbd42c-5c16-4fd0-af1e-df5639523eab",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "cda4ad72-a0ed-45f0-9d0c-299ea87a54b3",
        "cursor": {
          "ref": "25829f58-2ad8-40e8-a650-076727cd3ae5",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d3c47741-c8c6-4421-ad82-c231df637d38"
        },
        "item": {
          "id": "cda4ad72-a0ed-45f0-9d0c-299ea87a54b3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9c83ae8e-560e-4bda-98e7-2da144745e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78431cc1-9609-40c0-a496-16ed9edd259b",
        "cursor": {
          "ref": "b55c6887-5a85-4699-ae7c-10153b270459",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7edb2f69-d1c1-49cc-bc40-7476d47970ff"
        },
        "item": {
          "id": "78431cc1-9609-40c0-a496-16ed9edd259b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2f8b0506-6e32-47fe-b393-ba5b3e8b8496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff61b230-9112-4463-b709-0a4da70e8566",
        "cursor": {
          "ref": "2dbcbb3a-c1db-45ad-a0eb-a34ffc50c6cf",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f520a8bf-ad59-456c-9c8a-74d3ee1f4e99"
        },
        "item": {
          "id": "ff61b230-9112-4463-b709-0a4da70e8566",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5776afa3-02c3-445a-8486-9c5f0dca9920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a0fbb2-c4d5-4aac-98a5-fb118fb301ad",
        "cursor": {
          "ref": "9b2bc577-9ba4-47ad-b633-330d026391c4",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0612bff2-2a98-4120-87ef-84b5239de1c8"
        },
        "item": {
          "id": "39a0fbb2-c4d5-4aac-98a5-fb118fb301ad",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ea3ac2f1-dade-42f2-833c-ecd920b33369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e7528d-1c8c-448b-9f27-d1ee22467800",
        "cursor": {
          "ref": "af304f21-31f9-4c05-be6f-74467b1b1d82",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bad3a035-bf8a-4892-b757-de17105b3c6d"
        },
        "item": {
          "id": "70e7528d-1c8c-448b-9f27-d1ee22467800",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "456d1bd2-4802-4dcd-ab7d-1d9b9bf91670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711c30b7-bf78-448e-9452-7d0864d771ba",
        "cursor": {
          "ref": "49295a48-7054-4654-a00d-b3ed6ceac9a9",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5ae74dd3-d7ad-4873-80ff-5d61dfb1c2b3"
        },
        "item": {
          "id": "711c30b7-bf78-448e-9452-7d0864d771ba",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "865ac4df-4c34-4e98-90d5-5b8bdaa77e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b85f6f-67c2-40f7-88e7-638eb331ca06",
        "cursor": {
          "ref": "76d8d690-6e02-47c2-aa24-0ff8e509b120",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "83d0528b-4816-497f-b2d5-fda087eb29eb"
        },
        "item": {
          "id": "27b85f6f-67c2-40f7-88e7-638eb331ca06",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "beebae5f-402c-48ad-bc0b-80b18807a18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79d7b80-c4d4-4579-8f3a-abf4a956b181",
        "cursor": {
          "ref": "47e6255f-3432-4f24-89e9-f763fb9d1ece",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cf6668d5-de26-4301-94b3-f4d0bf45aab1"
        },
        "item": {
          "id": "d79d7b80-c4d4-4579-8f3a-abf4a956b181",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "acd7b99e-f2ce-40c1-af85-9035ad078ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baacc67-f5a9-4abf-990a-7b6cf21a4822",
        "cursor": {
          "ref": "58b78dd9-e68e-43a2-bf22-4d29bf863b70",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3079d435-c117-4d00-bb03-48469ac571a9"
        },
        "item": {
          "id": "8baacc67-f5a9-4abf-990a-7b6cf21a4822",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b45e092c-b423-4ee9-a098-315f5c8c2956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b63246-b7dc-4c0e-8208-481edc0663e9",
        "cursor": {
          "ref": "32558172-09b7-4dde-88c3-57baba311a79",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "181f486b-1054-4123-8ac3-373655a97a9b"
        },
        "item": {
          "id": "55b63246-b7dc-4c0e-8208-481edc0663e9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ead8849c-368e-4d86-852e-cebf7738a847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b0b5e2-155b-40d1-b237-b5bf7a524ae0",
        "cursor": {
          "ref": "08da0744-6cdd-4e99-aee1-21159b8f9241",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c9fa6ef8-3b18-4bf6-8a75-55353d6982fe"
        },
        "item": {
          "id": "16b0b5e2-155b-40d1-b237-b5bf7a524ae0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e2b1db63-dca0-4854-8caf-ff6edd5c2b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202d5242-c45a-4086-81ff-f063d8382464",
        "cursor": {
          "ref": "54e30d8d-09c3-4bc8-b1db-ad2052d12731",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0e88a05f-75ae-454a-a89f-afc92276c7ea"
        },
        "item": {
          "id": "202d5242-c45a-4086-81ff-f063d8382464",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "980ea2a5-658d-4fe9-9730-39a8a414f562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b35ebb6-c360-4bd5-b0e0-15e8cc4eab68",
        "cursor": {
          "ref": "bc42ce01-89d9-4662-bc0c-97dfa733e0aa",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9e1f4f17-25e1-430d-b996-b26f1c11010e"
        },
        "item": {
          "id": "5b35ebb6-c360-4bd5-b0e0-15e8cc4eab68",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d5d4ab0d-4057-4940-b49d-d83e42ba32b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d23ae8-ab3c-46e0-abf5-20ce975dd8da",
        "cursor": {
          "ref": "dbc9da5f-000c-4f0d-a04c-b7110e4cacb8",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9d7bfcb1-459a-4842-ab5a-d3aa88b0585a"
        },
        "item": {
          "id": "82d23ae8-ab3c-46e0-abf5-20ce975dd8da",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6389c20d-dad3-4610-a50c-31904cadda6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f386a3-aa2d-4ce0-9c7d-b33523155626",
        "cursor": {
          "ref": "59c67ad0-692e-4f6c-bb7f-a3e23a75e5a1",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8c580f72-6978-489e-acaf-ec4c502691ed"
        },
        "item": {
          "id": "10f386a3-aa2d-4ce0-9c7d-b33523155626",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "58e36758-cdfc-45c1-8267-b2fae42c7213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dbf704-f0ae-4ca3-81f7-e8d2b6695bc9",
        "cursor": {
          "ref": "7f50456e-3fbe-4c10-897e-9602cdaf657f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1fa2645a-6654-477f-8c99-097e2a48a228"
        },
        "item": {
          "id": "a4dbf704-f0ae-4ca3-81f7-e8d2b6695bc9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "42bbed99-a373-40fd-8d34-1bb02a4c151d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16df1ada-53af-43ea-a537-dcbfa7364f75",
        "cursor": {
          "ref": "d044b59b-2033-4917-aa16-762ce83f2c5c",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f6d01e13-4f4e-461e-84dc-b6e49d1e3057"
        },
        "item": {
          "id": "16df1ada-53af-43ea-a537-dcbfa7364f75",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a663b811-cd0c-444e-9442-4c51454787e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a49e84-7f0e-41ed-8b6d-7e68dab3b015",
        "cursor": {
          "ref": "5f470e34-d5d5-486b-acd5-438e7d0c45e3",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "51a5f225-c34f-4e00-bfff-84a177dea752"
        },
        "item": {
          "id": "31a49e84-7f0e-41ed-8b6d-7e68dab3b015",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f2a89eea-de10-4f79-97bb-0ef6590dc7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2198da98-de8e-40ba-aaba-2ad8f1963103",
        "cursor": {
          "ref": "d840fea2-649f-4d7e-9cde-9f7a7c1eda12",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "60d9ab8e-e915-441d-a73c-3ce2c641ec14"
        },
        "item": {
          "id": "2198da98-de8e-40ba-aaba-2ad8f1963103",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e97fc681-b36c-4269-928f-8406d5b72eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b392671d-d6c8-4473-8bee-0cab964e43fa",
        "cursor": {
          "ref": "0e205e95-46b1-4e8e-886e-d1385c306a84",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3b2b1e3e-f010-4fa2-8a68-d088836780ae"
        },
        "item": {
          "id": "b392671d-d6c8-4473-8bee-0cab964e43fa",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d04d2be7-ff77-444d-9d1b-fc8fb263fc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c0fdc9-5e4b-400f-9181-d8de6b14a507",
        "cursor": {
          "ref": "1a35e9a0-e1ff-4c8e-8d14-1a2e1e4e7a9d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "60f0fb6f-2575-4c00-8aa0-6d1eccd57373"
        },
        "item": {
          "id": "14c0fdc9-5e4b-400f-9181-d8de6b14a507",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "938b68a1-4d6d-4660-a2a6-4697aaed55ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f61c17-e354-4888-ae5a-343de1c05dbf",
        "cursor": {
          "ref": "cc19c97e-df79-46ff-9150-88a7d2a9a678",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "080c72bf-00a5-429c-8109-3865e2fb5d60"
        },
        "item": {
          "id": "d4f61c17-e354-4888-ae5a-343de1c05dbf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "06d6ed86-5b98-4fba-9bb7-4eda0b2f8d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8467f920-9289-42c1-9c9a-2e074645f9c1",
        "cursor": {
          "ref": "3fa1d849-cc34-471b-8663-cf1676d4e02c",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "318649f2-8cc4-42a5-8fb1-27b0fa6320d4"
        },
        "item": {
          "id": "8467f920-9289-42c1-9c9a-2e074645f9c1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0686ed56-61a6-4be4-8a8e-5ea0ab055acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54610cd7-36b3-4215-a4c8-a44d2b0de54b",
        "cursor": {
          "ref": "650997ca-3269-4885-96ee-e5ff07ef72ca",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "19be89b0-d3b6-45cc-b79a-5a4d00340f08"
        },
        "item": {
          "id": "54610cd7-36b3-4215-a4c8-a44d2b0de54b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2a89128e-0c9a-4020-b0b0-8f4193324cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52844332-12d0-4ac3-8b74-f59872ac064e",
        "cursor": {
          "ref": "91650a9a-a447-40d8-8334-bf4ee2f19b88",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "21c2d6e7-a62a-487e-99fc-11c379be414e"
        },
        "item": {
          "id": "52844332-12d0-4ac3-8b74-f59872ac064e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "52f79e7c-6984-4923-bbb8-7549ab12ba90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e59e9b-a6bf-4c01-9ecf-ce4a4796ec91",
        "cursor": {
          "ref": "6bb8f712-4095-4773-8c27-ba076f6ea923",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "df37e085-eae5-4fa2-b1f3-c0eaa65d43e2"
        },
        "item": {
          "id": "e4e59e9b-a6bf-4c01-9ecf-ce4a4796ec91",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7fc68804-4651-4498-b8fa-8c364c9829b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72546804-9abe-4a65-8e0f-6a510b52f7f0",
        "cursor": {
          "ref": "7fa27036-d395-42cb-a0c2-e3763d7ec165",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "54f49eeb-88f7-4f64-8082-78845ebb5438"
        },
        "item": {
          "id": "72546804-9abe-4a65-8e0f-6a510b52f7f0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c98c6440-a50b-44e7-8219-37a9e26e6126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58595154-56fb-4e08-b4ab-239b3221e12e",
        "cursor": {
          "ref": "b1b5b971-5a40-4c08-bdf4-026262f8ad8e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f7dbfb2d-9e85-481c-8931-9cc127e6a19b"
        },
        "item": {
          "id": "58595154-56fb-4e08-b4ab-239b3221e12e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "89adf88d-0757-4702-a1c2-a349c8bd4bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56869f48-251a-4c30-991e-f213be1cce15",
        "cursor": {
          "ref": "f9e71588-ab88-432e-a883-d2e703f1c042",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f5ebcc06-18a7-4eb5-a8bf-3924831477c8"
        },
        "item": {
          "id": "56869f48-251a-4c30-991e-f213be1cce15",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d11b9c01-faad-4b04-aea1-fb5d2b4d3272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10384373-acc3-4f26-bc84-21738429c7e9",
        "cursor": {
          "ref": "d4046191-19e2-48b6-a3c4-1df031106b43",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1d8568f8-e8c8-4331-9237-ecf0c2bc758f"
        },
        "item": {
          "id": "10384373-acc3-4f26-bc84-21738429c7e9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "46e84631-6235-45b0-81eb-555999267d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aef223a-ef91-4823-b491-c111125d4224",
        "cursor": {
          "ref": "0205d8d7-d563-4ada-82e9-5738c5fa8087",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2a667356-d5ab-4e95-bb08-848b6c390d03"
        },
        "item": {
          "id": "5aef223a-ef91-4823-b491-c111125d4224",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9191ee67-3d75-42fe-beb0-0a06c06b97b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8f113f-5ec3-4998-a3c6-ffaf3383fd3a",
        "cursor": {
          "ref": "e78bd70f-b80e-4f4a-ac29-036f7773011e",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7a82359f-4475-47f0-a1c4-94bae7de8c9f"
        },
        "item": {
          "id": "2e8f113f-5ec3-4998-a3c6-ffaf3383fd3a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3d8b6b14-1080-4f80-ad1a-109f0e2cf065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6a8efe-ebf6-4b21-b512-00801f5a5970",
        "cursor": {
          "ref": "48a2d185-e391-4afb-b78a-790d4cc52ba9",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "65326ef0-f207-47a6-908b-52cb60766406"
        },
        "item": {
          "id": "cc6a8efe-ebf6-4b21-b512-00801f5a5970",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e732712d-57cf-4fb1-b763-ad7267e2c371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de2997e-c7a5-4b5b-a4ff-c78b1d9812d0",
        "cursor": {
          "ref": "d4bca949-bec6-4d43-962d-80b29e82ac68",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "18f9c2b0-6703-44c4-9cb3-d1ae9ecc7bc3"
        },
        "item": {
          "id": "9de2997e-c7a5-4b5b-a4ff-c78b1d9812d0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "41776e1b-dd8f-4da0-8f09-2b178e683a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e72630-d900-446b-866d-0aa83ca4a5e6",
        "cursor": {
          "ref": "3e93bd04-e89b-40a8-93cd-ece54671d8a8",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c6b6fa3b-ff90-4ab2-bba3-10c5fbc5cd9f"
        },
        "item": {
          "id": "b8e72630-d900-446b-866d-0aa83ca4a5e6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9cbe5456-28b1-494d-a0c2-d8e248d19810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0565284d-8ebb-4c9b-a9d9-21bb7243b09e",
        "cursor": {
          "ref": "2ff10b71-53b6-4374-a9c7-2bd8cd717b44",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1bd65ec2-8052-4518-81df-0e1229db6787"
        },
        "item": {
          "id": "0565284d-8ebb-4c9b-a9d9-21bb7243b09e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9f4ccbe8-1af9-4965-a563-0711ad92e0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff8172f-c60f-4599-aa26-15a614c88cd8",
        "cursor": {
          "ref": "73f44aa5-e0de-4b82-9e4d-a5e6e398b5ec",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c6be54e1-ea5a-42bc-84a8-fec75805e735"
        },
        "item": {
          "id": "0ff8172f-c60f-4599-aa26-15a614c88cd8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6b1e2bf8-8294-485e-9d0c-90efc8747eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c476098f-9fe0-42ef-ac8e-f984d5257dcd",
        "cursor": {
          "ref": "3ed06078-f3a1-408f-89a9-55e33d79cf4a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "336a9131-bab5-46da-ac21-3e738b172e23"
        },
        "item": {
          "id": "c476098f-9fe0-42ef-ac8e-f984d5257dcd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c03ba649-d5fe-4bde-a554-964f6f114afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9feeb97-9d8a-42b5-b834-7b9b4c5dd479",
        "cursor": {
          "ref": "cd6d5080-c8d9-4eb6-bcd8-8e13e73a7adb",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "74ef0a51-bd30-4aa1-88b4-b04ff0746042"
        },
        "item": {
          "id": "d9feeb97-9d8a-42b5-b834-7b9b4c5dd479",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8e45fd92-ef24-4be4-b744-d35c550b5cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59ec4cc-d6e8-46f3-b12d-4ab2451f5280",
        "cursor": {
          "ref": "cc29485a-7ad6-4258-92ee-9d25426d2ace",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a6dbb769-8270-4a72-a103-7d26202d0f09"
        },
        "item": {
          "id": "c59ec4cc-d6e8-46f3-b12d-4ab2451f5280",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "30add2ba-349b-4ed0-9805-c9831e382669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efae354-a50e-4b4a-86ec-f9e1d2eee8ed",
        "cursor": {
          "ref": "55cc3d3f-0cb1-4724-9e42-1343c8a51323",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "36c66e46-20b3-4eaa-8df4-4f424856cd57"
        },
        "item": {
          "id": "6efae354-a50e-4b4a-86ec-f9e1d2eee8ed",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "acebb5e5-61e4-43a0-864d-e09084e8ef7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2b9ffe-31f7-4119-9236-4475f75b650b",
        "cursor": {
          "ref": "de23b7e5-08c9-4327-9a45-9932469e72d5",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1042bc35-ffd7-4cf6-951b-5dccb3b6db06"
        },
        "item": {
          "id": "1d2b9ffe-31f7-4119-9236-4475f75b650b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5f72384d-a39b-49b3-8de1-aa4e889713c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0729139-97d8-4448-819d-0444f4799028",
        "cursor": {
          "ref": "91adc5bc-507d-4729-856f-52dc573e40a4",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a8daa31d-ac1e-410f-92e6-8b1a14fd94f8"
        },
        "item": {
          "id": "f0729139-97d8-4448-819d-0444f4799028",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6abb932f-784a-4960-8f99-de32ddf6bfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a84bb18-2f41-4fb8-894b-178c19c5f1af",
        "cursor": {
          "ref": "eaee3501-fd3c-433c-965d-b2186b584e35",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bf03d6aa-b49e-4ce4-96d9-fe2c3c1a6384"
        },
        "item": {
          "id": "8a84bb18-2f41-4fb8-894b-178c19c5f1af",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "73bef203-da41-4e7e-9c4f-cbb588cb2530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efec1ce-0c90-4a5d-a8b4-1ee1e4cdea2a",
        "cursor": {
          "ref": "75e2a0dd-b8ac-45e4-9f5a-ed11e4e203e1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f5e16617-1360-4eed-8b90-9700696bd4f4"
        },
        "item": {
          "id": "0efec1ce-0c90-4a5d-a8b4-1ee1e4cdea2a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "63835321-1fd9-4fe3-adfe-f132315a8ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e11207-20bd-4b3c-8445-459831da26e6",
        "cursor": {
          "ref": "9f2e58ee-cba1-462b-8124-5e63e98dbce0",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5ccaf40e-598c-4238-ba32-280d40852156"
        },
        "item": {
          "id": "68e11207-20bd-4b3c-8445-459831da26e6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "32ba526a-45dc-43ac-937a-a7033896a672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bb670e-8880-464a-ace3-75c7cd2961a0",
        "cursor": {
          "ref": "df39c222-88cf-4ee8-8f88-333389475374",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3142d3fc-a5e2-4aed-9cd9-cdebd71a5ac0"
        },
        "item": {
          "id": "46bb670e-8880-464a-ace3-75c7cd2961a0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c70f3a90-8c05-4d66-b51b-bb188ab78168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bd74bd-bf55-4194-8019-11171a63633c",
        "cursor": {
          "ref": "ca5d9100-b56b-4497-930e-0f973bfe623e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "191b72c0-0c4d-4959-8143-d6d75c9acdb7"
        },
        "item": {
          "id": "25bd74bd-bf55-4194-8019-11171a63633c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d386d10b-7621-466b-b0e3-508b01deb869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2d9be4-7853-48ae-815b-3afac1df041c",
        "cursor": {
          "ref": "e5e74174-60d6-47c0-976e-057c7dab0595",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9533b6b8-d14a-4b08-9a4f-2064f780b471"
        },
        "item": {
          "id": "8d2d9be4-7853-48ae-815b-3afac1df041c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cdf532af-9d7a-4877-883b-b1ddd4d1b265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dfe340-eeed-439a-89db-5fd1c4d2f3ec",
        "cursor": {
          "ref": "cc2febc4-82b8-4d0b-b5b8-844c14a1bb3f",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5c019b5d-e7ce-4e6b-909a-91a74588ed13"
        },
        "item": {
          "id": "70dfe340-eeed-439a-89db-5fd1c4d2f3ec",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "695bc1b5-c447-40d8-a0bf-eedcc4274571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e60474-e28f-4309-9217-6e97f12b2828",
        "cursor": {
          "ref": "dd5bff4b-d007-4fc5-91fe-f03c52e89352",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "50cad101-6533-4cf8-811f-07d50296a20c"
        },
        "item": {
          "id": "67e60474-e28f-4309-9217-6e97f12b2828",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "244ff641-2839-4b7a-a7d4-a8f2281cba62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788daa1a-205c-41e0-abb6-c7210b82bc3d",
        "cursor": {
          "ref": "d377a51d-665e-4b03-b0c7-edd2f74c3ad7",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "046c3945-fe69-4e9d-972a-ec03fc8a352c"
        },
        "item": {
          "id": "788daa1a-205c-41e0-abb6-c7210b82bc3d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5777b458-b0bd-4df4-a3fb-7f914ca7cb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d14d29d-70e3-47d2-a899-5f39af1b1846",
        "cursor": {
          "ref": "2115d2ff-ac2e-4dbd-83c1-36dd717aa913",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "35567837-fc86-4396-8d37-df492436d5c0"
        },
        "item": {
          "id": "4d14d29d-70e3-47d2-a899-5f39af1b1846",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d802aa8f-32ec-4874-ba2d-5adc0a03df51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee3a115-bba5-407a-857d-9243b1006997",
        "cursor": {
          "ref": "f2389c77-da0c-4078-ad4d-4338b3323dea",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2170e25d-8c5f-44df-a21d-8b7073b02fe6"
        },
        "item": {
          "id": "eee3a115-bba5-407a-857d-9243b1006997",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dd9c6ac1-5b2d-4e99-84c4-9225ea22970e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f1059c-b492-4ab7-a20c-f2b1792426b3",
        "cursor": {
          "ref": "dbadf1de-b447-47f3-8142-585c0f69b7d2",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "45e30e78-d98a-4b8f-b6e8-9d53768ec493"
        },
        "item": {
          "id": "21f1059c-b492-4ab7-a20c-f2b1792426b3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5c2e3521-2ff5-4f32-9cd0-271d14b86ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36237316-e9a1-49e9-9870-8b5717fe5f82",
        "cursor": {
          "ref": "e9ef7b49-e5c5-4c84-b4da-186b6ba6567e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1ec91e96-f94a-48c3-a886-8be4f9d18ea2"
        },
        "item": {
          "id": "36237316-e9a1-49e9-9870-8b5717fe5f82",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f6839797-4288-4d9e-80d2-7c10696eb2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd69eb38-2289-49d7-b88b-930d67e23608",
        "cursor": {
          "ref": "e70864ed-e862-4dcf-aeca-54b7a10122c2",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d3c0caea-39fb-4e6f-bda8-48c24ba36943"
        },
        "item": {
          "id": "dd69eb38-2289-49d7-b88b-930d67e23608",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5b5d0abf-f549-48f4-801c-be1d91774e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d08dc30-b6ad-419b-8db7-10aeaea8adaa",
        "cursor": {
          "ref": "ed6c06f7-bb15-40d3-b346-17dd2f37eb97",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f45660f1-ac08-4304-af9d-446fe195bdeb"
        },
        "item": {
          "id": "4d08dc30-b6ad-419b-8db7-10aeaea8adaa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "634b3c32-6b7b-4ad8-9482-6e0df332c274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ff252b-c625-44b2-925f-9694ac6f7845",
        "cursor": {
          "ref": "0f9442b4-058f-4aeb-a12d-e9c5287c9620",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d37e10a0-236f-400d-b4f3-303a5a47b16f"
        },
        "item": {
          "id": "09ff252b-c625-44b2-925f-9694ac6f7845",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "79a3e456-9d9d-46e4-8350-7c72b548cf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b749c0-2b99-4ba2-b9e9-898734788883",
        "cursor": {
          "ref": "6e22e488-262a-4b6c-bbaf-51c7ae82b0bf",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d07a5b5a-ea29-43ee-bbbd-6a50aff490a9"
        },
        "item": {
          "id": "72b749c0-2b99-4ba2-b9e9-898734788883",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b8896a41-6ef2-452d-ab78-dbc5194b1c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5280a2-7f72-42ae-9ea4-a72382f90479",
        "cursor": {
          "ref": "8d3b28ba-02f2-461e-b6e3-926bf2b46d67",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8fa430f2-8c88-4324-b273-d02d1aea1b79"
        },
        "item": {
          "id": "cf5280a2-7f72-42ae-9ea4-a72382f90479",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "50d9c535-1fef-4a7a-bca4-37c105d2a789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8546031f-c197-4b8f-aa60-3ea382009c28",
        "cursor": {
          "ref": "be9bebee-22ca-48dc-8d45-3564f61687b5",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "96cf4604-6137-4e35-b485-ecf3455387cb"
        },
        "item": {
          "id": "8546031f-c197-4b8f-aa60-3ea382009c28",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a45d0f5c-da99-4138-baa5-37512e5bc369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb24cea3-a41e-4c8f-bbad-5146b8a780c4",
        "cursor": {
          "ref": "60e0de97-b775-4b84-86a0-027ae09066ee",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7d632a94-aef0-4ad5-9846-589e93e92799"
        },
        "item": {
          "id": "fb24cea3-a41e-4c8f-bbad-5146b8a780c4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "35af54df-f2e8-4c6e-b806-4934c75ca0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f958218-e400-4c0c-aad4-2cbc2295db39",
        "cursor": {
          "ref": "556f43fe-427e-470f-b48d-e7a4fee1a919",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c31d1b5f-da5e-4bd8-be4f-80c080ae457c"
        },
        "item": {
          "id": "2f958218-e400-4c0c-aad4-2cbc2295db39",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7d53e5bc-cb85-41f7-8a90-45b03a7ece93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88f8e6d-fc6b-4662-a05b-8223f4104d57",
        "cursor": {
          "ref": "6ab1450b-ceee-4878-a35d-279b534a03b1",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7d9acd16-893e-47be-8b7b-ffbb95f64a04"
        },
        "item": {
          "id": "e88f8e6d-fc6b-4662-a05b-8223f4104d57",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "26bb9c5d-bf2d-41f5-9a8d-28b5d946ae76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd1a42f-a330-4aff-b04f-c61c5e27ec3c",
        "cursor": {
          "ref": "9f1c68bb-e773-491c-9ad0-503f8ff83d45",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "50e9c9ec-b8d0-45da-b598-085d8130ad36"
        },
        "item": {
          "id": "4fd1a42f-a330-4aff-b04f-c61c5e27ec3c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "aade2ecf-b16c-485c-8cbc-573aad45d666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d028c3-d97f-47ad-a43b-c39c5148527e",
        "cursor": {
          "ref": "d2ed8da6-25d5-4fa0-babe-c5e297780fb5",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c921efa1-9493-43ad-a0aa-e017ef36726d"
        },
        "item": {
          "id": "45d028c3-d97f-47ad-a43b-c39c5148527e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2f4579cc-fe25-4148-85eb-179939d3f589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41858a8d-1c4f-4b32-a5c3-5813b8c88f41",
        "cursor": {
          "ref": "346eee82-047b-4b95-bc65-3cbd340ef430",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "cf0b56da-8b82-4894-ac2e-45cd68c4e47d"
        },
        "item": {
          "id": "41858a8d-1c4f-4b32-a5c3-5813b8c88f41",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5573dc62-47e1-416f-a4fd-fa15a5117464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c054f9-330d-44c7-a311-03a3af1f4892",
        "cursor": {
          "ref": "63ec6303-61dd-49ac-be39-a37ef6c80916",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "cd55c708-7056-4d93-b161-2786a4acabcc"
        },
        "item": {
          "id": "44c054f9-330d-44c7-a311-03a3af1f4892",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d102e660-e5ec-43f1-a471-ba777c25467f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7371bb-efa9-42ed-b696-8bb2b780006c",
        "cursor": {
          "ref": "ddd1a4c4-34a6-4e7f-b0d5-fc7e9f35d27d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "40138a53-52e7-4294-8983-13dc58f2beb1"
        },
        "item": {
          "id": "2e7371bb-efa9-42ed-b696-8bb2b780006c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "68769e4b-b9d0-4976-b032-c310d1662806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c828c3-e729-47d0-8a92-21db6d832d72",
        "cursor": {
          "ref": "ded5d375-666d-4599-af9a-77ccdde77e5a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ca4e0251-4a57-459e-aa3e-509881ae404d"
        },
        "item": {
          "id": "87c828c3-e729-47d0-8a92-21db6d832d72",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "aa04cd81-7014-4af7-aec7-5ce94fe540b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd083f2-ca1f-4102-beba-2afb8e71266a",
        "cursor": {
          "ref": "375c8579-6821-4dce-9b50-bac08331c7ab",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c50b05ff-b4b0-4404-9b99-9ab13111984c"
        },
        "item": {
          "id": "efd083f2-ca1f-4102-beba-2afb8e71266a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8a4c114a-89b4-4221-b2a8-8bf4c0ad708d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8052f32a-3786-47cd-99a9-a59a8f25bd1b",
        "cursor": {
          "ref": "8593ec9c-e421-45b3-8f85-a6bf876a279f",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bd872aab-30d2-4968-95f5-23813b4dcd33"
        },
        "item": {
          "id": "8052f32a-3786-47cd-99a9-a59a8f25bd1b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e07866c0-7bca-482c-bcef-3684fc5fa87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96de312f-855b-46c7-a307-6ab64c5b5343",
        "cursor": {
          "ref": "9695623d-3140-46d5-b48d-ba5d190cea1b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "eac31af2-faf1-499f-aae3-714e8c225c45"
        },
        "item": {
          "id": "96de312f-855b-46c7-a307-6ab64c5b5343",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "910f2da0-0165-4a9a-b1f1-3009433ec2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9841c7-ab0d-48db-8bd6-39ea668b56f9",
        "cursor": {
          "ref": "9644df55-2a02-42e4-9531-984639fc5405",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1a208e41-d8fc-48a5-bf5a-e68d48824f83"
        },
        "item": {
          "id": "4d9841c7-ab0d-48db-8bd6-39ea668b56f9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ba8d6219-ab74-405d-9e53-99280042bdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b3abe2-7fa3-47a8-a1a7-50ea9ada6603",
        "cursor": {
          "ref": "0d9bbfd9-8046-4570-a72a-35985cbc38ce",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "79c51300-0b4d-44b3-8aef-6ff305a1bbb0"
        },
        "item": {
          "id": "80b3abe2-7fa3-47a8-a1a7-50ea9ada6603",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "24a3d2f2-b672-4d0d-93e8-28de24762528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbeb9cb2-791d-48ab-a719-11cc15f60a3f",
        "cursor": {
          "ref": "0f323c96-d1f0-4cdb-bb2e-b73e414e3aa7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e53499eb-8f6d-4678-b1ed-96265f592bcf"
        },
        "item": {
          "id": "dbeb9cb2-791d-48ab-a719-11cc15f60a3f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "238af9cb-d9e0-4e31-84d7-077b9ece92ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c179a7-29f0-43de-9098-69a9ff92fc53",
        "cursor": {
          "ref": "6f0928c2-84de-4c2c-bbaf-1d15280de6c8",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a2d0f1e4-3c8f-4cac-8517-364e8f919caf"
        },
        "item": {
          "id": "03c179a7-29f0-43de-9098-69a9ff92fc53",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ee5e2e99-2157-4a98-b6ab-c265222d7bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35beade0-3986-4137-9d3d-60161983eeef",
        "cursor": {
          "ref": "aa27ee5f-282c-4eb8-9c79-9c6c28260c53",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "358096d3-4b5a-4b56-bc07-fa5a2f295ca7"
        },
        "item": {
          "id": "35beade0-3986-4137-9d3d-60161983eeef",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1d6c5b1b-74f1-4c56-9ff1-2eed62f997f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6ae0ee-ccaf-47fc-8897-371056ce7cc2",
        "cursor": {
          "ref": "81b2d23c-d13e-44bf-ab80-1a42e2048962",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d9873834-8f7c-4431-9ce5-4bcdcc03179b"
        },
        "item": {
          "id": "da6ae0ee-ccaf-47fc-8897-371056ce7cc2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "91e769ec-818b-4661-b25d-87402ec1b5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6867d1-f802-427e-8b10-b25bb85a4c24",
        "cursor": {
          "ref": "12a63ee7-4db6-4032-9d3d-5f9f50d0a811",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cabbdad4-60d6-4ef7-bbf5-6e444a72433b"
        },
        "item": {
          "id": "4c6867d1-f802-427e-8b10-b25bb85a4c24",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f73018f5-2d72-4c13-88c1-8957b1a19272",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c307f4-1628-4a37-b17c-935eccf215da",
        "cursor": {
          "ref": "f939b327-d668-419c-b236-5275634117f5",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6f7e5f7b-e055-423d-b7f9-b464c738a512"
        },
        "item": {
          "id": "94c307f4-1628-4a37-b17c-935eccf215da",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cb7f8ddc-fc60-4f2e-a339-d330bfa5d989",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8120b30-048f-4903-bca6-f418a96db939",
        "cursor": {
          "ref": "22e8a249-2a12-4de4-9e51-25397a0811ff",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0fa4f133-af99-4211-92c3-9cc99717e7e3"
        },
        "item": {
          "id": "e8120b30-048f-4903-bca6-f418a96db939",
          "name": "credentials_verify"
        },
        "response": {
          "id": "042123a7-084e-4510-abb8-62b07e738c13",
          "status": "OK",
          "code": 200,
          "responseTime": 3684,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1079f61b-637d-42c5-86ce-055d98f0a36f",
        "cursor": {
          "ref": "e20dff5a-1b2e-42f6-8ffb-403b3cd3d576",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1f492d8e-4059-4300-910b-7804b69e1059"
        },
        "item": {
          "id": "1079f61b-637d-42c5-86ce-055d98f0a36f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f55688f7-2dbe-4565-a26a-0057e8ade9fc",
          "status": "OK",
          "code": 200,
          "responseTime": 3058,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d9b5b0-fc1e-450e-ba4c-40e383ce7d55",
        "cursor": {
          "ref": "4ddb71ed-23c4-49d8-b623-71a535476985",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ff5a7a14-f591-48b2-b40f-6911dc7572b6"
        },
        "item": {
          "id": "00d9b5b0-fc1e-450e-ba4c-40e383ce7d55",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "83047259-9c02-4094-ac33-265e4bc63e1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d9b5b0-fc1e-450e-ba4c-40e383ce7d55",
        "cursor": {
          "ref": "4ddb71ed-23c4-49d8-b623-71a535476985",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ff5a7a14-f591-48b2-b40f-6911dc7572b6"
        },
        "item": {
          "id": "00d9b5b0-fc1e-450e-ba4c-40e383ce7d55",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "83047259-9c02-4094-ac33-265e4bc63e1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b886ba6-d429-4c17-9fc0-edb1ddd738cb",
        "cursor": {
          "ref": "deea15f4-efdf-4041-bef9-b903facc5fa1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "06160b86-8fa4-4af5-8940-88c0e0645549"
        },
        "item": {
          "id": "8b886ba6-d429-4c17-9fc0-edb1ddd738cb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e777efd1-cf5d-4034-a043-9e7b3b3bf7c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701a4166-7b42-4b83-ad1f-6d9a01fb4e49",
        "cursor": {
          "ref": "e760b4e9-5768-493d-be61-bffe25e729d3",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0e6a0803-25b9-40f3-9cd4-a79011c172e8"
        },
        "item": {
          "id": "701a4166-7b42-4b83-ad1f-6d9a01fb4e49",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5d86fe2c-e888-4664-b716-6d796ea6dc38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}