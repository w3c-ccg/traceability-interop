{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ceccd61d-dea2-472b-b21c-b56ef2e97042",
        "name": "Clear Cache",
        "item": [
          {
            "id": "076cc9d3-a868-4f0c-97c7-015adce068ec",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a07e76ba-4e6c-4efe-962b-2bc0db996ac7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f81f9f2c-4b18-4143-b861-c464f0998c8c"
                }
              }
            ]
          },
          {
            "id": "6030d986-33e2-4fd4-9e24-9939e5893878",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "151fff44-14bc-4a0f-9ed5-a393de8ae668",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7b7086b6-2a43-433b-bc31-467aa4cc8833"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d6ddd9d3-8b8c-4e8c-a9cb-1ed7e2a6c003",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dffa6460-8141-4bf8-b099-1cb9086fc05a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fb82506-a48f-43b4-b55b-830ce4330389",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "150b4b0d-1f81-4d00-8fcb-cdddc4b813ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df7131f1-bf01-4298-95db-13dd9f44abe7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c425a5d7-b437-439f-953e-cf5c1d6479f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a9c743f-6a9b-485d-9b9e-f7197a981f57"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed576950-1923-40be-9674-45857329de92",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf4ea443-bae4-4f26-a6a9-7c2fab697987"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2178692-f0c6-449a-9a4e-80cb5096df66",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a8616c6e-b453-405b-8f3d-f47145f15e8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d40caff-8390-489a-b860-6a5452139810",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3165bbb0-17e8-414b-9650-9e6f8e5824d6"
            }
          }
        ]
      },
      {
        "id": "28c901bf-fd72-4d82-900d-f3f4dba2d5a2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "446603be-ca1d-4784-8a68-2ebd021bbbc4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09b24ce1-8266-4697-96ae-35507b932acc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "43000252-64ce-45f5-a005-2869f0dc3ada",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270a5b32-b6d2-4adf-ae12-3416226a6fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5308c5a-a613-4aea-8f49-43e5554781bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40137827-33ef-47cd-b8ef-fd7c584a7645",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d458f4d-fee8-4977-8141-5546f5ae2197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c38ad25-a2d5-4e5b-83db-51e77eb945ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a700aef8-d57b-4713-b949-d04ccad2816e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a3c55c-d078-473a-b6a7-e5ffca75d7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "448d9a7e-acf8-472a-8b9a-dd9f77450b42"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e565abe6-d71d-440e-92ef-7dd388161855",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff15a62e-9a8e-4f10-bfa6-de1c380b0bc8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b63945-98df-4497-94bf-c9f388338d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14945a9f-1e78-40bf-9218-a433b2c39890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f46a3af-923d-49b2-a5d8-ecef2324db12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5834957d-3d56-42e3-8f12-0509c301464d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a34d64cc-15fc-4245-8484-8d0d79933d25",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7ba611f6-eb39-4719-b3bd-9f5bca3e124c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b1e5ee2-d6e0-42cb-9f08-fd8827fa574e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "365737db-05b1-4ee1-832b-aba0ef8913d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4dfcd365-ac6f-4ba7-947f-ea8336111fd2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cb5eb766-ad84-4837-8b1d-aed651227e9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed031d7e-0160-40be-9940-a9fca02223dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1958e3e2-71d8-44c8-9fef-770d62f40eef"
            }
          }
        ]
      },
      {
        "id": "ea2c8a1f-d150-4270-be92-c445b8b52d7c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9b11ed05-38be-4341-96e4-1cf08cadbd05",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb9a8027-4796-4df5-9eb1-1ee66effcf27",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8d11c11b-73a8-4ae4-87fd-e1119aa731d0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20839ed-394d-4b06-83a8-a37eb42d047f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e6d06d-bde9-42a2-8211-2e412316e4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548b41f4-fa67-4b3f-95f3-6c9bed569471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15f096d5-d5d7-4844-b07c-063a63d5a402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3869a841-f3af-4266-b1c0-b5fddb561cb0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff49579e-b32d-4243-884d-679e67d78b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6275f13-c8e3-4b64-b25c-5c233ea6541b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57230ff-283c-4776-bbf8-88e2418ad0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b05902e-a57f-472d-bd00-bdc8ce259efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6c4f90-f4ee-4aff-b6ed-ccfff8212a22",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bb1d88-cbdc-4422-865d-d93ccfd9fa1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73268bc6-95b6-4208-a754-a7a391611f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a8c95b-2fe2-45e1-ac98-2a4f1d08a96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "757c39c6-509d-489b-8d41-6f6df6e0f6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4071f75c-68d9-4235-8bea-89dde16b9609",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586a2da0-2d2a-42a9-a6cb-03c0f08ddfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cccfd8-863a-4420-b3d4-6e65d09cdd3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01057fdb-689c-4825-adab-146cce03394b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45d81242-936a-46dd-afe1-0655a5b15cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35aad317-51e6-4973-a564-0425fd4e9859",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5265620b-090c-440e-aa4b-bfa1e4fae62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429bc49e-2eed-4335-8266-fd03441d6107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b8678c-7a5e-48a7-a9b1-2b5a4997e310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e24d41a6-b364-4d3c-9578-e9ef18642cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3abc21-f2fd-4aa3-9394-97e7a523f37f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4cb6ee-c75b-4ec7-a088-277eeb014b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1199d9a5-40ad-4f67-a8d0-77bc26a3b909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c73ce3-b397-405e-b8fa-8d09b02ef527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "042518e1-9968-475b-a637-4ccce012f80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d2f85d-6e86-4e75-b857-b0a11a16bbad",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9f8317-8917-427d-8725-79bface5d6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74a6168-fb85-4a86-a156-1d082a68eb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c161d2e-9d78-4df1-b952-fe5dde01c746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68958d7b-296d-43f3-b478-aa2918618e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e1a1f2-0465-4bf9-9d7f-d3cddafdd089",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22846b0-3a59-43f0-a12c-3247097ae07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1791696-bccb-4d5b-a3d3-7d6aa2339275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2cf62f-0623-4ecb-a055-7b2719545905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48b1b6f2-7e2b-4e2f-ad59-0b28961dbb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb2bc1a-b7e4-4d41-bba8-910f218b5f08",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac317691-0ff9-44db-ad4d-f3922a8a911e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c320dc4c-3cf7-4d33-894b-c4e7326b2176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda5e383-4fc3-4fb9-aa84-a1dee33a323b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "698771a4-abb9-4da3-8951-27bbb803ce53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605cc8ef-d4c7-4756-8279-375ab8cead5c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722641a4-2108-47fb-8b5a-5d521a45c2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1e8320-a4c0-41f8-b4d2-629438f06c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941ae17c-e1cb-4652-bc95-b6aa1c63a269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19bee3f7-2f7a-413c-927d-5dd2b3f6ba7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41974aaf-d559-4f50-83ff-d44623cbc7fd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2707c3-a930-45a4-8db5-25bb54a38961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2272e33a-be18-46e4-ad35-aa2a363561d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea720453-cebb-470f-9359-9f03e54e44cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36cddfa5-ce86-4318-b124-02bfe053bec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff76591-a1dc-4521-8c02-fb2d455f18bb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf2a792-93c2-41cb-b528-d57cf59794a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0025bfaf-e452-43c8-b806-adcc498d4c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57adb884-fa82-44ea-901a-49fbcdc81531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b3a4b13-e5da-4813-9c13-85bf506ad977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97775f83-f14e-48d8-96be-2dea15ad597b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6bcdf7-2c21-410b-974f-64c8310fa602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e4111d-3732-4268-9467-bd2ced399543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a210a1a3-f72b-4dee-88c7-6506df4a4001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce55c57c-d2f9-452f-ba2e-77d28cc33a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b1ecfb-a2fa-4442-81dc-3367b5353592",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c8f2e9-b5d8-4332-9084-48815a1a1664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41a03e1-a93f-493d-946e-bb4ca09a3d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc9159e-3da2-43b4-9d65-e209d11be0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "808b64e0-0a53-4e03-b916-83bf5989dede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fd45bc-c23e-458c-b437-de962978202d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e94924-c323-4bc2-b19a-029e0795faf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76cbc191-8e07-4170-b720-729534e0f545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d13cca9-22ee-4a34-8158-f543c83fa501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12e603ea-bae0-4a39-9d39-04f0a1ed566f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea922c98-44f7-4395-89d4-cd0018c504a0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a10c1c-691c-435b-b584-228db1bfde5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11179dd-26d1-49cd-bfdb-55177788d93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66284273-8cdc-4071-b258-bda2c0661e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1187380-8319-4e37-b8cf-206049fd3f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4b7e83-6998-48f7-af0a-cc4cf98ee59c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511a8caa-3efc-463a-9078-f7737fc18fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43e1a99-3d51-425b-b7c9-f43c07964e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e468f11-3b25-4aea-908a-3309fa92eb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63680245-44fe-43ec-9572-8c45dd89a8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8467646d-03b6-432e-861e-41f04078b674",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff7d542-8a9c-4980-8f06-b03e70940770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d25182-0f4b-402a-9475-d646ece63246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19be226-55c2-4867-96e0-d37d78cbeead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "08353134-d6cf-4c84-a62c-288e32fb539b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af20de8-8df1-49a1-bc0b-3400570fe59d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b511d6-24d0-45d9-9869-2bf775e9d02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3626d5f4-08f4-4061-a0d9-8d5bd413a620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e79201c-32a5-48fd-9164-8cdfc151a0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32cc82cc-3e23-4130-9492-0114d93b3d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f52617d-26bb-4c9d-8c28-ed81c52c92fa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47c23ad-00b1-4cdb-bc25-38de39bc7433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34573cf4-6f3a-402e-88f7-c610d81122ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b14388-f164-49ef-9ea9-7f2bc81669d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b4dd97-8826-4ff9-bc2e-b2f9b44d206d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45e2652-36e3-40f2-abe2-d3da66ab09dc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb48716-dd0d-451e-9ab7-768e921ffb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529c8641-1a57-48b9-8f1d-ca730a462deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f03615-cec2-45c9-8c0b-b0d874d3dbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29c786e1-1756-4773-b985-27847eb5943f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c5383f-d216-4e5d-9731-9748a283a2e4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa5eaa6-d98c-446a-986a-ff8ce9fad709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914768ed-d806-4f16-a69e-a46105c8c960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33121fb7-defb-486c-a4e5-3a6425074036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e138d7-cfdf-4362-ac08-e47670cfd197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847e306b-9429-41b3-bcdf-873e48d18d13",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fc8c12-348c-458d-a09a-4adf75d2a59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b592389d-cb96-47f0-9f2e-6d0b32c7fd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9ef234-7e65-4e3b-8064-522e24d3ed73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9344ca20-cbd2-4cb4-ab7e-ee319352b9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ed412a-0660-479e-ba9a-1c7e095d3f85",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661f9503-6dd9-4d6a-9f41-26e3ba2bc4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ee54c4-706c-4857-acce-e816055f52ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93c1be9-6170-4de1-9784-a1001a6eccf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "252110f9-7a3f-4945-8068-6824e76b45e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf3b9d7-a5ee-4dc8-bbec-89fd8df9ab33",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadc6764-f851-473b-88e7-e81c820738d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3862268d-8c93-44b1-8225-6794f2d25075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c85fb5-760a-42bb-96d5-e4f1ede5d1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e215524a-1b87-428d-82d8-9340d84fddd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fe0a54-0098-4824-8d42-f82534125bed",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd4aab8-3c0a-4634-b3b1-4a950d2137cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575fc83f-46e8-4aa3-a95c-d08d675fc4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f6a77a-73c4-4ee1-a746-ecff63282b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6390f193-546f-4baf-8ef8-afba348dcd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845dbd64-5704-48fb-a0cf-bd482ca6ee13",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3b8f36-63be-416f-a8d5-e8f7d7bbec71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11a679e-4487-4959-a52f-26100ecb040d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494b0421-09d5-4ddc-beae-39ff6eb54152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "710f01ef-3afc-4537-bcd2-3e054f16de3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362f799e-28d2-4abd-bc27-9bb23f9d2885",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ed1652-afc3-49b4-b421-13479f12b2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fbc67fa-14ae-4b02-81c9-1772e846b525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2a3ba8-50ba-40d9-94cc-f442d14a407f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea42cb0c-52bb-4d1a-95b9-ed193aea2364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb57743-e6f8-4037-8c3b-297fa6387660",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6378f8-abc9-49ab-b41a-f6232ce38d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31aa6cbe-4d15-4bb6-91e8-3c256e9b9ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b2c9c3-c234-46c6-ab0a-aa39bdceb651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2adb02b2-280b-4b05-b294-18128d563a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7dbfb6-362f-4c05-be92-9fd8614f7da3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b81a92-0415-438d-b45e-9bc2c2b215e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a6820f-18dc-418d-8a29-42216bdfe071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdeb54af-5231-42b5-b726-b4fb804c6425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad11781-d16c-4ae7-bf9a-eae62fdacc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ad25c6-eefb-4787-810a-f3c240e5895d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a93f59-057e-48bd-829d-4de2932832d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0dc1c7-e99d-426e-b701-5e2146334e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc33517-c952-48d6-92f1-18a24ba37cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d168885d-31be-4446-a838-f3d06e392db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbacfb67-009b-429f-a5ff-f075a62c4790",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121f7b02-c59f-48e0-82b4-0571db3684ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abff1dde-e56f-498f-98a2-fe04cd650744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e0c1ad-0593-4313-a7af-32c9e8df1992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6ed930-ecbe-4aee-aef7-189e8ad56b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e7e63f-43bd-4487-8983-1ebba27c18cd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667ab1f9-f94d-4862-b6b9-e16adede4025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9ead25-9f90-453f-8fb2-2e77041e9a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0a4aa1-44e4-4931-8e2d-66fb935a7038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "244449e1-7a59-4bd4-b4d4-55abec6abf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30d6167-b94d-45c3-a2df-492e360938ee",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300c2d34-24fc-4abf-8953-c61d459d3946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f168bc-6a76-45ec-afe8-6e06b314be1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ca984c-23c4-401f-9750-400fc9690c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49cb6a1e-ed79-4f8b-a3ef-19c1125d5fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613e0e1e-58de-4b39-9d09-2ca75abb4462",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b4ad41-ad08-482b-b3ea-98aeab46790c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561004b4-cef3-4636-a121-e09da9fa1f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a33358b-80be-44f6-becd-ffe9f367458b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5db79f24-1fb8-492b-8a6b-33fce1bf96bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fa605c-95c9-4947-99f2-ce91ed86b0ed",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d36285-5a04-4e60-bd97-733aa4cf32b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66325e45-1698-415a-8383-6aceae48ea9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3b18b6-eda2-4107-b5e8-6e9c64f7f176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81667c7b-f9df-4664-a12d-2625f5bde49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a055cb58-cb03-4418-bc47-37213c248a90",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c435f4-9369-4a67-9a3b-a3f59cee808a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94914b6-cd28-49b4-9869-6a481479d27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa71cca-6fb6-419a-89a1-1bae2d5edca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12e5f009-e126-4654-a9ec-b0649e32b223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252faf64-a218-4de1-9d68-8a4eb45e1fec",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed93bcc-6218-4171-a44a-861991c662bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cb64e6-746a-4a86-8463-a13e1cdc861a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b49542-790b-43b4-8eb3-7d09c1328a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95ba3368-0e28-4878-9a91-b8a6453fbb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48faea55-f907-44c5-bfbd-c8a528e5d1c6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2bdd45-1138-4f9e-b909-6a94edb10fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48eb3916-e593-4e2b-9a0f-9ccd2f4de3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526bc741-f570-4c19-a16d-23451aff8925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a661f3-dd5e-45b5-a086-85a2e7ca41d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f34381b-845a-4d97-a4b7-5f8824bfb403",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e33b36-1771-4fc2-89b1-8ef2401198d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f284555-1431-4400-9fbe-370829ed9e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d5bf88-f6ad-4202-b978-cca6592daf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc35719a-abd6-4395-a01c-67f491941b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb38c25-58c4-4bcf-b54b-6279ebf6081a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cf3c82-cb23-4a6f-97f8-56b56192178a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14edce12-5f6e-4ab3-94f3-5cfb65ac88a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efc85c6-da75-4f50-9e7f-e4afd1324c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "161fae05-88eb-41b3-921f-54082ca10cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f357ede-619c-4353-b45a-d572c7ff104e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f4c8f7-0a02-482b-8471-b35c9f719830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9cf4cd-c27e-425c-a99c-cfeba4696cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d175c8-3851-453b-98a9-4d8017e3fb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "18714969-f973-4e12-b92e-9bac268f93f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f786cad1-dbd7-4cb1-802a-917e9229f2f6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f005b02-924c-402c-bdfd-b232050b3989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ff8c1a-ee6e-4b25-8070-71871ced64c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6f170e-b09c-4611-b2ab-c731b4480ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "22d7c4c6-8686-4f77-95c1-03af65459085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8b6da0-1c0a-4769-9840-97f97f349cb6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4463aa-0211-4f47-8354-a032f9b8f447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ee1fdd-ac60-4f09-a090-59d15d3e665f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4c5a9e-b412-4e99-8322-948a7fa68cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "38450eb1-0717-4d24-ae17-2e7aec956353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a6a620-d958-41f2-9fef-f3574dfccd7f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe93ff5-4664-4032-a167-f30e44b90d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2a2b2e-24a2-4ad4-b4c1-1e6afd858b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bdd9c3-292b-4fd4-b2ca-2a89d893f1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ecd88c-ad4e-4045-8b9f-fcc1bc056cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4773870e-dcd1-429a-8134-8aca37bbb41e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2984f2c6-d205-4712-8a3a-d58f6fa93c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ab1b3f-4e68-466b-b927-6dd7f3c65048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fae351d-dcec-4d7c-8974-c6dd897d5893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81dcb2ce-c3e9-40ef-8530-f5c28f3b2a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd8ef11-3226-4c0d-ba5b-26bc9de6229b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6184c217-0b68-4cdf-9d44-7217575c0c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abdef66-603c-4498-994e-e24800aa47fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50134ee-e074-423b-a216-dde6581f5807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fda87bb-2c12-47bd-bf68-f2f5779f620f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58d8d34-337a-4242-898f-6be1431a2c22",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365b886f-5d0e-421c-935f-0293ce72a24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943fcf96-8a95-47fc-95bd-f44cc43d33a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cc6986-664d-4d32-8ce3-ed6184de99bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7d7dcb-78c1-4a2b-b8bb-77d55d6cbed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099645e2-2e3e-431b-80ec-9831a65831a0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3e1427-e668-4e1d-b9b4-a321309326f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5449f439-b8a5-4958-bb4b-e288e3853e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b91fd7-a2cc-4a0e-85ca-c02c0bd125eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac738d45-e02e-40dd-baa1-6a06c3cf39de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea82e54-0269-4bee-8dc5-9a955645e65a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f767efbc-f3d7-4089-a039-51dc1dbf8366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db83eeb2-78c9-48a8-8328-e7fc57f85d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67faad16-b3cd-4ebb-9b39-7304a014eedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63308ed7-df25-4a67-8646-497e63091d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2150d2-123e-4506-8fb7-4b539344dd9b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5bb300-ed09-475d-9de7-40d1f140c414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62101863-b031-4621-bf4d-6bb27fa26f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71dd54e9-0974-4eb5-9413-63bdbfdfe5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f76c999-0b85-4b94-b66d-69cfb9076c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48bc95f-fc55-4238-b302-c749ab1fcd5a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0404188e-16de-4c86-b10a-d4a3a8f8986f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022fc4b4-52c7-48f5-9496-2c9963519142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1289b86d-8f1a-4660-9af2-2e867cdeff4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78f254a5-1a02-4698-bc6c-c04d49b25148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f6988b-8ede-49a6-9607-894287487f91",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e734ae-014b-4c04-8520-ee45248e0e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395bae6f-fc78-4035-ad6c-a22193403c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c522b155-12c6-4f6e-87fc-21ae82ed34df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a0dadd-e877-48a8-a26e-1f40856d3fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b855bb22-78af-4f29-886b-2266483e06bc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf6139f-58e9-48bf-9e45-0bec44468bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0bb47a-092f-41d2-b0b2-1b1062004c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d883f691-f3b9-4922-9ae3-a6c95d2e3262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f15d573-2dca-44cb-b6bd-2cbe2323e8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33838696-2c0c-4e6f-9855-6f887d47738a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1bd5f6-941b-4fd5-a99e-f119eef9e05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a613a5-497e-47e5-a4c0-c61b2e2a5e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fa4993-2253-41b4-9164-8b4e922eca17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40fb0953-5541-48c8-9d5d-983fbce4d09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b89498-64c1-4bc8-b619-9c4afcb5ce01",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8798f85-99c9-4752-90dd-124b1e86c33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1359138-f19a-4bfc-b6cf-5ffc3fa3678a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba8b85a-8e51-48dd-9033-c1e100238696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d6939526-b7f9-4149-9b05-43eeefe172ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b124e5-d7fb-418d-84cd-87baca54d9c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a679bf3c-140e-4b2a-bd9c-2dbf5111b95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2090e7ab-856c-4f18-b222-253f5ee844b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db89564-e2ff-45b8-b7ba-c49084e45b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3cdeaa-5b51-4d40-b958-b0010e55f738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d47762-132d-42bf-92b2-2325d09d9878",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40128cb-c994-4963-a222-a05f0f0ea059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37ff5b6-4d6f-4037-801a-ec1bcc89d6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1923e1a3-294d-4340-9d19-48fdeb486559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a69017e4-ac42-46d6-8954-49188578ef04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3b62bb-de96-41bf-8994-acd9f6a3cae4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7596ee-4637-4da3-b160-ca267bb44396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c850d10c-eff8-4936-ab8e-d827c2569baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107c8012-c7fd-4483-96df-291c567061c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "62f15004-201c-45b2-b2ef-027813303d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2347cf42-ca92-4da6-aa44-5103a836fc8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0ab9dd-06f0-4f4a-8c47-5c5a2cd29ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939e3851-b4ab-4b89-ab95-00c857f52ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c89d113-be84-4a50-8493-db0a5919f86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbf3e57-e93a-48e1-876b-f5f05dc857e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fae0430-efe1-4a3d-9c9d-9a5052a04bcf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b678cbb4-9d5e-4ed6-b9d4-40b6e2c973b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043780fd-5a0f-42bf-b46e-e0ca7c5ced23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00ab6cd-e2c1-4d6a-a9bf-c31597258bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "51d9943b-19f5-4053-a292-50e12de86cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b7b495-25c5-475f-867e-d5f729de55a0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f7f866-8c91-4f02-a3a3-377545fbd954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6ad5b4-5e54-4247-9a9f-d394b8c2c879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1467eeb1-d68b-4909-b63b-1fd887b8f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "96b659c4-2b01-4d61-a936-62ea9579ae86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a7ef68-5861-4b34-b07c-f61ce0362739",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee458429-efb6-4ce7-b394-7e1d80337ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c452db-ada9-433a-8f4b-2884e5c80238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0599e32f-30d5-4a8a-bdcd-ae8221e70e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaab7774-3cf2-45bc-bd81-9ad8b2a97382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9da85b-0bf1-41d8-bfeb-17be3f1276d0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12358fc-10b0-424d-9d24-843e70a5fbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abd2fa5-7af5-44ed-8e15-127c3f9ca119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546eb16d-72c5-4a52-8b85-7345aaf2ee7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6434e5-9ecb-4786-9b89-3078fc5ee73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c6b66a-9a10-49e3-aeaa-b2c3003c0c1f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422c7e7c-184f-460a-ae4f-554e0ede373c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f5f7df-6acc-42be-9e08-5234762993a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572c1752-0ab2-44c7-ac03-75c3233a8617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13c67be7-293a-4812-a0f1-b505bdb20a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399b1a08-c90b-43b5-bffe-2a1f86e2174e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c17fa4-613c-4d66-aed2-dfc35f00778d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f85bf08-613e-4721-8c3e-41aa6a5f15df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7817e204-b45b-4ba3-8824-51f898fd8766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34283cf0-c92d-4771-bcdc-cace8aca6a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2bb297-4c1d-4604-b7ab-9ea3816880b7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807aa8ec-5603-4ce2-bb1d-18b0d6c2a6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db44e9d4-acf2-4a0c-95aa-43680930dfce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4381221f-bf2a-4141-8975-90d6449b0532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89e689e1-3f56-43a3-98d9-19f7a5a452c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01f060e-462c-4b5a-8458-3b76f4200173",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774a9882-0c44-4941-8d51-bbda8f771c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7a5d05-7eb0-47ce-aefd-66131c749df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce874ac-0b8f-48b4-9be9-1224e60692a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d138ea-f98f-47bd-b827-f7336bda4e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efbd667-f2b5-456c-9d39-c297e6a0324c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010f6d72-8100-496c-b328-aa40c7b0c05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e477e01-87d3-44a3-a7be-b4549764febc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7694f785-9a70-4dd5-b096-21cc61c51307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "136fa8d0-82db-4697-894b-6108e2566d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211f02a5-5dab-4bd6-8fe6-4049141309c8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c353498-b8e7-40db-aded-d372ed043b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4077d6b-6149-4874-aef8-309080392bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891fb922-4f8b-48a9-8aad-9216d7cd7896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0864dd16-de27-452b-87fc-72d81313d385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ea48cc-6400-4068-98d7-377a868da13f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df609816-e5ee-446c-bbf7-7c18eedd7c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1361fc0f-41ce-4020-87bb-0d0bd43599ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8eeece5-c047-4a30-a5d9-673ef95e77bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03516bb7-9f2a-4a05-91e6-e8c822ee0258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa44bfa5-92f3-473e-9f57-3e55276fbdb0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e942bf7-07a1-463a-8467-dfb33ee746a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edef237-8e09-468b-8711-12a4a209d058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e688bab-0944-49d0-9323-5c068481d6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e65e7f7b-fe80-40e6-84a6-25bb624a0ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fe5c13-56e0-4e62-be21-6ec72a23b46c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f7eca1-011f-48ef-ac58-e7b3b8aa029c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f212426-28d7-43c7-8920-0dd6d24642e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2af2f4e-55ee-4c77-bc29-3ec03ef3a4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42ed13f1-7193-4183-bc49-c789a9c80ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b370b83-22b1-458c-a508-475c0deb9760",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7817b7f7-daed-481b-9dcc-ad1d8daf76b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b801f69d-dbe4-45dd-ab57-ff3f044a6ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768f6fc9-b91a-45af-82a7-de92b16aba1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55d8d3cb-59e1-4b44-9eef-17ac9711d3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d91be4-badb-4372-91e8-6fbcf29f878f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab455a20-02e3-4ad4-bb24-d43efc92adb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9722fc01-6734-4014-9562-a9f7ee43cf6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bc1ccd-8140-4b4c-94e8-ec69d449a6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "468cc517-07d7-4bdb-bf8f-1e07b25d3b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6091dab4-b2b2-44e6-8c3b-516102d3376e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20f2625-e6b8-4ff8-8c8c-4e3114afd930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0717ebc1-9f85-4ee1-8575-42d5765b0427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e66c84a-29d4-4473-ad87-b7b4e5d41347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "067e4bec-0cb9-4bb1-959d-01484bb4283b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82124a4f-994a-4a93-9403-8789064abf21",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8af276-c4fe-4b90-ac5b-89d7a48c8311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2176eed4-b2d7-434b-bac2-1bad4b2a861e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7add4519-0c3c-4492-91c6-23d0816609f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0813fcc8-ad38-44fb-b134-a5e2cf7b027b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b31601-f0f9-41a6-9c1f-e8ece06febed",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d312fd48-02b4-4e59-820b-9e420795f204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faade801-1b96-4101-bf7c-60a49737db2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed07da72-a862-4f5a-9e3c-71f27a220a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23254ea0-a98d-4a52-b63c-dbeaaa034a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa0a9ae-dc3d-48ab-a938-7d892f230a88",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10327aa-9287-4548-837c-8c45865e2ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63b7dee-a92f-4bac-968d-4d3f3f7de083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79991dc3-2a54-482c-99ec-61bbba9a844a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "716cf2ca-1724-4b96-bc0e-b1f23f11afc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94138a36-a14a-406c-b213-5b7ae189f767",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389797bf-e572-416e-91b2-4f052fa20325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48ab182-83c4-4051-a4d9-628e05a41f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53b7e8d-5bc4-4905-bacd-4e37f2748fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9884842-1d06-4654-b44b-cc788b383627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03579e01-2a34-4df7-9cde-019659482a25",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4187827-9d14-4af5-8564-83b33effeef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2359cbf-c08b-44ae-b25f-74de94620e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543a3d93-13fc-46c7-a0d5-1ccf81815731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d164321e-ef43-4a06-bdb1-099231f1bf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5b94da-1fa7-42d6-99bc-b64d2126a397",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ac772a-c132-4bf5-bb50-05e13ee0e4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bf29ac-c004-49b5-9853-95adac72a500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00380104-bdbf-46fd-a213-c78844de4c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c43b857a-229d-49e7-8317-dd0b49f6af6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143a547c-80f9-48ee-bc9a-c07c151a9c7b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ec1db4-e221-4e37-a418-9f7c1dfb4033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b6a671-6dc8-414a-bfc5-4286e1164e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff863f2-3376-4471-b7eb-ebdc534b4223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbf69e5-c810-4816-a76a-5a2b35d88708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a813cf2-d502-446b-981b-ce9c0713f18d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba00968e-2dcb-4cb5-9b82-869fcda60198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d482eab6-2684-408a-9141-42cd0b4490d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3648b5fd-1246-47f0-a0c8-d1e911364b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d874648a-df19-4ebe-980b-7337ecd395bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67be7a8e-0e13-4fcd-bbdb-d716859ab3a1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb853b3-cdf7-4d64-acb1-488fa4b1d86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599f6be7-1511-4263-ada5-22d5df6f8d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334abb0e-7f02-411a-9cf4-764966c70aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0c7fba-5811-4580-bae4-afaf4b22913f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68f6fe0-37d9-4e36-9495-ec74591407f9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839a6b5c-3f4d-4704-a1db-583939f2ddcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e032890-b63d-4b87-86fa-c0d851fde367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c3d0c3-2936-4a0b-ba77-a35a2add3f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a55b47c-4e2a-4660-aba8-ec26346ba1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d31c4c8-a250-489f-b143-1c470b68d72e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3fc8db-8b25-4b7d-8dd5-88776a108895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fdda8c-24e6-4308-ab86-7d20556b4ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ff8f6d-c476-440c-82fe-30e03c1992b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "48db79a3-edd0-4dce-bb1a-45939aaee4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c65bb42-7390-49e5-84a1-59331ce85f2d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324bea6c-6b35-47c1-a279-25cc2b463ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95008208-f1d0-42ab-8d0b-f34dc12c6766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e4ff4c-a2e0-401a-ad1f-2a8cd2c21a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ead499c5-389a-4b61-9aa2-fc5dc2dcd7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c48033-75f8-4022-905e-f0514095dfe9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b72cc14-e27a-497b-ada3-f18161fbc999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9276c01a-81e3-4cda-bb97-231b0057fd89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455c7a47-385f-4e3a-b1ae-64a90625937c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b062f35-324b-4156-b1cf-61a88fc70013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1385f3a7-7654-44c9-9d52-4d29a9d5e47a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0f9dd2-f204-447d-bd2e-ff36ca0379c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1ce15a-68da-48c3-bd8a-f42a592faaae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac27dbd-5148-4fd8-ac01-b4def3308e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0172940-0365-4d9b-9c16-cbbe4709d58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b24439-53bc-4142-9832-f7bc286505ca",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe3340f-7afb-45ad-85e3-8d0f59931855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2684ea74-27fe-4bcd-8d8b-e7741bfd23f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8391bf-22de-4c00-9a1e-61ba7d58e146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0739b26-26e3-448e-83ce-478b9636a297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e2d814-ea4c-4505-9632-535569e64ff3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c053e92-78a6-47d5-b46d-3eb038efab05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1542e4d5-e7ac-4f39-9902-a08ff4d2b117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796a6e25-fa3d-4cef-b163-71407c5eff84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5161d0-376f-42ba-ae59-037e483e7f38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "438dfc57-6a7e-45e8-b3bc-c5055dc35147",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7cb3348-2553-43f4-83bd-ed89918df961",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b7c170-fbd4-44fa-b853-84995a90837e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e61e1b02-41cc-4f0f-911d-66cf8ed9148b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85259949-e76f-49a6-906e-b97498845b1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0799468-04ef-4630-bb70-449d88cf846f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5d75110-1a46-4fda-872f-78fb2e491944",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "883f288b-d7b0-4155-bfda-d8d580391759"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7b17483-0bef-44ba-9075-985b86d6e60a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d003e709-67c5-4c78-be82-2ba3bda0dddf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6d87d5ed-ce5d-45ce-be2a-6ded3790361e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce29bc83-b805-4d32-ad35-e50fe8b4fbf6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "022323b4-42b6-4e88-ad26-0199a1e6c3a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ef905ac-cb8e-4427-982d-94e9fbc4abc1"
                }
              }
            ]
          },
          {
            "id": "4750e711-0a48-454b-aec9-69e0bec58d9b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1c699635-ce29-495f-9f5b-45a5acb70c97",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a1886757-e75f-4d21-b578-b59d7fe7d997",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207b8cdf-8b8d-40e4-9cc3-3b0cb80fb02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "052de60b-a8be-4065-94e8-46e28aa5e4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb802834-f965-44c6-b49e-e2a288fbd723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe5c1b3-3f31-42e5-9138-de20287fc38c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e3fcd17-a44b-4c34-aab6-ce88b7947f7f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eff59a8-4852-4d65-8663-48575a45466a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d1afb21-d3ca-4bdb-82c8-3292988bc45a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d45840ba-3fa4-4431-b467-0bfd93ec4a91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "902912ce-0146-4180-bb4d-12e274ea6466"
                    }
                  }
                ]
              },
              {
                "id": "7dc63f1d-9ded-4439-8317-6896f9518013",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2feba11b-c471-40b1-b3ae-64127f2b6fa7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba74dce9-551d-45bc-9f06-803a516eb00e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a66a31b-368f-4275-b097-692843e02255",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "45f1305d-d95b-4158-988a-e498e2a2d3ae"
                    }
                  }
                ]
              },
              {
                "id": "b54f1313-3e02-4894-8057-8f112c90d067",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e02cc93d-8d17-45a2-8dfd-6cbdb61b56c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0a658d8-f90c-4bc6-8b48-98959843a04a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2801b35-94f1-4549-8d83-3a1a8a3a7c79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b600f247-09e6-4e80-a8d8-ebc4f8eaf114"
                    }
                  }
                ]
              },
              {
                "id": "43569b6c-9fdf-4140-9150-4c5fdfa917cb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "691e6873-0a4c-4196-96e7-47dcffdff226",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb834bf8-aed5-4d08-ba21-ec7c111f9e4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d384ab08-d6ac-4e96-ac32-1c4cc5b65145",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "43ec5924-e1b7-46bc-85da-bfccfecc9f4e"
                    }
                  }
                ]
              },
              {
                "id": "fc306c37-5ce3-4b80-b26f-24f56b04a3f1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f515015-cd08-44a2-be63-2d784cbae587",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12af9d79-89c4-440f-b68e-062e9bb64346"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed882c92-2ccc-4a3b-8f65-28beca86c18f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dc1457bc-b8da-420e-936a-c0355e1c6b63"
                    }
                  }
                ]
              },
              {
                "id": "b4bbdda3-36eb-4625-9383-cbc571296a95",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63ec3a94-9639-4247-a84b-f194eb05709b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1558d97d-84a0-4af4-b326-244d69a9c010"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcd544b7-425a-4a20-ab2c-0b8e52a9bb6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c2306e7b-3786-4ce9-85ed-38a035c698f2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0200a008-b892-4977-993b-c2eee3c0709e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d911fec4-1044-4003-9d9d-7792af1790fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "69613d1f-e01a-4e99-8771-e67e61007e6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37f8c227-55b2-44c3-b26d-c229efa37294"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0da62b63-7227-48f4-8dd3-3439bd72501a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "99bc47d7-e357-4bba-a357-34f64c84f41e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4358dc4-979b-45cb-aff5-911a6ef5986c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "159eaf28-2a79-4bf5-ab70-509b53ffeefb"
            }
          }
        ]
      },
      {
        "id": "1c546fe8-d665-466b-911d-167d098674a7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "669c5a51-f529-450f-986e-323985ec6216",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9aaf946d-0b0e-4c36-b55f-b1f14f47a0e4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "575c644a-e0a3-4d10-8dbb-6165de1ad46c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca758546-429f-4769-ab45-6a9c05f5d988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5e5df3-ddfa-4b25-86a0-b72b85311bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8490631-3666-4ed0-8f98-7b995b5532e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebf6944-bc7e-4b02-bd51-9b4c272180c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378b143d-7315-4d87-84a8-4acda9c1f7ce",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7400c794-557a-4ab3-b9f3-59bd1bc39081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae78906-7310-41ef-af88-207f534d64f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2938db6-92a5-4da1-bbb5-8b3f335beaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "961bcfa2-c8b4-4fb0-b4b6-2e8595a6e5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86064886-30fd-44ba-a32f-db04d4282092",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721ef27c-cb53-4cc5-84b2-5006880ac434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94548a24-675d-420f-88d1-0d4b8eba5384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1108f4-f7c9-431e-a194-0cba8e9da00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a68800c0-b2d2-4aba-8d81-80137b42a948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac3f775-3ace-4f42-b496-8a1ecdea068a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4043bb-d803-4886-9eff-d71060823ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5054b74-5af3-49f8-98dd-52c78ae02521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd14b046-6f6d-4abb-a891-beb3696f2481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "473a473c-abc2-4860-9a41-b01a1b24ea89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9615430a-39bb-425c-b186-286bd262bfad",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a2fd0a-cbf8-400e-bae6-b6e74041d937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f57aa71-2b5e-422d-ace8-1c0dbeb2c740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97af5b94-1700-4e1e-93b9-2667d940633d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd0c02e-74a5-4e9b-b539-6a59bb18a4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f1fee1-ac17-4c2b-897e-883b971a0cea",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ed6943-07b4-4c93-ac19-4285909af675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96ee4ab-b5fc-4213-852a-c6bbba40a7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c78d16d-1ae6-4e73-8e58-c83bd8238d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d33eb410-d7f8-4df6-b726-560b21ea3e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fc9b56-9ad9-4c52-ac4d-6dc9379af74c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748b364b-dcc8-43cc-a952-ccb13a89270c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b0b1c8-2d91-44d0-bc75-6ca0905cdef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6d1db7-b311-4ee8-98a8-49d5be310b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3bd92c-6595-45cc-abef-0cc1ed69012e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e8188c-2a88-4ab8-a704-b98b6dcb29f0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62504888-9d9b-470a-99cd-77bdf25eba74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904f9f44-17de-4447-83fd-ffc07f12e6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a846cb-659e-4ee5-9be9-705d955119de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be5034e7-c529-4107-a0c1-7cad101f9f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78638a64-f577-4f36-a064-88dde744b443",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9605416-6101-4dab-830c-fba3003af010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fabf86-9b41-4e26-ab3b-8ea6e10938f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c914f4-5eaa-4b72-bdef-b9531c5aa0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2999671d-0ca2-400a-a0e1-d947e371fa06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4414eae1-6f37-4f33-ae6f-fb7fe1c32534",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb1433e-eeff-4ba5-a882-c10c3e6134f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f32493-26c2-43e4-ba1d-6581d5febceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469bedfd-04c4-4de8-acfb-a669380bd58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc63901a-d85a-4ffc-8fbc-084c9c995956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1a44c5-92b5-4a18-b1a1-f02fb4d75310",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabebd5a-121a-4646-a0b6-c9c27bb4b23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df235506-9ffb-4b48-97cd-e23c670e7174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f14faf1-b983-4ca3-8015-9d30ec5be10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2b158a-5a3d-44a3-90a4-009f8aba620a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f750b838-2091-4e51-8ec8-cb46aeadc421",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912c77b4-1465-4b12-ace5-0a005e17beff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0aeac88-7d11-49c1-b661-6caee002c71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fa86eb-a9b7-40a6-aedf-32ee1816e734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df58a5bb-bb82-4f09-994e-f245631b5bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed84c023-0e4e-4e2c-af19-94e909d88d55",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe949a99-0220-4ae2-8c38-cf8b898e405d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38402b0-c450-4b76-af8d-5bea3482f085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b604309-fb7c-43f6-91fa-65e2785eabce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b025dc1a-dd70-4789-824b-08f96cab67d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6620e74-337d-4c43-ab3b-81c4be147e26",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92514d11-ced8-4271-a572-b3c5bc51c97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f708b82-1cf4-4846-8ce6-a9604bbf31f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c6438e-a048-4a39-80e8-f6cea12062ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1404794-0e07-4783-a279-17dd3a4d0f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e87f3c-9fad-4f32-b270-754212914420",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980e238e-0b0f-42f1-97fb-a74e8c53eb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e547cb02-60fb-4b2e-af45-cd1ca98b52a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0dcb69-fb8c-4a80-9f10-f0faa5875237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b00a52f2-e7d4-4497-9a4b-eeff4613d90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e225a1-efce-4044-8112-2c7744f6776f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4b97c2-a275-4693-bb7f-e36508ded44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5408ef6-368a-48bd-9114-7a42e1af5f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f1b37e-8676-485b-bb29-29eff671291a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e953ba9f-7c8a-426b-aee9-6fce3316a491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c40a77-a2f5-4f00-9747-b32363064f3b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22af122-fe21-4f1d-8850-61dabe26e98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7b3c57-412f-479c-a67f-8fc3fd605c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdafe713-8c25-437b-a2de-d02aa1f35b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d3c5c4-a96f-4df6-b014-47f9ba0dcbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08a9957-0f1c-4505-934b-0e0254cc5b7b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0363d2d4-5aca-4a53-86f6-df72d385ff8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87b990a-5ed5-4195-a494-1dc7ee782fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f089be-0253-4b58-855f-773b7b0c356b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b7343b-11a3-4add-9501-68c353a35111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80da2b54-d532-455a-8a58-ddf59282a2fc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbb94b0-7d9a-439c-8d7c-66560238c7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2aafde-9c37-4e98-a3f5-6c0ab950a57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff560926-9c43-414c-ab00-9fa3a335b489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc8bc0d-83ab-42fb-a1e6-c3365602d3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6a9061-9748-4b82-9d2b-f55b0f7e55b5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dc8763-ba90-4f02-8736-bc0cc4bffbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b01d8a-9bd9-482b-afb1-f3828e204edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1db4c4-05eb-4a65-a36a-245d43f6bfd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e1d794-dff2-4603-9776-f645875e8990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0643fa68-3723-427d-ae79-76c2fc355f72",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae2e086-319d-4c96-baf8-b7215cb87e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb62814e-6b56-4308-8dc0-58bd847a2ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68678920-5627-4471-ae94-98e74a6c5a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4e9c90-ba88-4d5c-9c3b-d2987182258f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ead2101-2e88-43ee-b71d-32146918a478",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc294649-c6c0-4903-b7ae-ef3e62286fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f440fed-aff8-4f6f-95ca-82fa606fc008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33734db-c950-41e2-a333-b7cb65d6d420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5286ebc-e1b2-4d56-92dd-0d669bcffa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698fe305-df6c-4d42-bca2-f5788edf4043",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4afa58e-8317-4aab-bec5-724b49b40295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b0a881-ada2-4992-a2c4-9d2b43955d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5f7236-ce29-4218-8282-a5fadf4626f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afe4aa86-3b3b-4130-8e7e-57c4b0cecdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5072a239-f58b-4ce3-a121-cb619249f7bb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74226849-95a6-4d4a-951a-b43fc3c469b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7d0976-b165-438a-aa1c-2a2c778e0386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c45011e-5738-488a-8ca7-8ecdd2704ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbe57e0-f76c-4a70-98fc-6472e9fb6b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62c09f1-2f07-4037-a28c-5e8be7f70d0d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecfcc95-7fe3-4a2d-9467-86beeae07092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8357274-3578-4909-ad59-c740edbe1040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf47a026-375a-405c-b71f-2ca64a60022b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfaf893-3f1b-4701-9a44-a3f1f78325d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9809046-41e2-4f35-a824-d11ca0db3ce5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064eecdb-961f-4a33-ac8c-8f3eafae6e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c817ad86-c099-4ae2-b879-2cfc6c60796b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2e96da-40c4-4d6a-a517-02f01dedf1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d33a1cdb-549b-4980-9520-5af3069f210e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47351009-9b32-4cf2-b5b2-52b772c48985",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276264bb-f928-4073-81ae-ac544acc75fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9608070-f964-4e33-869c-d353d323e64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cb7474-108e-44e8-a2fd-3b2d294936fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9883bbc-2db2-46dc-a5d7-6a520e6b6fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edb6330-928d-48bf-a1d9-215e4963ef83",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb12d4dd-7376-4d3c-978c-b5ebb02207a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e365f0-77f2-4292-8b88-5361354f9fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7d7e0d-4cd5-4a97-8845-f17590fa8c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "282b12ca-d1d6-4234-9cbd-049371a50291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6e7368-d451-4daf-b8f7-9cfc4540b60b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba1bdbc-447e-484d-b03e-bd4fddd0fbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09e0e29-1467-4046-96d6-9238632dcf92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca30e26-f6bd-4121-b15b-5628686c2327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a20b44db-8d03-4bdb-9c9b-3f186184f798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6737063d-1592-4178-ac15-e4bd07ee11c4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f698b98e-00da-4f5b-a74a-ef3d9d9876e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498e9bbe-c24a-4ffa-8c46-8090dce0c62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9728d691-b8a7-4951-8d0e-9045d6721612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26789699-2514-4ebe-b495-a40fee744ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48a943c-b0c2-47c5-8cb8-50b59af049b5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48117b8c-964d-4a2a-b2ff-f76076f5a2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feca61ab-b3e1-41f7-ac77-1750e6ee1805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d6a5fc-be76-44ba-aa6d-acaf91062f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d732a876-1525-4717-b99b-b5aa6bf7668f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa257b8-727a-48b7-9c4c-d78caa7f1890",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3223cc5a-0e41-48ce-9c30-cb36838015a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc876bd-942d-4454-897d-3bcfdd522e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305cfa72-3e22-4f0d-845a-b31a2d588757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "513f1a25-14d8-4fe3-9c62-3b7f56b62b6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "16ee45ac-5d47-487c-b431-00ed751979e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60aec233-b765-4cab-9377-70134b99a284",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b249d012-3d49-489d-8880-3af3e44a3ad9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be948584-0521-413f-b212-ab3a71a99099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c159b91-fd7b-42bd-9ec7-3ebb3e4e4a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2da0fc2c-e0e6-47a5-9243-83613c4ff448"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0c032ff-68a0-4e3b-9875-6093cd93fd0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfe2b811-8a4c-4a1a-92e2-f479324ea9ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61c8023a-d15f-4e94-992d-2bc3cee8be70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faa9bc21-3b86-4531-b33f-d4c383d16706"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efe49e15-7c27-4db4-b438-6d6e427cd59d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "23cce7e5-11ca-40f0-b1b8-f16d39f121f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4400e4c8-20ca-4ee0-b5a0-f2b7d744b2ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ac2c0c7-31db-48c9-98e0-51ad7a015e6e"
            }
          }
        ]
      },
      {
        "id": "6fa85ecb-2cc4-4b12-ad03-c8d13e29dfe0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "670984d1-6ff8-4ce2-8ecc-e0f7be19bd12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9bc07f43-881a-4c05-818e-ed43c4945a60",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a155d2b-9c46-4ab9-80c0-d275eca19718",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a5a5d8-bb5f-4b36-988e-9b6af0857995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4677e5d5-b35e-495d-a597-e4b0d6ce9081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc137ed-47ce-448d-a283-4b4e42b22771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "004b6b8b-8ee3-47c4-be5f-e5303d9654c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd6818a-814a-4095-b55c-07586444adbe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283350f6-deb7-4efe-b417-433fe01a4101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39de5bfa-8fcf-41f9-b842-40ca0d880e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb48a77-6967-4449-a2e3-ab942e8ab222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0d65b7-98a7-4230-9922-1cdf83737aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a26198-ab93-475b-b26e-507441bedf75",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b56019-ae87-421b-b532-089ce8c36ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa042cf-939e-461b-b851-fda61ff3e71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec08b7b-a2cc-4173-bdca-5d48273bbb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aef5041-9c46-4152-bf05-2ec97ab320d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83554e54-0018-48c8-af3b-9994331bd4cc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440a4682-2d08-405e-ad6a-809cd5848438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fea4b47-5466-402c-a0a5-ed8ed2c1c80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d067fff7-4446-48cb-9e24-3db9a2979914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad72da9-7442-42f9-9d2e-34c851c6edcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be437ca3-8cd1-4b91-ba28-03583a9764e1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ec628e-211a-49ec-9ce6-55782ced0a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e7be52-6e03-458c-adea-e357c19f327c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac10000-99ea-41b4-b1ee-0e9970b66f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b39d315-7a49-4311-addd-7b88de6d33c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15eee0f6-47fc-4356-b876-f719048b7285",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817f74ea-2354-46c0-83a2-3ade621d8986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc08f65-b6dd-4cd8-9ad1-cb2987c3e112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b960af4-ff6e-4ec5-90bf-8915c584922b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "285dc38c-4338-4131-905c-fb3079580b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e658ca45-21d4-4614-a99c-494b81af741c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71c9b24-7e6e-44b3-b552-bb770873e296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12e3f8f-a190-4a2a-b8e7-225caa0bf72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca5d470-2c6d-4656-a33f-c01c65f0b69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "49e27bd8-bad5-4a2e-a427-e9de18295ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877e3e09-e94e-487e-97e9-2811945efc46",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78b44d2-737f-4d52-b98e-6b41c03646d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3a0a4b-5070-459b-a08e-feaf18660371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac16855c-d431-4747-90b0-a7047a482409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6805ca3-9008-4221-9f26-3aee55f3b87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8e7d42-50ee-4278-9964-b10860124aed",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9611cd19-add5-4f07-b921-1bb5c2d8f510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920126e8-ec98-4c1b-9a43-089cc3976b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e625635-d34c-47f2-9750-c805015e9a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59c9bc9c-7e1f-400b-842a-25656113f7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142e4346-c586-4fc7-860b-ce470c6da133",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afffe016-060d-42c7-a8a8-47ff76aef3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af13e1dd-7fbe-4a6b-a672-92a5463d84a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f5b4b6-e222-40c0-8200-34e90c6fd136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eca0b9f8-860f-40e4-9f3c-6a3dbd82a379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b9cfd1-79a5-49b8-8e42-2f855df92b84",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b9eead-e79f-43a1-9563-27b1208a8ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b11e14-64a8-46c9-9df3-ba851e732119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a8c28b-6522-4b16-8124-fff6599f72be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9ea3ed-98fb-415a-a074-fb052de3ed57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa55dc7d-bdc7-4d8b-ac89-8d3415870cbc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d203f1-b900-490c-b35e-171eb78b3e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2309c6cb-b777-47e0-9022-c6b4d47a5971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ed5ffa-06d9-46a2-b0c4-9cbd2fbe3170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4195ef9-c01f-400e-ae1b-a9fb6f9b44a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80e68bd-a2ce-4a7a-a2f5-e71cc63f4621",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f73965-f213-4d50-9f96-4dc137626137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c11b1b-e5c0-4a7f-b311-07104b12f97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59d76f2-2436-4b8b-a2f6-ba660d690aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "281ee9aa-87b1-4718-b612-84fdb641f347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64f6106-f013-4183-9c4b-1bf762a50d55",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4783f1-a9b1-4cc1-9537-e1b43e1971a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8688cb21-c34f-4045-be80-1f0704d72636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d35501-fb2e-4e21-a658-d4c2861ece7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "933b8f3c-d39d-44ff-804a-f5952e2bb304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ebdd6c-8812-4911-8faa-b6eb8e5989cd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fc2634-b0c3-4e76-a3d2-1d2bd06f5813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccbc3c5-71e7-4272-96c1-443297348e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1c8af8-c6d2-43a9-bde5-c2e6dd8c09b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b2d2ee-6b21-43e5-8985-78309208cd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70b0c3e-b8aa-4a6e-9f61-decb8ef02b4b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacd63c7-31a1-424d-9e5d-09bf4e227ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1539ca5c-d0c8-44f2-a390-d03b89f31105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4081ae25-c3cf-4b73-b412-c9be41725946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee47487e-de71-46f5-85de-8af062cb3cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b450925-8981-43fa-ae8e-e0ac3c0498b0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4b9962-aba5-4ecb-addd-ca2a5c0bee49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a250ac8f-6cd5-42a1-93b4-611679747217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9eb4f6-90f4-45be-a931-8ee7cd1e545c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1523e26a-4796-4a0d-ad70-6b4350c526cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00285b09-1dbb-4ef8-b2fc-01401a6add3d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c80be94-ec0c-4dda-afd8-c015052c525c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4297974-90ed-4930-b06f-e6a64120d953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c187529-8222-4a80-849f-6ad143110b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb99b42-c748-46dd-9a3b-73c9395805ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd51424-9a9b-4283-9a49-1dcbc8b09f8d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e19c36-cc50-4032-ae44-845d277a1853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0f22fd-60be-484e-85fe-19737a0722c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f84ccd-a05d-4c03-a6fa-aba333a76934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10964781-6a41-4c5d-bffe-2834ef3f1aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b3f551-1a62-4412-af73-79df4b4f20c8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75227ee6-f998-4e09-a5a3-962d8b6e98eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e500b98a-cb5c-4b64-ba03-3c9ec9fa1153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd3f376-3594-46ff-a87f-008a04ce54cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc499cd6-7c2c-4485-9bb9-42a4d8824fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb34622-d2f4-4ed4-a6ae-107f18211b51",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23a3bf2-c657-4381-99a2-34836c6cab2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a857e764-02bb-4cb1-8ab2-10a2505b6b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a7f902-cea2-462d-a93c-bf7b98b33749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e330e90b-9432-41f4-a17a-9f42085d5ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d116f2b-3330-4295-b9bc-f2a43074813e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e406f8-88b9-4fa0-866c-3628e4e3af24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d40163b-7f01-45b0-8810-26e08371ac58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1412fc3-7ac9-4a4c-84fd-4874140ba896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e713bec0-0911-4865-b374-b16808a575ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cb50bd-3765-4f3f-9006-40dae3cee2be",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cc324c-1980-4d6c-8aeb-b6eb27d0521f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229d9332-e74d-44df-ad73-37884a5ad79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190870ad-b18c-4ba9-979a-0230067e5af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8091f0cf-5253-41cb-87cb-de80017d74db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f593cd0f-cf66-4597-8ee0-2f500a57bdcd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1997eb78-4ebf-4de9-b1e4-fde680186d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0443e86b-5d65-4e73-aa0f-2798c330cf69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63fb2fe-4d9a-48b0-907f-f67cc7d96bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab188c4f-45f1-4302-9471-742b42f0d720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58681c85-b466-4684-b680-afcd73b4c2f9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb29d65f-a173-485f-bfed-6f9d8883a3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d83807-1f32-4bac-94de-84bd30dc6e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b793d6b0-5acb-4ce4-bb40-34cc97cad2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56982dab-feba-4435-9573-32b887dcf2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9828a3-1f30-4287-b552-741d844f22db",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a8d5cc-6382-4c8b-8eee-f1084abd4f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0bc239-c2b1-4201-b8dd-aff214b8628c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1eec1d-34db-42d6-a90e-dc6a03918c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4209cf5-0001-4d51-a35b-238d2ec6adaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74194f6-58f3-4856-8438-da70c8ce8003",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ac5e82-39a2-416a-b469-997d69efefe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c194ead-8590-42ce-98b7-95c73ae49387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472d5ae7-1d9b-4f27-b6e6-1f416e8e3a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "447b6725-6955-4a45-87e7-c953b30df6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821f6e6f-9cfc-454c-aa26-a41e4713a318",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c2dc91-b92f-494d-a4e7-4d4a53d3f382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42043c7-6c4b-4a4e-b137-c479fceec225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa131358-6195-4ec5-9e4f-7a034b44e4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6cb801-7fce-4a7a-87ed-3eb4fd87cafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1ed73d-5e8e-494f-a8bf-a0f8e6e9ad79",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3feee0-22b8-414b-bcf4-b705fcb57860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b9fd9e-d918-4cb9-870c-86ad369dc9f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de693004-69d6-4091-aa5e-a7d30b72407b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13d13a1e-0090-4447-a4b7-9f70db96b4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87a7e26-182d-4e81-9495-9c235d69e92c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae0b7c2-8dcb-44be-bb1f-836fd6283602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef82c30-b2d8-47d5-a6ce-4fb56b9cdcda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28350e6a-2369-4675-b650-bf0f35eac1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d80bce8-a534-4a0b-ac92-572365b88e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7190895-6c79-486b-831d-48ff279eb06f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af654351-55bb-4eac-979f-43cfe4665ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9b367d-b5a7-44b9-b498-bed7d012d733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e19f6d-2ec7-4ccf-9e1d-d72c48baa1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4d81df-0467-4176-92db-50b06e1cd8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9114ba9-d1d4-46c1-a6d4-6c7f91b6a716",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ba17af-add1-43ea-82ee-bf276caca992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96047cde-c4f6-44cc-bb8a-58a42da1fde1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65829f8-bcc7-404e-8e1b-3817f34cca53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd24d73-d945-4847-be40-5ddbac9b62d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e40ed4d-5814-4772-9e03-85ec952bc2bc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8b7070-5f7e-4f12-bb52-4f10ec7dfc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13af9263-e0cf-422a-a5e1-e2f67903cc9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefb77a9-4a30-48d2-9508-5f5332f9433d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb219058-8a68-4cfe-9f78-854be6c62f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c145207-4ca7-4dea-b0ce-01c73ffdc2c6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074d3a42-4e1f-435b-bc4d-ad48b44b3e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c35f8fe-4041-4f88-b721-3380313d2ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cf001c-6f8f-45e1-a951-2f96bd27b8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c4e7f3-419e-4500-a7f5-1ba975a62997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02413f59-cb8b-42a0-add3-15016773ac59",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77116dd4-278b-4e46-85c5-8edf3c0166e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a668de29-7f1a-44cf-8115-dfa47d011ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cfb806-cd08-4e67-9cff-608e120d55b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd76023-8d03-40c6-874d-8bc44ff5732b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3ea523-0fec-40a2-8ed4-0419a504a1c1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319ad3ec-6efb-4b68-814c-b32b1d2327b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfddd109-99e3-4e0a-b34d-5d066f9c64cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f69c685-2f64-4604-b7df-77bdce58b2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66c29dee-7f7b-47ae-baa2-a13ca632cbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85632a9-f03a-4509-bd90-c2b08f279193",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b49dcbc-0303-48b3-988c-189de2d5440c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4ebed9-e14b-4980-8e33-9c8f0e6ca882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d76d44-7f0d-4168-a0db-50b30888f522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8fe415f-ff09-4992-bb43-17cbf5894037"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "063ad051-8644-4bae-8b75-5e351ae38a7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "753dd07f-054a-40af-967b-3bc6c8ba6ad4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e0ed18-0907-4067-9289-a7ec442f537e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdf6a7f-81b3-4183-93cc-2ce6d3792538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2096e6b8-02d4-4c88-b9be-d26098b6e634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f4f0bd1-f27e-4c32-93a6-3ae6744c72a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d639e07-db4e-4cf0-a0cd-99ced8c8a5b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efbe5df2-b508-4efb-89db-5a729a5fd9b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "980f46fc-0fe8-4063-94b6-4620db557021",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d0dfd61-1714-4fc3-afc2-9696408116c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9e072e4-f17c-4bc8-ac28-4e37f6429d53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8d715328-42f4-441c-9aa7-8ef40f5bb2ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58c055b5-e39b-46bd-b0a2-8bc76f98ad31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ccac701-21fa-4d59-9664-be6068c46f21"
            }
          }
        ]
      },
      {
        "id": "3feb3d2b-82f7-4e8a-8f12-c92efd1b20c4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8989d154-77a4-40ec-aac5-d2c0ad588b42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a0bfad6-f4d7-43d6-a2b2-52adccf6549e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c5f00c39-71b1-42cc-b229-950ee49f8218",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f22331-1585-4ed8-8259-bb21b0f8fe6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e42899-79f3-4490-81e6-0465a10b33fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2598b05f-b8cb-4485-a993-3ee6ed59e69c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a7275c-0d95-4faa-91d3-99839ecf2936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d764406e-959d-4752-bd02-7931c69a9f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1404456e-79c7-4831-9edb-61d3ee7229c0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e3c66d-7faf-4a83-a785-d5ba8e3dfae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f395355c-8cff-491a-b91a-395feb5a6ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c54049-3a05-4ce4-ab41-089d7ded583e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c168bd57-87ca-4ee9-921d-a8dde31199a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f9c913-8e42-4494-8ab2-94e438e1abaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c170bda-7f94-4ec8-ac69-76f26cc6f887",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68fd8b7-e356-40b3-86fc-ecbb2d282715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b686990a-0193-49e6-a0f6-7d3d58485ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdc1505-a4aa-4bcc-9822-6253fb9d3311",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b5170d-de16-4df6-a9bb-4e530bea0742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21609e5f-8563-412c-9871-a5de07969091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a8503d-bc3c-41ba-bbe1-00adcb0741af",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70774ed6-d980-4556-ab12-1d77d829214b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b28815-51b4-4993-aa7f-995fa13d9e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaaec4c-c1d9-41a9-8ea5-f17012415063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3e567c-b34c-43eb-8734-391378182142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881207ea-7dd1-4c29-b1b6-26c8b6ac869d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7b4594-be83-4648-8cac-27a79e4bf3c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e7011aa-8006-4f5e-beed-1b371d24b429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f97eedd-9767-48a1-82ce-b0dffa52f0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b64bf6-2d00-40bc-b2a4-cac6b7fece2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51c35be-030a-49e6-b076-e4612cbbe4b5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd282ff-0e6e-4df1-bdb0-517f4a4b3eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4725761-5563-4df6-ae84-11c33b9b2fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a36bbb-529a-407c-8396-23186c920b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54de95a-8a32-425b-942e-91c4968321bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d2491b-4835-49a7-92bc-08a2ccaf73b6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2824a7de-b7c4-4a1c-8e9e-509a1c3401e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c11b7f-7f87-4f2d-81d1-ec905bf85220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2633015-017e-4ebf-a299-69dd1c8f2885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6672ed48-4ffb-46ed-98d5-cc5ffa18b704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb1a18a-89bd-4f16-81fb-26871084700f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fb8ee3-4d95-4bdd-84f6-11790c0a9d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab124a18-17ae-4f33-89d0-60ae91e1e08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ed1bea-f1e1-438a-afe3-fa49f047a10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66777e9-7474-4e89-91e2-92214fea8a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6608aa42-8ff9-496f-8e9c-5e3be700ab8b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d015bc2-0f7c-4e54-801a-bda7938a0c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824de57d-15da-481e-a2de-ccc463dc3762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f995ead-0094-41ef-aa58-eb72a042b8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdbe680-9053-4785-8d6a-800376e49d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a667f3-25fd-4ffa-855e-7111cdb2f1a6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420bae77-5239-4c8e-bd58-d2449b0f19d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a667436d-0628-484a-b7ac-26e7f595b502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783bfecf-7e50-4283-91ed-2a679e1f02a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1087ed-0b85-4710-98c5-dcc43aef3775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc7cfd2-653c-477e-9048-be7786144113",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87385a72-fdd0-420b-90ea-a6061a26260d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8326a1c-7cde-4e09-a5f6-79dca5ce1700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bf31f7-244e-4941-8919-2fafd1ae9987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a138fca-7380-4cd2-a745-040225af31ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e672988-35d1-423b-a55c-cd8a235260e9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf25340e-63c3-4e53-b34d-aac2c5f2b7c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0412b65d-4f55-45dd-ac16-80655e4f417b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f9d174-7ba0-48c1-ad0f-3423688330e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6fc665-c60b-48ef-b503-609fe89a849f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52c2c73-d279-4863-aba6-b7d301341544",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4758a42e-cbf1-4dda-99b9-b9766877fbf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86d8cec1-59f9-43cb-8309-2297ddfe3822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3de39e2-5ca0-45f5-b5ea-e245fc6c7c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5e4616-8189-4ed1-9fc6-9dd710b5a750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a870d40e-dd20-4965-a688-d43608038da7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6385b4c6-7bb7-46b4-93a5-ae6992597732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5695e04c-206d-44bb-980a-239338986db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cfe0b3-b2ce-41c9-9686-b71631e63a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8339e384-0a39-42ac-9062-ee547c879475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91606eb-725c-437f-9f8f-939898d04d92",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ad03bd-e01b-4052-b877-42d2cd96fe20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6874e76-6aa4-42fe-878b-e6b6b5fcf15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb076302-bcae-4293-8322-8afa31d1842b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ded5504-0689-4523-9f45-4291e6d5e73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88532920-3678-4935-b9e5-ba20f4958e85",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59ce064-d0e7-42d3-9fed-3a74afd232cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d41139-f16f-4019-a04d-20cffb45f9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924e3e3a-0e71-47f0-905b-dc7746f47b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8277ffe3-e197-42a7-985a-39499a4008c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb80bb6e-02a4-4912-b887-f9765e1879a1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c2e89c-8bd7-47a7-ab83-06bbb391538f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5948be-2873-4a56-af2b-572c1f85b6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e6c9b9-b65d-4885-9441-06024a5ad1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fea97ba-b9a5-449f-9029-8f2b972873ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f42d973-4e4b-4f99-8656-a84a73330f8b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a30499c-8f6e-484e-8431-4b8d69b4628a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d702a6-2acb-4c58-9506-c518d6f52ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d125b50-3c3e-4e54-80d7-5ca4c04abbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02215e54-0779-4304-84eb-2213374b9d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d746d07-4248-46b2-b2ee-47d5cbd5d50d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5290c6-4650-43f3-9f05-695c8bd3f43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3240d55e-e348-4031-9cf8-b344d7b64e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a2f90d-514c-484b-8029-40158b846c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea46e99e-1f3b-4704-a20a-46600d5058b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f414ffdd-4559-4e9d-aabf-cfd0bae42352",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bff00a-2455-465d-9ca3-4d8b04a6298a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0ffbbb-861c-42f5-a5e1-8b8319ba84f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0236341-2490-4bab-a3c1-76bf699a005f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2847480c-958c-430e-b73c-290b9d9b5eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b33b7b-57c6-4c4e-9046-ece0b88461a4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bea164c-04e7-434e-8565-91e2b646014b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7085420-ba4d-4af6-b428-6316f59b65da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "081a8a0c-50fd-4b1b-9681-04bbb67f70bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4747ffd-b5f7-44a9-bb76-5ce48ecbcb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4420daab-e839-46c7-8983-ef6de3f7016f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c71588d-f485-4a8a-a254-fe5ef50e2218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1c09f3c-4307-4b51-9507-769a8501f5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5e5c70-783b-416a-bbaa-30aae35e5610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9ac300-184c-401c-93a1-5cad2f9c2e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8bc738-3455-474f-ae76-4e04a9403544",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c50b91-6e5d-45b3-9c12-6744c1f05e93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ab4ae5-c967-4363-b726-1866ef1205c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925ddb4b-0d3d-4011-bca9-788b292eec0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ca9102-32c7-43db-b1e1-333e6e3439aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce73b9d-ce35-4126-8fb6-ce9c00d447b5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9f3cfa-5355-4589-be08-1071d4e6d5d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1b70f43-ff09-4bcc-8534-9085cc69b871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef014bcb-4041-42c8-95e5-ea8f9698dac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606227e6-d6c4-43f9-9b1f-46ab71600977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55622303-0ec7-4ab0-8274-756f11046d6c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dfce7d-1860-4237-b1c4-5822a1b05eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8508322a-5fee-4623-a510-c93ded79d3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4671cb-84a3-4c09-8677-aa63a026e421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d60bd9-c22c-40aa-8fbb-0cea0bd237cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78789cb-b0e2-4386-8bf1-d6387b5b9c9a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52452f94-4310-48e8-9c7c-e7fa53d26895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b1d156-8a31-4f1b-94d8-41d9a924084a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f994528-8dd5-4770-b606-f99fa823a5bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdaab21-b443-4ea9-b2fe-a5090210a340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9eebda0-bde2-4415-945d-f6d7c7a744da",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3c0e24-3ac2-4cc8-9333-f3bf96e7be73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "007c3bb2-88de-488c-8116-09ed922fbe68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26854c2-72a8-4486-98dd-022a7d005291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19681903-d28a-416a-87d7-38e4e506a4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dc1484-d6fd-4d07-9e8b-073e9a3785ad",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930b7da1-6e19-4ff2-b03c-701d109ecd7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e435da8e-16de-473d-910d-43f019475a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74765789-1dca-41b9-a397-f6a19edd43e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f20da9-c509-4422-b8b2-1c5e6cd1aede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38e2e64-0be9-4172-871f-e997a1b7e7e1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dda592-8ecf-4a30-8ab9-cf0f778c77dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1718422-6f92-4508-a8c2-7053ba1a019c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72796f46-02b9-4868-8715-9a5f7fa284fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968a4447-dfb7-4821-b8d9-f13c7fcd3681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9bfc91-8dfe-4433-985b-39196cbaf626",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d16b72-c0ba-4b82-ba2b-1b5de6d5c9c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15de4040-d429-48bf-a6a3-237a7e1367af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bf76c0-aa77-4bd8-a7d7-1adf660b2ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f070ca-69b7-4de4-ac2c-054fb040fda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b381f8-d59d-4354-8b73-99b6ea4a95b4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1355467d-8517-4f47-8c84-9100d293a1e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d975c58-5888-4f10-9b3b-476fa10151d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e058ff1-3a47-4448-82ca-85928a85382e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8aca46-18bc-4f4c-b25c-8be6f1677cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5354989e-adf4-4889-8ca1-ec320d40628a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e473a4-adff-4478-a264-d8cc35ca046c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89a0411-2016-4dd6-af65-f9fb82f1f69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0114a163-6881-422f-a123-b8bd69800099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217e4494-145c-4af3-bcfe-7378b5b2147a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f3f496-e981-4c34-a3ea-790112e40b0d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87962d2-d70d-4956-9dd1-3ac9a24eca9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c461d0f9-09bf-4ea1-b2b6-df7cf21b4475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2257dd14-68cf-4f72-88b5-05ea88ea195d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef4c0c9-18e8-47b8-a78f-a92188025162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2596312-2aea-4ef7-9d4d-2bcb1f0321a4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a7bd76-ae77-4732-9cd2-cc04534340c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c240030-6c62-4724-bf41-72fb8242a080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707dbb3b-b81c-476a-be70-93093fd25b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59f3603-1369-48e9-acc6-a5794911cdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e517c7ee-944f-48a6-acdd-3a8b8e4c4595",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df05919f-11df-42eb-9d29-00d1ff7b0736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d281e4ee-c15e-437a-9a00-fced4a6e579f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c59136-11b8-4a49-ab5f-d4ef30ca8307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3035cfb4-07ab-4dad-b0ca-679e4fa68fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4b473b-669b-428c-b452-87232db06f7d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3c5477-7e2e-416c-a4a4-ac4107513bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f684fa5-3720-4db6-8394-2d45b8da2de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76abf2a7-5b77-494d-bd5b-5580dc1b2057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34597d1a-c5bb-4256-b884-9ece9f40c79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46865b0-84f2-4891-8e14-bda046cee9a4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b639ec1-9d8b-4e40-87d2-af5620590d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3a9a1e-45d9-4006-8f06-02b61e6b8450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d745482e-2550-47fd-9434-6b5f9f7385a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8be393-3a60-41e8-9456-15ac0c380bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927aa12f-1390-485d-8d22-b3d54bbb9dc1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c149df19-d502-4c8d-9683-0c9d1e9ac1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42488309-0ca9-40e3-aea8-095c7eda316e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f73572-78d1-4883-afa3-caec20c816da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc5cc64-4f04-4457-b84a-49fa77ea6660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1be4abf-a770-4d18-ad7c-c26c94ee3ac9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccd8bd8-7c29-4a63-8998-4084ff4b85d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5c4590-1b9b-43a7-8f8e-6658f2560c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff066f3-a38d-4d78-927f-9630a437cb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e15370-ec2a-4faf-8369-0ff58b6251a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174f29a4-31cb-4753-9ba5-c48d9f13daa4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe9e4e0-12ce-4510-b72e-dee5dcaebdc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2966d406-d824-46fd-a5dd-7f1256d3c109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ab1c29-a239-49d6-92d1-d45c4dfade7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562e00e5-c5b1-4fbc-a179-f591c755c9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f2b88e-647e-4ded-a3f1-40b77d307fd6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5773ad-c5c1-4e97-9b3c-d63b7cc54e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cafe5f-6c68-4f11-b8c1-4da578fd9b5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1daed2-3582-471e-904c-885b8098c3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff19968-b459-4a51-9f26-ca31780eaa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5192557-b811-45d9-9432-1c6806905ea1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434ea9ec-e2ce-4838-b321-6f47c3286b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6f3fa4-3eef-474d-b1ab-8ad34dd3d7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f7efc1-b4e2-4b6a-b0a4-29d1c64e2da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b715d309-3bfc-4bec-bf40-e9b126385de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba59bb6-4ae3-4bbc-8062-42d7af659265",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c2fb4a-05b1-40fc-b9f0-d657c34753f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9147e40-ac14-4bfe-9767-178c37d9454a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d426bd-461a-40f6-a4ca-2f1b13f8f92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca7b9d9-b007-4b93-a33a-d808156e615c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb91c13-8280-4091-8e76-33061681a456",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caecc394-4daf-4b9b-afe8-271def65101d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd9068c-d64a-4b8c-89c5-74e9e09da461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bfb134-40d9-4fee-9556-77f81ed7df68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a7e0df-3a75-4dce-8ec4-269e9f4131b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2241b7a-4505-499e-823c-0dec3055d07e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d70173d-e2a0-431c-9c08-4d4717934e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3899c37-d136-4462-83b2-d55b5cac0a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bafd04d-c420-4560-b344-f7be5adb338f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b155ca74-76ae-4ec5-b7e0-581c347ad368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c7f57b-bdb3-413b-94ed-295939a2358e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695ea9be-1889-4559-8232-c37f42e1e1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c6a759-b8af-45a5-94ce-9f603a1374ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2aa4f3-9fae-4985-b632-56747bc660d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abef38e-f021-4420-900a-ae5793015c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03b2384-898e-4d86-a527-9c5399d0bd84",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de8d850-8824-4e1c-b228-8d2faf4fb53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9762b4ca-bc63-4fe0-8b12-c0f461a87237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb11b84a-2e68-4873-8009-07f68a9a55fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b108745-abc2-45cd-a920-0fd9e548638a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4e3f8f-76ce-4a39-a72c-735c94ab4c5b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f74657-0100-405d-9a04-e624abd8c81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bc7845-5ffe-4700-ba49-8ed2cf0ad732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb263ec-d6b6-4e21-9fa6-12ee8b00cb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7f4c4a-92bd-457c-8871-70a0e49c8919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b53542-16ab-475f-8b45-ffd5f67fd2e3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd72a2d8-f6f4-4d07-9601-d545762f5804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106ff448-7a90-4e4d-8d47-d8f17cdbfa7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b1d052-bde0-4b4f-a387-4ebcc7dc4e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6aef5a-8580-4e0d-be67-fb5d6ecf971d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e39936-e7aa-43f2-85e2-f72d0da7cdf0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3140863-46a2-40ac-9150-b73a7bcaa8ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949898b7-04d9-4aaf-90e6-877f3cb9be74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b16bd2f-6e3b-40cc-8b7d-58260e8e9c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620e2d39-3e0d-4b10-8cdf-d9a60a7ea8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf5ff04-aa07-49d7-97be-1ac57fc07bb2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60dd7e7-40bb-475e-8e42-1757c8b22a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8961bc97-871c-49d4-8404-9f39eb4f5c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b853bbe-b4f9-4b66-ab59-0f3f9763042d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4956ba-8071-49c6-8ddf-6f49ef488cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83be94fe-d215-4ec6-906d-60484f10c0a1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340c03d1-1b88-4fa2-83f6-3be60b8fb76b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e083885f-3dc8-4a19-963d-805baefde71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef494b1-abd1-4ee5-8ff8-bbc1a2879d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d4c01d4-41a7-404e-8168-ca5be859a31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf75347-cbc8-4516-902c-774920616a47",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0340fea5-d81b-4db9-ab59-9479a074c8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc70dc0-07af-438d-a6fa-912f33c13798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14b0cb2-a819-4f2e-8b90-7da104e2b201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762132e7-0257-4e7f-8c6f-576d9b59ad8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69876c0b-49c9-4e30-abfa-09720561a908",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf166eba-c29d-46ca-918d-84ebe0501bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8653dc4c-54d3-4dde-8cee-c6a97f9b00dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7af9f7-011e-48de-99e6-9bffa8e3a2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5256e225-8dac-4067-9bf5-8e78c0bc0c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c3cb88-3027-40c3-a84c-cf58fc59133b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f7de91-5532-4a48-a3a7-f3c1319bfc09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5b3938-6bac-4e2f-b0ca-155cafba733f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5bf8f1-75b0-4ce4-8652-1cf7399c4928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902a88a4-02e0-4236-932f-508d85b594be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d8dbb0-7fe3-475a-8715-68a3402ff4fc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40bd6e9-8364-4657-b8da-6686d5198424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace6333a-eb14-4e3f-b237-b9424d579c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6944eb77-130d-48a8-bea4-c024626967a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b554a57e-5797-422e-959e-a89c443b783a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289852dc-fb5e-4e84-96a3-9978cd031b77",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc0f9cd-6834-4d6a-a739-aabe4e09346e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8747a813-2736-40f9-9fd0-9e389f20cdaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac266fb-4a68-49c3-b947-bd1ecbecdc00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344193ca-138a-4a07-9dd8-fe07e22c6040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81590eee-0b18-47ef-ab46-0d3755dd7ae3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c1d43e-1ea0-429a-b150-d607fa815675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909d221c-d99b-438e-a66e-cabc0227e746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ee9265-875d-415d-9860-02705714e98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427a1497-5f64-49d9-973e-66a87569ed30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f328b14f-08d1-4bcf-8ee6-b7d269ab0729",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7309fd-5e72-4845-91f0-b3e8cb8c0ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0d0a06-d103-4d9a-923b-f55df3d63942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe0ddc4-d30c-4cc0-96ea-10d6db43334c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2d32c7-0b01-43a6-ba65-bc9dc180b31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b539c471-2706-4c00-b522-396650fc7d4a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d296d31-a5d0-48e0-9637-81540d2b7d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eacb2067-01d2-47f3-9ed6-59352a3af483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad511fd-e23e-4882-883a-dffbba927238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8297ad-57ff-4983-8fbb-6154860db9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122ba494-398f-4930-ad9b-ad4f4ec75251",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d77604-b680-4ff1-afec-9a57aac70233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b9388cc-9534-4372-8708-7eccd693bed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c898e7-ba79-4bd6-b638-5fd4c6fbc27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47b3b41-d96a-4d7e-832d-f6c706ac2653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f73633-9c7f-4583-8e46-1ff4acdc2a0e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c685fd94-92f4-4567-8fae-e6312eff9c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30851d3a-dff3-4970-a514-e80ebeb9ac4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac222bd-c96c-4f9f-aa62-08b33757fc79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073a643e-b926-46c0-94de-869959d40496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67c76ea-543c-4d5e-a417-3201004dcc22",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac46185-cbfe-43fe-84cb-58977771824b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c83195-796f-4bc0-aec9-1e8712e801dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71799aba-70cb-4f4b-9270-50a46a64d929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee926c14-d760-4d74-9208-462733854f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7d6327-86fb-4c8a-af60-b32cbcb0e57c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2d2dfb-474e-40e7-a725-54ab2de9f14c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5106f2b4-adc3-49d1-baf5-5ee2275d22d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7bc835-4fda-498a-8a06-eff05b9ff5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ace4dff-16b8-4af1-bfc7-66cfa4a662a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4366a940-dc6b-4b13-acdb-60963af1233f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a4c18d-24d8-455b-bf22-0dd7c48354c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3926e2eb-9cd5-4068-9aeb-5db37e004d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a3b6bd-b821-48ca-a5e0-46f47045e7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd9d7cb-4a2f-426a-b5b8-bf84f3cd13fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b741d26-1c82-40b4-985e-85f172fe707d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0313f3f6-29b9-4533-8b1a-b1032bb78de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db18f7d4-0909-4779-82f6-4a1e9127f8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e241411c-fd8a-4bb9-8ef9-23d83aeae1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6705c4-a356-42ab-8cfd-6f096226920b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324653f2-2273-4140-8894-b9c049db744e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd0cde0-7eeb-47b9-9918-2fbe1195f4b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f667781-d383-4ee9-8b1d-168234e9ea61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cb911c-1086-4fcd-aaef-0965d480140a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c14ae5c-9b7d-413e-b56f-9f0eece3bf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c08d4f9-d60d-4cee-8e97-f106d4c38490",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ce8d3a-c0c2-4943-bf59-430f3f7f51c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9465525d-31ec-4473-bb09-d6b043b32887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c946991d-2689-4b85-bcc0-bb177ff822d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391c2259-5079-4432-9a6c-63a57180e78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5bb055-50e4-4c9e-b8e1-54cdd4fb020d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeaf4299-f077-4972-af23-b94c161d898a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73479fd5-f017-4f47-a209-991986120b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eb8427-76e1-49e0-a177-642bfd98bd4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc1320d-dc87-49d3-a423-ba9aade9bba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0212181-0746-4970-81d6-854217cac17a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bc0b89-2fe3-4e4c-b90e-073082e9f1b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c8ae895-ae7d-4374-b352-9e78270cabde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4c8aeb-7b9d-4fc1-91ca-09c8973c4750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a35aa55-2a9b-4004-8021-49042d687431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a401b8c-588c-4064-82eb-06413ceefefc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54f4297-8287-4b00-b8cc-f40b021da5f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a47cf6e5-7d0e-4f94-aef7-7889ac5d9842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "854bc72d-a39a-4573-be6a-03e4c431f9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd25f331-38f9-478b-93e2-25f5fd509d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc5c7d8-a59e-4e82-a627-d30ac68f73b5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44dcc496-82a8-4065-8797-8fe3f1e044e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496ae54e-9ef7-4f95-b1b7-afd4c2dc3596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454c9671-89b1-4a67-93d6-caf0b339a12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78254126-a032-4cd2-84d3-1ad0f86e57cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d1074b-a7c8-4b7e-8213-0264d53faed6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d8951f-a7e5-4a53-96ac-181783ac7e3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6736b41-32b3-464b-a053-b1ca2d493cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e56c287-633f-4e78-808d-f9675bedc096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e651b32e-b594-4a19-baa3-1b2aadb12d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2417f665-381c-46b6-83c9-7e8abcb9cb7c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2138e041-3170-4826-ace8-0d6ce835c98b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c84d12b-50ba-47bf-8b75-90ba967e3613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d9c857-7955-4eef-a8b6-00e54bacf2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74e982d-3d49-4c0f-a915-e6e0fa82b382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116bf883-51df-4225-abe0-12c0987f48f2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38e30db-6765-4ea8-85d3-1495be04293f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f840423a-3262-4c0e-8dec-636313a20475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bc3e48-eacd-4349-9b71-dbf906279fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1eabf13-3361-4da0-acbe-fbe127460838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a443c4-c230-4e01-ba3c-59856cfcf448",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6759e8bd-f7bc-438a-817c-dbbd25a4441b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00a6a190-be2d-4d6e-8d20-cea4b97ab474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ad58f3-b214-4f92-8236-6d5f1f07498d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45fb3af-917f-421d-b46d-e5197b5c6196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee97852e-6971-40b2-b318-7d57b602f30c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035f6375-0ac6-4008-a373-43dd8fb6d024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fe46aa7-e9dd-4e14-8082-02801545a953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7ce271-4cba-4768-9a13-01a0b9e24812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0428d2ea-1bcc-42f9-8610-717af0d8f392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0f0aff-bff8-482e-a963-39c7fa4a756c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e74ca5-1540-4a49-befb-34ab1dc72882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4d513a-d2b2-43fe-9222-ca2af1917b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4046fa4f-6307-4223-904a-dd39e8124a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d4e1c6-86f6-4df3-b829-36091b86887c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95bcb50-73c3-4d20-b4b9-4bced6e7110b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55265bc-dd1d-406b-b641-a85df11d74b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc94f7c7-72d7-4cf6-a1b7-05c2a0f80c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340d3deb-f021-4eb7-b24a-a642ccd937aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f386fe-2aef-4411-989c-d2395be98933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d06b909-d5c5-4df5-a46b-f2ae18e3250e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293c90e0-0a91-422d-bd82-13ba0c1b4ac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fca6d23-57a2-42f0-ac73-6218283732b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0dbf7a-a7f6-4300-825b-62d391a2161c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02d8900-a5e1-45fb-8f9d-671d367ae196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81b6507-059c-4996-8716-a6637bb6a034",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87850c1d-6bd0-4eac-846f-db13dbd3535a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4826e991-4794-4d46-a5c0-099e91414209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f40eee-3041-4524-9392-637a9e2982d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12918fc2-b1ab-4682-a272-eaab4bf90ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a297c1f-46c1-4c51-ae19-83a96207f8e1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae15eea7-58ce-4562-ab56-0ee67052e7e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f08ff9e1-d804-420c-9a85-a848e9c1f579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64813563-6032-4325-9ff6-af4113211d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d2f10e-b339-464d-a2f3-7b36c5558fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21e6997-cc91-46e0-91f8-2845328bdc50",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5a190b-88e6-48c5-a4d0-d917b894b47b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "469d3883-00be-4a62-9db4-d0e0b907955e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bc49d6-8f59-4f65-ba77-c00da6b5e1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c2e3b6-6cbd-4ccd-bb4d-983717f59898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3403f267-fe45-42c8-88e0-d015bfb14d3a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0802be-b41f-4fe5-9a64-5d149c7102a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd3d46cc-08b2-41b2-8ce2-235240ad6ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1141202-b835-404d-9187-ed95920a53d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87d7ad4-8ad4-45d0-97a7-879b26ece82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452ce78b-df6d-4ba7-8594-c6e5dd466b6c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4c2a44-3544-4d8a-b0cb-c99163cf7128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19e6153-489d-48a3-a061-b7d92cac1d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e07cb5-b6e9-4f1d-b450-5e4bd61519d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb49611e-ecbc-46aa-92c1-25dfef319923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14177cf5-a096-4e21-8bb4-934f6978494c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da74ab0c-f5e0-474e-93dc-1f51993a5fc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7ae3c8a-d23d-4942-9294-14f1551e62c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d37b14-526d-4384-b6ca-30aad86b1b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deeaf705-8de9-4bd1-a04f-d4791259e7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea9e8c5-7620-4ac9-90de-2fcd22a59afa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c92ae5c-cff1-4dfe-80da-fb2e89298644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b39165dc-b4be-4800-868e-99b7409bab50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac8849d-cd86-40d5-9e80-c454536997a0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220d66ad-cf3d-4186-aa6b-74babc63bcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1514e64-fd9a-49b2-9634-1dffba79c1cc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c95082-545c-4951-b198-88500ca4bbeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "607956e4-ab44-45e1-acbf-2c55206cc3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baae90b5-75dd-4498-b018-c65038b30784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d3b5fb-4f3f-4d57-ba35-39c2600c4ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebc1ebe-878b-4fae-9198-387a660b60a3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7371e6-74ab-49ea-8df9-57616f562d91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0de956f0-ac49-410c-bb4d-db1e28b3a192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acab01f-9067-4ffd-bb62-3a5c6d1ae39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5eb6fe1-b17f-47d6-8af0-78ec9353bc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fe7e46-5206-46bd-b498-3a2a37e44b92",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd9123e-fef1-4e57-b7ab-64bbf872a3ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb934d7c-20d4-48e2-8b1c-d93235c4a487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88046f7e-fbe6-4ed9-ae55-b327cc41a61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b710c11d-4988-4f6b-8488-cf83dddd0e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6e9680-1b91-4a14-b972-0367965d084d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46605d6-a9c6-4006-99a0-daef6d15012e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11d283e-b9f6-4469-a1d9-cb7a49d6fc13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6863323c-8036-47f0-88da-3acc89e60ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f296c277-9eb7-4151-96b9-dc124d0d3543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098271dd-3069-4fd5-936c-a62192292117",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3164c34-6001-402b-93c4-a9532a9f7ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a8b4c6-9d9a-4142-aeb9-d95f947438a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd94e39f-81bc-4c53-84dc-c2b7611d6a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ffa8d1-4cd8-457b-a475-79f1ecb02be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186dba42-e277-4659-80e8-64aedf58ebcb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68afb6e-f680-4fd3-8126-ee29ba3e208e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b28560a3-fef7-4655-85b8-347bd81c317c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc857c0-038a-47d5-846a-bafc093f2914",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b4e5ee-26cd-4cfd-8911-0080c51f26a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f34dbd-0c1b-4787-b1eb-cd9754aac788",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8d7d3a-3f30-4805-9d9a-13b5f7eff7aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "900ce27d-0f1b-4089-958a-b598ac230bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ace4fcd-bbbc-4e39-a89d-2396d05026d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca775d33-1481-4734-8680-9854a5982c57"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "234f96db-117c-467d-8058-26e52fc26fef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07887dca-47c6-4d4a-8e8a-6da7bcfa3a1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9024f78-7054-4e67-82d0-d4be5baf312f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99a0c522-7dcc-4b64-ba03-9d7d19f69504"
                    }
                  }
                ]
              },
              {
                "id": "14d7bef9-07e3-4a68-9944-e16737c6479a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31baf2ce-d35a-4074-8f3c-dc6bf24d98b2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99c105c-2117-49b3-ad03-9f8802d83dd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "18ac2afd-6355-4e3e-a19c-a1c9cd789f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3535ed-0ea8-4be2-a2ab-f0ae71786c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1488cef-0a2f-46de-8345-bc89a5c5be9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcdbca66-8bb6-4f0f-9b97-1f6edfa521da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "396b40c9-04d6-4f52-b308-d349eff0a665"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44726f78-30a5-4e4b-a98f-3ee81cde39a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0961e88-be1b-4305-83fd-027ae627cf8a"
                    }
                  }
                ]
              },
              {
                "id": "933262ef-bdd5-4678-b217-99bea368e89a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "23320f05-093f-463e-8c4c-9cfdee41181b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ed00d3-004d-46e4-9086-a48868e2b103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9b0f1c46-1717-4396-a7cf-741c75287781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ab627d-cac0-43c2-9b61-2a16bfddc441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5d3b72-698d-40d8-9de8-ff362a1dba44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2ccba637-3dd1-400b-a4e4-454e12fe5d9b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fc6a8693-abab-4b56-81cb-7712cc04bb64",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f53a43c-ad30-4d71-8e08-a6fc9a1573ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e36d48e1-586f-42ed-86e0-6d8a1fea1bd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f008ff96-11d5-4ffa-892a-b8c56c2c7f82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dd38766-3dcc-4ae8-9e92-c410db857e47"
                    }
                  }
                ]
              },
              {
                "id": "e88ef2db-6436-4cf4-a560-45d610b7a06e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b659380-0d3c-4cee-a2f2-1aee4dfae994",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d2628070-dc0d-4e2b-8f2f-94843c038a91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71207f7a-0979-429d-92a8-c6de427253f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28b6402c-3f39-4c70-a50f-c7bc58f8cff5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07b1a42c-a216-4f73-84d7-673e0e9f606d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7131f7d1-f9ca-423b-86e3-b95bd65a7113"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "379f82b7-e9ca-43e6-a1b6-077c75aa5419",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c9b632b-5fd4-4de0-9839-e72506b5bc6d"
            }
          }
        ]
      },
      {
        "id": "929ebc81-152a-4d06-a255-966bc4bf63c8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "371185eb-ec34-48a2-9a4d-e4ba5d740d4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b9dd96e-9fa7-4a85-a523-85e5b5aaba15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66dafc3a-062c-4cde-9ca0-23c8eda3fc98",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6a2936-0be6-4492-a059-5ebe3c58041c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2ecdca98-39ae-4c3a-8645-982f7608450d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cf4fea-599d-4c0d-ad0c-b00a1f7de34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57514dd7-6303-4739-af52-77c1a8076a85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d2c6aab-5844-4e69-9efb-38bfed70fae4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b60e48c-0a46-481f-bb2a-79a2820998f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e38b6b7-6b59-4e22-954d-b2afa5d3029a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "689e0bdf-bc53-40ca-86c3-5e0ec3a62696"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88105cb8-8510-4d14-a120-c05b58725809",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4be56540-f6b1-4d8a-8cca-f18e4d39e7c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d643d980-d8b6-40f6-b12a-8246d73aeba4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25f890ac-c82c-4beb-881d-dc8c06d548cf"
            }
          }
        ]
      },
      {
        "id": "4516a752-d403-4d9b-a053-7a1a2bf78f2a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e1ed777c-c875-443b-8da2-0c8451666bc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48ddcdb0-e541-4ea8-8dee-79409733333e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb817d34-56cc-4499-9417-d29c643da4d1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b705f073-c17c-4b70-b71e-60a2e8388084",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a41caaf-cbc4-459c-b08a-58de2c94b681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d642f99d-3cd3-445b-8c24-45e2ce8e86fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fb02ca3-614f-4086-af1a-8f3c0b68dded"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51566bb7-2285-4e1d-91f0-5cae8ee387aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89537584-2fae-428e-b717-b7b7728b39dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7507469b-0d9e-48cc-88cd-2e8d72a5efd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6957930c-f64f-42b5-a109-404af85fe029"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ea82e3c-bbc4-4556-9ef0-3f63d441428e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "43a1485b-689d-4629-8816-8be94c84d466"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fedc495-2416-4e83-ace4-0751ff984833",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17fca4f5-5142-4e84-9e67-72062ee22556"
            }
          }
        ]
      },
      {
        "id": "92e152d2-b471-4b2f-8915-ae0f7e184a09",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5d18722e-0a91-4f00-91a4-951d41e8b5f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b190a6e6-5f47-40c5-92ca-6c5715d65a73",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e386402-37b8-4ed0-960e-e2a4061d8c16",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7fbbea-e825-4206-8352-ac09be7ce9c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be3d374e-4fb3-4d1d-998e-e1e193d38520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31fca01-6dfd-4478-98c0-fc9773936d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e25a449-8aab-4b56-8822-a49a16aa7f72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c37e6a82-4302-4e12-ad67-026c29e7d74d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d05b6cab-2ac3-4a73-95ac-37e6f7d564f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2e0784c-84db-4b5b-b483-632cb76df524",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "780f2548-4a99-4c43-ad9d-5c83865be1b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0332d751-8ed8-4c6e-93a0-26313810dbff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "12c3e66e-ae8e-460b-bc6b-4ef812f53f87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58972a81-c194-464b-99fe-d0894a7aa5eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "159262e5-5d88-4b20-8e1e-adc6c57e1f16"
            }
          }
        ]
      },
      {
        "id": "5d37eaa8-ba9b-4f77-8268-512fcc10f4e9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e2a7efa-6aa8-4b04-95ea-469aa2f8e4fa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5e793bb-fd71-4e5b-9c02-6ee25e7285a6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a0db2a65-bb9d-454c-9c92-218b2459890e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77f0e53f-b9eb-42a8-9bdf-f32985252b9f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1a1b5ba-c02c-49b5-b739-f7ad5eb4bc34",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 89.33684210526316,
      "responseMin": 6,
      "responseMax": 5689,
      "responseSd": 417.8567355561915,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1711758788746,
      "completed": 1711758823188
    },
    "executions": [
      {
        "id": "076cc9d3-a868-4f0c-97c7-015adce068ec",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "31963052-bac8-4615-a0b0-e5a43ab6df35",
          "httpRequestId": "0554272d-0998-44d2-9dc8-840a04edc543"
        },
        "item": {
          "id": "076cc9d3-a868-4f0c-97c7-015adce068ec",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "60352270-db5f-45b5-b98f-a3345b5b39b5",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "6030d986-33e2-4fd4-9e24-9939e5893878",
        "cursor": {
          "ref": "70035553-9be3-4b8c-9a49-55741f35a19c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3c06b269-d4c1-49bb-a1dc-b5acdda0843f"
        },
        "item": {
          "id": "6030d986-33e2-4fd4-9e24-9939e5893878",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "82db14b0-f216-422f-a173-85eb3698acac",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "4fb82506-a48f-43b4-b55b-830ce4330389",
        "cursor": {
          "ref": "d5f18ed9-19ad-401b-9d7e-74ffa195b6f9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9120e1ca-c89e-49c6-8107-9fe4f23b1425"
        },
        "item": {
          "id": "4fb82506-a48f-43b4-b55b-830ce4330389",
          "name": "did_json"
        },
        "response": {
          "id": "ef13e398-4426-40f3-bff6-90256f8ef403",
          "status": "OK",
          "code": 200,
          "responseTime": 154,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43000252-64ce-45f5-a005-2869f0dc3ada",
        "cursor": {
          "ref": "77ac718d-bcc5-4c66-bd16-fbdf5790a0cb",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "606dbe4d-9b48-4a3f-8777-64b5690980b6"
        },
        "item": {
          "id": "43000252-64ce-45f5-a005-2869f0dc3ada",
          "name": "did:invalid"
        },
        "response": {
          "id": "5b1075e8-d3e9-4aa9-9756-204256392e86",
          "status": "Not Found",
          "code": 404,
          "responseTime": 261,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43000252-64ce-45f5-a005-2869f0dc3ada",
        "cursor": {
          "ref": "77ac718d-bcc5-4c66-bd16-fbdf5790a0cb",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "606dbe4d-9b48-4a3f-8777-64b5690980b6"
        },
        "item": {
          "id": "43000252-64ce-45f5-a005-2869f0dc3ada",
          "name": "did:invalid"
        },
        "response": {
          "id": "5b1075e8-d3e9-4aa9-9756-204256392e86",
          "status": "Not Found",
          "code": 404,
          "responseTime": 261,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40137827-33ef-47cd-b8ef-fd7c584a7645",
        "cursor": {
          "ref": "38efc4e6-c080-4754-b12f-57a38e6897ab",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cfc38608-489c-47fc-8524-d646475e6c8d"
        },
        "item": {
          "id": "40137827-33ef-47cd-b8ef-fd7c584a7645",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "87fe89c1-2bb9-43d1-8983-6895dc806d08",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a700aef8-d57b-4713-b949-d04ccad2816e",
        "cursor": {
          "ref": "d9ca413f-d426-4c2c-895a-9f36d876eed6",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a28e54f8-05b2-43f9-9b37-1696fd5d4765"
        },
        "item": {
          "id": "a700aef8-d57b-4713-b949-d04ccad2816e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a859bf9b-1903-41c2-8455-156de90f16ce",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff15a62e-9a8e-4f10-bfa6-de1c380b0bc8",
        "cursor": {
          "ref": "d223e9a5-790c-42b6-9853-d8d14cc73bfd",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "49ec8fbe-0b97-4a4f-8d0d-d6368d0850ad"
        },
        "item": {
          "id": "ff15a62e-9a8e-4f10-bfa6-de1c380b0bc8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "53032ae8-49f3-4ff6-81ce-7b7669a7d17b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba611f6-eb39-4719-b3bd-9f5bca3e124c",
        "cursor": {
          "ref": "557de887-e92e-4226-a68a-20e467650b48",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3e1bd091-b4f5-4016-ae69-3d4369c85f51"
        },
        "item": {
          "id": "7ba611f6-eb39-4719-b3bd-9f5bca3e124c",
          "name": "identifiers"
        },
        "response": {
          "id": "6ed0dcd7-fadf-4734-aa1c-3c17a69b4aa8",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d11c11b-73a8-4ae4-87fd-e1119aa731d0",
        "cursor": {
          "ref": "f1485351-d1eb-4cfc-a28f-5513ac0ef0de",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e944bed3-3272-47ac-a090-5476dc498f1b"
        },
        "item": {
          "id": "8d11c11b-73a8-4ae4-87fd-e1119aa731d0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3d217632-75e8-49ef-b523-d813e634582e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3869a841-f3af-4266-b1c0-b5fddb561cb0",
        "cursor": {
          "ref": "5c117be3-59c9-429f-8443-9e04f3407421",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f8a29e7e-87e0-48ae-82f2-afb35f6290bf"
        },
        "item": {
          "id": "3869a841-f3af-4266-b1c0-b5fddb561cb0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "facdfef3-f084-4013-9b7e-370122baba0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6c4f90-f4ee-4aff-b6ed-ccfff8212a22",
        "cursor": {
          "ref": "87f4bb47-14a3-4871-ac62-2bf84c38b678",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "05eaa59b-6955-435c-ac4a-593773f02921"
        },
        "item": {
          "id": "fc6c4f90-f4ee-4aff-b6ed-ccfff8212a22",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "85eae574-9296-492d-a571-c5d3367b4e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4071f75c-68d9-4235-8bea-89dde16b9609",
        "cursor": {
          "ref": "859a3cf4-580b-4b50-91d1-1d0b52fee447",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5d87664d-1a93-4a53-be20-c4e45449e034"
        },
        "item": {
          "id": "4071f75c-68d9-4235-8bea-89dde16b9609",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a4eeb4e3-d2cc-41e9-a309-06da10f19e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35aad317-51e6-4973-a564-0425fd4e9859",
        "cursor": {
          "ref": "14ffcb3f-7c3a-4c77-8511-d9ea49628a85",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a2f8ca55-9706-426b-917d-a6a9f867dd82"
        },
        "item": {
          "id": "35aad317-51e6-4973-a564-0425fd4e9859",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "49d9e634-13a5-45a5-8810-57f6a2246357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3abc21-f2fd-4aa3-9394-97e7a523f37f",
        "cursor": {
          "ref": "e7b64fe3-2260-4e2d-8278-9561ce98547f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4df0c4b5-27a3-46c8-8811-cf5ceede3e2c"
        },
        "item": {
          "id": "6a3abc21-f2fd-4aa3-9394-97e7a523f37f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "62e73a40-f210-4c3f-abcd-57d56b3f5ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d2f85d-6e86-4e75-b857-b0a11a16bbad",
        "cursor": {
          "ref": "4cb14b88-679e-4083-9422-1e30e3129063",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "22188d51-0ece-4d8d-a1e0-c5b2aa117fce"
        },
        "item": {
          "id": "40d2f85d-6e86-4e75-b857-b0a11a16bbad",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d555966c-3767-4229-a338-af578a0ff3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e1a1f2-0465-4bf9-9d7f-d3cddafdd089",
        "cursor": {
          "ref": "e5c9cabf-0457-43b1-838e-9b003588e7ec",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "678e7c53-380a-4e89-bf80-00810e96b632"
        },
        "item": {
          "id": "f4e1a1f2-0465-4bf9-9d7f-d3cddafdd089",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6b984d78-f2fa-4cec-8f16-ad4e386c1297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb2bc1a-b7e4-4d41-bba8-910f218b5f08",
        "cursor": {
          "ref": "f6eefc91-8382-4b98-bf7d-4916668ea066",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2dcc3f50-95ac-4a35-ae2a-5c6fd77a88b6"
        },
        "item": {
          "id": "7cb2bc1a-b7e4-4d41-bba8-910f218b5f08",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f327c039-7281-47bf-b910-f0afe7e1f412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605cc8ef-d4c7-4756-8279-375ab8cead5c",
        "cursor": {
          "ref": "8daffa23-5834-49c6-8920-b62dad8f1c53",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fcb3c3dc-6bff-4cf0-a9d5-7101f41ad2cf"
        },
        "item": {
          "id": "605cc8ef-d4c7-4756-8279-375ab8cead5c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "74f8ce97-52aa-42d6-9c85-a6feed2e5927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41974aaf-d559-4f50-83ff-d44623cbc7fd",
        "cursor": {
          "ref": "5bbc635c-4150-4d8a-b622-6cfffc1d12e4",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d1f134ab-28a4-40c3-895d-4adc54788fb2"
        },
        "item": {
          "id": "41974aaf-d559-4f50-83ff-d44623cbc7fd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7b6bdd63-ea50-466f-81d3-174571310cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff76591-a1dc-4521-8c02-fb2d455f18bb",
        "cursor": {
          "ref": "00c05f31-cfcd-45d0-baf1-3edd82e5c627",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2c644046-8d41-4dd2-96b7-ef0ed0b2f72d"
        },
        "item": {
          "id": "dff76591-a1dc-4521-8c02-fb2d455f18bb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "61fe8128-bf24-4c22-aca4-821d4c5daaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97775f83-f14e-48d8-96be-2dea15ad597b",
        "cursor": {
          "ref": "0db0ccfc-f766-4067-bd1a-0c9cec247173",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d0862bad-7f5b-4aff-99d1-bb667fefe9b3"
        },
        "item": {
          "id": "97775f83-f14e-48d8-96be-2dea15ad597b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "53b9eb18-a80b-4920-acf3-d11845698f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b1ecfb-a2fa-4442-81dc-3367b5353592",
        "cursor": {
          "ref": "db95f820-126c-4e29-a39d-d7b1697f2426",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "10e678b1-d369-4890-8526-d4914815a108"
        },
        "item": {
          "id": "86b1ecfb-a2fa-4442-81dc-3367b5353592",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7d7ea58e-d36e-40ca-8d3a-d26cfc4522b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fd45bc-c23e-458c-b437-de962978202d",
        "cursor": {
          "ref": "cb96709c-aca3-418a-80ca-a9b8f1993890",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7e71e8e3-8228-4834-90ab-975d5d4a15df"
        },
        "item": {
          "id": "22fd45bc-c23e-458c-b437-de962978202d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d653e6b6-aa0b-4cf2-9572-774a997ff153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea922c98-44f7-4395-89d4-cd0018c504a0",
        "cursor": {
          "ref": "ae2eb622-f9ab-4641-8f1f-5c717a263190",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "645571c0-8f6f-4482-b4de-a52c554bec72"
        },
        "item": {
          "id": "ea922c98-44f7-4395-89d4-cd0018c504a0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "65a16871-eb7c-4239-b7a0-7f1230e283e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4b7e83-6998-48f7-af0a-cc4cf98ee59c",
        "cursor": {
          "ref": "77afce91-2c93-4e74-9d55-c0cc077057d9",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1a1de346-ab27-406e-baa8-f3cd8524b8bf"
        },
        "item": {
          "id": "7d4b7e83-6998-48f7-af0a-cc4cf98ee59c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "55f96a3e-1469-4b37-9302-cc693baa4ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8467646d-03b6-432e-861e-41f04078b674",
        "cursor": {
          "ref": "be9ed40f-9696-411b-adb6-7970636950e6",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2f781c48-3efd-41c7-8468-5a69e08638c5"
        },
        "item": {
          "id": "8467646d-03b6-432e-861e-41f04078b674",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4722c27e-d3a4-4f5d-a0e1-99beafb0c987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af20de8-8df1-49a1-bc0b-3400570fe59d",
        "cursor": {
          "ref": "74d7ee50-53ee-4b23-8305-e4a4a76f9c10",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ece1c2db-f0ee-4637-9e21-a2178a30bde3"
        },
        "item": {
          "id": "0af20de8-8df1-49a1-bc0b-3400570fe59d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8a000882-f20a-42f0-a26d-c5b7b9188950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f52617d-26bb-4c9d-8c28-ed81c52c92fa",
        "cursor": {
          "ref": "4573cd1a-8cf2-41ae-a207-08f8015cabe5",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "464e861a-fb26-4a5d-a1a7-e7952ce74745"
        },
        "item": {
          "id": "5f52617d-26bb-4c9d-8c28-ed81c52c92fa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "06fa2548-618a-4690-b5d9-1bd629b91667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45e2652-36e3-40f2-abe2-d3da66ab09dc",
        "cursor": {
          "ref": "002ed44d-2e97-429e-8274-cc2826aa12fa",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d39bce6f-b046-4dac-82f9-7af2aefbe5b2"
        },
        "item": {
          "id": "f45e2652-36e3-40f2-abe2-d3da66ab09dc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d466e6a5-2bac-4253-92c7-0dffd742ebfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c5383f-d216-4e5d-9731-9748a283a2e4",
        "cursor": {
          "ref": "78137c0c-ca14-4a21-a544-859cea888182",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "eb3a6448-863c-4594-8a1e-6dd00896fc70"
        },
        "item": {
          "id": "c8c5383f-d216-4e5d-9731-9748a283a2e4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9a0694ca-754e-47dd-bf5c-231fa1bf864e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847e306b-9429-41b3-bcdf-873e48d18d13",
        "cursor": {
          "ref": "cfd52856-83f6-460a-8c10-c8d70f66e048",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "03619901-ebb6-4f4c-af1a-a94e2c429485"
        },
        "item": {
          "id": "847e306b-9429-41b3-bcdf-873e48d18d13",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "81c0578d-9158-4880-a297-8ca511febf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ed412a-0660-479e-ba9a-1c7e095d3f85",
        "cursor": {
          "ref": "7e2e2175-64a4-45c5-84a5-4d02740f9b38",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "348767b8-b25f-4096-89ec-1af7474f58b3"
        },
        "item": {
          "id": "27ed412a-0660-479e-ba9a-1c7e095d3f85",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e4a7c515-ec0c-4ee3-95dc-7d991d434de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf3b9d7-a5ee-4dc8-bbec-89fd8df9ab33",
        "cursor": {
          "ref": "89185272-9e2e-47aa-8da2-d4f6eaf100d9",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f74e1213-c140-4df5-98c1-4d6b4d0c7347"
        },
        "item": {
          "id": "7cf3b9d7-a5ee-4dc8-bbec-89fd8df9ab33",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "63be2312-a77a-4fa4-9d5b-25bbb3230390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fe0a54-0098-4824-8d42-f82534125bed",
        "cursor": {
          "ref": "69921031-bb2b-4c3f-a75d-57548c8ec74b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5a29df48-4919-4b55-b0f3-be2d2a5e5312"
        },
        "item": {
          "id": "76fe0a54-0098-4824-8d42-f82534125bed",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f92ef900-5383-4587-ad45-4a84c4ebfaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845dbd64-5704-48fb-a0cf-bd482ca6ee13",
        "cursor": {
          "ref": "f4c91ce4-2eed-4af1-b787-30ec80a2b25b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0ad7d79a-3f29-4e06-a92a-4f9009296ec4"
        },
        "item": {
          "id": "845dbd64-5704-48fb-a0cf-bd482ca6ee13",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1c6e95f5-3c29-46af-992a-2081c196f632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362f799e-28d2-4abd-bc27-9bb23f9d2885",
        "cursor": {
          "ref": "2720722d-e0ac-49fc-841e-e7c17307d493",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2536da65-03bd-41d9-bda7-906b2288aa61"
        },
        "item": {
          "id": "362f799e-28d2-4abd-bc27-9bb23f9d2885",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "69a87eb1-080f-4925-bb3d-b2c892c715e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb57743-e6f8-4037-8c3b-297fa6387660",
        "cursor": {
          "ref": "bb0d3a13-e8ad-4b55-a287-204632ab45e8",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9d13968c-02b1-451e-889f-56e487beeae4"
        },
        "item": {
          "id": "8cb57743-e6f8-4037-8c3b-297fa6387660",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "df999a34-1f46-4923-9ea4-a9cc349fee34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7dbfb6-362f-4c05-be92-9fd8614f7da3",
        "cursor": {
          "ref": "1861383d-1c40-49ff-9a6b-d4533a381b22",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "16f3ec62-d598-4831-9f86-53856aa1c498"
        },
        "item": {
          "id": "6c7dbfb6-362f-4c05-be92-9fd8614f7da3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d1eed6ab-3c90-46a6-b425-b2800749fdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ad25c6-eefb-4787-810a-f3c240e5895d",
        "cursor": {
          "ref": "3e83dea5-681f-467e-9445-8ba015a0b5e6",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2082ba26-04be-4fba-9ed9-3513451c3d43"
        },
        "item": {
          "id": "11ad25c6-eefb-4787-810a-f3c240e5895d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0f6d0c1f-c1d7-4781-9427-b3072a367b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbacfb67-009b-429f-a5ff-f075a62c4790",
        "cursor": {
          "ref": "2dcd127d-e95e-4fe6-8245-b11708a7a45f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6a7365ed-bebd-482e-8eba-2709a81074e4"
        },
        "item": {
          "id": "fbacfb67-009b-429f-a5ff-f075a62c4790",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "685e2dda-8c8d-4282-9df5-17933d1fd244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e7e63f-43bd-4487-8983-1ebba27c18cd",
        "cursor": {
          "ref": "efa1316a-4f1e-4aec-8460-7bb3dc1383c7",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "aeec02b5-d4a3-47f3-9c8b-280ea0e7aa39"
        },
        "item": {
          "id": "43e7e63f-43bd-4487-8983-1ebba27c18cd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "01a439ea-dcbd-484b-8556-ce40697ba7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30d6167-b94d-45c3-a2df-492e360938ee",
        "cursor": {
          "ref": "6b13a6fc-6304-4be5-827b-8f9f43bb21dc",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8156e344-5edd-4837-9d96-2342ba4a09d9"
        },
        "item": {
          "id": "c30d6167-b94d-45c3-a2df-492e360938ee",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ed8f4ed1-7512-41b6-956a-a3c5aa52d054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613e0e1e-58de-4b39-9d09-2ca75abb4462",
        "cursor": {
          "ref": "60cf6793-f845-46e3-a9ba-420444857e46",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cc71548a-2192-4995-a5a8-81c376099a1a"
        },
        "item": {
          "id": "613e0e1e-58de-4b39-9d09-2ca75abb4462",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "79169651-62a6-4eee-9c58-c72a5d396bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fa605c-95c9-4947-99f2-ce91ed86b0ed",
        "cursor": {
          "ref": "5472368a-a36a-4a48-a26b-173cd32cf38f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "79b68fec-0ad0-4656-a1e1-12d39420b15b"
        },
        "item": {
          "id": "a0fa605c-95c9-4947-99f2-ce91ed86b0ed",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "57bba163-a43f-4629-8c0f-eb5eecb76783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a055cb58-cb03-4418-bc47-37213c248a90",
        "cursor": {
          "ref": "17bd5f3f-8fcb-4df9-988d-259956a35d43",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cbc2da92-0b1a-4f25-9411-0586b92f1ca2"
        },
        "item": {
          "id": "a055cb58-cb03-4418-bc47-37213c248a90",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f070db5f-c06e-4f75-b8db-00a8079b2c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252faf64-a218-4de1-9d68-8a4eb45e1fec",
        "cursor": {
          "ref": "f9a75fab-911d-4ee3-b4d9-2e113e954558",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "60a4250b-751e-4450-bf53-5ef65875858a"
        },
        "item": {
          "id": "252faf64-a218-4de1-9d68-8a4eb45e1fec",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "480fc599-2e2b-48d7-b73d-7af2c66d2442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48faea55-f907-44c5-bfbd-c8a528e5d1c6",
        "cursor": {
          "ref": "1e8e80c4-e89e-44bb-957b-f8ca2e006d33",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "35ab4f23-1061-43e0-b207-41e0e8263e39"
        },
        "item": {
          "id": "48faea55-f907-44c5-bfbd-c8a528e5d1c6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3e29e5c4-6fe9-4c78-a238-10bc8cc90a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f34381b-845a-4d97-a4b7-5f8824bfb403",
        "cursor": {
          "ref": "7ec75615-5548-4375-bf16-dfc00ea07af1",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d234591e-fca4-4bde-8944-a156d487e3b2"
        },
        "item": {
          "id": "5f34381b-845a-4d97-a4b7-5f8824bfb403",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "739f7c0b-fd74-4851-9063-d7152235b015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb38c25-58c4-4bcf-b54b-6279ebf6081a",
        "cursor": {
          "ref": "17c60955-3e7c-46d7-8096-01213f3fbb9b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a657ceae-3eae-48ce-a458-e996938d0b81"
        },
        "item": {
          "id": "edb38c25-58c4-4bcf-b54b-6279ebf6081a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "968b7f37-8504-4312-b538-a6223b051b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f357ede-619c-4353-b45a-d572c7ff104e",
        "cursor": {
          "ref": "b06d09f5-eb89-4d74-9098-9fa7f2be813c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "799cb419-1edb-4cf8-9bd9-71051aadbc49"
        },
        "item": {
          "id": "1f357ede-619c-4353-b45a-d572c7ff104e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b586ef0d-3aab-4230-950a-ca3d761d0dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f786cad1-dbd7-4cb1-802a-917e9229f2f6",
        "cursor": {
          "ref": "85c1d34f-52f2-45e4-b822-762fa95e5175",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3693510c-7ae9-4f82-89b8-1f17cb5eace2"
        },
        "item": {
          "id": "f786cad1-dbd7-4cb1-802a-917e9229f2f6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c38a8a2c-3970-4e41-b31b-b01eb1ac1481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8b6da0-1c0a-4769-9840-97f97f349cb6",
        "cursor": {
          "ref": "aaa7dc07-1be7-4fe0-84f6-a2c1f52edff5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c3b6ad94-6fd0-4af5-9ffd-a974bdfe1817"
        },
        "item": {
          "id": "9f8b6da0-1c0a-4769-9840-97f97f349cb6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ca55bfc3-c8ba-4e0c-8502-7b7594a84b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a6a620-d958-41f2-9fef-f3574dfccd7f",
        "cursor": {
          "ref": "f3651ad5-4ae5-4495-b0cd-6b5d7621b5e9",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5630a60e-e680-4bae-b60f-ea13ab4d11f0"
        },
        "item": {
          "id": "71a6a620-d958-41f2-9fef-f3574dfccd7f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "79b13c0a-2488-4e82-943a-04c93a59be74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4773870e-dcd1-429a-8134-8aca37bbb41e",
        "cursor": {
          "ref": "dd6cca23-deb7-40b2-a9ee-3c807c3175bc",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9c85a9b2-207b-4dd4-98ce-226da38383e3"
        },
        "item": {
          "id": "4773870e-dcd1-429a-8134-8aca37bbb41e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d45723d7-ae5b-4eab-82e1-c7672e2eafe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd8ef11-3226-4c0d-ba5b-26bc9de6229b",
        "cursor": {
          "ref": "e50cb81f-7691-4f4b-b91a-dbae84a8d1f3",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4d074f34-884e-45a5-948b-39203c03aa1f"
        },
        "item": {
          "id": "1cd8ef11-3226-4c0d-ba5b-26bc9de6229b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b9418df0-0f95-4679-881b-ba3dd4e89898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58d8d34-337a-4242-898f-6be1431a2c22",
        "cursor": {
          "ref": "7920e66c-715d-44cc-9544-075f9c28419d",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "40278817-3b33-428a-a9ad-f1830cd65952"
        },
        "item": {
          "id": "e58d8d34-337a-4242-898f-6be1431a2c22",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "14b398ed-8dca-4a0b-a21d-16826543648a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099645e2-2e3e-431b-80ec-9831a65831a0",
        "cursor": {
          "ref": "0e00c5a2-8498-4bee-ab18-bca30d759298",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8a096fe4-06cf-4e57-b114-afad5b3d821a"
        },
        "item": {
          "id": "099645e2-2e3e-431b-80ec-9831a65831a0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c273a60a-4eea-4b97-8aa3-460d76bbee42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea82e54-0269-4bee-8dc5-9a955645e65a",
        "cursor": {
          "ref": "48c544f3-87bb-487b-89e3-8a6d9232fb2e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "16f29620-3fd6-466e-9613-f7f219ddb694"
        },
        "item": {
          "id": "7ea82e54-0269-4bee-8dc5-9a955645e65a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "857a1a6d-b23a-4d85-8cb0-4d66436a5a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2150d2-123e-4506-8fb7-4b539344dd9b",
        "cursor": {
          "ref": "04cb8f74-e0f1-4f4c-a8c6-333a6fdc2a77",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8b3b9822-836c-43f0-870d-2120890ffb4b"
        },
        "item": {
          "id": "1b2150d2-123e-4506-8fb7-4b539344dd9b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f751fe42-f7b6-492b-9341-22465caadad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48bc95f-fc55-4238-b302-c749ab1fcd5a",
        "cursor": {
          "ref": "af64242a-3740-4824-91c6-4f4b43ddcb0d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "152721ed-e22a-4dc6-81c9-a50bc4b35e62"
        },
        "item": {
          "id": "e48bc95f-fc55-4238-b302-c749ab1fcd5a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8cbcc0e1-9842-4531-9558-d307c4a02085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f6988b-8ede-49a6-9607-894287487f91",
        "cursor": {
          "ref": "9384f769-a599-456b-9232-587674d16c04",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6e751343-70ef-4714-95ef-687c4ccfe9b0"
        },
        "item": {
          "id": "08f6988b-8ede-49a6-9607-894287487f91",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "92fcde1c-ffa3-4576-9520-0bc9031ddf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b855bb22-78af-4f29-886b-2266483e06bc",
        "cursor": {
          "ref": "06353944-082c-4a60-9bcd-a97046cb63c9",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "908609f1-0ac7-4712-8a88-39f9ddd36656"
        },
        "item": {
          "id": "b855bb22-78af-4f29-886b-2266483e06bc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b71602ef-28cd-450e-a72d-f64c1c2e8299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33838696-2c0c-4e6f-9855-6f887d47738a",
        "cursor": {
          "ref": "afbdbf2a-8e66-4a29-9e58-bd98273e1f16",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "be858990-e3c1-41a5-8fd3-61158968b3e4"
        },
        "item": {
          "id": "33838696-2c0c-4e6f-9855-6f887d47738a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2a131253-6fdd-4ccf-875a-3b1066554e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b89498-64c1-4bc8-b619-9c4afcb5ce01",
        "cursor": {
          "ref": "976e2fd1-34ef-4335-aef6-7c6574b26dec",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4dc04bd8-d616-4819-b9d6-76779ad6ce59"
        },
        "item": {
          "id": "b2b89498-64c1-4bc8-b619-9c4afcb5ce01",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c7e39a59-d5e2-4d80-8767-0bdf8391918f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b124e5-d7fb-418d-84cd-87baca54d9c8",
        "cursor": {
          "ref": "14debc6b-ff82-4984-ac09-d6f75b96782f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a5c4d71d-d20f-499e-b08d-2177f7b2c12b"
        },
        "item": {
          "id": "b3b124e5-d7fb-418d-84cd-87baca54d9c8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a3cc15bf-5352-42d5-b0c0-b8f50803cbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d47762-132d-42bf-92b2-2325d09d9878",
        "cursor": {
          "ref": "ff55d882-6a6c-420e-9bf1-db52bab3b08d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e55d37f0-8963-47bf-bd76-ea73eadf11aa"
        },
        "item": {
          "id": "f3d47762-132d-42bf-92b2-2325d09d9878",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "461a6416-47ad-4a2c-9a34-149e802f8abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3b62bb-de96-41bf-8994-acd9f6a3cae4",
        "cursor": {
          "ref": "38f55f14-58a0-48b4-b182-abc8dff3fdb7",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "45b1fa62-ec53-433d-89a3-526aa4e3f0ee"
        },
        "item": {
          "id": "6b3b62bb-de96-41bf-8994-acd9f6a3cae4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1adb7554-29a7-4ae4-8e5f-c8e9fc1d4ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2347cf42-ca92-4da6-aa44-5103a836fc8c",
        "cursor": {
          "ref": "1ac01683-1265-4204-bb59-a7892e88b3ee",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1b2e4c56-86cb-48fb-acba-1e5a090c838c"
        },
        "item": {
          "id": "2347cf42-ca92-4da6-aa44-5103a836fc8c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6e35c2d6-7d11-473e-9ff6-ca7bf1ba7eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fae0430-efe1-4a3d-9c9d-9a5052a04bcf",
        "cursor": {
          "ref": "0e479482-74fa-4c54-bbc1-f2cdffc3488c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a686bd82-bf1a-4da8-a497-db11010699ff"
        },
        "item": {
          "id": "5fae0430-efe1-4a3d-9c9d-9a5052a04bcf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "47fe4b95-d71b-404d-80ff-535ae96f4daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b7b495-25c5-475f-867e-d5f729de55a0",
        "cursor": {
          "ref": "9d33f52c-16f0-481b-965c-c3dcc3b8e241",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8f50d075-64c2-4f97-ae2f-e1234b686593"
        },
        "item": {
          "id": "62b7b495-25c5-475f-867e-d5f729de55a0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a6d68627-0d8a-4b6b-ac08-661ddb10b0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a7ef68-5861-4b34-b07c-f61ce0362739",
        "cursor": {
          "ref": "99e39930-43e7-4e02-a15c-28ef3233300e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d4bfcc26-4dee-42f8-8648-fc19fedbe06c"
        },
        "item": {
          "id": "57a7ef68-5861-4b34-b07c-f61ce0362739",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ed3834c3-6e81-4988-bb33-3b258eeb8750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9da85b-0bf1-41d8-bfeb-17be3f1276d0",
        "cursor": {
          "ref": "f67c63a1-857b-4f1a-b1a8-d38be834b294",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0b8a67f4-713f-4d03-a7f9-42452f8bdb17"
        },
        "item": {
          "id": "de9da85b-0bf1-41d8-bfeb-17be3f1276d0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "96b302f5-c2e8-4832-9bca-69b09ba30af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c6b66a-9a10-49e3-aeaa-b2c3003c0c1f",
        "cursor": {
          "ref": "62c8858e-cf8c-46e1-9d1e-51bb31612f6f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a4de650b-6925-4113-b6e3-e8e598ec3ec4"
        },
        "item": {
          "id": "59c6b66a-9a10-49e3-aeaa-b2c3003c0c1f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d10686e2-9d21-4763-afb5-14663c170b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399b1a08-c90b-43b5-bffe-2a1f86e2174e",
        "cursor": {
          "ref": "9744d1da-10f6-4605-acf4-49a3b8aba200",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e2c4f848-feac-4d6b-84b0-7414a5bad69b"
        },
        "item": {
          "id": "399b1a08-c90b-43b5-bffe-2a1f86e2174e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "146764c9-fa66-425e-9383-355aa818fa1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2bb297-4c1d-4604-b7ab-9ea3816880b7",
        "cursor": {
          "ref": "5bf7bde8-dace-4e80-a712-f5e1e02eb7fd",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a3132e41-b2fb-4a1c-8010-12ee5b387275"
        },
        "item": {
          "id": "4f2bb297-4c1d-4604-b7ab-9ea3816880b7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c616be90-bed5-4767-8430-26c23606fce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01f060e-462c-4b5a-8458-3b76f4200173",
        "cursor": {
          "ref": "f1db9b87-4bbf-48d2-bba8-ef8d91f48912",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7130bdd6-9675-4370-add7-f42a9ceb202b"
        },
        "item": {
          "id": "e01f060e-462c-4b5a-8458-3b76f4200173",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "efabb88a-7c19-48ea-b952-45297a3c6821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efbd667-f2b5-456c-9d39-c297e6a0324c",
        "cursor": {
          "ref": "a6e90413-a539-4273-85fd-0031534af271",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a1ad33f1-a2b4-40cf-82ca-702026c38df8"
        },
        "item": {
          "id": "8efbd667-f2b5-456c-9d39-c297e6a0324c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2f0e471c-09eb-4f96-a352-a8ef2aa00435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211f02a5-5dab-4bd6-8fe6-4049141309c8",
        "cursor": {
          "ref": "53c7b92c-aa11-4902-a8e4-bf4c8b1f7794",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a535b90f-0b7d-4ab6-ac88-89a4f3184819"
        },
        "item": {
          "id": "211f02a5-5dab-4bd6-8fe6-4049141309c8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "15f421ab-9c42-47ff-b757-841eab4a3408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ea48cc-6400-4068-98d7-377a868da13f",
        "cursor": {
          "ref": "bdd282a9-ae68-4850-be12-c3adc1e588de",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "381a6c60-171d-44a6-a45a-2fcea8a7546b"
        },
        "item": {
          "id": "f0ea48cc-6400-4068-98d7-377a868da13f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d7150f1b-687a-4543-9ec4-1c08afb0c051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa44bfa5-92f3-473e-9f57-3e55276fbdb0",
        "cursor": {
          "ref": "4195e97f-5d22-4f7d-bdc7-6830ceb1f596",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fa3beef4-5387-45e4-9b5f-38e2118a11f8"
        },
        "item": {
          "id": "aa44bfa5-92f3-473e-9f57-3e55276fbdb0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1b139811-283f-47a3-915d-d7c2cc2a54be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fe5c13-56e0-4e62-be21-6ec72a23b46c",
        "cursor": {
          "ref": "5ce88e25-f8df-4250-a8f1-3e2a5409e1d9",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6cab4690-8fd0-4832-9d59-254f84fde68e"
        },
        "item": {
          "id": "b0fe5c13-56e0-4e62-be21-6ec72a23b46c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0cd4e90b-7abb-4421-8172-0103108b189c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b370b83-22b1-458c-a508-475c0deb9760",
        "cursor": {
          "ref": "81fe5e83-170a-4018-9683-a0501cef000f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4d75e360-db11-4547-96da-7f71564f911c"
        },
        "item": {
          "id": "5b370b83-22b1-458c-a508-475c0deb9760",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "be3486ea-d4dc-418d-b171-1d1ddb44e939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d91be4-badb-4372-91e8-6fbcf29f878f",
        "cursor": {
          "ref": "d2234197-6bc5-434c-aaff-29a1bbad39fe",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0db9d835-25f8-4fd3-805f-6e917017402d"
        },
        "item": {
          "id": "98d91be4-badb-4372-91e8-6fbcf29f878f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "eec53c36-f09b-4cb0-bc7b-7718eb86990e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6091dab4-b2b2-44e6-8c3b-516102d3376e",
        "cursor": {
          "ref": "e3dadeed-0d63-4c1d-a856-b54116d8510c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ef96ff4e-6172-46be-baac-f65dec4427dc"
        },
        "item": {
          "id": "6091dab4-b2b2-44e6-8c3b-516102d3376e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3d46e66d-2b92-4c71-b4e8-70530545f8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82124a4f-994a-4a93-9403-8789064abf21",
        "cursor": {
          "ref": "fac239cf-4ad7-4c5b-b972-ca9ad3a3e12d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3b02d413-9af0-45ad-bc88-923315d4ec32"
        },
        "item": {
          "id": "82124a4f-994a-4a93-9403-8789064abf21",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fc72cc1d-2af3-41e9-9675-e6a6e0f72cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b31601-f0f9-41a6-9c1f-e8ece06febed",
        "cursor": {
          "ref": "a2a2da50-8670-4922-aa34-b481dfff5b79",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e210dca5-b08a-4ee5-9e46-d3c577c9520f"
        },
        "item": {
          "id": "f1b31601-f0f9-41a6-9c1f-e8ece06febed",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d269860d-e0ea-44cf-ba8c-26e6bdb28f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa0a9ae-dc3d-48ab-a938-7d892f230a88",
        "cursor": {
          "ref": "b9ba1dd2-c7e6-4b02-854a-cabeb3bc6a0d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2881b285-bd5a-4a5d-b720-da1943a5d207"
        },
        "item": {
          "id": "caa0a9ae-dc3d-48ab-a938-7d892f230a88",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "efedddfb-220b-4754-ac77-97e92978a46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94138a36-a14a-406c-b213-5b7ae189f767",
        "cursor": {
          "ref": "fdca2b65-5fc3-4d4f-b891-36f6d57c502b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3ab9ca90-d13d-4d01-abf9-38266eac1425"
        },
        "item": {
          "id": "94138a36-a14a-406c-b213-5b7ae189f767",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3ff2c82a-cc28-4d5c-97cd-4b92e8fc32cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03579e01-2a34-4df7-9cde-019659482a25",
        "cursor": {
          "ref": "b5a91702-90db-41d1-a2c3-8eaa6089218e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b3a7c886-178e-4e72-aeb2-0f2f1256cbfc"
        },
        "item": {
          "id": "03579e01-2a34-4df7-9cde-019659482a25",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e5f62bb3-7a5d-43cb-8952-2a8e2e6d011d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5b94da-1fa7-42d6-99bc-b64d2126a397",
        "cursor": {
          "ref": "cb462637-b048-48ff-96d4-a0b13298bc40",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "92221c70-444d-48e5-8f21-ad7421338296"
        },
        "item": {
          "id": "bd5b94da-1fa7-42d6-99bc-b64d2126a397",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0b806727-b906-4f57-bd1f-f476828f9cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143a547c-80f9-48ee-bc9a-c07c151a9c7b",
        "cursor": {
          "ref": "d1fad25c-dc94-4e40-b857-678890a2f6dc",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "eb66125a-5be1-4113-b811-657a520b015f"
        },
        "item": {
          "id": "143a547c-80f9-48ee-bc9a-c07c151a9c7b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "aa845ccb-1edd-4329-b20c-a38d080195e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a813cf2-d502-446b-981b-ce9c0713f18d",
        "cursor": {
          "ref": "deb085d3-b007-4e00-82b8-795edef80a08",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ef074012-3380-4757-a89e-e1a7f7e8fb03"
        },
        "item": {
          "id": "9a813cf2-d502-446b-981b-ce9c0713f18d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e3b6fc51-3572-4196-b028-ca356d00482d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67be7a8e-0e13-4fcd-bbdb-d716859ab3a1",
        "cursor": {
          "ref": "4d1e90dd-3dde-4e6e-9af0-ea7a15b7ff74",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "391d0fe9-2c65-41fc-85e1-82981b49713e"
        },
        "item": {
          "id": "67be7a8e-0e13-4fcd-bbdb-d716859ab3a1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c6ea7eb0-7baa-4dcf-957a-575c9b4517c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68f6fe0-37d9-4e36-9495-ec74591407f9",
        "cursor": {
          "ref": "e540ffe0-d7e6-4e20-b9ed-9230df01388a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "de4d8936-4812-4e3f-aca5-9e6710abdc97"
        },
        "item": {
          "id": "e68f6fe0-37d9-4e36-9495-ec74591407f9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "120ca50a-b37b-4491-b2a8-c6e808ae903c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d31c4c8-a250-489f-b143-1c470b68d72e",
        "cursor": {
          "ref": "afacdfd0-9135-4592-8f1e-4f780dcd1663",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a3fa7701-2369-453a-a6cf-4d868f52ac61"
        },
        "item": {
          "id": "7d31c4c8-a250-489f-b143-1c470b68d72e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8ff119be-add8-4e91-86c1-48008ea23a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c65bb42-7390-49e5-84a1-59331ce85f2d",
        "cursor": {
          "ref": "5cff340c-ea20-4c2b-898d-d69b4969da56",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "461cbf68-ce07-4528-9d80-69d0cfa3a4be"
        },
        "item": {
          "id": "8c65bb42-7390-49e5-84a1-59331ce85f2d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "836e7e7b-5945-439c-86c3-f6db122e884f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c48033-75f8-4022-905e-f0514095dfe9",
        "cursor": {
          "ref": "315d8c83-b08e-41e4-8f99-061e97b59b12",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "36b120fb-0058-4494-8e7b-d9abe12a004a"
        },
        "item": {
          "id": "14c48033-75f8-4022-905e-f0514095dfe9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bf6cf9a8-5535-4da4-97ba-73dda5d26a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1385f3a7-7654-44c9-9d52-4d29a9d5e47a",
        "cursor": {
          "ref": "d91e40c7-284d-4fde-8810-4713c5fbe0b0",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3ce42cdb-f0cb-42c6-a363-6a81e3e745ce"
        },
        "item": {
          "id": "1385f3a7-7654-44c9-9d52-4d29a9d5e47a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2327c30d-9e2d-4610-ab51-03e0a62fbb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b24439-53bc-4142-9832-f7bc286505ca",
        "cursor": {
          "ref": "c1f79563-50fa-4aaa-a568-953d08938bc7",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dfa06707-8b89-4cce-9646-4bb7915ac542"
        },
        "item": {
          "id": "a0b24439-53bc-4142-9832-f7bc286505ca",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "24a884c8-f800-4f46-b049-64bec7eea351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e2d814-ea4c-4505-9632-535569e64ff3",
        "cursor": {
          "ref": "160e9b4e-2336-4113-b0e8-916eb88bd4cb",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c9feb500-80b5-4e52-80a1-eb6e32c11875"
        },
        "item": {
          "id": "f5e2d814-ea4c-4505-9632-535569e64ff3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ced0b2df-073d-48b0-a80a-72d5cb57ea71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cb3348-2553-43f4-83bd-ed89918df961",
        "cursor": {
          "ref": "b2dd6dee-dbbf-4472-8559-bec4b234666e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d8168288-d987-4a1d-af5c-e2234feb6523"
        },
        "item": {
          "id": "d7cb3348-2553-43f4-83bd-ed89918df961",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "96049224-90c1-4ba6-a7e7-bb457e03eb1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1886757-e75f-4d21-b578-b59d7fe7d997",
        "cursor": {
          "ref": "feda0093-49c0-4a35-9a7b-da9908af69ca",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "79add674-ceeb-494f-a77f-2f75d1f57a40"
        },
        "item": {
          "id": "a1886757-e75f-4d21-b578-b59d7fe7d997",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "630f89d6-12e0-4f73-8c3b-2b238730b688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8e3fcd17-a44b-4c34-aab6-ce88b7947f7f",
        "cursor": {
          "ref": "a6212ad0-98d6-4ca4-94ae-31c3bd042c89",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f7b185b1-f00b-44e9-8a6c-6ac441dcf554"
        },
        "item": {
          "id": "8e3fcd17-a44b-4c34-aab6-ce88b7947f7f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "531aafe1-dca8-41bb-8dd6-b745995feb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7dc63f1d-9ded-4439-8317-6896f9518013",
        "cursor": {
          "ref": "88571456-0779-492e-a800-a088a214d8cb",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "95f95286-77ce-4a3c-b29a-275f989d0cb5"
        },
        "item": {
          "id": "7dc63f1d-9ded-4439-8317-6896f9518013",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7ae0eee1-ccdf-4d21-a118-67b804cc0d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b54f1313-3e02-4894-8057-8f112c90d067",
        "cursor": {
          "ref": "fa6036b3-4f3d-412b-9407-8869aab285eb",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e302f005-e8be-4c12-9ae5-d2956c9dda6a"
        },
        "item": {
          "id": "b54f1313-3e02-4894-8057-8f112c90d067",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6f186129-06b3-4aa5-b1a2-3058e3bfd7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "43569b6c-9fdf-4140-9150-4c5fdfa917cb",
        "cursor": {
          "ref": "c70b70aa-fc7e-4c05-a285-c898a0041c4d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "28392bed-e321-463e-bb4e-3b2e974fd77b"
        },
        "item": {
          "id": "43569b6c-9fdf-4140-9150-4c5fdfa917cb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c9844065-7737-4d83-9794-9eea9190f443",
          "status": "Created",
          "code": 201,
          "responseTime": 5689,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc306c37-5ce3-4b80-b26f-24f56b04a3f1",
        "cursor": {
          "ref": "5a13f98b-acb8-4b69-878f-284167c13cf7",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "619396df-d980-4bf6-80b6-7b7c7f26b62b"
        },
        "item": {
          "id": "fc306c37-5ce3-4b80-b26f-24f56b04a3f1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "273e4e1c-c91e-4735-a94a-bca04540911d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b4bbdda3-36eb-4625-9383-cbc571296a95",
        "cursor": {
          "ref": "1615aaa3-e47b-4356-b648-e18624673aa6",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "03fd4e87-abb4-45fd-816a-dc2b9d7b7cfb"
        },
        "item": {
          "id": "b4bbdda3-36eb-4625-9383-cbc571296a95",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f98a5b1e-d616-4d97-a5b8-55838d327def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "575c644a-e0a3-4d10-8dbb-6165de1ad46c",
        "cursor": {
          "ref": "ea4dd4c7-fb7a-402d-85de-7bc2d6a0ffc5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bcb03979-c4dd-4baf-a674-8c015bfb7faf"
        },
        "item": {
          "id": "575c644a-e0a3-4d10-8dbb-6165de1ad46c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "378b8ab8-8b78-4d34-bf79-b5ff2e14135d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378b143d-7315-4d87-84a8-4acda9c1f7ce",
        "cursor": {
          "ref": "bdd49fb5-8832-4124-bab4-7246b7710846",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f9775b55-6a57-499c-bb6d-9bd821e12cdc"
        },
        "item": {
          "id": "378b143d-7315-4d87-84a8-4acda9c1f7ce",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0b7e0f11-2d05-46f6-b943-b2749033bc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86064886-30fd-44ba-a32f-db04d4282092",
        "cursor": {
          "ref": "7ab42d9d-5fbe-421a-b5cb-12908b5f5894",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4debf68f-b1d0-4992-9866-adb71fddbd90"
        },
        "item": {
          "id": "86064886-30fd-44ba-a32f-db04d4282092",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "658ab623-f60e-4247-9890-7c5cb05b52fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac3f775-3ace-4f42-b496-8a1ecdea068a",
        "cursor": {
          "ref": "9ccf3060-904a-4c80-8c07-ef8ccc59d1a7",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0435fd36-d18a-4cc9-962e-c8aac832d6c3"
        },
        "item": {
          "id": "aac3f775-3ace-4f42-b496-8a1ecdea068a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8f5b91d8-12b9-4beb-9d58-6110f828ccc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9615430a-39bb-425c-b186-286bd262bfad",
        "cursor": {
          "ref": "986d276e-86e2-4ee0-9d22-343ee25e2857",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a07abfa0-3a78-48ab-8675-e5f45990425c"
        },
        "item": {
          "id": "9615430a-39bb-425c-b186-286bd262bfad",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "15449572-ee19-4874-8fa2-37b48da02bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f1fee1-ac17-4c2b-897e-883b971a0cea",
        "cursor": {
          "ref": "794f393f-4264-49f3-8355-0abac488ca29",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7fa91598-6775-4351-b3c7-20aa7d4e6707"
        },
        "item": {
          "id": "78f1fee1-ac17-4c2b-897e-883b971a0cea",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2e530f0f-d977-4079-813b-39c85998c05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fc9b56-9ad9-4c52-ac4d-6dc9379af74c",
        "cursor": {
          "ref": "9a797acf-deb3-4c7c-b4e4-bb4fdbbf39d2",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "762674f2-c38b-48d4-a884-617ea33b3f1b"
        },
        "item": {
          "id": "68fc9b56-9ad9-4c52-ac4d-6dc9379af74c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f05068ff-2310-4ca5-b80e-50467550c2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e8188c-2a88-4ab8-a704-b98b6dcb29f0",
        "cursor": {
          "ref": "a67a19b4-20cb-4e17-8292-ade4075bbd09",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "96cb5223-df42-4193-b806-04c138e06ae3"
        },
        "item": {
          "id": "03e8188c-2a88-4ab8-a704-b98b6dcb29f0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a54d13e6-5bf1-4845-81fe-bbdca9765772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78638a64-f577-4f36-a064-88dde744b443",
        "cursor": {
          "ref": "e9e020aa-c7c8-4f25-86a9-27c35319d5d6",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d772519b-dad0-4f6f-9fb6-24aecb9b7e70"
        },
        "item": {
          "id": "78638a64-f577-4f36-a064-88dde744b443",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "df6da1bb-ab86-49bd-a9da-bb3a8632fba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4414eae1-6f37-4f33-ae6f-fb7fe1c32534",
        "cursor": {
          "ref": "1bff9b2d-8e8e-4d40-b8cf-7ac56c801f6c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f2dbcc49-29f9-4b66-ab3d-539853a4df3d"
        },
        "item": {
          "id": "4414eae1-6f37-4f33-ae6f-fb7fe1c32534",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a3e5b864-4b9a-481e-9128-269b46f69bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1a44c5-92b5-4a18-b1a1-f02fb4d75310",
        "cursor": {
          "ref": "6b99010b-9ee1-4c94-abec-3c0f617b9254",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "540fac57-5fd3-4fe1-83e7-87f62d29f216"
        },
        "item": {
          "id": "dd1a44c5-92b5-4a18-b1a1-f02fb4d75310",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ae03293d-0321-4509-949a-5f807f7cf350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f750b838-2091-4e51-8ec8-cb46aeadc421",
        "cursor": {
          "ref": "b55a20be-7fa0-461f-8f52-a2db3068e8e3",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d7fc0c4e-d6f6-46db-8ea1-1a9a5ea3eb97"
        },
        "item": {
          "id": "f750b838-2091-4e51-8ec8-cb46aeadc421",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "129466b0-ac1d-48b9-a8f2-5b3c22ac1da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed84c023-0e4e-4e2c-af19-94e909d88d55",
        "cursor": {
          "ref": "01a7a13d-507c-49d9-89d7-dd0678b0e95a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0cc5885e-2cb6-42b2-a9f8-f0cf39be7bc2"
        },
        "item": {
          "id": "ed84c023-0e4e-4e2c-af19-94e909d88d55",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "63f792e5-5615-476c-9611-75e2c0b53cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6620e74-337d-4c43-ab3b-81c4be147e26",
        "cursor": {
          "ref": "12448a77-8ac6-492b-a377-7cc5bf79587a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "681ca073-63fa-46ef-833d-9d862101aa19"
        },
        "item": {
          "id": "f6620e74-337d-4c43-ab3b-81c4be147e26",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f02820b1-7f88-4e8f-9c6f-cc04beb77459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e87f3c-9fad-4f32-b270-754212914420",
        "cursor": {
          "ref": "513f5b09-8a9d-4ae2-ade8-175b53f0fd23",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9de1d8f8-e7bb-4bc4-a040-5f00709d73fd"
        },
        "item": {
          "id": "c5e87f3c-9fad-4f32-b270-754212914420",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "79e922db-9a39-4679-a5c8-b4fb19127bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e225a1-efce-4044-8112-2c7744f6776f",
        "cursor": {
          "ref": "b2674559-f693-4a21-8c8a-11e956bc17b7",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0ed81ba8-ae72-49eb-91fc-96291f0f0b3e"
        },
        "item": {
          "id": "39e225a1-efce-4044-8112-2c7744f6776f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d7d76e44-dcab-49c4-86bb-0fe09e7ed1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c40a77-a2f5-4f00-9747-b32363064f3b",
        "cursor": {
          "ref": "be7bd0d3-391e-4fde-a0b2-fef1fe5582f7",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b025dfa7-a7ae-412f-9c25-56bd773c9480"
        },
        "item": {
          "id": "54c40a77-a2f5-4f00-9747-b32363064f3b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "66dc04c9-90ae-411c-ad7d-504fc1fc327e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "d08a9957-0f1c-4505-934b-0e0254cc5b7b",
        "cursor": {
          "ref": "8fe82727-6ac8-4b62-941d-4c3e32470abf",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "58dba84c-81f1-416e-9d56-da688a8daa0e"
        },
        "item": {
          "id": "d08a9957-0f1c-4505-934b-0e0254cc5b7b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "481c291a-80a4-44d1-a305-924c85865d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80da2b54-d532-455a-8a58-ddf59282a2fc",
        "cursor": {
          "ref": "611de917-ef9e-4e55-a909-51de63fcd4f6",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "82fb5021-d639-49a3-a288-2cb2044f3581"
        },
        "item": {
          "id": "80da2b54-d532-455a-8a58-ddf59282a2fc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "322f1642-43b1-4f0b-a80d-b8e8d75797f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6a9061-9748-4b82-9d2b-f55b0f7e55b5",
        "cursor": {
          "ref": "fbeb8d19-4440-4eb3-ab80-77cf45a0047b",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8571d2bc-ef0b-44c0-a0cf-1f5e35f2541e"
        },
        "item": {
          "id": "bc6a9061-9748-4b82-9d2b-f55b0f7e55b5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2e5dc916-4e74-44b5-bf41-5ac6d933ac74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0643fa68-3723-427d-ae79-76c2fc355f72",
        "cursor": {
          "ref": "a837c8d5-66c1-4745-aa4e-556e0a326b14",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "63026558-791d-4d5f-a064-6b1208e8bf1d"
        },
        "item": {
          "id": "0643fa68-3723-427d-ae79-76c2fc355f72",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "acf6f5fa-fa1a-4a0a-a752-9aefd1e081d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ead2101-2e88-43ee-b71d-32146918a478",
        "cursor": {
          "ref": "ba2ab561-32db-46be-b2fb-266f9352d19a",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dfa7c7cc-7b03-4951-b5b8-d685fb6a86be"
        },
        "item": {
          "id": "0ead2101-2e88-43ee-b71d-32146918a478",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7a4bb23f-783e-4f91-9dc0-bebe610fbc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698fe305-df6c-4d42-bca2-f5788edf4043",
        "cursor": {
          "ref": "1c24760b-8532-44b1-8be1-90c369dc4f3b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d224da43-d96c-4cb1-b1b6-05aead44ce1d"
        },
        "item": {
          "id": "698fe305-df6c-4d42-bca2-f5788edf4043",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "19716401-4fe4-4b24-9e7e-9589544db868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5072a239-f58b-4ce3-a121-cb619249f7bb",
        "cursor": {
          "ref": "c7a00b3a-7c1d-4423-8543-c913e844d70d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "085ccd7c-9d29-4d73-ac79-8fcb5afa9fa1"
        },
        "item": {
          "id": "5072a239-f58b-4ce3-a121-cb619249f7bb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "77020796-e4a7-4d11-9207-cfb675a27804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62c09f1-2f07-4037-a28c-5e8be7f70d0d",
        "cursor": {
          "ref": "8b2ed996-f7ea-4ea0-aaca-f5f409710729",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1cc93f68-b044-468f-bf32-a48a689d1cbe"
        },
        "item": {
          "id": "b62c09f1-2f07-4037-a28c-5e8be7f70d0d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6115e23b-a2a3-44b8-9683-49c1c1050bef",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "c9809046-41e2-4f35-a824-d11ca0db3ce5",
        "cursor": {
          "ref": "2d16d766-833d-4ad0-9a1a-451c369f5723",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9df3f160-946f-4924-bd07-ed9410b93a0f"
        },
        "item": {
          "id": "c9809046-41e2-4f35-a824-d11ca0db3ce5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0e3a8afc-fcf0-4d63-ab3b-73e064d20fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47351009-9b32-4cf2-b5b2-52b772c48985",
        "cursor": {
          "ref": "c39931d0-a1a7-45f3-be21-224c95be7888",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b7c1c5a0-2aaf-4d04-a0db-6766b8be4918"
        },
        "item": {
          "id": "47351009-9b32-4cf2-b5b2-52b772c48985",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a8e4d6c3-e790-4483-9ef7-0913be3f5487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edb6330-928d-48bf-a1d9-215e4963ef83",
        "cursor": {
          "ref": "1c9af3f4-51c4-4477-a10c-88ec2e3e5f7f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3053adf5-2039-4ccf-9daa-7dc078943e83"
        },
        "item": {
          "id": "8edb6330-928d-48bf-a1d9-215e4963ef83",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "780fa0e9-127f-476d-907c-ff5f0ea79356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6e7368-d451-4daf-b8f7-9cfc4540b60b",
        "cursor": {
          "ref": "da66136d-a59c-4303-8348-661017ba82dc",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "db304016-6579-4c8f-af12-cbd8bf2cd6b5"
        },
        "item": {
          "id": "8f6e7368-d451-4daf-b8f7-9cfc4540b60b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "51ebb6e2-0e87-4370-83bf-f5f77718aecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6737063d-1592-4178-ac15-e4bd07ee11c4",
        "cursor": {
          "ref": "0fc621c7-9130-42ec-853b-5f1306bebb3d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "59be8cfc-1ba4-4569-97a5-f48f10077fd1"
        },
        "item": {
          "id": "6737063d-1592-4178-ac15-e4bd07ee11c4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3ab08511-771e-49a1-9474-9c66c41f6306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48a943c-b0c2-47c5-8cb8-50b59af049b5",
        "cursor": {
          "ref": "77ce61b1-099f-4271-b66c-cfb2b7782379",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "146faf2c-5cd2-4600-a7ca-88c866537e18"
        },
        "item": {
          "id": "e48a943c-b0c2-47c5-8cb8-50b59af049b5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a43988f1-1b78-412a-8967-a5b8b7ef142c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa257b8-727a-48b7-9c4c-d78caa7f1890",
        "cursor": {
          "ref": "d6439d3a-6e21-4e5f-99bc-ab9856e83181",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9a9eda64-d141-4f9e-8986-4fa1cd3ed8a5"
        },
        "item": {
          "id": "daa257b8-727a-48b7-9c4c-d78caa7f1890",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "178b478b-6bd3-42e4-9b5c-f91473143972",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 237,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "60aec233-b765-4cab-9377-70134b99a284",
        "cursor": {
          "ref": "37ae40ed-fa8c-4071-aadc-c0862c60ba9a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "416f70ed-fcb2-4fb0-914c-04d454f43d93"
        },
        "item": {
          "id": "60aec233-b765-4cab-9377-70134b99a284",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c9999ad7-6d85-407f-ad63-5ec527d38ff2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a155d2b-9c46-4ab9-80c0-d275eca19718",
        "cursor": {
          "ref": "7c71f92d-9163-4e6d-8fb4-b5cd84d91ff1",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "819b53ed-c8a0-4e31-b618-9ce243bbcc20"
        },
        "item": {
          "id": "6a155d2b-9c46-4ab9-80c0-d275eca19718",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0fac467b-2d10-488f-992f-03fe262d60b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd6818a-814a-4095-b55c-07586444adbe",
        "cursor": {
          "ref": "9af8853a-3703-4d92-95ab-2c3378509402",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e4b9e8ef-764e-47ec-ae75-424f070b4424"
        },
        "item": {
          "id": "1bd6818a-814a-4095-b55c-07586444adbe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ebfcec11-f2af-4bd8-bea9-79edd1c6ea97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a26198-ab93-475b-b26e-507441bedf75",
        "cursor": {
          "ref": "ffa92092-cd16-4a0b-a152-767b8f589852",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ee00e102-2393-48ca-a9c5-fa15fc4ec918"
        },
        "item": {
          "id": "63a26198-ab93-475b-b26e-507441bedf75",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bbfc6463-c49f-4716-aafd-4dacd0547cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83554e54-0018-48c8-af3b-9994331bd4cc",
        "cursor": {
          "ref": "222e6b4c-8e0d-4e5a-a7c7-48bcd0316ac0",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "43eb0c3f-b189-42b6-bfc6-5a7cc659ed9a"
        },
        "item": {
          "id": "83554e54-0018-48c8-af3b-9994331bd4cc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a683cb8b-475f-47bc-bbff-d9ea0071af9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be437ca3-8cd1-4b91-ba28-03583a9764e1",
        "cursor": {
          "ref": "d114b012-ebc8-4af7-9057-578c3e43edbd",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "13768717-4a81-47bf-a34d-fa3a8b58a7cc"
        },
        "item": {
          "id": "be437ca3-8cd1-4b91-ba28-03583a9764e1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ff442c45-6d99-413d-ab36-49d13b0ce482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15eee0f6-47fc-4356-b876-f719048b7285",
        "cursor": {
          "ref": "d8dad0d3-39a9-481b-b699-3d6d634af3d4",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "19cd7394-9177-4687-bf7f-b90ae06014cb"
        },
        "item": {
          "id": "15eee0f6-47fc-4356-b876-f719048b7285",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "93cb47a1-8480-4633-ab6c-332623dab769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e658ca45-21d4-4614-a99c-494b81af741c",
        "cursor": {
          "ref": "149dd2b6-eb77-4119-9c10-ef61b90e60b6",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4f0e36fe-2100-4aa4-b141-837b0feae551"
        },
        "item": {
          "id": "e658ca45-21d4-4614-a99c-494b81af741c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0564833c-c044-49c3-80f5-4ffa8b5af255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877e3e09-e94e-487e-97e9-2811945efc46",
        "cursor": {
          "ref": "0dbc9504-3f85-4c42-84d7-55a9d160c248",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8338e506-b7de-47de-a4b0-400db076ac35"
        },
        "item": {
          "id": "877e3e09-e94e-487e-97e9-2811945efc46",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "672cf662-8563-416f-8ea5-4689a94987da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8e7d42-50ee-4278-9964-b10860124aed",
        "cursor": {
          "ref": "92c4f3c7-3b41-4fa1-9a2e-14749a247d9a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cced9574-1c1b-48f4-b48e-02476ad1912a"
        },
        "item": {
          "id": "4c8e7d42-50ee-4278-9964-b10860124aed",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "705e9059-5d80-4ced-afb1-23d6f26f9a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142e4346-c586-4fc7-860b-ce470c6da133",
        "cursor": {
          "ref": "1b42ecc9-c427-42d6-88af-64110020733c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "49fe2042-8d44-4f52-bdf3-3579fefa7623"
        },
        "item": {
          "id": "142e4346-c586-4fc7-860b-ce470c6da133",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "85c070f7-4b34-4324-96f8-834be61290d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b9cfd1-79a5-49b8-8e42-2f855df92b84",
        "cursor": {
          "ref": "e891378f-6b4f-423f-aea2-6312cf0558f8",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "698a1005-255a-4914-a370-8ec90ee62a12"
        },
        "item": {
          "id": "98b9cfd1-79a5-49b8-8e42-2f855df92b84",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e156b73f-386b-48ee-86ca-236d68fa3ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa55dc7d-bdc7-4d8b-ac89-8d3415870cbc",
        "cursor": {
          "ref": "3728e402-b65e-4d59-a323-8ad9f4b10f7d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0e64c2f9-d7d8-4280-aef3-54c9b2d29fdc"
        },
        "item": {
          "id": "fa55dc7d-bdc7-4d8b-ac89-8d3415870cbc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b30ddb2b-c902-4a0d-81d8-172cadc63750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80e68bd-a2ce-4a7a-a2f5-e71cc63f4621",
        "cursor": {
          "ref": "27842beb-3373-4727-b927-552d2612975b",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "00c1f3f2-4517-46aa-ab6f-c0c5ced03e51"
        },
        "item": {
          "id": "b80e68bd-a2ce-4a7a-a2f5-e71cc63f4621",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "13ee73a3-39d0-4e63-9fd5-9ea83be623ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64f6106-f013-4183-9c4b-1bf762a50d55",
        "cursor": {
          "ref": "cdc14635-d017-4944-b9c6-a4f9c2694129",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "983df418-fbfd-49ca-bb92-ed4ef3863025"
        },
        "item": {
          "id": "d64f6106-f013-4183-9c4b-1bf762a50d55",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4f7e1287-3b0e-4d1a-a209-d7ad6780046c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ebdd6c-8812-4911-8faa-b6eb8e5989cd",
        "cursor": {
          "ref": "600c071b-2c36-4eec-b8d9-bb5c6c1e3882",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d4d0a159-ff93-43cd-9883-70ff9a921859"
        },
        "item": {
          "id": "c0ebdd6c-8812-4911-8faa-b6eb8e5989cd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a6711c24-de77-44e4-88c7-7838a3ee3efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70b0c3e-b8aa-4a6e-9f61-decb8ef02b4b",
        "cursor": {
          "ref": "a42e8b6b-9595-4535-8814-242026f73e07",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1b9ced57-5104-4ea1-8310-281498575ad6"
        },
        "item": {
          "id": "e70b0c3e-b8aa-4a6e-9f61-decb8ef02b4b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "31d051e1-415f-4db3-95df-6b50856886df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b450925-8981-43fa-ae8e-e0ac3c0498b0",
        "cursor": {
          "ref": "e195541e-cd19-4c7d-9ad0-222b4516ecd9",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c0590e4f-43d3-4e27-ae51-f4d0b9950a77"
        },
        "item": {
          "id": "3b450925-8981-43fa-ae8e-e0ac3c0498b0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "14d5bb4d-6dea-48b4-947b-b32b13f4f1da",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "00285b09-1dbb-4ef8-b2fc-01401a6add3d",
        "cursor": {
          "ref": "6c19c4e8-f04c-48f2-abed-f37ef4926a81",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5c28feba-e6ce-47a3-84d9-c4899a61bd74"
        },
        "item": {
          "id": "00285b09-1dbb-4ef8-b2fc-01401a6add3d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "43a59ee2-c64d-4a88-aacd-6bf4c8abdaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd51424-9a9b-4283-9a49-1dcbc8b09f8d",
        "cursor": {
          "ref": "1a1f3d87-c1a9-4767-bbac-ecb4f09119f3",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2df83a61-3489-4f0a-85c2-27cd094e524b"
        },
        "item": {
          "id": "1bd51424-9a9b-4283-9a49-1dcbc8b09f8d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5ea74020-85ac-4b08-bd35-294b798e7ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b3f551-1a62-4412-af73-79df4b4f20c8",
        "cursor": {
          "ref": "9d0dae43-d9de-4b7c-b6e7-2bde5cb17da2",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2a252baa-506c-480f-b52f-a0d3833aa68d"
        },
        "item": {
          "id": "21b3f551-1a62-4412-af73-79df4b4f20c8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5f52be98-770e-4845-8aa1-f632418a0480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb34622-d2f4-4ed4-a6ae-107f18211b51",
        "cursor": {
          "ref": "66ce365a-c387-478d-9837-958ac6145225",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "01fa537b-846c-4ee5-8cb5-a76bdd178cf6"
        },
        "item": {
          "id": "0bb34622-d2f4-4ed4-a6ae-107f18211b51",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ef7882bb-eb29-47d4-9806-5e7931ba1ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d116f2b-3330-4295-b9bc-f2a43074813e",
        "cursor": {
          "ref": "a5669a3c-d8e7-47f2-8c95-98584714fd50",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "234f67f0-432a-4711-84d4-72a6d46d5131"
        },
        "item": {
          "id": "5d116f2b-3330-4295-b9bc-f2a43074813e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "10653b42-ee28-45ea-a931-434b6fa8bf33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cb50bd-3765-4f3f-9006-40dae3cee2be",
        "cursor": {
          "ref": "feb5bc03-84e8-4358-bc8e-3f8fe07cf725",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f4b85915-afa6-441d-b5fb-01db9199f1ba"
        },
        "item": {
          "id": "14cb50bd-3765-4f3f-9006-40dae3cee2be",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f8b3e91c-8027-4c8d-8f3c-308a4826e2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f593cd0f-cf66-4597-8ee0-2f500a57bdcd",
        "cursor": {
          "ref": "a1589585-48da-42f7-8df9-c30e6523c223",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1b9c4d65-6d7f-4612-9b3b-6605ae8fd483"
        },
        "item": {
          "id": "f593cd0f-cf66-4597-8ee0-2f500a57bdcd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e71d7791-6989-4b0d-9e1c-6e1d101ba975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58681c85-b466-4684-b680-afcd73b4c2f9",
        "cursor": {
          "ref": "682ee50c-480d-425c-8fa0-5891882b8a0f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "67714019-6ea7-4f94-9b4e-745c0966f1da"
        },
        "item": {
          "id": "58681c85-b466-4684-b680-afcd73b4c2f9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "aa36e6af-912f-45e0-b225-26334d2dd1ce",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "ba9828a3-1f30-4287-b552-741d844f22db",
        "cursor": {
          "ref": "4f8bc2a2-a7c3-4f42-94d0-711a90e301d0",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2398653d-f5f9-4d43-b381-f776154bdf72"
        },
        "item": {
          "id": "ba9828a3-1f30-4287-b552-741d844f22db",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "02a1f246-2309-4d7e-a138-aafa5cd35147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74194f6-58f3-4856-8438-da70c8ce8003",
        "cursor": {
          "ref": "09a057d7-2d06-419f-93d8-5a55345fadd2",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "47c17041-da9b-4f1c-bdca-df4804fa0855"
        },
        "item": {
          "id": "a74194f6-58f3-4856-8438-da70c8ce8003",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "40dd5896-fec1-43ba-be4c-6f7d46f65d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821f6e6f-9cfc-454c-aa26-a41e4713a318",
        "cursor": {
          "ref": "a67dde2e-7607-475d-a74a-08658beabc7d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f2c8a9e3-734b-4eca-a305-16c609a23855"
        },
        "item": {
          "id": "821f6e6f-9cfc-454c-aa26-a41e4713a318",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f8610c72-7e1a-4ada-bdc1-9ece48665933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1ed73d-5e8e-494f-a8bf-a0f8e6e9ad79",
        "cursor": {
          "ref": "cfc6ddf2-ceb1-4497-8f1b-55f5a1328b88",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "03438fc2-6b4a-45ff-bac5-7f14f245eb40"
        },
        "item": {
          "id": "de1ed73d-5e8e-494f-a8bf-a0f8e6e9ad79",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a64a9488-e8a2-4670-aead-ad4e7d116be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87a7e26-182d-4e81-9495-9c235d69e92c",
        "cursor": {
          "ref": "00e2480d-a76e-4b47-a339-dbc573163242",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a930ee22-6c75-44ec-b3b8-0b18dd9f8317"
        },
        "item": {
          "id": "c87a7e26-182d-4e81-9495-9c235d69e92c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "51e56deb-774d-48ae-b57b-ad7f70e63cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7190895-6c79-486b-831d-48ff279eb06f",
        "cursor": {
          "ref": "f31277f3-d09e-49f1-b8e9-93a0cedcd9ae",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "597c40cf-5638-4250-8195-b1a6458b9890"
        },
        "item": {
          "id": "b7190895-6c79-486b-831d-48ff279eb06f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a34b127d-faee-47af-8c6d-195ca1af4a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9114ba9-d1d4-46c1-a6d4-6c7f91b6a716",
        "cursor": {
          "ref": "9d170695-e164-4d55-bc35-62c98963619f",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "40c3d849-7e4b-40c6-9317-05f8e1dd58f7"
        },
        "item": {
          "id": "d9114ba9-d1d4-46c1-a6d4-6c7f91b6a716",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8cd90d65-01a9-434f-8ea4-dec3eccbd385",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "1e40ed4d-5814-4772-9e03-85ec952bc2bc",
        "cursor": {
          "ref": "dfcbcec9-bdaa-4edd-9d71-fe36f48a12e5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "37b66733-ee44-4ef6-b061-3a076bc229a1"
        },
        "item": {
          "id": "1e40ed4d-5814-4772-9e03-85ec952bc2bc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8e563976-5864-4089-8e21-e5e2fda5d7ad",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "4c145207-4ca7-4dea-b0ce-01c73ffdc2c6",
        "cursor": {
          "ref": "b5bc958a-c7f4-449c-a009-b592198883d8",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0b5596f5-3c90-4fe5-b509-0a18665c3ecb"
        },
        "item": {
          "id": "4c145207-4ca7-4dea-b0ce-01c73ffdc2c6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "252f8148-96ed-4be9-98e3-722c1cf2b7a0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "02413f59-cb8b-42a0-add3-15016773ac59",
        "cursor": {
          "ref": "b7d47993-6838-4d35-b3d5-b3027806c7e4",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2df0fc7b-d8d5-466b-96cf-bb9422640c25"
        },
        "item": {
          "id": "02413f59-cb8b-42a0-add3-15016773ac59",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5e7be95b-595c-43a6-8fe2-7eff636e7c7a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "8e3ea523-0fec-40a2-8ed4-0419a504a1c1",
        "cursor": {
          "ref": "8d6da382-a03c-4116-b8b7-3e65d6d6b765",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d988d299-fee4-438f-9686-87f8691f8556"
        },
        "item": {
          "id": "8e3ea523-0fec-40a2-8ed4-0419a504a1c1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "601925e8-7cd2-4405-b9dc-00d3a07563ea",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "f85632a9-f03a-4509-bd90-c2b08f279193",
        "cursor": {
          "ref": "a0199ffd-4dfd-4694-8169-1d9ba46366f2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3e504869-2386-48ba-973c-1d1328c6cf4c"
        },
        "item": {
          "id": "f85632a9-f03a-4509-bd90-c2b08f279193",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8771eec6-c6d5-4734-a29d-e456425a4654",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "753dd07f-054a-40af-967b-3bc6c8ba6ad4",
        "cursor": {
          "ref": "2ce29497-043d-42bf-8a3c-939144283597",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6b96fc1d-2639-4f89-8d5a-ea43093618e5"
        },
        "item": {
          "id": "753dd07f-054a-40af-967b-3bc6c8ba6ad4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c0febb86-207b-4fc0-adde-be2dba0a93a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f00c39-71b1-42cc-b229-950ee49f8218",
        "cursor": {
          "ref": "3e795b15-1782-4f1c-8b10-c64bcda4b64e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d02dde10-f2a9-46d8-9410-bc2dea339186"
        },
        "item": {
          "id": "c5f00c39-71b1-42cc-b229-950ee49f8218",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "051b355d-5e6d-4242-bae3-7b873675c3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2598b05f-b8cb-4485-a993-3ee6ed59e69c",
        "cursor": {
          "ref": "d7fd6a8b-d0e7-4a31-a244-52c9ec278a20",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8400a260-a11f-41e8-b811-56cc6bb7f2e2"
        },
        "item": {
          "id": "2598b05f-b8cb-4485-a993-3ee6ed59e69c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3147ae20-41dc-4dad-8f08-bff7d8e9e6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1404456e-79c7-4831-9edb-61d3ee7229c0",
        "cursor": {
          "ref": "3e9554b2-b9e8-469a-b7b3-7ce453e8a343",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d56358fb-5b72-4b57-a783-b0033764006a"
        },
        "item": {
          "id": "1404456e-79c7-4831-9edb-61d3ee7229c0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ce580b58-b84c-47ab-8d57-397e72d981d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c54049-3a05-4ce4-ab41-089d7ded583e",
        "cursor": {
          "ref": "64a6e8b2-4b62-4afa-a2ac-2dcc6263c482",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2691ecef-abc6-41f2-8d60-331c2ff4e86d"
        },
        "item": {
          "id": "33c54049-3a05-4ce4-ab41-089d7ded583e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a9a03a7b-03b1-460c-892d-ad46d755d53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c170bda-7f94-4ec8-ac69-76f26cc6f887",
        "cursor": {
          "ref": "5ebfd1d9-b375-4c02-95b0-eb135c278c2e",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9df83113-0699-4fb1-a0dc-3023bf31e599"
        },
        "item": {
          "id": "0c170bda-7f94-4ec8-ac69-76f26cc6f887",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e7e30cd1-89cf-4ed7-a0e1-5c9b110217bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdc1505-a4aa-4bcc-9822-6253fb9d3311",
        "cursor": {
          "ref": "bf5770d5-4b5c-4ffd-b48b-6ef50451191b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0b8bb3cf-8a7e-4eaf-ae36-f1e7a8fd7e2a"
        },
        "item": {
          "id": "8cdc1505-a4aa-4bcc-9822-6253fb9d3311",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f51d5e31-992c-46e8-8a38-2ef463ddf342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a8503d-bc3c-41ba-bbe1-00adcb0741af",
        "cursor": {
          "ref": "13457148-68ea-41f5-a4af-e27964aa52ea",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bdadd223-65d1-4607-8891-1a7e5842882c"
        },
        "item": {
          "id": "00a8503d-bc3c-41ba-bbe1-00adcb0741af",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c9931293-5ccf-45dd-b794-ed02e8708520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881207ea-7dd1-4c29-b1b6-26c8b6ac869d",
        "cursor": {
          "ref": "0d6afcb4-e323-484a-b1e8-ded278071f00",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "739f6c89-9f81-4ea1-b502-1efd84e954f9"
        },
        "item": {
          "id": "881207ea-7dd1-4c29-b1b6-26c8b6ac869d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b197bcd9-41a5-4c8a-963a-32fd1c8b6c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51c35be-030a-49e6-b076-e4612cbbe4b5",
        "cursor": {
          "ref": "3b887564-1a92-4245-bb62-982534f1f437",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c5f42c8c-bcff-446e-8009-180feb0fafaa"
        },
        "item": {
          "id": "d51c35be-030a-49e6-b076-e4612cbbe4b5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ac8286b2-318c-4b74-b23d-9decf4632f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d2491b-4835-49a7-92bc-08a2ccaf73b6",
        "cursor": {
          "ref": "1938f54a-2778-40df-9e6f-04e46d8260dd",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "740e8361-fdcf-4fde-827e-587fcc343d31"
        },
        "item": {
          "id": "f3d2491b-4835-49a7-92bc-08a2ccaf73b6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e7863a57-76cc-481a-8d98-6ac58f6f6f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb1a18a-89bd-4f16-81fb-26871084700f",
        "cursor": {
          "ref": "b1f9109e-1b9a-405d-b96c-3808fb070da6",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "92d9c017-9d79-4cc6-bd41-e5a679bef9fe"
        },
        "item": {
          "id": "0bb1a18a-89bd-4f16-81fb-26871084700f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f6b35ea2-cbbb-4e54-a346-26311cb0acd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6608aa42-8ff9-496f-8e9c-5e3be700ab8b",
        "cursor": {
          "ref": "1d00437d-f9bb-495e-8b2e-14b7f6eaf4b3",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "932cdfa1-6031-44fd-b539-c786e19df6e2"
        },
        "item": {
          "id": "6608aa42-8ff9-496f-8e9c-5e3be700ab8b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5af97165-a5cf-4eef-a229-015148d2ebeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a667f3-25fd-4ffa-855e-7111cdb2f1a6",
        "cursor": {
          "ref": "2f91362e-36e7-4c2a-8214-c6e622bb9051",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fb5df543-db9d-4923-b1c3-14abd87c256c"
        },
        "item": {
          "id": "84a667f3-25fd-4ffa-855e-7111cdb2f1a6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b8fcb4e8-73d0-4e7e-9f8d-ded0ee0e8d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc7cfd2-653c-477e-9048-be7786144113",
        "cursor": {
          "ref": "ac019590-2496-476c-a77f-2e4bfc9dc8c3",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "54e2e058-0838-411b-aeb2-857103a46a1d"
        },
        "item": {
          "id": "fdc7cfd2-653c-477e-9048-be7786144113",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "527df532-ce9a-4ec1-bde0-330054ac9bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e672988-35d1-423b-a55c-cd8a235260e9",
        "cursor": {
          "ref": "1c30682e-708c-4f98-882d-02c9c81fa294",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "947e1895-d6a0-4778-a3f7-cd032786b5ca"
        },
        "item": {
          "id": "6e672988-35d1-423b-a55c-cd8a235260e9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ba88306c-1cfa-459f-820a-abfbb1dbd8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52c2c73-d279-4863-aba6-b7d301341544",
        "cursor": {
          "ref": "2d87c7f9-a06c-44c0-9bdf-2fc8e52ed194",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "abe7f3d6-9cf1-4a19-b6ac-fb194d90423e"
        },
        "item": {
          "id": "c52c2c73-d279-4863-aba6-b7d301341544",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8ec55b24-8268-4c15-9afd-87ee66948177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a870d40e-dd20-4965-a688-d43608038da7",
        "cursor": {
          "ref": "d46fa1e9-7e3f-4019-99f3-c0e3ce3eaec4",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9bd30a7d-4a4f-4fc2-8089-7f73192c3291"
        },
        "item": {
          "id": "a870d40e-dd20-4965-a688-d43608038da7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1131f515-485c-43ac-ada6-8e6add958e02",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "a91606eb-725c-437f-9f8f-939898d04d92",
        "cursor": {
          "ref": "3c8beb4b-b996-4272-a923-a528afe00bb7",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4f81c086-7f57-4cd3-a98b-4644a95e4593"
        },
        "item": {
          "id": "a91606eb-725c-437f-9f8f-939898d04d92",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "db03aaac-8154-482b-bf99-447cddfdf1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88532920-3678-4935-b9e5-ba20f4958e85",
        "cursor": {
          "ref": "889b4489-296d-4013-b01e-d2af0a72acdb",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "efc5aea7-d408-4c87-9637-7c49922a0b74"
        },
        "item": {
          "id": "88532920-3678-4935-b9e5-ba20f4958e85",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dcf7a5a7-aae3-4654-8aa6-d158bfc82655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb80bb6e-02a4-4912-b887-f9765e1879a1",
        "cursor": {
          "ref": "9c707d57-e38a-453a-990f-b9cc376d11f7",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d4ad2c75-a326-49ac-9f37-93f2785b2e63"
        },
        "item": {
          "id": "eb80bb6e-02a4-4912-b887-f9765e1879a1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8166526a-f6e7-4b9b-bf37-3ef49ea1d284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f42d973-4e4b-4f99-8656-a84a73330f8b",
        "cursor": {
          "ref": "ba6ef50f-b3a5-4d73-b703-3fc59409245c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2aaba889-320e-48b3-832e-c1e50b2124e0"
        },
        "item": {
          "id": "5f42d973-4e4b-4f99-8656-a84a73330f8b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f43a4acc-a053-422a-8720-f09557767e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d746d07-4248-46b2-b2ee-47d5cbd5d50d",
        "cursor": {
          "ref": "2a23acbf-c440-4c60-bcf3-ff2805a8c0e4",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b2d5132b-8a01-4727-8a25-b1e73d6dea88"
        },
        "item": {
          "id": "8d746d07-4248-46b2-b2ee-47d5cbd5d50d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9107be67-5762-45d8-b87b-a6bba92f37d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f414ffdd-4559-4e9d-aabf-cfd0bae42352",
        "cursor": {
          "ref": "e87c64db-9ed8-4396-8a9c-07c05c3e2a33",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d2218b3c-189a-4eaa-88ef-ae2c37f547f1"
        },
        "item": {
          "id": "f414ffdd-4559-4e9d-aabf-cfd0bae42352",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "41a9f24f-3875-433d-b5d9-b6076e9b8c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b33b7b-57c6-4c4e-9046-ece0b88461a4",
        "cursor": {
          "ref": "e56cb8da-c885-4419-a78e-9bec389d2697",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f93ee104-9c4c-439f-b975-16c068b7286d"
        },
        "item": {
          "id": "f6b33b7b-57c6-4c4e-9046-ece0b88461a4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e9024ddc-29c8-4869-b16c-b2c0ff92bcf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4420daab-e839-46c7-8983-ef6de3f7016f",
        "cursor": {
          "ref": "ba7833c9-98a4-4c2c-b63a-42718482eb7b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "34a7111f-1a49-4300-8bab-e2f9c983d02e"
        },
        "item": {
          "id": "4420daab-e839-46c7-8983-ef6de3f7016f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "beaabeca-460c-434b-a8ca-7cfa4cbea28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8bc738-3455-474f-ae76-4e04a9403544",
        "cursor": {
          "ref": "c5601452-b712-47c6-afb4-814e4f6de880",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "53cfb68a-75c6-42af-8f9e-78a28c876cf0"
        },
        "item": {
          "id": "9d8bc738-3455-474f-ae76-4e04a9403544",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2d4424f6-4c90-4271-a1de-d0acca222776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce73b9d-ce35-4126-8fb6-ce9c00d447b5",
        "cursor": {
          "ref": "126c2ab1-b56d-4d60-a037-60db9bb37ba2",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7d83f430-d216-47af-9b4c-95101ba072f3"
        },
        "item": {
          "id": "5ce73b9d-ce35-4126-8fb6-ce9c00d447b5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "03bf3076-8b2b-4008-8cf2-da654add533c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55622303-0ec7-4ab0-8274-756f11046d6c",
        "cursor": {
          "ref": "8414efe4-b4ce-4961-9ed7-f36c7d78cd3f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7906d395-25b5-4a32-9521-bbb68076da84"
        },
        "item": {
          "id": "55622303-0ec7-4ab0-8274-756f11046d6c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d7990df4-407f-443e-9078-afd7b7d8d955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78789cb-b0e2-4386-8bf1-d6387b5b9c9a",
        "cursor": {
          "ref": "d50abfda-dd2d-499d-b443-6b0865a6c422",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0d4cf1ae-e9b9-44ad-9573-2d3afb838309"
        },
        "item": {
          "id": "a78789cb-b0e2-4386-8bf1-d6387b5b9c9a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "65062d5b-f71d-435f-b47e-7326172e642d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9eebda0-bde2-4415-945d-f6d7c7a744da",
        "cursor": {
          "ref": "0f74e35a-de8b-45f6-9449-57d2d9a715da",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9ad7a139-62e7-4a2c-81e1-b5d9750c4f89"
        },
        "item": {
          "id": "d9eebda0-bde2-4415-945d-f6d7c7a744da",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "48a8731f-b58d-4c1c-847c-51949b92d14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dc1484-d6fd-4d07-9e8b-073e9a3785ad",
        "cursor": {
          "ref": "5a19f54f-fb69-4157-8e2e-83f4d7bb23ea",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0fb36cde-dd84-4605-8a28-33579b69e8e3"
        },
        "item": {
          "id": "f6dc1484-d6fd-4d07-9e8b-073e9a3785ad",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8f282fbb-2c62-49b1-ac2e-235749669035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38e2e64-0be9-4172-871f-e997a1b7e7e1",
        "cursor": {
          "ref": "f3d1eba0-3ac3-4c82-a223-8fc1c76c6e6f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b462a484-9536-4137-8fd3-68b75820ee15"
        },
        "item": {
          "id": "d38e2e64-0be9-4172-871f-e997a1b7e7e1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "593f13c9-cb74-4ad2-b3de-ae4598334a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9bfc91-8dfe-4433-985b-39196cbaf626",
        "cursor": {
          "ref": "078308bd-01ac-4f93-a933-346f89db9c6c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1d82da9e-5e7b-4c3c-ab74-c95059f59a2a"
        },
        "item": {
          "id": "ba9bfc91-8dfe-4433-985b-39196cbaf626",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2769bc67-5a35-4e5c-92a7-b2949d316487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b381f8-d59d-4354-8b73-99b6ea4a95b4",
        "cursor": {
          "ref": "759c8a2b-051f-4123-bad5-64418d178fdf",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ec07ae97-b421-4adc-b616-0500d9c706e4"
        },
        "item": {
          "id": "76b381f8-d59d-4354-8b73-99b6ea4a95b4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "da9ca48b-2ee7-439c-90c4-dbc9fe673538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5354989e-adf4-4889-8ca1-ec320d40628a",
        "cursor": {
          "ref": "bd2ede89-bc5a-4fe4-a258-4bd832895aaf",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "366eb370-18a5-47a6-9109-e8ea9bbc8c87"
        },
        "item": {
          "id": "5354989e-adf4-4889-8ca1-ec320d40628a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e4a7a1f9-696c-4673-911a-3b172ed0007d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f3f496-e981-4c34-a3ea-790112e40b0d",
        "cursor": {
          "ref": "94a76adb-9935-4afb-8b5e-88de299d8e4a",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "88759002-f29f-4448-ba96-6f185b987322"
        },
        "item": {
          "id": "46f3f496-e981-4c34-a3ea-790112e40b0d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "647fff00-18e7-48de-b60a-5bd95b2b30a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2596312-2aea-4ef7-9d4d-2bcb1f0321a4",
        "cursor": {
          "ref": "42b8ab2d-33bb-4f79-94aa-756a5029bed1",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "590eca95-3299-4db3-8bcd-62e8cbbe538e"
        },
        "item": {
          "id": "d2596312-2aea-4ef7-9d4d-2bcb1f0321a4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "848dc567-c36f-4976-8dcf-abf1e8208c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e517c7ee-944f-48a6-acdd-3a8b8e4c4595",
        "cursor": {
          "ref": "eb8cbff5-7d7b-4a44-aad4-f08ae38d526e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "70a44756-8edf-47dd-86b7-781650ac6324"
        },
        "item": {
          "id": "e517c7ee-944f-48a6-acdd-3a8b8e4c4595",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "88223484-052e-4888-8883-2f7540a23cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4b473b-669b-428c-b452-87232db06f7d",
        "cursor": {
          "ref": "a7c57bcf-e036-473e-bbfa-d11ff27ba753",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "90fde8d5-919c-455a-9c07-373248c3eefc"
        },
        "item": {
          "id": "ca4b473b-669b-428c-b452-87232db06f7d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "91367a6f-d981-4dfd-8d90-62d86d6b8413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46865b0-84f2-4891-8e14-bda046cee9a4",
        "cursor": {
          "ref": "2898f70a-d48b-4d1c-9c05-ff0d56e02772",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c648da71-2a00-4b7b-b46c-d46fb372a4ee"
        },
        "item": {
          "id": "a46865b0-84f2-4891-8e14-bda046cee9a4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a6ac8c26-508e-4588-8511-f792b78ad432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927aa12f-1390-485d-8d22-b3d54bbb9dc1",
        "cursor": {
          "ref": "f64ed108-8b24-4abb-86d3-c61d42f5835b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bf98a2bb-dce9-4107-93bb-831ad52b8bbf"
        },
        "item": {
          "id": "927aa12f-1390-485d-8d22-b3d54bbb9dc1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "60cd94e3-678b-4820-a2a7-812e8e5b750b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1be4abf-a770-4d18-ad7c-c26c94ee3ac9",
        "cursor": {
          "ref": "aa85b1b8-caca-4e64-bc14-652c83d9dade",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "61c99a8d-c537-4f82-9e4e-a40e224c428c"
        },
        "item": {
          "id": "b1be4abf-a770-4d18-ad7c-c26c94ee3ac9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0891e0ea-d111-4284-9656-5a015ef614f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174f29a4-31cb-4753-9ba5-c48d9f13daa4",
        "cursor": {
          "ref": "164e5fa3-f6af-4ed6-aca4-220ebe8d2afa",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d9ccd07c-8774-43d2-96ef-47d438e741a8"
        },
        "item": {
          "id": "174f29a4-31cb-4753-9ba5-c48d9f13daa4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "98afd338-1941-4054-942a-914457f5d55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f2b88e-647e-4ded-a3f1-40b77d307fd6",
        "cursor": {
          "ref": "60c37753-a407-4ab7-b538-2a1c2de8c7a3",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9012e373-b4af-4f61-8abf-a77a3757fcd9"
        },
        "item": {
          "id": "a8f2b88e-647e-4ded-a3f1-40b77d307fd6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8a38c4fe-ccde-4ead-9ce0-d441947eb4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5192557-b811-45d9-9432-1c6806905ea1",
        "cursor": {
          "ref": "6f92f246-36fd-4940-aabe-00343e0467ac",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "60449969-6805-4563-81f1-8478f001f4d3"
        },
        "item": {
          "id": "c5192557-b811-45d9-9432-1c6806905ea1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d79dcb80-8c20-43f3-940f-7804bd9bebee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba59bb6-4ae3-4bbc-8062-42d7af659265",
        "cursor": {
          "ref": "c10e67f1-5357-434c-be3c-6612c6dd9487",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1e58a465-5e1c-48d0-982f-5e9d7fb68536"
        },
        "item": {
          "id": "2ba59bb6-4ae3-4bbc-8062-42d7af659265",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "832f6336-0fdf-4b9a-a9bf-2a03e7b3c294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb91c13-8280-4091-8e76-33061681a456",
        "cursor": {
          "ref": "2693b450-cb99-43d6-8e78-54c439568709",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "55df4956-8c9d-4641-a325-a6c3402f0383"
        },
        "item": {
          "id": "ecb91c13-8280-4091-8e76-33061681a456",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "418c7f4c-ef36-4e9d-a6c8-eeea3b8a6d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2241b7a-4505-499e-823c-0dec3055d07e",
        "cursor": {
          "ref": "c0b29ce0-9adc-4f6a-b6f1-1b30de2e7c2b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "517a8205-ad2b-45f3-82c9-3f0771fd2681"
        },
        "item": {
          "id": "b2241b7a-4505-499e-823c-0dec3055d07e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f8af1e03-75e9-4eca-8d65-bf3dd99ad755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c7f57b-bdb3-413b-94ed-295939a2358e",
        "cursor": {
          "ref": "d79bb58a-2e28-43d9-943a-2c802c97aacc",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "58c955cb-ab18-478d-a45f-d478cb304d11"
        },
        "item": {
          "id": "26c7f57b-bdb3-413b-94ed-295939a2358e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "20967a9e-de8e-467d-9b9f-1e18a2325aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03b2384-898e-4d86-a527-9c5399d0bd84",
        "cursor": {
          "ref": "8ac0df27-39fe-4d1a-89e2-831d3c72c458",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "017cce62-47c5-4961-b470-0d62b61da183"
        },
        "item": {
          "id": "e03b2384-898e-4d86-a527-9c5399d0bd84",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "daee8fae-4ed0-4b42-bb23-60c6514ebfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4e3f8f-76ce-4a39-a72c-735c94ab4c5b",
        "cursor": {
          "ref": "42735f94-434f-46d8-b611-c892c64cb384",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "df164fe5-6a2e-4fa2-bb32-c6b7eb884746"
        },
        "item": {
          "id": "9d4e3f8f-76ce-4a39-a72c-735c94ab4c5b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6cbb5140-528b-483a-96a3-3024743dece8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b53542-16ab-475f-8b45-ffd5f67fd2e3",
        "cursor": {
          "ref": "64ee9d49-85e5-4538-8c6a-5ce60a84c2bc",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "66723355-5dc6-4cfa-bd95-17a8eead0ad0"
        },
        "item": {
          "id": "58b53542-16ab-475f-8b45-ffd5f67fd2e3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8540a119-1fd1-49b8-9a84-9e9ffb85922f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e39936-e7aa-43f2-85e2-f72d0da7cdf0",
        "cursor": {
          "ref": "41d6373f-75e8-4816-bb37-527181861650",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "69ab2e5d-9043-455f-b0a3-645cd28f2aae"
        },
        "item": {
          "id": "b2e39936-e7aa-43f2-85e2-f72d0da7cdf0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "241e87c0-7bbc-4368-910e-773ebd0999b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf5ff04-aa07-49d7-97be-1ac57fc07bb2",
        "cursor": {
          "ref": "d1c55df3-8c1b-46b9-8829-113cfadfbb5b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c4f03f66-08dd-41fc-9282-5dcbd929eb17"
        },
        "item": {
          "id": "adf5ff04-aa07-49d7-97be-1ac57fc07bb2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "043bc545-47bc-4636-b36a-bd9e3a0398db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83be94fe-d215-4ec6-906d-60484f10c0a1",
        "cursor": {
          "ref": "2748c920-fc71-4287-9a74-55fd30a7c1d6",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "38410076-734c-4423-b5e8-fec6b64f3a1f"
        },
        "item": {
          "id": "83be94fe-d215-4ec6-906d-60484f10c0a1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "48816297-e34a-4ce9-b829-66f230b0ddaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf75347-cbc8-4516-902c-774920616a47",
        "cursor": {
          "ref": "72b4d74d-3069-48ff-a1d0-e1c814f83d79",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b03f45f7-0a06-46d1-99e4-48c38ff3730f"
        },
        "item": {
          "id": "edf75347-cbc8-4516-902c-774920616a47",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c1e9ece2-3a97-45dc-8ac8-f25cf4d04a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69876c0b-49c9-4e30-abfa-09720561a908",
        "cursor": {
          "ref": "21bf392d-22ad-42aa-b21b-82b45cc391c1",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "871e3fea-426f-498b-a767-955d72b75b53"
        },
        "item": {
          "id": "69876c0b-49c9-4e30-abfa-09720561a908",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c3b790aa-33cd-4c57-bc3a-c6a6102fa35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c3cb88-3027-40c3-a84c-cf58fc59133b",
        "cursor": {
          "ref": "e7e358c2-0998-41d4-90f8-69fd3014ac8f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "af8739f4-0634-4550-ae28-afdc4471c017"
        },
        "item": {
          "id": "42c3cb88-3027-40c3-a84c-cf58fc59133b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7ac2e770-0b47-4f06-a41f-85394ae922b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d8dbb0-7fe3-475a-8715-68a3402ff4fc",
        "cursor": {
          "ref": "9371c573-48b2-46dc-a7f2-d1d533fc524b",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "12a5fc87-44db-4811-9a43-9f9046318c2b"
        },
        "item": {
          "id": "66d8dbb0-7fe3-475a-8715-68a3402ff4fc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d697360c-0fa9-4df5-b347-45da3a4fe7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289852dc-fb5e-4e84-96a3-9978cd031b77",
        "cursor": {
          "ref": "76fc4c78-8e72-4d4b-97c5-4db0ad321d69",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "397432f5-6cf5-47ae-8c1d-637e014f9e3d"
        },
        "item": {
          "id": "289852dc-fb5e-4e84-96a3-9978cd031b77",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0db2ed3e-5eb2-45b5-85eb-65d9ceb7da7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81590eee-0b18-47ef-ab46-0d3755dd7ae3",
        "cursor": {
          "ref": "31745275-ed55-4594-b7b3-3232bdd99162",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9c140b61-9d0a-4446-82ed-f95a108255ab"
        },
        "item": {
          "id": "81590eee-0b18-47ef-ab46-0d3755dd7ae3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bf6c0e8d-a4f6-44cc-8db8-3a592bb3cd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f328b14f-08d1-4bcf-8ee6-b7d269ab0729",
        "cursor": {
          "ref": "6daa75a5-8cf0-4c36-b70a-1ce56936b7a3",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "83c9b14c-8083-4444-a5b4-889fc51751c7"
        },
        "item": {
          "id": "f328b14f-08d1-4bcf-8ee6-b7d269ab0729",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "71dfb3ba-514f-4ab0-83b9-dad8ffe2e6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b539c471-2706-4c00-b522-396650fc7d4a",
        "cursor": {
          "ref": "d99a349f-1a4c-4fe2-bcf9-e2df3410d2d9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "113b146f-e400-43db-b9b6-644a85a99a86"
        },
        "item": {
          "id": "b539c471-2706-4c00-b522-396650fc7d4a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "991cb296-851d-4317-a78a-00c9b8dec3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122ba494-398f-4930-ad9b-ad4f4ec75251",
        "cursor": {
          "ref": "d2e57d79-337b-4d82-bd68-a3b02b0b97a1",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eac2f2c5-c541-4b72-ad0c-05ce4d1fff61"
        },
        "item": {
          "id": "122ba494-398f-4930-ad9b-ad4f4ec75251",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8bc0742c-f845-42f2-807c-c4c6413a68cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f73633-9c7f-4583-8e46-1ff4acdc2a0e",
        "cursor": {
          "ref": "f58c14fe-be67-4d61-8d39-9b7832bd077f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f7b62328-8d5e-4acb-b0eb-1410e023d96d"
        },
        "item": {
          "id": "b5f73633-9c7f-4583-8e46-1ff4acdc2a0e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b21f1eb8-03ac-4bce-835e-92f90d2e64bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67c76ea-543c-4d5e-a417-3201004dcc22",
        "cursor": {
          "ref": "a1be0b2e-172c-4114-bda0-0b208c89514f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7cdc0729-2956-4e20-ba6f-618f3acc4a3d"
        },
        "item": {
          "id": "e67c76ea-543c-4d5e-a417-3201004dcc22",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c39f2361-52d8-4131-a317-48f9cd9c48ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7d6327-86fb-4c8a-af60-b32cbcb0e57c",
        "cursor": {
          "ref": "a47d1351-9026-4674-aee0-4998c63dc5b9",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f3ac3123-826e-44eb-9a62-b6ffe931467c"
        },
        "item": {
          "id": "4f7d6327-86fb-4c8a-af60-b32cbcb0e57c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "49ff52b7-efce-4af0-9cde-2aaa93e889a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4366a940-dc6b-4b13-acdb-60963af1233f",
        "cursor": {
          "ref": "9d6655e4-adc3-481b-93e7-f11c005fe97b",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d1d461b7-e8c3-4e07-9451-f26325d3d5fa"
        },
        "item": {
          "id": "4366a940-dc6b-4b13-acdb-60963af1233f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "11629afc-d7b8-4e6b-bedf-9a55cb0a31f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b741d26-1c82-40b4-985e-85f172fe707d",
        "cursor": {
          "ref": "22de7b65-65f4-401d-8502-d37572a0d8e6",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b3afa94e-f466-44c3-818b-8f1bd0124bdc"
        },
        "item": {
          "id": "7b741d26-1c82-40b4-985e-85f172fe707d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0cd1fc31-9575-41b6-bea3-7d639d6fe5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324653f2-2273-4140-8894-b9c049db744e",
        "cursor": {
          "ref": "e9065f8c-09c5-46a4-badd-5443dfe9c3ec",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2b09a738-bb66-4ed3-87ae-5a8549ff58ac"
        },
        "item": {
          "id": "324653f2-2273-4140-8894-b9c049db744e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f795ba6a-6522-4bf2-ae32-0cc179b148d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c08d4f9-d60d-4cee-8e97-f106d4c38490",
        "cursor": {
          "ref": "a6f12c76-468d-4af2-b73d-dc17c854020c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "374b79e3-3001-41cd-96e1-f0502db19560"
        },
        "item": {
          "id": "5c08d4f9-d60d-4cee-8e97-f106d4c38490",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d3dfbf9c-270f-4739-a48c-93bd60e0d6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5bb055-50e4-4c9e-b8e1-54cdd4fb020d",
        "cursor": {
          "ref": "ff7b1db0-0cbe-4e53-8216-d3918755628c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "830ff533-2f8a-43f7-a1ac-ee94cbe92d3c"
        },
        "item": {
          "id": "fa5bb055-50e4-4c9e-b8e1-54cdd4fb020d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bfd9a3c1-61c8-4798-838b-b2ddac1940fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0212181-0746-4970-81d6-854217cac17a",
        "cursor": {
          "ref": "9aa9854e-95eb-4379-89bd-83b759364271",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e9804863-a43b-430a-816a-66609337aeab"
        },
        "item": {
          "id": "c0212181-0746-4970-81d6-854217cac17a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "60ccf6e8-8207-4119-bff6-7e88e7a34d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a401b8c-588c-4064-82eb-06413ceefefc",
        "cursor": {
          "ref": "9ec7f1f6-66e4-4132-838f-976ef46ecb28",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b83326d8-e4d4-4fc4-be3c-39e9b6f94f1f"
        },
        "item": {
          "id": "8a401b8c-588c-4064-82eb-06413ceefefc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4ddf2072-6998-4d64-a7d5-02d35632a443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc5c7d8-a59e-4e82-a627-d30ac68f73b5",
        "cursor": {
          "ref": "8a79c818-9e90-4c4e-993d-a6d3fa6436b4",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e9ba4d1a-1c6c-4744-94dd-093c9f73976a"
        },
        "item": {
          "id": "3dc5c7d8-a59e-4e82-a627-d30ac68f73b5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9eebdc65-3204-4d89-8d53-c4b4700cf3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d1074b-a7c8-4b7e-8213-0264d53faed6",
        "cursor": {
          "ref": "03ae6106-b7f0-444e-aacc-a26ace1cbd16",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "66ced76d-77e1-4386-a87f-faa58e1be71c"
        },
        "item": {
          "id": "c8d1074b-a7c8-4b7e-8213-0264d53faed6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e44b59d2-325c-401c-9b9b-bf04c0f4091f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2417f665-381c-46b6-83c9-7e8abcb9cb7c",
        "cursor": {
          "ref": "784abf31-0afc-47b3-9d16-d5bf081d7efe",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e7cef895-0de9-43ce-8cfe-e153e6dacce4"
        },
        "item": {
          "id": "2417f665-381c-46b6-83c9-7e8abcb9cb7c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8ee47f77-afbd-489b-bb3b-f81ece40eadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116bf883-51df-4225-abe0-12c0987f48f2",
        "cursor": {
          "ref": "2cc7c1af-fc31-41c9-a6a9-4978006f838b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1c4884d2-5f51-4173-801e-39ee119e4258"
        },
        "item": {
          "id": "116bf883-51df-4225-abe0-12c0987f48f2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a18d71ea-6a96-413d-83bf-fb327dde8600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a443c4-c230-4e01-ba3c-59856cfcf448",
        "cursor": {
          "ref": "43337999-1e54-40b2-b8a5-913b400b3e2c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "bfbf7c4e-86c9-4afc-9d33-29fb168e014c"
        },
        "item": {
          "id": "11a443c4-c230-4e01-ba3c-59856cfcf448",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "da547f9f-0eb1-4b99-b5c2-82d0c810a2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee97852e-6971-40b2-b318-7d57b602f30c",
        "cursor": {
          "ref": "b51cc857-0fe9-4527-8ce1-fb5d4d7d819d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0a4eab0d-48ae-4100-ab4f-29f4d78a9c1a"
        },
        "item": {
          "id": "ee97852e-6971-40b2-b318-7d57b602f30c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1eafbf19-454c-4ca8-b2a5-84be2a08da0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0f0aff-bff8-482e-a963-39c7fa4a756c",
        "cursor": {
          "ref": "2c84d7f3-1481-4068-bd9d-32a470724288",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c4c7443e-96f3-4e3c-b11c-c13db588a3df"
        },
        "item": {
          "id": "bd0f0aff-bff8-482e-a963-39c7fa4a756c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2a10e593-1bfc-4d24-9944-529e8d2b099c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95bcb50-73c3-4d20-b4b9-4bced6e7110b",
        "cursor": {
          "ref": "c7f5fa67-e7b6-4cf5-bece-263001a02eb8",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "60c6bd34-2f0a-4d9d-bb11-9f77440d0bd4"
        },
        "item": {
          "id": "c95bcb50-73c3-4d20-b4b9-4bced6e7110b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c84617b5-11fc-4bc3-aba9-81b02fb07739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d06b909-d5c5-4df5-a46b-f2ae18e3250e",
        "cursor": {
          "ref": "ae816f17-0745-417c-980a-eec0c96b478c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0a6b9a8b-4d58-4da4-a7f0-f816beb0719d"
        },
        "item": {
          "id": "2d06b909-d5c5-4df5-a46b-f2ae18e3250e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "63ac5bfc-72cc-4b14-ae5a-f46691b8b940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81b6507-059c-4996-8716-a6637bb6a034",
        "cursor": {
          "ref": "2293339e-747d-4ebb-b565-1ede586f572f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "cc1515d8-7010-4681-a283-6457e071627a"
        },
        "item": {
          "id": "c81b6507-059c-4996-8716-a6637bb6a034",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f196f385-58f5-4e67-bc95-defae50d34fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a297c1f-46c1-4c51-ae19-83a96207f8e1",
        "cursor": {
          "ref": "2121b76e-f9ff-4df1-aaf2-66c5117b531c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "094ef809-508a-49b6-9f5a-3f31aa9c7f00"
        },
        "item": {
          "id": "4a297c1f-46c1-4c51-ae19-83a96207f8e1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "96b61ac1-2297-4616-bbe7-b33e90925628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21e6997-cc91-46e0-91f8-2845328bdc50",
        "cursor": {
          "ref": "1b83601f-f658-46cc-815c-0f3758877a5c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9453b8bc-d60c-4718-ae5f-d46891508435"
        },
        "item": {
          "id": "e21e6997-cc91-46e0-91f8-2845328bdc50",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "244b2806-58c2-45a6-8ee7-c494eb1c5600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3403f267-fe45-42c8-88e0-d015bfb14d3a",
        "cursor": {
          "ref": "d0f120a1-7b0f-44be-978e-6fa3ab341124",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e3f1fd9a-30da-465b-ba64-74b817e9ad07"
        },
        "item": {
          "id": "3403f267-fe45-42c8-88e0-d015bfb14d3a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8dd964ce-c740-46b8-af6b-850cc7791641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452ce78b-df6d-4ba7-8594-c6e5dd466b6c",
        "cursor": {
          "ref": "eff725f8-1550-49cf-9f8e-f4ee977ad92a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f1b8a0f6-84e9-41a1-ae18-1fdce3c179a4"
        },
        "item": {
          "id": "452ce78b-df6d-4ba7-8594-c6e5dd466b6c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bc377aa9-1a09-4545-8f78-b0ea6fdd3a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14177cf5-a096-4e21-8bb4-934f6978494c",
        "cursor": {
          "ref": "d7bd3245-3d84-43b6-a5e0-51a8611aaed8",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "190eaff5-391b-489e-95cc-f40d99923ff1"
        },
        "item": {
          "id": "14177cf5-a096-4e21-8bb4-934f6978494c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3b5a423a-6782-4b3d-b3fb-16ed8f208152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea9e8c5-7620-4ac9-90de-2fcd22a59afa",
        "cursor": {
          "ref": "a1bc2d6a-f805-44f1-b549-f454b5e41a73",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8f806e61-f898-4817-b5c8-710d3b676593"
        },
        "item": {
          "id": "1ea9e8c5-7620-4ac9-90de-2fcd22a59afa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fa334263-2943-4285-b17b-ec500bf21a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1514e64-fd9a-49b2-9634-1dffba79c1cc",
        "cursor": {
          "ref": "1c4aca30-3f85-451b-a06a-6677610c5b6b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8b55f76c-fc28-4e98-b28f-b26e1ae111b0"
        },
        "item": {
          "id": "d1514e64-fd9a-49b2-9634-1dffba79c1cc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "27fdf88d-c3d7-4910-8d80-1989d96eec32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebc1ebe-878b-4fae-9198-387a660b60a3",
        "cursor": {
          "ref": "054bf2dc-f6d4-4b62-a9d9-6a99c2ad1eeb",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c5a9277a-363b-4a87-a12a-472f7beeecf9"
        },
        "item": {
          "id": "cebc1ebe-878b-4fae-9198-387a660b60a3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "dbac975d-0df9-48fc-bf57-c7ba8010e891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fe7e46-5206-46bd-b498-3a2a37e44b92",
        "cursor": {
          "ref": "dae08bc6-906e-4b26-b062-73d0eecd3a76",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "15dce808-d514-4e2e-8e01-97135c7e477d"
        },
        "item": {
          "id": "05fe7e46-5206-46bd-b498-3a2a37e44b92",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "016dbc37-905e-4ef7-84dc-e00dd4932e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6e9680-1b91-4a14-b972-0367965d084d",
        "cursor": {
          "ref": "6280879f-1c37-48cf-ad0a-c5930e968e60",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "744fde58-c8a4-4163-a8dc-1a775b136d1a"
        },
        "item": {
          "id": "df6e9680-1b91-4a14-b972-0367965d084d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8a03a519-3377-440a-8e7f-6bf38cbb22c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098271dd-3069-4fd5-936c-a62192292117",
        "cursor": {
          "ref": "32585ebf-489c-4683-aca5-71db1dd2303c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c6793b2c-ce2b-41eb-be9a-2929f4585ec9"
        },
        "item": {
          "id": "098271dd-3069-4fd5-936c-a62192292117",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ada65493-41bb-4882-88cf-b66fb5f1aee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186dba42-e277-4659-80e8-64aedf58ebcb",
        "cursor": {
          "ref": "c218a02a-9bd8-4b1c-9838-c173c128a3e9",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fdab62f0-7682-416f-aef0-060f39741618"
        },
        "item": {
          "id": "186dba42-e277-4659-80e8-64aedf58ebcb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "18a4b424-4ed9-4e6d-b5e3-daa5057db198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f34dbd-0c1b-4787-b1eb-cd9754aac788",
        "cursor": {
          "ref": "a6624061-f671-43ba-871f-3e3c381c07aa",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3b32006e-e3e9-40e3-a47f-d1c29244d131"
        },
        "item": {
          "id": "a5f34dbd-0c1b-4787-b1eb-cd9754aac788",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0366668b-4ea5-4539-b6a7-8ff28949f8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31baf2ce-d35a-4074-8f3c-dc6bf24d98b2",
        "cursor": {
          "ref": "e6b1ad5f-dc4f-42e9-a1bd-c031fc2e7575",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6c312884-e14e-4856-bc6a-85f04daf99df"
        },
        "item": {
          "id": "31baf2ce-d35a-4074-8f3c-dc6bf24d98b2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fc0afc7c-5fe3-400d-83fc-cb0cfe573575",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23320f05-093f-463e-8c4c-9cfdee41181b",
        "cursor": {
          "ref": "6647c7b1-6b0b-45d9-95ed-b35a5a4e2079",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "41d87e05-3bb5-4428-9ccb-e70fd95373b2"
        },
        "item": {
          "id": "23320f05-093f-463e-8c4c-9cfdee41181b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "32ed9cd5-f028-486d-b984-88ce30858a89",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6a8693-abab-4b56-81cb-7712cc04bb64",
        "cursor": {
          "ref": "2f8801c9-a98e-453c-97f9-f3744ffb832c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ba7b2060-2cf5-4b7f-8185-ce9fc11e763c"
        },
        "item": {
          "id": "fc6a8693-abab-4b56-81cb-7712cc04bb64",
          "name": "credentials_verify"
        },
        "response": {
          "id": "55ab0cc0-a85f-4b99-ab31-85641b6170e2",
          "status": "OK",
          "code": 200,
          "responseTime": 2355,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88ef2db-6436-4cf4-a560-45d610b7a06e",
        "cursor": {
          "ref": "d6f2812c-54c1-41be-ba3d-8f0be8b14f48",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "adfaa44d-0936-4f7f-bb70-e6f9c90a80b6"
        },
        "item": {
          "id": "e88ef2db-6436-4cf4-a560-45d610b7a06e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0af718bd-ba76-44a9-909d-82d424a733dc",
          "status": "OK",
          "code": 200,
          "responseTime": 3293,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "66dafc3a-062c-4cde-9ca0-23c8eda3fc98",
        "cursor": {
          "ref": "4d68b32e-7c2f-46c2-9bb7-f06726815d40",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "13dbb6c3-5a01-44f4-ab81-79caa56fd862"
        },
        "item": {
          "id": "66dafc3a-062c-4cde-9ca0-23c8eda3fc98",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "89590853-220b-4f0f-969e-4245549314f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66dafc3a-062c-4cde-9ca0-23c8eda3fc98",
        "cursor": {
          "ref": "4d68b32e-7c2f-46c2-9bb7-f06726815d40",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "13dbb6c3-5a01-44f4-ab81-79caa56fd862"
        },
        "item": {
          "id": "66dafc3a-062c-4cde-9ca0-23c8eda3fc98",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "89590853-220b-4f0f-969e-4245549314f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb817d34-56cc-4499-9417-d29c643da4d1",
        "cursor": {
          "ref": "748fe1a4-788a-4922-893d-eac781ef08b3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "088e327f-e848-41c1-b1bd-39c1c4b4ff7c"
        },
        "item": {
          "id": "bb817d34-56cc-4499-9417-d29c643da4d1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "42b89012-80b0-4f3e-80d5-8d2dcc89c55c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e386402-37b8-4ed0-960e-e2a4061d8c16",
        "cursor": {
          "ref": "b52a80dd-1cfa-43e7-b5cd-cca503a39902",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "5205bf29-b82a-4cc6-b3a2-aca5a794023b"
        },
        "item": {
          "id": "5e386402-37b8-4ed0-960e-e2a4061d8c16",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0f2bdf4d-36ef-44f1-967a-61f41a03358d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}