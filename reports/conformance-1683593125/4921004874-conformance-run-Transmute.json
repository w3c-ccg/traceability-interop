{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e181d978-06a3-45fe-85bc-d8a796694925",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a421a1c2-dc89-4f82-8ece-387341bd7e01",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "106866c2-13da-4ad7-a8ef-badaa3fc4e75",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d59185ec-ed15-4af1-a882-7109bb288934"
                }
              }
            ]
          },
          {
            "id": "ff228828-105f-4b07-9962-7851b9c8cedf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bfb182e0-3397-44b3-9fbc-51365dfefef1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "32093f8e-61f8-4925-90e3-5ec8d44a57fc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cd7e76af-e9e4-4c73-8f83-6e4572eabad4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a82e61d0-1ba0-4ab1-b463-22cbe35c7937",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f5dc8acb-4fef-4276-9864-0d25196c4671",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac4efe20-be76-4254-a457-8c8546d96745",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d2d4890-743d-459a-ac32-afae0b975e01"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74086798-d1ec-46e2-8c7f-ed6487059461",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f8c8982-8b2b-4244-b03b-512647fc2f64"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9080df0c-143f-4de0-9d82-8ab8751d19ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8112c3c-3b98-4dff-bb5b-b27af43ceb24"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24cde8ee-2c4f-4e27-a325-ac4d770027ab",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "42f4a6fc-569f-4e8b-bb72-f9f306c08327"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e026001c-6130-4295-8134-302c90b489ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd34961b-bd3c-45cf-9564-24246d7226fe"
            }
          }
        ]
      },
      {
        "id": "592bd607-710d-42f1-9da4-92141e0f0b69",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ff2512bd-7a15-4b93-a8fd-f8496e0e7efc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd4f58a1-9586-4205-9f86-f0d19cbc4f20",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5a393cde-65fb-4119-bf2f-06a86ea7bc85",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cbffae-4b9d-437d-8780-c97b8a8f447b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bad0efc-29c2-4741-be41-c1a9999988d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b90faa-dcde-47ab-99ad-388c8f4ca4c8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73d91d0-cde5-4f33-a289-5ab9ee0c6a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dec89fee-fddb-47b1-bb14-dc6ffd8577fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd19818-bc2a-4c1f-8fb1-3b74e71efcb9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770bd8bc-ad00-4680-be5c-c89c97cf3022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "656b1c6f-9c44-4183-b746-9466bc9ac5a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "61c32fda-97c5-4744-ae27-60f8695643ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cef66b8-9153-4f26-b3a3-be90564781ee",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2cbd68-bf4f-4e59-afe0-4b83afb8b1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0628bad-ba67-4096-b7aa-d6792bf56060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c706fe95-a5fa-41d3-84fd-1b2a3982e074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec083e6-3125-4d2a-a043-23f8835b081e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ebf259-1cf3-4263-98b7-3d9d45c426a0",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4ea07b-1a93-4c4c-a831-d083760e7bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78b59f88-1f5a-40ca-9bef-14d96db9568d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa021dd-924b-4b08-ac08-b4a1bd1e67ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "403ca3cc-94fe-4405-80f3-909ad89398df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9329607f-7208-4296-b165-1e81042df357",
            "name": "Positive Testing",
            "item": [
              {
                "id": "85b9d606-18d9-41cd-b308-1276f64f6a70",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edfc3ef8-3908-4c3c-9bb2-1332f2299326",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5728d7ee-9fa5-42ad-95f3-b9378413d06a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d9e30fe-6267-41cc-8ca9-b195f6802b8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "c5d61086-f3ea-43a6-8029-b7b7f3944373"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9b0b63f-2302-4750-8953-8138af3974d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "689980b8-713e-45c7-a779-8e52995db619"
            }
          }
        ]
      },
      {
        "id": "508c5025-6b09-4a36-8446-4056c608d297",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "16043f49-f814-4efd-9953-13668fc68114",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c10e7d67-f6eb-4d94-9fcf-62c8f99b7b2b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e5377465-44b1-4b9d-890f-e4fd01b86d8d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f80677-04b6-405e-b7e7-70613b0f1c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66cb513f-7828-4ba0-8ba1-b7829375503b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e148b7-022e-478e-91aa-b71ad4802592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9d58b90-eaae-4334-bf16-72ae3d70af7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1431a4b7-5297-418f-89aa-4adfea3c8fa4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5f7d22-163b-4407-9642-92b2e2e756eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bde434-6d96-4a8d-b61e-035c6aa4305d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a87f23f-a453-4977-aac4-2871648dc7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1112d3c0-b8eb-4cdd-936a-001c96c6c313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be784ba-5a1c-4305-be7e-462dd87a74aa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226a2b38-646a-4582-9082-645bd78f66f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb3f751-53c0-463d-b6ad-2aa103e7cf1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0829315d-aa25-4d5e-8f81-d0b7c9bb2a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2a6c35f-1b7d-479e-a953-3bd5e156091d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86cdcbb-c2b2-44db-9167-115994065e42",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cce5845-c49e-4e9a-8a9e-2a4cb0fe342c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61072ac-1260-402e-ac18-f6bbfaeebf59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8737cb69-352d-4535-adc5-f8d7bdd39c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7467d64e-5f0c-41fe-8c68-e072043c9057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd52d72b-0bb3-4516-b219-c61efce1b61e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9075233e-8ffd-4e1e-a3ee-aac5a1e7fe69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4d7fa8-0553-49c8-a60f-e4ed93802b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f76a1f5-0e4a-417e-ac65-08030aa72aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b83ef1c1-ed3e-4889-8d81-a90429e0df08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81da038f-c65c-4df4-80e9-57f37c05b15b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37485c2-29a6-4c4b-bd90-90026dc1d9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9aa4009-1a78-4948-b1ff-bd448f74ed2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6337f731-30b3-4e0f-b930-63170c503233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a438f075-affc-42ff-8d58-dd3daf279a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fa7a0b-12a1-4afd-b2a9-2311f8e03c74",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767dffc1-94ab-4c87-80b5-b10d159cd73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257b32fa-e057-4f4d-b9cb-0ec78d93f064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24889d81-f7f1-48cb-8e30-958ff653985c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b469fc5-2cec-497e-8c0a-70987c141816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf357148-9696-4d9e-ae50-2a32b56e0b33",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f587f4-4de1-4cc4-8cf0-0298a5dd6b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf44715c-34fb-4827-8c24-b3b1a9d620b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9f1e06-d8ec-42cb-ab84-8184e1b6f721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54c31f55-103a-4002-aa2a-6aeffe80ee75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7c196b-edeb-46a1-acaf-07ccf5b55807",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eaf5299-d4ee-495a-96e9-a43890f27ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8772f38-08f3-4181-8159-523164a18872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4c5af4-ce05-4975-8269-faf613b80a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a28cb609-134e-455e-93bb-5ce0d276657e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5770669b-44f1-4e6d-926e-4176a63bffc7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40986c23-c368-44f8-8fd1-97310396e4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b28fdb-bdbb-49f3-a087-106d09166733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0936134c-ff39-4eb2-86fa-262c953553e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83e79ed3-688d-4250-8c73-cad03baff112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef09d780-2db7-4231-8a29-6b52e7dcd621",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af226f8d-bc8e-4e16-a5f8-c297e998dcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a5d581-af65-4a7d-a394-9aaf2703695b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16bc043-9a46-4daa-a307-1f9c7aad2882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06ed6f90-208c-4a8b-a414-d2533067f63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde0bbf7-0fc3-4d44-8a2f-ef92ed877e63",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d199103f-1b2a-469e-8596-b12504360ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ac2fbd-2bab-49b2-ab6f-1034ab219140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5bbd35-1ce0-47b8-bb9c-5785c2ec4527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b94a247-775f-4563-9e57-28c41a40f833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b7f088-adaa-44a8-8c00-32273735bf0d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e406c0d8-3772-4ac3-9a1d-b81fbcf0dded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c297294-29fc-4602-963a-31b2e65b0d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62448680-8f28-448d-b72e-623a7753bb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb7bc10f-1bdb-4609-a1fa-cf2d49a74c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65400b09-4d16-4dfe-9e61-0d793855f523",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea27ffc1-3594-4109-981b-f1ad5c5fa7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0781e371-60ca-4a8a-9900-7cfcbe0633c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a6ebe2-2597-4a15-bbc3-56d7af40add6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80b72e6c-c8c3-41cd-81cb-d97dab50adc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3c9520-0b3b-4be9-913a-3f3e6932ca92",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1109407c-10e5-4a23-b57d-2d440ec939f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adaf4a57-36d7-4d03-92b8-b1bd80d49575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3d4931-704c-4c58-9548-04b0c19e6285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "260e3053-a457-4c75-98bb-6963baebda2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266e55eb-ca85-4e71-9a98-c8ff32a5c6d9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5318b7-b3ce-4ecc-9c5d-ed85c0277006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67db40bf-3b0a-4904-bf8d-7618d0eb04c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee018a3-89d6-466b-98c0-fe9aaf382b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74f72894-7946-43b2-b58d-d5a928f2a6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4e2a2e-297d-4fbd-850b-9050baf62bf8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29cf513-47dc-4169-9856-8814e4eea83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872864a2-6197-44ba-90e0-7deab499db1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af686891-3539-4c41-8b4e-b359023be749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fb0b78d-24bb-43e2-aab8-2d484bc807eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8993372-dfc2-4600-9ef6-47fc7be30e01",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd339900-fc0d-4c59-acc0-e5f373b5acd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a67b22-825f-4452-8ab6-789763bc9aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b419ad42-7db5-4e95-8ce1-68560a54e043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "77887b9c-cc59-4cf9-9f6f-5dfebd0db730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bb5c66-f65c-409f-a920-93522fe7bf3d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df31f55-5d91-47ac-8bb4-7093b1e2968c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073ae450-4a79-4de8-855c-fbb831ffeaae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efad1b91-cdc5-4159-a5aa-1eb9ab657136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b27985e9-4349-4aa2-a5d5-3a8bbfa065d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec801a51-53c5-40c4-891d-e5403f53ec4d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ca86d1-5c1d-4e7d-a3f3-0fd27e5050b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2bad3d4-9278-4e58-93e1-49d3ddb0290a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351d8f0b-ed9c-43e8-bda4-edd801c417c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3751ca9-d3fe-41fc-8b86-e927c4f13b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210e26fb-b2b0-43d3-9522-f2f36183674e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6f3dfb-f85f-4d4b-a0e5-3624cf5a2f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba5c78b-ad7c-4bf6-8797-1b58ba16ef2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c526bff7-bc19-4021-9080-980d9169b9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9263577-a79d-4702-8b10-4c13539228e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b7e0c5-eff5-4208-ab45-43b99af27d09",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200e6da8-7e04-4e0c-b6b6-dc16edc5ae87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32909e83-fcbf-4e83-a514-7ec215c3f104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ee6bc4-12c8-4b87-92d7-f571a8472a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "583e440b-ca3d-4a3e-bd31-d0338df49e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bf2eed-883d-4722-a241-34becc141913",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e397ba6-9f35-4843-9f7d-9446a5491673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe91a52-5602-47da-bfc9-e8fc9a1e01a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0527d02-93f8-4ac2-88f4-7ca70a76bfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca37a37-3cf4-4223-832f-c3520631409e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dc37ef-ea10-491b-9846-5d953da5d8bf",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72864380-e1c2-485c-838f-3e145a4ddc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529bb8cb-1916-4696-8483-dc475f6fc4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0a6cb9-1caa-4217-ab72-5b62ad3acddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6ea140-a256-4583-b1fe-58ac11d33efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49233e29-23fb-4f59-a016-d64d8595941d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1683c6-ecdc-4f1c-8590-4bb2eb9519aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6738eeb-3346-4c85-bcf0-00bf11868a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51122cd9-713f-41f0-bcc9-149d5515ae0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1a5c05-64a5-4c85-a766-b62888568959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978f1039-031f-4983-9ccd-1b4081e91036",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81700690-4ea2-4ffe-9f7d-f32c0201441c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f8b73f-b885-4741-b765-2c402ce25be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d27b70-ed53-45ac-be1a-cd8eff54a522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3472ca1b-e9ae-4ee6-b323-21f3854b2834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095dd196-d740-4d0e-b4ce-d61f42d30e1c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e30ecdc-e8a2-4870-9c6b-7f5e8955e145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f35ae6-7d76-4f6a-ae8e-d70742d98c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b1b35e-8a33-43f3-af32-e86b424cf53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c391e2-6181-40db-b32c-6635302cbbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8923f3d0-dd5f-4c80-9a5a-f171e5f091aa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a65386a-c39e-45c7-84c8-b769b17dc880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a81920-ae66-4bd5-978f-20b35951ebc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4c4496-8510-43a2-a3f9-0e787f0cff06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7048fcc5-c881-46f1-b6bc-c5759dea42a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b23414f-0861-4716-882c-99d437c980ca",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa2285e-22f3-4143-bfff-b777cc42867e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7600e3-c53f-4fb9-beed-40624c966ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0042d58-755a-4dcb-92d0-e014d4da69e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4113616-534d-497e-b1c5-60265658423d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b05f90c-2868-4b3a-b4a3-e10f28a20094",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd3888d-4513-4655-86b1-46a1f4ddb9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588f7dbf-da4b-43fa-bb43-545f7e52e215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6070c5d3-ee5a-4f2f-a752-23a8c622ac5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "475590a2-8b56-4651-8151-1b451548be9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e358515-bba0-4798-8987-41a44f8e0185",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5218aa3-6ca0-471d-898f-f91c06a009af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98510125-a901-4822-b2b6-246c81e85e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1138eb0f-e413-454c-ac2a-4b0cb1e3eec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "289942e8-be8e-47b8-9a28-d960cea823e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b666e938-de8f-4a3e-b978-f143f5925b7a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d602ade9-2e9e-45d7-b198-c216ee797161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82488abc-b3fc-42d0-a13a-ba19eaae2342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ea5290-ccb0-4196-af87-345b0db18220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f080ff44-8b44-4091-b276-0f4d60157791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83619cb-0f5e-4ca0-9b09-fa460451f957",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a7838f-2cba-47d2-9af7-2005e6174dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651976b3-0cf7-4720-9a04-b4dcefca016a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfee7a7-53e7-41d5-9cfa-2cd03c9435f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecd14b8-9eb6-49e0-8564-df859bba9537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec39425-181b-4a7d-83f4-dae38b3cc223",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991a6d4d-c2f9-4d05-b885-3c229acf58c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5793e9-f1a7-4a86-940d-7e9e5fe031e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c767f148-052d-4262-9d45-521c313a2e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e65a0ba4-4742-4b22-bbbb-f7ce9c56d41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa456c5-1e44-4a3a-9583-12ea3ca8e14c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48faeea5-e689-4d11-871e-915efcbddce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546ed193-c704-4763-8538-90b9396b27c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c24aeed-dd81-4ccc-a97c-2205a831c4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9f587c-ef6e-4800-bd73-3a51ee4357c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195e7479-1b6b-4418-a967-7b630a864c2f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8a02ae-c1ec-4762-ae8f-035b658ccb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "306d6c8e-c6bf-46d3-9dfd-5d642ada141a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50fe4f0-205e-40d9-b9fd-eb794b7ffd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8e2135-35dd-42b6-ae99-d608fa9089b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8093afdd-0c76-4495-8bc3-1d97c429edcf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba84c4d-525f-4a60-b9fd-ce64a3266bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4b9644-e0c3-4f0a-a637-182e0399e15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b72740b-eefa-4cb4-9ee4-fcc76e1b4a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "978e0c8f-82d8-4222-924c-7dbfd84ac6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a97a971-35df-4391-afa7-41338c847e66",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37203492-4c9d-4a1e-a94a-02b1d33df1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b1c6ca-c553-4592-bfda-c1c942299790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbac609-04ac-4660-845c-83fa984c77ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "46fb3b3e-1d84-4a83-9ae3-fc609618ca27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed5cd33-e6df-4e94-890e-2db25b54d4dc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356c4362-58f2-441b-9f98-042ea657ddf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e9adf0-c66e-4f2f-81ac-5b7a470f6a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25b1f89-905a-4b57-a06f-db5ad33589ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1525e57-0df0-45a0-8613-0bef65d85e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255b625a-4db5-4a46-bf58-19cb9f904a4d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c09f4c-4056-490e-81d8-fed1e3cba667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dcb50a1-5c93-4f80-83d9-0c5559a502bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7555650a-927a-4a6d-b067-e4a74fd5b9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef2c69f-5897-4f3f-b1b2-9cab74cc46e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21f2179-28ca-4e9d-86b7-3a24f0518f2a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b212231-22ff-42f9-9282-d4c70279c3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7b1ab0-a6f4-4af0-8828-64370bc8f803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58852134-920b-4366-9d89-8b1638be901c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c89414a-43bb-45be-9841-21238f984fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fec728-e552-46d5-afec-ceb60753bf6c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e89d2da-95b0-458f-94a8-540a6287cd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0935fe98-acdc-4333-bc9a-3688e0f1521e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910db380-3b2a-428e-a2ce-9d37e50f4930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2fffd4-9460-4d3c-8e72-6a87c1b4d2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397b41d1-3b1d-4d40-94f5-37dcceae9817",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360409bd-e82f-4421-8924-e5f7a2012668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59fa889-02f6-4f3f-8d54-a94a3619f088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12f9ff1-2230-4877-b5a4-3709298a5e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2e1a66-58b5-4d85-9b61-20ed4a9907f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c196b9a-f6ff-4efc-818e-e8e7cc3270f5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405aa783-de6b-4657-b011-f9725054fc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e05b91c-f7f7-4b83-8073-0869c34226e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8dc368-370f-4fcd-9f3b-d93f47838930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "48cb41f5-e2cd-4ffa-b96c-3b26a41a9b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3db248e-2610-4b2b-ad8d-0a1cf74ab26b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435711ae-f685-4dc1-acaf-efcfa54c5f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2039126b-baa4-468c-b552-ad0921740795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9909bf6d-2441-45a6-9957-a82268d660a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18db6599-1014-4fa6-9f55-8fb6f77ded6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f2e2e1-224e-459c-bd02-7000c091831f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a7cce7-f680-4a71-9424-5cd03eefa897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4e2bed-31ad-4be3-8abd-775552ea64b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bae68fa-198e-45b3-8af4-97c881bfa819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5111089-30c8-4040-800d-eec7807edf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1e7e6f-c215-490f-8e05-8a758314a169",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bd6927-3621-46d4-9231-eb9698c8ed76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8166bc0-d682-4bf8-95ff-64ecf6757759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91dc86f-e700-4459-8dba-1de7eafb1c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c69135a4-42f4-475e-b2b1-35778fcc4f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239cf7db-d158-41a5-8d1b-94d90ad5f6ef",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207d74b7-6388-4a5d-8010-1f064b134978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702dda0e-eab1-437a-a965-17d0e9412bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d39738b-6a05-42b5-9dc2-e12b7a6555fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59f5b71d-0e9d-447d-9239-8fd40652a0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766eff68-bdcc-4dc9-a727-deb79cc48540",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bc7036-7eff-4df8-9937-7068915758f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7476e485-b1ae-4cc6-94cd-5aa4270b1e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a869cb7-9e9d-4bb2-b860-dce42965a5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3842df52-29d9-4941-ace4-99160671a94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61cf235-f8ac-4e9b-ba69-b3fc52453d47",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179c7906-ae8e-4231-9830-3c21142cd498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ea04a7-22ad-4de8-a6e6-dd4d5f2cd52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e5ca84-1d8a-4791-8d7a-c353d29a6b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a08a0f-f5fb-4339-aa73-7d7fd5a41773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c494cb86-4027-49a6-af6d-cf95404cea40",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789bb465-534c-4e7e-8121-7da63643e93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcc6b11-8bd1-485e-ac2f-45dc33d0db55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec03ff6-5705-4b3d-8d63-d0240ad6fe55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed66de4d-1269-4ef4-bf21-ee903dcbf0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c58d117-b64e-4bc8-b980-a600d450dfef",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b947c4-5acd-4dfe-8232-a48364c4353d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafa587c-f27c-499a-b064-7906cd755db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931b3eb3-4b5e-4ad1-bca0-b03fc194c8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f024839-264e-47a1-a244-d8b4270110d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b189a61-f733-4fa3-80fa-79aa2999feae",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca79921-86be-4528-9627-b89bc99150ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a99f79a-d80b-4823-a640-8bcdb26010d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679983c5-50c4-4bbb-b717-758aa6d66411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "751fbfde-99c8-4f7b-83c0-af5d11fa560b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24e40d5-6f5e-45ab-938e-a77e8de7e541",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b1548a-b271-41ab-8760-3ff6ac6dfb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc1eec6-52a8-4582-a9fd-d6cfc79e82db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0571003d-2a37-4afd-b31e-bad6f1b20756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "478fc9f2-6bd9-4d38-9029-9c97240d003e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa4fb28-e18c-4f80-8dc0-8ccae2bf701a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72152d7f-d7f8-4938-8da8-97fa75fd3c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7387069c-95c5-45b3-8b41-e053caa2160e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc38d144-9bd8-4dcb-b7a4-cea58709b4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e37607e-3b5b-4601-9675-403b1600db77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122a5975-071e-4e31-ab04-9bef5498f10c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6b3de1-7bc8-46ab-9949-8a232a93d801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a50329-2993-479b-b11c-bf87daa11bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a65800e-3311-49d0-ac8a-a1808d619cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3637f81b-d096-47b4-9c61-221c0484ee6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41cd724-bdd5-423e-a159-306fdaa04cb0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2e1adc-7945-4912-9ecc-7901a197b422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c1a407-2967-4ba0-a2c9-bf481a0dbf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04e5409-3b42-4056-af63-cd94bab2ccec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ee59a4-7b1f-4d1e-8b04-f154d5430a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bb52d9-f50d-41d0-8941-5e59f6719cfa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ba97ea-56ca-4879-b33f-fb4b3c169342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45982fcb-e588-460c-8d53-fbf3ea8182f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0df890-4993-4cc6-a8b7-8a6fbf1327e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "129b3dff-14f1-43bf-8ca9-22a8793e3b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed9e588-1755-4545-95d8-bd4369757dda",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e068b37-8126-4edf-947a-f1fb2f0afbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c91d0b4-5f6e-4d72-ba87-57dcb9afb0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30aef42-f4e8-4b49-92b5-a812f1d90352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b551fc7-8383-4535-a9ab-3f16d50e947f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d83ebb4-b3d0-4ca6-a6fe-d31a26f6e3dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef01535-bdea-492f-87d4-8f9ff962a200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07bc9d9-7682-42f9-abf9-71d7fdaa2b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83529925-64bf-4b92-9a8b-d61d6e30d165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eecac7c8-be8d-4f32-b784-3ade956ed994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335bb901-3304-4f2d-8adc-9c84e085f38a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04c0092-b9d5-474f-ac92-7a53d17bba42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf859c3-e9d7-4817-a606-0d42dfd67083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e41b110-2163-4e8c-912e-91f86dcf8981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9f2be3-03e5-453d-bd4a-0b29824d3026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282cf4b8-2abc-46ee-aca9-f2c484a1ac19",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05377c4-7b3a-4cab-8bae-030e1e4aeda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd02211-5381-4400-be55-ba48f898968b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fa1e47-e1e2-4bb2-b707-0bd209a86d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "36c2ae30-4664-427a-ba28-bfc93512bc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6426725f-fe69-4aa6-9766-8cb87f677fa4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a274755d-aaef-436d-8b00-13db90d53b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1fa99f-ea72-4248-9cb6-a70cbb6cf983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af1f7c9-b319-4cca-a750-d65a907dd1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2fbdd45-09de-4c2b-a058-164302ededa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735bf50a-132b-4d60-a075-1581cb3e015d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45eb1779-8eee-4ffc-a37b-31de20c2ba88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f90dde5-0c1d-433b-b742-0b91b9e124cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e19d660-2abd-44f1-a77d-a7738a00aa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d712170f-9f58-4c6a-b3d5-7be6f2e8ebc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00f9c2b-2d0f-4282-a430-3470b80bdefc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f09fb3d-068f-4f59-8d33-47d5ac7e27d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba29988-8f98-4f51-9800-345f026880da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de0b39a-4754-41d0-9113-669e9ccf9a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7eb0d56-e2a8-45a0-9da5-90b54d0da7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071354a1-cdb9-4b2b-adda-56e701ae0bc7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e316a2e-df6b-46c4-b4c8-448afc986c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c671f74-6fab-49ad-9506-017b2b6c7862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19107342-6f57-4e97-b26c-58d46b7a724a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c445b570-ac06-4674-a902-ad86643c4a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5afcd1-27c2-4820-a485-d3f0e30ba04b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76da80ce-80b6-4026-9622-3a4190e92b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241c80de-3924-474b-9a0c-a4626ceb8035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4c0e61-f7ea-423d-89af-aed348e4990c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62061581-b078-402f-98ae-9aac24dff937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa01e5a6-f03c-4b40-8ea8-377bf5632e84",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58024437-8ece-4af3-a008-8120ec1e8441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d1589b-9273-41df-919f-99e417e5a5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be393de-44e1-4b77-9836-ccf5bde66f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "de12e623-e528-4d99-9616-5a4289abdee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c065ed4-9aab-4aab-a0b7-0c564bfe4850",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf786e88-56e6-44ab-8b09-5e402cf7b5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a67329-84e0-4f41-9082-89035c274c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7df6892-7b03-48d6-8cbf-79d16c032e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb6147d-42e8-4038-953a-18d2372bd55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3601b56e-6c52-49dd-8e67-3456c1fbcd91",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9bcf69-c8e1-4ed7-b624-fbbdee70eac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a41ccd-d62b-43f3-bfe2-6d095d7beb00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a46bbe9-9903-4520-b3ad-5a881002aaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbf06ec-4967-4dc0-b543-1d8f12a1e86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d4d5df-175e-4c79-86d5-08b3b2cbd28a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac72c37c-ba92-429c-adcd-261e3261b2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f13cbc0-7e4c-4b0b-b0c8-43bf37a25fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6875f4b4-5341-4a43-9d24-a78a08b439ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e87e5bfc-9b35-4ee0-9d1e-1c5c8df20f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe30497b-d565-49d4-9560-928620239efd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55880b8c-60e2-4ee7-9b2e-b86438d2ac20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b76e07-7263-4d50-a1a6-7887568a8e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2267c6-d0f0-4a9a-a36c-ddb4e293735f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c54c031-9ceb-43a2-9c7c-32c3c1e37b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fc3058-eb43-4a25-907e-703babbe250e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89acc217-e6b3-426b-a86f-3437ef42ea36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c35127-93d6-4f84-98a8-d76446df987e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf09074-9722-422e-bf6e-fec562a6e2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0b60c6-a109-4009-a1b3-9e74ca0cc461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fc5d5d-577d-473e-8060-3a91d113ff26",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e27d66f-4b3a-454c-b9bd-fa68a90c00e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1051b9-d4ab-4c14-9f78-e24e7e803264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17f0bc5-1ff3-4160-9be0-a54fbae101c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bfb9cb7-808d-4076-a37e-6cb7ddc4e841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50712211-ac51-4174-bda5-008cb145bc10",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c839754-c4cd-4be7-8e9c-e0668db5512e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5539cffb-ef9c-47ab-8f8d-fa2fb7fb02f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640cff26-3d3b-4f75-b931-080915d783e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e400bda-05ba-4ddf-b2a6-abd1e1639a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbb71b4-d0c6-4222-a6af-ace6ab5c5985",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6080eea3-828e-4ea4-8931-207bdb72cd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e96bbc2-2a42-4f69-952d-be46a2e2c530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45be1165-19d3-47ad-b248-a728cc6e2f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bfe5db-3424-4dc6-9570-dc9c36833a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bed7c42-cefe-4154-80ca-113682e3024d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4210c46a-4d0d-40d7-b0fc-357258c5f66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aaafcff-769c-4a39-b5e5-c738fa4a6b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0742b329-8003-489b-a5f7-8212f333904a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "701516f6-32da-47a3-aa56-58086c954f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564ce12b-35f1-4c5c-a69f-e64d99d6d6e9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18992252-a394-4d55-a3df-99aa0ad43b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973eb4fb-755a-42b9-a08f-82f2f7c3cdd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c5aaa9-96d6-43e1-ae99-d14ddc877e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93b06fbb-cbf3-4515-b2a4-97ca74087d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e1ccb3-779d-451f-98e5-56849379a662",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3514a2e-e76f-44fd-9f0b-353fdae64217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9446796a-4e19-411b-ab5a-43f1df4f236e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871b5bed-73ac-4281-aabf-a6446516035b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82cee40a-eb8c-40d9-917b-6ae08439615a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f363e6-550c-4a71-b98c-131fe8bdd301",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81320d35-b533-41e2-a944-adbfe5dbe196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2876f6-baa5-47c9-9624-2ce15a57a23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b32a00-13a0-4bee-860d-7308a85b49de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7257ca-29c2-483a-ae95-578317f2bd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26efd3b0-952c-447a-a3cd-13ebb612fd39",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e17ded0-c3e0-4d8e-87c8-58009649a650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed4a650-d371-43f6-ac9c-6bf0611f80a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bead9a0a-2ce2-4010-bda8-03514da3aa11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "05b6e1af-5a3b-4717-99e0-bd7859818a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba00b85-b008-46b8-bd19-2eed28d0fe07",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6e5868-301a-4423-88a2-262f11eed2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca69a9b3-869a-41af-9cb0-99ef359a1bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f809aa1f-c758-4353-a25f-6e25e7f7b301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37cfb796-0601-4e09-bb47-a69a37e90fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38404b14-3f0c-4229-ab2b-2d0796bf90ab",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441d62cb-35b9-4645-b3e2-2579c833cb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7364c053-b0b1-49ad-8db6-d47dafa34771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898f9fc5-757d-48b8-a95e-bc3820c5ce54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a5eb18-392b-4481-a490-51e9947f1a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9a0834-5fc2-4a07-8713-774fa630d66e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ae76ae-5424-4562-bcf3-fc61d4ae6a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1d9a62-125a-4b5d-bdee-efdabd89eb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5b595d-58ef-41f7-932d-817b8a7f4f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13da2d73-4ece-476e-b100-55e1dfca4bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a46275-445a-43a9-acd3-5be2b712cb72",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61022d8d-2d50-47d9-a206-c96aee2cae58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cd97a3-669c-437b-a714-77633c8ff1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83153e67-0808-4b79-85dd-bcd1c338898c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "230e3bc4-fb4f-4f29-9d89-99e13b98c179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7f6d51-1207-4de7-ba0f-072cf1eb9cd0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee25361-d05e-4228-92bf-c8d52894f6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5cdd59d-939f-4064-8976-640d3b1c0d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065145f6-d261-4bff-b6ec-868262118c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1c1d79-5a36-48ca-9822-85ded6627b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebaefc0-7240-45ca-9b01-f8391333e7cd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8169bc8-28a1-4bed-b852-b4e17377a58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccbc705-e50d-424d-a182-04dcb4b10556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840c4c0d-c135-44f0-b7d5-e8c93ba23907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a2bd7f-6215-498f-a071-fb2e8ef00a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f186475-a546-4614-8b8f-2540f8cbe28e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41bf396-8089-4da7-bf89-565eaa7be98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a47544-550f-460d-babd-ff7cd0a1b54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc32f21-a2a1-48da-8eb7-521ce2ee6bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c370d225-2503-4648-a9e7-18cc446ffd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27047138-3100-4ae9-83b9-2118221f69d5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428703d9-7d8f-4f9b-8690-03fdfab97d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9972ebc7-b83a-4771-853c-e622b49f4039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f3ec21-fb78-47c9-ba08-38398f23f04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5f8fcf-5807-4bc3-8ac7-41c16eda8531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f4d898-ab2c-4567-b7d0-687fe4729975",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13654d8-ec03-45d4-b844-f1fd20f73620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6ceb05-9636-474a-8fb6-b7f0b79c3a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f98982-eded-4b14-b7c1-acfd3972e9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2403ebf1-fa46-47e5-a379-8e57717d7982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7d35ef-17d5-46a6-b54b-c49e7a03ce01",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435b9656-3949-44e8-954b-186b84233c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e9baf3-597d-4674-a6d4-8f2f4c7e5aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becf82a9-4441-4cb4-a00a-d46388ab9bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3066c2b9-4ba0-40e1-9924-732da13a2a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaeaffd0-2f07-4f12-bc66-39de918586c4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9716a34f-03ec-4856-98ca-975865d14fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "08312599-7d84-42f4-8495-2511171ebe5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d9d7a4-7457-4804-b2f1-48ce897e0590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "836ae6fa-c4db-4647-8699-87448ddbaa38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c5655774-b390-4028-ad8f-3008ecab7ba0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cb2307c-b2c3-44df-85f1-4ce2d30d141b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b315534-0fa0-46d2-936b-62958e782f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f28d0e4-d095-435c-a0c9-6a462b8626ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7a2ad8-29de-4c91-9f33-760d01cdba0e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50e78a7b-ff09-4abb-bd40-1d473c2a8cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c0d839-9313-426f-a57a-40cc435b26d2",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e21079-2919-45d8-bc0f-18b27575b748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb1cf6d2-6f87-45a4-9b39-a3916b223159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0656a69c-b4e6-4fcb-9a47-4cd9569548bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eed23fad-3f6b-4088-996e-3f9a5db952e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f97aa64-b35d-4c8b-a38f-e0190b650c3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17a83ad8-37e5-48cc-bf24-1a67a883cc43"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b54575da-ed38-4925-be7c-f562a9a4f887",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3673c9ca-b294-4e29-994a-3c9d6c673f95"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b119aa2f-e6cc-4837-9df3-f82a656f1966",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45a4dba9-34b1-4091-9b0c-f831566f783c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "84ff12bd-cdc3-486c-9ace-e446adcbeeac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ca69ec2-28c1-439e-a5f8-2fbb2b3a24a4"
                }
              }
            ]
          },
          {
            "id": "fb2592e2-15b7-495a-b31d-359fb365dbf6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b51e7ba3-2924-436b-9b8f-1a72d687c577",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9055cb3d-b1ba-4211-9038-7ca0ddbcd021",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5c6726b-cc36-48a7-8fed-e7016f78c225"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bd683a4-de2b-4cdc-83a3-d8efa69d4826",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85686c7e-4918-461a-91e2-ec67fa50c206"
                    }
                  }
                ]
              },
              {
                "id": "42ead265-2038-4f43-b2a4-9c626c49a6b2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "614ae7be-b495-4f0f-a22d-7e2655f41063",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc0493ac-529a-49df-91df-335529bdec34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "412c7f15-85fb-4249-9442-8284a0472f07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76d98fab-bc5d-42f8-9de9-5f2066f40221"
                    }
                  }
                ]
              },
              {
                "id": "01b6c683-5674-4119-8fd8-fa83139f3d6c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98adcf2c-929b-48cc-b546-0c40d0f8654b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9ab19e5-c3ba-4db3-a27f-2298b94f0b17"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67736055-2b08-4218-bf8c-857011cdeec7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc8c1acb-5025-470e-b356-ddf9c5495a40"
                    }
                  }
                ]
              },
              {
                "id": "8d5a1a36-51d4-483b-b55a-408bb7e3301a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb82d450-ff3e-4f26-91f1-cc699a4426c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63581744-21d0-43d4-bccc-cf9aaf62cf0b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c176885b-7ccf-4786-b6cc-750d4893b82d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "43f62c49-05ab-4bd2-81cb-25e7544e39e1"
                    }
                  }
                ]
              },
              {
                "id": "8e4c2ed5-259b-40f0-ba8d-c705dbbb9286",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41589af1-eece-412f-960c-761fbf08a876",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85a0a0ed-c1bf-4398-8ea8-b3f8cf0993f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8eeaf7da-a51d-4c02-ae79-e583d0424750",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f35e14e6-9c60-4a6d-8a72-78ab5372c734"
                    }
                  }
                ]
              },
              {
                "id": "f3c6ae88-4e4e-43f8-9867-7f3658e86951",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b2236d1-bc6d-41ed-92c3-37de8cd58154",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f847097-e49f-4b61-bc62-a49d71f0562d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe36d0d8-ab2f-4774-a4a4-eb53734ecd47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fceb560b-a969-42be-843d-e534e6df9a81"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9bb32d1d-f27e-4cbf-8240-ae66c4ce91ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa6e6b69-9d9f-40df-a9c1-7133c2f71b27"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a6e208e9-e001-4144-b168-9f3644f895d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c1e8dc5-1d0c-418f-b310-f47be80f5706"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "911d5e74-36bf-4bfb-af4c-b0d37d6b8d86",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "615ecae3-d300-4e70-9ad9-0ecd5b5b5aff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46800859-94ca-4aa8-99da-6d2aa7cde360",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b7b9cad-f81d-4ffa-b93d-3df4611ce45c"
            }
          }
        ]
      },
      {
        "id": "2f5194e4-f44f-4ac4-9724-1a5b55552408",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e1baa6fd-3021-44f3-8b65-dc73d18ed783",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32ac6c59-b63b-459d-887a-69e57f0b0f4d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b853cf65-562f-4a0d-adcc-da4e327ba27d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0071184f-2137-40a7-941d-3e891d5d5d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa379e1-1e57-46b9-96a1-e3c40814b23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bddd60-dc08-4d55-a4ff-4804891f3be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeacef90-a961-4d58-938b-afbda8bd6e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bceaab-b92c-4461-b885-2cd16edaf578",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b77b01-3363-4f11-b0ac-e56055759524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4705bd1-442a-44df-8d1b-06aea6228c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64fb041-519f-4f12-b3e1-047c2362ca73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e150d3-720a-44db-8ec1-f45982ca2ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdeaaa2-673c-46b2-ad6d-eed385999d0c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7ef01c-914a-4cdc-8740-746b02450123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550d5223-18a6-4ce4-a297-44318c8a64ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f60989-f47f-44a9-ad56-3174692f0bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "285a354e-ed2e-4115-babd-4a207f23323b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90997fe-c755-4ae0-85f2-a0b95f83bd2f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd2caa7-abfd-4003-b6ea-5551a922a4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9eeee0f-195d-4d79-bcf5-60a81211147f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28854d87-eece-4be7-9acb-b6b0c24716c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f775918-45ef-4065-8800-80f8153531b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5761e4b7-a515-4129-a8e8-9a6b10588295",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42fe18f-7837-48e5-9fe1-9c269dd67906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f03023-9b94-468c-a931-6874db6696f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7be210-3c32-4223-b942-cfd406faf2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a922a5a-0c73-4c4b-874f-877bbc413e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1d25ae-ebdd-45a7-8907-f527e7b43845",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3d5658-5887-401e-8fae-fb27e48ca10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e91f786-1068-444f-bfee-bc3cc763dd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f47864c-9e5d-42e3-88e9-53bacbb6ca91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a958c93-7bb3-490a-8ee9-569081de7db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0451822a-f614-4ae9-bc94-5ae5324ce6af",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5381b6f-33ec-4dcb-9687-45ce3d8b47c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b43176f-ad63-4035-9f0f-8010fe15bc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59378b93-07f8-4938-9afc-20f79f49b4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1329cb-70ba-40d7-bb22-1702ebf16a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98448751-556d-4732-9463-c669e4f972dc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b5a624-d7e9-41aa-b741-520cb5f8bc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d2f8a2-a55e-43ed-8d75-bd2d9ae5e004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325f7d02-df58-47a7-83fb-dd48da5134a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60846e99-fafb-49cf-bbd8-8dbcd0351088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40338af7-9399-489a-871e-7bac68eb9580",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00941cbc-8c59-46ac-a87a-0b8a4a90e933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093c3b07-dcd1-4b79-9eb9-3176ddbc1c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857672c7-7a1e-4400-975e-4b6366cc8018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c3036c-3955-4c2a-9bfa-e1f94b0f8bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eec9b8f-2091-40e6-8864-32e6b1545397",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9a25ac-6bcc-4e0f-a94e-4b8b277f8ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351bdc00-cdf4-4d18-8058-daba77659554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8e3b21-7988-4eb6-8300-07bcc374431b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e24c23e-140a-40c9-aae3-e137635d743f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69b5352-c3c5-415f-ab85-da86b3331868",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45c11c8-5443-45bf-b90a-f921420b9df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7dc8c7-d35c-42f2-b48b-a8c1b8b10532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd727d8-9134-40d8-a2b7-2907adc4ee8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f4596d-ed99-4b4d-a582-54c180dabaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43a413e-9654-414d-bf11-54bbbefe88dc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2f96d2-ad8c-4446-8a4c-14829c72f5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb9372a-1db5-4fe8-9a87-01668283c9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cff674a-35da-46f9-8ecd-a3c825efd807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4a0dfc-017f-4199-887a-7353990015d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8d76f0-a926-4308-927e-3e9312226d7e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488f3bf7-35e5-4464-85d2-83254f3c23f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcfa43c-a8a3-443c-be16-116a30845534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f144f97-1cc2-4c05-9dc5-816c2f32be21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc831891-ffec-4b7d-9bdc-837b4d30854f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9cd6c9-fc93-418f-b7c7-2da7af6ac650",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b844689-c2bd-4141-8cc2-f806cfbdface",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b41377-f006-40aa-a0dc-0fa59d50ee7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0694861e-731a-4fe6-bd99-e5e7465346da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dffce6c-a778-44d7-aebb-258ed830a7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c740103-bda3-4986-96a2-8d64541522a3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50052af-5ead-4117-a38a-5a47f2b7ea47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d3b43d-4026-4e1b-a9a3-68927f626531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6530265-c5a8-4fd9-b626-2d4e80516f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d97b3c4-484e-4d1a-bd5d-ee35d43805ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c360aca-e978-48b7-b921-b00905f75ab1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14df75de-8503-4300-9674-4498626c12c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b873b2bd-70c0-4107-853c-1ffb56fc16a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ab0b2e-eeec-4eb2-801c-0744a304dd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea82384-1680-439f-88a4-78eef6a22681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23845fb1-d365-4c24-b909-7c2daa0efa83",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453563f3-685a-4448-b862-f3a332032f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705a107e-9e53-4550-befc-42dec7ee1078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1126fb-d9d5-46dc-a067-369f2d10998a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f504257-3538-458c-8351-84449b9f50e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a0e1d1-045d-4b12-a872-b5e52df2dbec",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f72ec6-fe1e-4fc2-aad7-d220b5c5adf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa9e1a7-a1f8-4d58-a65c-7d4d382a18a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e8aa03-6b72-4810-a57b-ee488c7e4739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "128e1f69-82c9-47bc-b8df-ba8f2874ad14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e71d235-62dc-48fe-ba5b-c12fe9ebbc8b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb97244d-8331-42d0-9be8-ed2c96b3dc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e94f04-75f9-4b9e-bccf-bb219aa4796e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0387b02-37a7-4a26-9c1c-b7fc8999b8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff96b71d-fc19-4077-991e-8d1967ad20d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d515f25b-3094-4b60-a3ae-4af0bf703bed",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e52cd2-a450-4976-9dce-af35d18cbe60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d55c07-47ef-4b2d-9e29-74ae064612bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f2040b-bab9-4fb0-9c04-f66f3ffdc615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b52d6318-f15f-42f1-996d-959e861ed3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7706bc09-4a6f-40f1-89d0-59a57a2d6f61",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c508f3b-590d-41a6-90d2-105c7214b034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88bd9a25-820b-4709-8b9d-4dfd0faafc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f166b57b-674a-4e8f-af31-15b55b391248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "641a6ec8-272c-4af5-84fa-3141845b1176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c96d7c7-3c8f-4835-ad94-cd9796760192",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f24160-b933-45d2-a9c2-b07ca5c7afda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051a66bd-a1e3-4612-89ea-34aa7b2e8266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe07ae6a-0654-4358-85bd-f348f2ea3305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4db966-ae1f-44b0-be01-652bd8e27a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf595a74-4837-4a36-b023-b3abb294a15d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba904bd8-f294-4e38-b042-08d7d557f9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e05079-8e3d-4e88-91a1-d1289c439166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b2e865-398b-4cea-adc5-ec4c2e746399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf3465b-8b8a-42d2-a5e2-a732982c023c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e33cc5-8f3b-4ac5-8676-633291982194",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11547155-7813-4ced-8ccc-c00b4b7116e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6447356-e10f-49b7-a25e-9742b53229d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0c5cd3-92c2-4217-bb13-b17e8f626124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c689325-df50-4e9d-8fd5-4d3876e23e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1615ec-bf13-4968-ad05-540c6b15773b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55725a31-7627-4fe0-b1a5-852c982a161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d702f3b-4456-4baa-bd6b-25a6617bf3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8780ab-2487-4f17-9854-81cc3e1fd64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19f83ff8-704c-42dc-8d40-f486ed595a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90708751-c3c9-45af-98e6-facfc63e301f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf90876-3861-4388-a72b-11b56ea2b719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03150394-46c4-462b-bd7b-cdd704cfae1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb39fc31-6edd-49bf-9c6b-3ddc1d932d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3442a1a5-f6c4-4ff9-b107-78dacffb55a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4684742-76c8-45a4-a9dc-b635c2ccc860",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a969f61-4fba-47d2-aeb0-15c8fe57d0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5aadf3-d7e8-4a33-b365-fb7acf57ce19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a6e48e-1e57-4c98-8c8b-113fd43a76ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b56736-733a-4a52-810e-3f2d1ab9747c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f84aed-c003-4d2c-8fab-cc75fda70fe0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcface93-9622-4424-8fe9-70cb60d1d9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77573fc6-0611-499e-98bb-96b69eae921e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2233d109-9cda-45ec-8cd3-41122d0921d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5285a7e1-2587-4591-bcdf-26bcfe6ff70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8b5183-178b-4ba3-b6fb-c54e73d02c4a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9745b3-2d2e-4b23-a9bf-c1a4b85d5056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a07911e-37b4-4049-a961-f04386854745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c250c25c-c951-4541-9162-b2e2a6d8d830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ed2c91-9638-48dd-b7e1-a8dac003cc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bbcecd-1861-4474-a10c-ed2f5934281f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0cc993-524a-448e-bb48-42c9c304ca7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95f2346-d43b-482d-bd3f-732f3e60e064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef5000e-c4fd-4fc3-b4ba-60337f356f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37c52b50-d33c-489a-b860-6a9c7f70d0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f1421e-1c08-4f6c-a0a5-6cd564e87a67",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f059e65a-23c4-4010-afb3-4dde75a23340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5faf13ae-b225-4b66-ae9f-9c21232f7fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef35bde-8288-4b5f-a252-37ab6cf4fd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9b13f3-be61-49b3-a8d6-f47204d16899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bfddb9-d89c-4b40-a93a-bdd6934b57be",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea96cdab-74fc-463d-b45f-8552541836d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f293150-9649-4933-b831-bc2af6e3421d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa5b37a-406e-44a5-a0a2-02575deec3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ffb814-d6e6-4280-8798-2d42198ca0e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac69eba7-1bba-4330-af72-ea0977d0e086",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "426506f2-bba8-408b-bca3-206dd42abb59",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fb47ea-0001-4bc8-aacd-38a9089eef04",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2651452c-cf88-4aeb-ad5c-63993b23d925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e94e2d-6ee8-4a6d-bb15-ed959499e483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb984375-5148-47af-88ca-9ddf8c161818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9409f1-f098-47c7-a57e-e59ad85f7932",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df5f38b-4311-4343-ab85-d0aa686ca9a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ae9102-e3aa-4562-81df-63b04d695802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48a9d88-4a5b-4e99-9b06-7e35897de9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "882c745b-2dc7-4010-9567-6f0b9ac872c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3965c887-3c1e-4a2f-b351-9532ab7ad2eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfc0acb6-32fc-4e6d-a25c-9ab280acee3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf7a10c9-c20d-4ccc-bb07-64f8bae472e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59f6b836-d37b-4bdb-879c-ca8976d7210e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8e180fd-d66b-4a88-b566-d20481d4f9d5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ae5febaa-9355-4cbe-a6ed-b0e1d94cd41a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04cf01f4-ed34-4bd8-b693-8a6f9a832cae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a7f72c7-7e4b-42d0-8cb7-e44d26c593bc"
            }
          }
        ]
      },
      {
        "id": "2cb0d982-07b7-4d91-bde1-77d7f26b18ba",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e6c2920c-4c42-4bdd-a6a6-23549a18d87f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e5c1b05-a632-427a-b42e-7a27955f7727",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66871df2-7548-4610-a515-95d84ed826f2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3435e59b-9e8a-4ccb-a840-7a63072dca0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "741ede56-12a2-4ab4-b90e-cf965fff66cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09445ff2-a871-4519-add7-089f767cb130",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecef40f-203d-4591-9ffe-1a12b5c61607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5658b054-ba06-4b1c-b4e5-1c41197e3db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf15040-a860-4d1f-8375-f8fe3abd2339",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655662a7-a264-46c1-91d2-6e46dfb93f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15e9e96-a823-4cc9-98ad-609f7509d293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9243990-8292-43dd-8a40-ad4d0d51f831",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f1c23f-4a02-41b6-ade7-d35f93df12e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dfcba8-7b43-4560-a52d-af9436b00568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53186170-5b05-426c-9b9f-34efdb4f5e8f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43ea9dd-3a31-4424-8cf2-1a990b20502c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c7b571-204d-404c-8e01-f0db38f6c6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ad04ca-0ba5-4680-a133-e8ce10b9a1aa",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb685293-6776-4d3f-8caa-d477ef1ee769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93f8dfb-9fc7-420d-8e50-0d12f2c66ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8a07fc-f884-441d-a0a1-6ff70bca379d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c901bd6-003d-4787-9445-b8dac53d0e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c749e968-69e4-44ad-8ec5-35babeed3db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bc6774-f2ba-41fb-9874-fe264fa7765a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc75e1e-db6d-4c99-901f-c13f79688d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0079a66d-59f2-4948-b02b-552d287c6261",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d008351-0466-436e-83fa-cd8afa4ba44f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af5d9edd-0154-475f-86fd-4371d0de3159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec03ea1-e5c1-45ec-a2dc-5e537db264d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54cc3214-d23d-4901-a319-656ef601fc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9bed51-c32f-4b21-a28c-4dfc4f2ccc08",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd053a18-5e98-44af-adbd-31f91dbc3c10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c839ab7e-5172-4504-ac7c-88dd36ce4e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "854bcb49-5485-4b0f-bb1c-ce2dd8aead1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75da584b-12a9-4818-8213-d3adbfa71289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d07ed6b-9c7b-4fb6-b1b9-a9d6922afdb9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7391f99-a4e3-4510-b1bb-dab003a20334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbcd71ec-5df9-446e-b23b-2a41690eba7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e35767b-daac-4214-bc59-42c10e220ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29afea7c-f409-40ef-a2e2-7a63ca2b8345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9a436d-059b-40bd-8229-cd134f4bc724",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195d96b6-369d-4db7-b699-a43a82d70214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169cfc0d-b8cd-4a49-9552-00761bd44098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c70965-1dd4-451e-aece-4188e0a3a05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c418b2-7198-4304-9499-782e6d5d11ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7605552-cf5b-4ff7-a5a5-72e5edfd4296",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5381515-1794-44fc-9edc-480fac09a7e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e32083a-2379-4bf1-857b-f5985eb6b403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcabc0d8-cb90-4c58-b31c-e449a1c53fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0d7ae3-1fe5-440d-9995-fafe6825e040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ed2322-2647-4b17-af56-be07bbebbd0c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c6e179-dc43-4707-acd7-0f6451a46e25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f517833-0c57-4de5-a076-788fee9d438c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e32286-e2f1-463e-9164-cbd22b62b514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631844ac-5171-4dac-863a-b7cf9348c649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac57e6ef-cce7-4750-9c1d-fde4a1c54f08",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9245bb6a-e0e9-460a-8151-746986367414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e57bc6d-dd51-417c-9964-459126980757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e925d438-9b81-4c9d-9fb1-d703e5a416f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38fb85f8-c58a-4e29-a2e8-0826c9171a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc449f7-ab03-4ea0-b2cb-954902d56c57",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e97e747-ce50-4cfa-986d-e4a6cf188035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "940628da-a8b0-4b68-ae37-13df6343ed2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f7b431-18ff-4204-9c1b-31bb3949ff5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6de84b-9a60-4c03-b407-aaa5105f6f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec642d2-8332-4641-8a11-e922a7dfc24a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e6496d-2768-4178-9ddd-c2a0f48aaf0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "983c570c-4f25-4a3c-a13e-d3a297f7ab0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b1ee51-0b70-45cd-b5e3-5f0e198cd648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d7b9ff-168e-48db-9131-4cf311fcd720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbd50fb-3a75-4185-a3f3-e3cfecc562af",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0627b1d9-2aa8-4d8e-bf0c-648fa538b0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1919574a-7e54-40e5-aff2-c5bb698a28cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e8ab17-bc81-44ed-9c1c-74983f587818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea70e70-7495-45e9-9b50-0cbe1ff160d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94c2061-b3b1-468e-8954-51bff3cdfa1e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fc8a2e-263b-40ce-806c-0a230cfed9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0cdedd5-d6a6-4758-b707-9e9c82afeb00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e119b6c1-29ca-416c-a9f3-0337554d4062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a344882-8019-465e-b640-02ae67abc51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9348b126-9e8d-49c1-a092-cc5e7d5128d3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430d47e1-36d7-422f-8257-9f5c003f72ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc569d9-519a-495b-a133-48d0e3647fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "889403dd-5c63-4139-85d2-4eadd52a5455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae9b915-1bfb-4398-8cf2-5d3c626c702b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0440c1e5-c160-4b76-bce8-9db20ce9ec2e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8e02b7-ef60-4c1b-84f0-97fef9935a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30937930-ce76-4990-bead-8ea2ef6e213b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcd1835-9a88-4d52-b841-b35b5977fdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9044dd3-7906-4bdf-90d6-16dc07148698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1595ef4b-5fb5-485e-a46e-cf3ed1b29aa4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512b9cf3-e86b-4c8c-8e19-6134eb709c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4434d917-7bda-421a-9c4d-8380e0f27dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e65f50c-76fc-425e-82d1-a0596d4b8c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93541841-c791-4c11-b020-2cea426b0136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa55721-de60-4bf3-9854-530adad4faf0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c8d45e-21de-4d2c-82ef-49d964d01edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d2132f-88b6-43d2-a24d-26083842ca8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64553f2-4d07-4cc9-9117-5e9033172167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a23936-23ed-4c03-aebb-294ee3234334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd5a5be-10dc-46b1-b302-e79b7a6a74f4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22d0d5a-6795-4251-ba53-771dbdc75ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f91bd3-20fc-47ae-876d-7d203d635321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f1500a-de83-412d-ad4a-528976472702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b735e8-aa1b-4094-843d-2fde8cc1c6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e67475-300c-475b-882f-63ffa2d807ef",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205f9c59-72b3-42ee-a864-3be8e849fe5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df375374-960e-459f-b4d5-e18867978ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57922bcd-d6df-4303-ae39-f7b5d9d4abe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f424343-8816-4f8e-8374-48fa47c7b07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aea64ef-14fa-458d-9520-c4538cc0cf25",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce236e4d-9004-43ad-a361-c271e25bfe33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efce80fb-f61e-427c-bbb8-2291ee154aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0e9d59-02ae-4d57-8eca-160d41a28d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8608e0b8-fe70-4227-86e3-ff00b17b80f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819fd7d4-69de-4729-abed-f8268b6fa003",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372c18b3-61b5-4c27-9287-75376347b97b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b427abf7-aaa0-4a51-8b30-fd111acd8af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5c5c90-e43e-4af5-9361-fde3f52c1345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8ee13d-92cb-4c93-8e65-16a881d13f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1ef967-400c-4ca2-b9ea-bafa918801f6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449f1f28-9352-45e7-b77d-014fe5aa7895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f4ae868-ab0a-4ac6-a313-d100342c2617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01975351-a0ea-4817-91bf-33f540d406db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed2c69b-675a-4b3e-bf1c-3dde59018cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70279cf7-3f19-4a82-b254-9e5737ca1225",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9040bfdf-826d-4d12-a6ca-499798cc1117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dff3db7-3859-4860-a6f8-312397e8ce84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8f174a-0af2-4400-88ed-2e875e564969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204be166-b864-4dcb-a6f1-ce3073b35064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0beb27-74ca-4cb7-9072-830389de691c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2953cb70-b052-44cd-a0f1-a633b8f00e8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77bc4687-9c5f-4175-b543-eef0bf2a20da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8db0b6c-cbc0-4841-b1d2-49a58cb5fe0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86502e6a-64a5-42a6-88b8-9e73830ab2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4ee4f4-6c77-426c-aa58-63bd8bc03b5a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3cd8c2-833c-471a-b990-24576bfffd8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf5b3240-873c-42e9-ac8f-f0f705f7b4fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df8472c-9718-4aa6-a9c2-9bde81c8b4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a9ad92-1492-450d-b1e2-3a0845fdb783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dee6589-2615-4c9e-b6f5-499ad8cf1f13",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00eaa06e-b102-4075-81f9-226715025eba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a879b9d4-dc68-40d0-8ba7-a276ddb64140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62693267-8300-4975-855e-73fc92879930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87447c4b-4a75-4ff4-9502-790cd5046f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b477c7-0cf8-4d5a-afe3-a9137ba0cf63",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c843af19-cb61-4de2-9a36-29e8f5b4c780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cff412a4-ef41-4745-9552-0e91b9e926bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2237e45-1530-4534-b834-b7a02fb60fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9d4683-386e-402d-ba60-450f35c57791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c1bd6d-e7af-4e78-8141-27b5f89e1096",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdab0e26-46d6-4ce7-9a8a-62216fe96c4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b123ddb6-74a9-40ac-b464-54a997e25191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f5c252-03ce-4594-aa9f-a7c209cb1f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527eaf3f-ab12-4e11-b40d-01e2a0e49954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bc9c7f-687a-4ed2-a61f-ba0c87129293",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fdba8e-5273-4f95-b880-ee1c36bff037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d3180d8-ae0b-4762-859a-18fd7df4b7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1548b54-44f6-4187-bd85-28170e139a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7fb946-689d-4df2-9795-03baa55ca841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e9ab1e-234a-489a-a075-f82a48aa08c1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da11e031-6739-4821-b6a1-0201452914ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60476fae-53ed-465e-8de3-174f0f04dc3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1653aa8b-8d54-4f3d-a60a-f316c8d4af64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4424b992-8713-4994-b0e6-71c23fa6843f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbd5a92-ee89-4e55-b5c5-abd213d05c83",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d87b89-0a1f-4302-ace2-4c5241870cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fd8bad-c381-45d4-97c2-3268a62b1a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1948e7c-0880-4187-b990-da66194706b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d761bec2-9c0e-4f9f-971f-ec832e66f2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88377825-abcd-4d41-ba67-20094dd008d4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8742f13-9143-4c46-93e4-1ff9e3bf3a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d8ca64-45a3-4b37-8d64-b6b6c02fe7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6b94ef-7b4d-46e7-bb38-535ffd2b0288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d6563a-e7c9-48b1-b450-e019ebb7f634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15de0428-43b1-461a-9780-d151274b8303",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd17bb8-41ab-4c14-9e58-ba01cc24d0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39050b17-b3bf-4279-8e11-ef24cfb82b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0b06c4-80e9-4425-aa11-26bb19acec33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a2e1d1-d32c-49a4-aac0-2c9a3dc4d234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c97a07-e9d1-4df4-82f0-657679f2f8ae",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd65f73-d6a1-4223-9cf1-423df60221b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6a1e64-f0c0-4599-b577-cced607adbcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11666a46-7581-48f3-b671-78de107a07db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeca3cf3-a138-4b93-b642-03aba980f53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d4787a-5ea5-4b99-81d7-8645ea357564",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5209a72d-2697-4878-a110-2e6838d03a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1dbf20f-c744-4ce9-97b4-71f5194ab9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87bb526-4be3-4cbc-90d4-f59671667a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3b464d-114d-4fe7-ba0c-73c98c169fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d281ea36-030b-4e33-8607-45e994b04807",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b47c452-80dd-46e6-8f83-4ae76a657c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f44342a-bf98-46de-b3f6-f12c4c663de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a77c81d-6038-4218-82c3-553b931062e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ee2021-9f01-4dc0-9afd-0a30e2c9f316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70732e74-4953-421d-a3c6-af9c05edb606",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3834eb6-beb8-433c-bbcc-2cd827aaedbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1a3cd8-e263-412e-8201-c146a033ca81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90478dd-f0d6-45a5-ad80-113c07826e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7ba265-bcfb-4a7c-8c87-4af2655c5a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb780d9-a052-4ca9-bb7a-5fd96a31e631",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61f48b1-7c88-4589-b43e-5e9967d01985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb178b2-149e-4452-92ef-415e6b7ebad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e1fef8-be7a-4932-8077-5ab4249d8e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb76997-43b1-4d20-b31b-c2c031f87741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5186e6-87df-4c2c-a34c-70ecafd30612",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0467250-0bd5-4213-b127-b4d47bda9627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af7e6a0-7f97-49c5-97a4-857c5ab72ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080f6901-e60f-4de0-a0d8-78772ff97006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6925f7a-6e70-43fb-adeb-198bda729a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae774b2-17d6-4841-a70d-385894233892",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18272cc9-b957-4345-a160-bfac86ee25ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7342a377-aabe-4a25-8e06-984fa6081ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e08729b-e3ea-41e6-a0b0-2519e6f54c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea2357e-bcbb-4c20-99e1-e3f04dfc1a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3b324a-3eb6-40d5-ae9b-3e6d50249527",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22520ecf-98c8-441d-b624-8917c6996d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb36749b-bd35-4a96-8e70-5d79fae8c8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4784bac-7ed0-4b12-8bff-9a26d5e919be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46f5735-48e8-4f43-8850-a42a40bb565d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056b4fa0-a1bd-48c2-bcda-872917e616a2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e62032-fa68-4752-b013-d74a5994da96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f500b9c-bc39-4fe6-9b4d-a881487c6a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ec3ea6-9c6d-49d2-a891-c08f1cc65a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72928afa-0e6f-45a9-be3a-81206ec5b088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6642f81-2631-479b-9785-f65a79eb891f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a19105-2d80-44dd-8c33-7b839eab76a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09551da3-be4a-460a-be69-61537d5920ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b3f59a-ff3b-4932-a926-b63fe0f55283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a259d97-7206-477d-be33-20844ffed578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f825fe43-282d-40c9-a802-ead0e0749aaa",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbffb7c-3186-4338-a8cb-0309031e60c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2198cf71-2269-4441-8b3c-9d6963a4c762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed39f189-5f20-43c9-9ce1-0a4333bda9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae731a8a-3151-4c10-bdc6-7415da1a9c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d519374a-baf9-4017-8099-358892757d8e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240e0aba-c415-4cd8-aa42-9fd721700c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f19033-7f6b-419a-898a-16971de4b7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bb2c46-2f1a-49a1-a54d-5cad7f2b4fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e964c641-aca9-477c-a64a-eed3e537bba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d0f5e8-82bd-4cbc-99a6-c7d56d441bd4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59d791a-67bb-4a4a-83a8-f6c4105275b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c8a406-fc94-4c30-ab97-1c7460daac25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3863df9-3b4e-40c5-ab09-4a2fa3d81102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516632d9-cd63-49a1-b76f-c4423e3ba08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85afe7a-c6bc-43dc-9d91-07475396c498",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a993e9-4a90-4578-a600-048fe76352c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e64789a-c0c9-4fd2-886a-79e2900502bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98716249-d7a9-40e7-816e-b6422e08fe63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b72cd7-4f3e-4020-8295-caf6974e27e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f1fa0a-5a11-4482-a6c4-a5048876618d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fa26a5-15bc-4e51-be64-e09a5f35ee2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36be73c-0943-4c28-a5f3-77814f0e441f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89592c8-94a9-4665-a817-2bfc553a8564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9e50a2-1a90-4f14-a967-92dcb85b97b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4346d246-680b-4728-8b4e-8ef1e94b804e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312da2b0-8594-482a-b5e3-53f45c1ea7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744f08cb-033e-4c8f-bf7f-89241cecac2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fda63a8-5f08-478f-bfa6-fa60c376f504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca2ae34-1adf-47e7-9378-9a1713d0eda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4008ab33-09a7-4eba-a852-cbef4303d61c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c52fab-f0f7-4e23-9163-6be893009209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0baf7f1b-499a-4f9f-9f4a-f8d5721aeebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c756c5-0745-41c6-b27c-54b8015a02a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cd53b6-1b21-48bc-9ed9-0b7e3afff838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb324f1-5bcd-4d83-b0db-c0000ba78e12",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f75401-b412-4616-8bd8-7b9d6c384b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d771cba0-1fe0-4bca-bd63-ea8c4c67ff97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9d5e9b-b6e8-4542-ae24-4c773a293d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56dbde11-8f4a-41fe-b75b-5c17ff6732b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58be53e8-9de8-4496-818b-585263ed179d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175dca37-469b-48dd-b78e-61855eae5e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c342ce3-8cc9-4279-9951-1a1eaef5de15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5c3c8c-e08f-430b-a12b-2c90e7b0103d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9649c432-29d9-4e77-a639-21be8d751ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1adca9-0b61-49b9-bc39-9a1fa365268b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b973f69e-58e4-413e-b4a9-47b7fdcb57b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3d5d94-4282-405e-98f5-bb3b0e43d3cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7674132-e0c8-4b85-b9ef-6e2feb4d9ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbefe367-7497-426b-8e4f-209383ef5c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363ca2bd-54ae-40a7-8a01-eaa24bdc5572",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5be8673-179b-49b0-ae20-95d795234567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abd5467-0a20-453c-9316-0cd5fde7ceca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19cac9c-1110-4630-b947-ea3c688bd9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7fb3034-778d-4168-81c0-ea0ce38f0568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2083eb9-2852-483b-b37a-3f241c6883c9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ed6604-d975-4e10-9a5d-ef018e0d13a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77533ea-2145-4d65-9cdb-6d576cbc443e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18320f76-d502-4ef1-b9a2-83239b16eae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae33461-be9a-41b9-85a3-8619b9a37987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e802a441-c8f0-41e3-9605-d59c54a37b12",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75152b45-a9d8-417c-b776-9c7c986fe715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cb3ec9-4c1d-429d-856c-1e2d643337e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b853aef2-5dd3-4158-9784-5feeff414022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3e79c0-3999-4c66-89d4-1c2572c3c560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116d770d-515e-4054-8ae9-7b5f32f9035c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6afde6-138a-424c-bd9a-a39c1463850e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18c0c9b-c54f-4e4a-9201-e581cdbe05fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fb4da8-8e03-40d4-b34e-2a5c1758c89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae45911-f3db-4797-835f-b184bb45dcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772c12d3-5021-42db-86de-abeeddca3d92",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a03a96a-463e-44de-9fa5-99b1251fd7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabfa599-c7d6-40a0-ad03-f4c67e9a7c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99138cdb-2c66-4fba-a937-9956c4856ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5930126a-29f1-4890-b741-14b179467aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f07569-75ff-499f-8883-1215241a7848",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620323a9-adbf-4310-8f3c-9f481ccf558e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73eff6ac-3d40-4be6-9fa8-35935e7d66da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c364f9-745e-4c1d-992d-983ad0e89673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55234e4c-196d-49d3-926a-610208de7c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89a4f90-afc0-48e7-988c-74092c341340",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02570c39-0376-499a-a122-db5acb99c752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c9a24f-3fd9-4073-bc69-d22cbb89bb5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96095f5-a819-4bbb-85a0-5c2707921a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38de187d-caea-4528-9218-6392e09631f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a0982f-888b-49ad-97c4-118726c15fd8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafeb998-052d-4d61-9d9e-3007f364a648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86103855-5acc-4d30-9383-c7db2da4afeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d82866-4c9c-4d07-8870-591182aa40a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae628f5-1644-48e1-ae82-0acf7b522686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f546081-74ef-45fc-a925-f89b5d9644f9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d642e782-c53d-4929-a8bb-8f2e14740c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3990d1d-cf64-44db-9b1a-c05593c739b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd6d624-707d-46a7-b43f-aa2214c7149d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e4eb84-f5a2-4317-9a47-f646f29b5ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e516cbc8-4442-47b4-972e-8347a484160c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86ca174-25a5-4aa6-8842-b8034a7c50e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff2d749-0228-480c-931a-d7b860069c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec2e29a-477b-466a-a63b-8c73eec243c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e8e759-d0f5-4302-b65a-d0c857945c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2c7e2d-1fd1-4b2d-9a75-a400760b48d8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2b27a3-fd98-45a3-9971-a75568d1afd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab4ac8f6-e437-449f-994d-40bcc1a7ea17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87f2585-a543-47b3-a611-8173fd3502ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60396f0e-e894-4005-8754-b1b7c45506fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9955ba0-6933-48ab-9e70-64659948b413",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f38ab25-ae74-4579-8e38-c381664334eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7003c2ea-2abe-4d52-bb5b-4e207605edcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ca47b9-1667-41c2-bd47-85efa078e8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec218af-ef9b-4aea-ac89-dcf1e8dc7929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5fa59e-2d29-40ed-b295-1217adcdd79e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ec2d33-6a2d-47b5-b091-2eeab9a1c7eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7732e4eb-874c-4759-bfb1-731ca524710a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f46a7d-95d8-4d80-b00d-563dd0430ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9569c3a-1f5d-49c5-b1ec-2a4d62382c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cc6936-6dc5-4634-9cf4-c83fc73bb7fc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a506308-cb3a-475a-b2c5-4b550c2fb923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c65ab5-52b8-43b4-9943-16394859c3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a6f3fc-8b0b-4725-a22f-21cf1bd59def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8190ae2-0802-48b9-8648-7c9c74fdf068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406b2bbe-c701-439c-af8e-7eef3db730cc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3029fcc5-507c-45b4-ba35-dc8d673ccb32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca59b6b-ff65-4604-8579-c0fcdf13deb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4046ecce-90b1-4422-aa46-dd90792c5c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b88ca3-ebdd-4f07-90f8-5405207285dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5c9cab-feaf-45df-9d42-2a8b3d7c11be",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6411740-92a2-4ea8-b588-bf9ff1ee3b3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8a664d-acb8-4d14-9251-ba71c5ac0a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f399d13-7dc3-49b2-b074-c73f3900a4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77296654-8cea-44ec-965c-5cfe4ecf9db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0df82fb-84b9-464a-9165-f7c97cc5174d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0635114-8db5-4c2f-ab27-5d0c030ba751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e989501-d892-4fc6-8807-5d97be24b0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6544eb4a-cf26-4827-970a-b3d103fb08ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49246ae5-8894-4b7a-9331-1c71b4e741a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1444953-99a8-485d-b10f-92212d05fd77",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbc5c79-15fd-4964-85f6-c5fbe7a1a025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e143f14-fe3e-413e-9647-a29a862c5f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b60be2-5a36-42b3-bf47-cda91425ada5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddb0fc7-a915-4b53-96e0-2e8d67a9c7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7303eb8-259e-44fa-b36b-3a04fc9bd35d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1923a8ee-5a8b-4543-a62b-10999837f56a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4fa4643-6fab-42b7-9615-575d7786a388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03be160-bb3f-4ed8-9cf9-0c60415c873f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2234891f-fcb4-4b10-a0bf-0a366d8bae13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c58637-3f9f-4f86-8569-d52fad7d9723",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd730b7c-5a77-450f-a0db-2baac84b7463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce804312-8d11-45ea-918c-bb3feba17ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad94eafb-3806-4fbf-a888-b472e3c1f3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8cd2cb-58e1-430b-8eaf-cdca8f26d6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31f2f83-7c86-4814-8cdd-6d7f2d1215d5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d477f9-837d-4b0b-8f30-b1fc32328066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06cd0e4e-4343-49f2-9daa-459b57be7236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfe4133-9545-4371-958d-d75000b9b0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75161f49-bc4b-4619-9d47-b53d55d77ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0a0a13-c2e2-4b37-899d-1c539c1b6262",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbf06e6-94c7-4fdd-b463-84f63d0bb65f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c128d21-2147-4a9d-b777-039e6f39b3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e48f0c-568b-41f9-8616-a7ef93896cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8664bfb2-5c74-42aa-a3af-02423315ed85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4d7b39-bb65-4efe-950c-54b1746584f6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3734505b-b475-411a-9a92-d4d96d851052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c708e151-2a29-4419-9f64-7865fbbb3a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc78addf-ac2d-4f66-8138-c03880ca83e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed99ccb6-d0f8-4bc1-8917-760aed6c2364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4a052a-b4fb-41da-a413-932b7b4b9110",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e4342c-4ff8-4215-bbe3-20a920db8f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "898ad0a1-223e-4047-8177-c0370c57309f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf13d12-548c-4312-8a5c-98c0bf078d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df741439-70a3-4eb8-a669-422619b0932a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b38375f-5ae4-407d-8e90-bcc0a6fad7da",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a511c92-5ac8-4b65-a89c-f83e903860ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30badddc-6f67-4259-b6db-20c7e749059e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e91be1-05f3-448e-8a28-f1283113f677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e32335-0daf-429a-9a28-2dc3307093bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33c3f1b-9808-4c5a-abd5-006fb9276b84",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74790d97-b8eb-4bd1-b91f-1581944fb1a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6649f4ab-463b-4924-90c0-47e22e7255e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78610ac-6d0e-41f0-b8b3-4f43968c6373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0116823-e0a1-43c9-b86a-25fb6bb39791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47da430-8b81-4706-b7cf-9b66fb8b05f2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2edb31-bf93-4093-b8d9-58a7cfb621d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d11a0ea-1c48-471e-b5bd-1023b22ca8de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1283207c-71a6-48ab-b616-45b68286e99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a415c698-92a1-412b-afc0-4f0eebaaee50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6e39c1-f5ce-4b68-82e3-0af938f57b3d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55ad534-a1b0-47d2-a6fa-6bda98e8cabb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e255ab7-2ec4-40b5-b476-ca9610c174bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9714de-9d8e-49a1-827f-12f436fbb513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca0089b-63c1-4f37-8160-9b11a5bc457e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cc2d43-dfa0-4e72-bdba-cb7bc66ce8fd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e711f93-9c08-43fc-a3e0-852112da0224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed801250-070a-4cba-b5ea-8ca8508883c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17396283-c32c-41a7-9ce9-643ca999143b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637cb0f4-5da7-43f9-bbd5-ef70597111ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d89b36-7ffc-4714-b519-bd4ce9b2893b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43790bab-d613-4699-8dab-84bc0d7cdfb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e83cb5a-4247-452d-ab09-3578789fd90b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c077cda-ad69-42ba-9b13-a6f450d74c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbf1335-81bb-4c46-b9cd-8be5e081997f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce59277-e59a-4544-bee7-bd5e888bd8a0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327e9f7e-2c24-43e3-9181-abfc93f3b821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c24a84a2-ac0e-401c-b9c7-b310f62efe90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c7ab0b-4f84-4cfe-9f57-2c948f28ec6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74fe4fa-9e8c-49ff-9779-c0cbc8dea95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2399cd41-0b1b-4abf-b01a-f1ac973d5768",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4434154-bc14-4a5b-ab44-8bb4e3d8b8de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eae2b25d-cb32-4555-a57c-1f80d5aac667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788c54d8-4954-4ae6-b163-80ab2c001504",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5286a9-b244-4a3a-89b7-386bf515791c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8aed40-59d1-4200-8bb7-d2dade284b9f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86f4a6f-5ede-4059-814c-a45bf13f9e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bd510d8-92e3-47b9-9c77-23e5b8028e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e5852e-f80d-498c-bb58-20a13fad3bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b258cb-3a1e-4e20-b51f-73b9b81f1e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e79601-4d1e-443e-a585-af096ada8e96",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9066cfbc-d796-43b2-ae9c-09e546f8216d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "865f46a5-e047-4e02-be29-dfc353c3f7d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450acbcc-7757-453d-b74e-45d2f264979d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9827b680-590a-4872-9944-436f6651aa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629f16d1-c329-470f-8459-7533637ced50",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1506b7d3-bb29-4168-a383-b9af4658643e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91d4c6cf-66bb-4068-b6ca-153898894e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ceed27-b330-487b-b224-81594672e3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b720d4-2366-433e-9990-1bd5e0e613c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bd8c50-83c2-4b66-a142-c61277f1c782",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e7a1b1-7f3d-4789-9477-689dc9ffbbde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8270e10e-7209-40ec-8737-687d89d0609b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74462b8-142e-410d-9f92-a253de97c0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab70fd5c-c73c-4050-b976-4066e76b493c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ebfadd-9a7b-4b7f-9ebe-a37724996210",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa940237-9274-4e24-893e-67377277fa5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3903e226-9b4a-4db4-bf29-a0368cfd7e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac3f654-61b1-4793-b553-95df024e22a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aea4a3c-b436-4de2-8d5a-43172daf6d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4467a674-adda-4cf1-a9c9-6066857a6ff8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd51966-3c0f-4626-a539-a8faa2c9fbab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c49c90-c380-44c1-9ede-72124f602d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56af6fac-c72f-4931-9a7f-49836fb03bd7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e053a71e-7ea5-48a5-8631-089c399eab4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a425f96c-5e05-4f65-b083-bb0800a49d5c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1950a8-4ac3-45ca-9648-24fac7d94457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07752f33-7245-4cfb-a01f-bb3e2fe248da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68d9d74-49d1-47bf-87b4-f1cdc9dc6fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6159738c-e02f-43f8-83f5-bededb11cb9f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8e0eb8e-d2a0-4417-8cfe-ab86362ac442",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d079b813-152b-41e4-bf6b-f88c12c89a29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a774748-36e9-4619-9c94-8485219912ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03f0a9aa-f113-476f-a289-e49202c97e02"
                    }
                  }
                ]
              },
              {
                "id": "29712020-b8f7-415d-8c13-5ed4ff87f00e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0b2a1a2-6128-4acf-bc37-7ae3232d9b71",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002c5798-e830-4630-bb07-0540dcd29274",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fdb100ad-3cfb-4315-a1d0-8e4daa9cc792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cacd09b-59d3-4b06-9c38-a7e61f38f9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56f2b344-5985-4b51-9ecf-04055af0cf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb52015a-99f3-4ca7-97a1-73f964356014",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553a14c9-5fb6-406d-b7ce-1e7eef6d0b38",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "05acb006-a053-4d1b-ba49-2aa601ec547f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6e69fc-1d2d-4b85-ba98-77b15c092fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9925cf34-4051-43fc-bf91-ac2979a5a83c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a447d366-bf39-4183-b157-7f3116cb8bb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee4a92b5-c0ca-4abc-8f35-e75bdb9148da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e253847-5ecc-4a0c-bf35-af165cc6a697",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c9cf698-23a1-4d37-8086-9dd4061abaa0"
                    }
                  }
                ]
              },
              {
                "id": "4a48a3f3-5dc1-4c75-a725-6af369cf14ef",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3ae2e4a5-8c63-41dd-8b94-3c1a69406096",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650b2efd-5ecf-41a3-b9e7-f9c23704cae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ad9f6f17-54f8-4612-9861-3f538ec1d608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30440b4-1982-4bca-a4a4-49fff5e32a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee102db-4b2a-4e2a-994d-8df7accb32ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "785973d0-3b53-4b62-983b-7caecbdf2d8b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f34fd02-feb6-4ddc-8fad-a1d9df58b209",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ea113a9-2f86-4123-9a4a-c1fef0dc151f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f8ec7196-ce99-486b-b0e9-bfcbce7a8aad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de74058d-cd01-4752-812a-d1a75f4bfb79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "270e08cd-d307-4bbe-91cb-78b6e125e456"
                    }
                  }
                ]
              },
              {
                "id": "3e874471-76f0-4e1a-9c5c-d13d7663462f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7048617c-733a-4f99-936b-89b037d657f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac89730c-1195-465a-a8ea-abcd9e3e5fe9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ba778c0-1290-43bc-a453-42faae6977e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51263529-29ed-4135-bcc6-a2f0588c8f9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd0da105-c763-4b22-8e5f-1588449fc76f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ab033f17-fba3-488c-9816-0ff57c079dc7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dca984e3-4414-4043-9adc-661a94d7283a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9055798-992f-4b79-8770-1e8e3f8b188d"
            }
          }
        ]
      },
      {
        "id": "1a6d38ea-ecd5-4fcf-8590-517db14f8498",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "16cfafae-c98f-4c31-9f09-ddd3793b277e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92f34bf2-ca90-4c6f-ac2a-ffc2dcde131f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99b17526-d489-4ed1-820e-aa083a36fbf5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3f937a-f93f-48ac-8f54-d06650c89a5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ce6717a2-7b74-4b58-a5d8-2f0a58efb71b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c36ee5e-cd28-40af-aa59-0fb16c3e7fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbf7a9be-724b-485e-93f1-c4e4bf450566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb8682c-77f4-466e-bdc8-f310a30be334",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c5eb08-7aa0-4c59-8fcc-9babd808d83a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a635bbae-e923-4e3f-aa6d-c13a9d35d228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b44194-b5e2-414a-9870-3b4a1e11ad27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8b61ee3-3394-4a68-9797-5b4e05d32343"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e9412e7-a210-4cd6-95c3-7ea1cbd49116",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "123d3da7-f1d6-455c-8ed3-0fc00226db9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4095633e-77ad-4bc7-8b32-fc4bfff57d25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a62e68e-1348-48fe-a268-0e2bf99ac1e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63386f04-4085-497d-9bd9-ec6ccbdac304",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3d5c8f4d-ff4d-4729-91a7-84f43f43e6b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e882053-67e7-4f0e-9085-ee4ed48ec059",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5f0839f-ad5e-4897-ad63-3a9d954478c8"
            }
          }
        ]
      },
      {
        "id": "f48ea7b9-a1a9-4c35-b72a-046876f5990a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5826b7a8-cd41-4bfd-88cc-9011435597fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7818513d-c300-4d5a-aea7-923896b2c839",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c99c45b-5b11-48d3-82c9-72478b009e70",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e09b651-1800-4b6c-80d5-5f4790e06ade",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2544bc2a-9fa4-4a0b-bcd9-b6ba3d3e30fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4584b762-25fc-47ee-b337-1d4b6dda492b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdb0e3e2-a4b8-4274-b12b-b0f4beab8d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4b0667-c620-4ef0-8ed2-49e17294ed31",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420d3593-4bd4-4835-b74c-766b50f06861",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2409c519-120d-46c1-bbe8-0f9570c2a3fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4538ac59-e9ee-45d7-9eba-0cddcc3fe2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9d68010-51d7-48fe-b9c5-7e27d5297288"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88b5f5df-d202-4fda-a0b3-6bd5144ad7f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c874f89-f04e-446a-9ee0-d162fef2f92f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46132276-4a7b-48ff-9aa2-0ef5fdc9518a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db5537c4-e9f2-4bcf-a789-a7d4e0a63d8e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05aafa2e-8dd9-49ae-8e6c-087dcc540e2d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6d911980-cd51-469a-968f-148b52181bd9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa2b9034-d3df-4f65-bff3-680aae72484e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a92a844a-846b-4383-9f53-e63fd42b9c8f"
            }
          }
        ]
      },
      {
        "id": "a1db197e-fe1b-4cd5-b220-fb9ed8e5d514",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5e8bdf7b-12f4-498e-ba3e-9066650e1959",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdf8d7d1-98f7-4be0-a4c6-7a1b5334cb8e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f5de3dc-d013-449e-9777-6f84de57a299",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca962d1-e531-4bad-aeaa-c5d848011754",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf8571e3-e1d6-4897-864f-33530d6cd8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a520cc09-572d-4566-951a-6c0d91be8413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78d19eb0-b5fb-4e95-8153-2875d4646235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24bbe67-cb3c-4c17-9863-b59a87f1061a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4d28f2-7733-40d2-9375-8a075d2e7b21",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4835c275-a10e-4b1d-ba6d-18ff2a826b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc085d14-cb28-4576-bf76-4367a3ef4c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8362fa21-31cc-4ecd-88cb-d2b3a91ba29d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66d90668-d6df-414b-9dc1-da196ec8ee34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05d664a4-6d53-4906-9691-145f21f326df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1649b6f3-20de-41a5-b19e-0710feaad376",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e354a80-0139-485f-92ea-04020becc455"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "327b57c6-b012-444c-aee5-7cc60be82fa9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9c28a242-071f-4947-a9d9-f4b2a23c4ead"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a83fcdb7-9778-42de-b888-ba67905151da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d81868c8-048a-402f-aa70-147b29c39ed7"
            }
          }
        ]
      },
      {
        "id": "8fd3cf39-2280-4161-9d52-9ae6fa8138d6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d4c0814-54a8-44eb-9aa6-162df668842a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48726116-1be0-4747-b85d-dbff83bc00fa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "185317b7-b08b-413e-90a4-016b1e3b9831",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f392a23-7330-4592-bd08-761d64138e5f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fdfd05b-d026-43a6-9c60-0145249e9052",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 948.884615384615,
      "responseMin": 22,
      "responseMax": 12761,
      "responseSd": 1327.4632553779784,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683592646202,
      "completed": 1683592904273
    },
    "executions": [
      {
        "id": "a421a1c2-dc89-4f82-8ece-387341bd7e01",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "07008677-76d6-4d7f-a818-3e6eb578ae55",
          "httpRequestId": "8c664027-f1af-473e-b7b1-3230aa6eeb69"
        },
        "item": {
          "id": "a421a1c2-dc89-4f82-8ece-387341bd7e01",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5e13d3bf-1d35-4237-9db5-3099b09b2043",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 0
        }
      },
      {
        "id": "ff228828-105f-4b07-9962-7851b9c8cedf",
        "cursor": {
          "ref": "958181d4-7c8c-44a9-80c0-4d26bdad9472",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ae99b821-7378-4f78-9273-f93387916eb4"
        },
        "item": {
          "id": "ff228828-105f-4b07-9962-7851b9c8cedf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "aedd57d6-9a53-4c01-b56e-51026a85afa6",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "f5dc8acb-4fef-4276-9864-0d25196c4671",
        "cursor": {
          "ref": "3a66e873-6f06-40ae-ac95-4ca4881d5c39",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6fe0c145-17fe-4b32-bf90-d53181a1dda4"
        },
        "item": {
          "id": "f5dc8acb-4fef-4276-9864-0d25196c4671",
          "name": "did_json"
        },
        "response": {
          "id": "bf8b81ec-db20-48dc-85cb-d7cc4a477196",
          "status": "OK",
          "code": 200,
          "responseTime": 803,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a393cde-65fb-4119-bf2f-06a86ea7bc85",
        "cursor": {
          "ref": "b3fedf15-a93d-426a-9660-9c0a55ea64f8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2d80a8b1-f03b-426a-bc14-ba3e85520505"
        },
        "item": {
          "id": "5a393cde-65fb-4119-bf2f-06a86ea7bc85",
          "name": "did:invalid"
        },
        "response": {
          "id": "1886fce7-d5c6-4e34-8d64-0bdf9533ea2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a393cde-65fb-4119-bf2f-06a86ea7bc85",
        "cursor": {
          "ref": "b3fedf15-a93d-426a-9660-9c0a55ea64f8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2d80a8b1-f03b-426a-bc14-ba3e85520505"
        },
        "item": {
          "id": "5a393cde-65fb-4119-bf2f-06a86ea7bc85",
          "name": "did:invalid"
        },
        "response": {
          "id": "1886fce7-d5c6-4e34-8d64-0bdf9533ea2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b90faa-dcde-47ab-99ad-388c8f4ca4c8",
        "cursor": {
          "ref": "8cfed869-0bc5-48f9-b440-6cadfba5e85d",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e76a05fd-c5d6-49cd-b96a-42f5a434b26f"
        },
        "item": {
          "id": "e9b90faa-dcde-47ab-99ad-388c8f4ca4c8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fee290d9-b8c2-494b-835a-1b06c5592801",
          "status": "Not Found",
          "code": 404,
          "responseTime": 923,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd19818-bc2a-4c1f-8fb1-3b74e71efcb9",
        "cursor": {
          "ref": "e63a7bf9-4e76-4a7b-b75c-397678e384ca",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "17d6a705-a166-465c-b3f5-5893ff58d2ec"
        },
        "item": {
          "id": "8dd19818-bc2a-4c1f-8fb1-3b74e71efcb9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "94a6642b-e57d-439a-83ab-13b810d74545",
          "status": "Not Found",
          "code": 404,
          "responseTime": 727,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cef66b8-9153-4f26-b3a3-be90564781ee",
        "cursor": {
          "ref": "1a627c6d-6a37-4706-8b24-7cbbc14fd193",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "185f9622-58d7-4ae6-8775-78ea4ea307bf"
        },
        "item": {
          "id": "2cef66b8-9153-4f26-b3a3-be90564781ee",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cc024a09-9a37-4657-b2b3-28db8b2032de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ebf259-1cf3-4263-98b7-3d9d45c426a0",
        "cursor": {
          "ref": "3ba5120a-9198-41d8-8d2c-6d0c2b3f7170",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b388ae40-c4bd-4b3b-bbdb-a087e04ea8e5"
        },
        "item": {
          "id": "a4ebf259-1cf3-4263-98b7-3d9d45c426a0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7c6d4e08-37b7-421a-92e2-816902c1234d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 711,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ebf259-1cf3-4263-98b7-3d9d45c426a0",
        "cursor": {
          "ref": "3ba5120a-9198-41d8-8d2c-6d0c2b3f7170",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b388ae40-c4bd-4b3b-bbdb-a087e04ea8e5"
        },
        "item": {
          "id": "a4ebf259-1cf3-4263-98b7-3d9d45c426a0",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7c6d4e08-37b7-421a-92e2-816902c1234d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 711,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b9d606-18d9-41cd-b308-1276f64f6a70",
        "cursor": {
          "ref": "665716e4-151e-43c2-86d9-ccaddab71f23",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "53de1ee2-e160-472e-8c75-bf363a6ac742"
        },
        "item": {
          "id": "85b9d606-18d9-41cd-b308-1276f64f6a70",
          "name": "identifiers"
        },
        "response": {
          "id": "388896da-5ef0-4e89-9bc0-41f53bf33177",
          "status": "OK",
          "code": 200,
          "responseTime": 1321,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5377465-44b1-4b9d-890f-e4fd01b86d8d",
        "cursor": {
          "ref": "84c7070d-e771-4d07-9581-621cbc692779",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b0457792-b5bc-4009-947a-3c2813b5cde2"
        },
        "item": {
          "id": "e5377465-44b1-4b9d-890f-e4fd01b86d8d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "008d6d1e-a3e9-440c-b22d-dc7d77305e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5377465-44b1-4b9d-890f-e4fd01b86d8d",
        "cursor": {
          "ref": "84c7070d-e771-4d07-9581-621cbc692779",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b0457792-b5bc-4009-947a-3c2813b5cde2"
        },
        "item": {
          "id": "e5377465-44b1-4b9d-890f-e4fd01b86d8d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "008d6d1e-a3e9-440c-b22d-dc7d77305e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1431a4b7-5297-418f-89aa-4adfea3c8fa4",
        "cursor": {
          "ref": "22b41683-36ba-41d1-b334-3a313bb2380c",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ff7f3598-0629-46cb-adc7-4e08be969558"
        },
        "item": {
          "id": "1431a4b7-5297-418f-89aa-4adfea3c8fa4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "10213fb9-814c-47c2-80fb-36f6b767a6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be784ba-5a1c-4305-be7e-462dd87a74aa",
        "cursor": {
          "ref": "83343460-a889-4493-8fb9-14e1566831b5",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ac5f3cea-4a0f-409f-a627-70fa285a6ab8"
        },
        "item": {
          "id": "4be784ba-5a1c-4305-be7e-462dd87a74aa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "022d75fb-dc5c-481f-bfb4-e89f2bf591f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86cdcbb-c2b2-44db-9167-115994065e42",
        "cursor": {
          "ref": "19f00297-054b-46a5-8ec1-63754da2458e",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2515b9e8-98a1-4ce0-aa03-b297e806b940"
        },
        "item": {
          "id": "f86cdcbb-c2b2-44db-9167-115994065e42",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7134a47a-4178-45ca-b9f2-19b556551104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd52d72b-0bb3-4516-b219-c61efce1b61e",
        "cursor": {
          "ref": "ef631f5e-777f-4f8f-8439-32ba2d3409a7",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7713962e-cd22-4e5e-bea8-f0b9481b4dcb"
        },
        "item": {
          "id": "dd52d72b-0bb3-4516-b219-c61efce1b61e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "62f9307e-45ec-4021-a1aa-f0ff0aa49644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81da038f-c65c-4df4-80e9-57f37c05b15b",
        "cursor": {
          "ref": "20e3b6db-5d47-4041-a1cd-0648575c11c0",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "55758f52-4e48-4ced-bc02-56c1570f2050"
        },
        "item": {
          "id": "81da038f-c65c-4df4-80e9-57f37c05b15b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "70299878-2038-4dc6-aaaa-c48921b5d61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fa7a0b-12a1-4afd-b2a9-2311f8e03c74",
        "cursor": {
          "ref": "db955376-a441-4ba3-90a4-78c08d2f69da",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d3109617-796d-4488-a6fc-bef8a687032e"
        },
        "item": {
          "id": "a1fa7a0b-12a1-4afd-b2a9-2311f8e03c74",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a2f464da-f546-493d-bad4-64ccac8ba17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf357148-9696-4d9e-ae50-2a32b56e0b33",
        "cursor": {
          "ref": "52206905-8586-4e1e-b717-4ff16b6abe6d",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "31df2474-3c90-46b3-9bf0-71c77ee7f5b5"
        },
        "item": {
          "id": "cf357148-9696-4d9e-ae50-2a32b56e0b33",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b9beb4d5-e593-4652-80d8-0c99e7543a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7c196b-edeb-46a1-acaf-07ccf5b55807",
        "cursor": {
          "ref": "c4bc41bc-4601-49f6-8d10-9dbf751cf0ef",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "42987466-c33d-44b3-85a5-441bca7d88f3"
        },
        "item": {
          "id": "5f7c196b-edeb-46a1-acaf-07ccf5b55807",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7a42503e-61b2-4e95-af4a-5f2c35ad813d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5770669b-44f1-4e6d-926e-4176a63bffc7",
        "cursor": {
          "ref": "b970e64c-7829-4803-b6bc-7065350537fb",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8e659f8a-9ee2-4f63-a07e-b7c56f088f9b"
        },
        "item": {
          "id": "5770669b-44f1-4e6d-926e-4176a63bffc7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ee99d788-6c68-4ff6-8c77-09d82580d084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef09d780-2db7-4231-8a29-6b52e7dcd621",
        "cursor": {
          "ref": "d857d134-74a8-46ff-b9e7-b97254832626",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "11b747a7-780b-4b3b-aebc-1cad4ceff11e"
        },
        "item": {
          "id": "ef09d780-2db7-4231-8a29-6b52e7dcd621",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e8bfed53-97ba-4691-98fd-1bf885e0f50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde0bbf7-0fc3-4d44-8a2f-ef92ed877e63",
        "cursor": {
          "ref": "92fb7323-28ba-49c2-954c-ffd4e9951dc4",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0226a207-4ce1-4bb0-9de1-fcde6048fa9f"
        },
        "item": {
          "id": "fde0bbf7-0fc3-4d44-8a2f-ef92ed877e63",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b104ff52-2f9d-4e42-927f-c118135ad071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b7f088-adaa-44a8-8c00-32273735bf0d",
        "cursor": {
          "ref": "0cec717c-8a87-4d5b-b523-bdbc3e927e30",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c55355a1-b4ab-4bfc-b2a3-53a364e0c270"
        },
        "item": {
          "id": "28b7f088-adaa-44a8-8c00-32273735bf0d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d26b84cb-39d8-402e-8a98-af8259e6ccbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65400b09-4d16-4dfe-9e61-0d793855f523",
        "cursor": {
          "ref": "7f1e3733-f308-4e5e-bdd8-ce78372a6ce7",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1e7431ac-61ff-4736-993d-dcb31f294646"
        },
        "item": {
          "id": "65400b09-4d16-4dfe-9e61-0d793855f523",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "34f50b36-8d56-49c4-bbdf-4c26ad35edef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3c9520-0b3b-4be9-913a-3f3e6932ca92",
        "cursor": {
          "ref": "e4e2ef1f-68dc-42ae-989c-c8bba0bfab38",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1d333529-e244-4ced-8304-d9abdcea493f"
        },
        "item": {
          "id": "3c3c9520-0b3b-4be9-913a-3f3e6932ca92",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9c3dd974-7e14-4726-9989-d7168f6f45db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266e55eb-ca85-4e71-9a98-c8ff32a5c6d9",
        "cursor": {
          "ref": "d88d89f0-0f10-4c49-b7d4-4230b05b9948",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9bc5d8ee-b460-4abd-b76e-9c8c5cb973c9"
        },
        "item": {
          "id": "266e55eb-ca85-4e71-9a98-c8ff32a5c6d9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "36e1f6f1-6a92-4ab4-a9ed-0b232d5a423a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4e2a2e-297d-4fbd-850b-9050baf62bf8",
        "cursor": {
          "ref": "221065cf-48b8-49e6-9b1c-b31699e3f120",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "246cd557-23f5-4c9a-bc91-b66876730161"
        },
        "item": {
          "id": "be4e2a2e-297d-4fbd-850b-9050baf62bf8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1c2e9552-60b4-43b8-bd4a-4fa48a150c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8993372-dfc2-4600-9ef6-47fc7be30e01",
        "cursor": {
          "ref": "2237ca79-61e2-4362-b810-e3970b207151",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "67c6c3f7-29c8-4ab4-854b-dd6c73a4f7ae"
        },
        "item": {
          "id": "a8993372-dfc2-4600-9ef6-47fc7be30e01",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f2752c94-013c-49bf-9704-85b69e6be73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bb5c66-f65c-409f-a920-93522fe7bf3d",
        "cursor": {
          "ref": "76e525a5-ce0c-4143-80ac-44b5508332a5",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "56767e1e-f5f0-4a33-99b0-9bd7505dfd38"
        },
        "item": {
          "id": "f0bb5c66-f65c-409f-a920-93522fe7bf3d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ef030533-3a81-48b2-99c4-8fe580c6aeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec801a51-53c5-40c4-891d-e5403f53ec4d",
        "cursor": {
          "ref": "06b2d1ae-1343-4e24-9b16-bae470de3bef",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d7199308-6c34-49df-b187-eacd07483fbb"
        },
        "item": {
          "id": "ec801a51-53c5-40c4-891d-e5403f53ec4d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "33aa02d1-d1d0-46ed-9ba7-a16f42dbd2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210e26fb-b2b0-43d3-9522-f2f36183674e",
        "cursor": {
          "ref": "c825dd5c-a3e3-4f1f-a396-0f2c345b56fe",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fdef3f6e-9c21-49d2-a6cd-0c0daa0e12ef"
        },
        "item": {
          "id": "210e26fb-b2b0-43d3-9522-f2f36183674e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ae0c4b1d-c475-429c-9ec3-545069a46830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b7e0c5-eff5-4208-ab45-43b99af27d09",
        "cursor": {
          "ref": "56567497-71d1-4809-95ef-f83e71929753",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9ecc64ec-be36-4a31-968f-766ca94b3ef3"
        },
        "item": {
          "id": "31b7e0c5-eff5-4208-ab45-43b99af27d09",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a05e6793-0bdf-42b2-b86e-2a71521cb409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bf2eed-883d-4722-a241-34becc141913",
        "cursor": {
          "ref": "72529f61-bc68-49cf-ad30-a352199f18e8",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4378b972-5da7-4ec5-8b76-4dbedafa4c61"
        },
        "item": {
          "id": "c1bf2eed-883d-4722-a241-34becc141913",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1947111e-e778-4619-9e72-16cfe62d8963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dc37ef-ea10-491b-9846-5d953da5d8bf",
        "cursor": {
          "ref": "03a0afee-a729-4f4a-bb0b-94ad873113ee",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a3416b2d-127f-4ed0-8887-dca67e5e06e4"
        },
        "item": {
          "id": "a5dc37ef-ea10-491b-9846-5d953da5d8bf",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d87c9830-a18e-4cc5-940f-d71ba4846bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49233e29-23fb-4f59-a016-d64d8595941d",
        "cursor": {
          "ref": "ba320f50-cba9-4317-8d0b-37fd4f3a9246",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "47912b28-425d-4916-8f3e-8dafe827b7bb"
        },
        "item": {
          "id": "49233e29-23fb-4f59-a016-d64d8595941d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "da275565-f41d-4b4b-99e4-35ef7cb3c749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978f1039-031f-4983-9ccd-1b4081e91036",
        "cursor": {
          "ref": "bb639a65-343a-4f52-9434-65952f47ebe0",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "33d6051c-a70b-4ede-a562-76a2052039e6"
        },
        "item": {
          "id": "978f1039-031f-4983-9ccd-1b4081e91036",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b271b7be-a10e-448c-bae0-3b97a0d25545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095dd196-d740-4d0e-b4ce-d61f42d30e1c",
        "cursor": {
          "ref": "5409ca3b-a513-4fc3-9e6b-dbc1ba6e83e8",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f933b784-ab26-4715-b3cd-8be4be475392"
        },
        "item": {
          "id": "095dd196-d740-4d0e-b4ce-d61f42d30e1c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "510ef48c-9286-49cc-9b80-62adcc8915c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8923f3d0-dd5f-4c80-9a5a-f171e5f091aa",
        "cursor": {
          "ref": "c3b67904-825f-4788-8cdd-82a0d651a157",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ec315afa-b7a6-43de-b31e-1bdaa129bd62"
        },
        "item": {
          "id": "8923f3d0-dd5f-4c80-9a5a-f171e5f091aa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "57b0dd63-7efc-4bb3-8937-5323e273bda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b23414f-0861-4716-882c-99d437c980ca",
        "cursor": {
          "ref": "735a995d-a687-4215-8358-a20ffad97fc4",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "50bdfd16-81b4-45a1-a903-fd38fe2b20a8"
        },
        "item": {
          "id": "7b23414f-0861-4716-882c-99d437c980ca",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "54b274b0-948f-47ce-948a-78e7dd7424af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b05f90c-2868-4b3a-b4a3-e10f28a20094",
        "cursor": {
          "ref": "f05dfaf5-f939-4693-918e-64542a2a4063",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c2c6080f-baa8-4508-8e85-cc2175f5d94a"
        },
        "item": {
          "id": "7b05f90c-2868-4b3a-b4a3-e10f28a20094",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c787c524-276d-4d53-84ff-0176140c3a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e358515-bba0-4798-8987-41a44f8e0185",
        "cursor": {
          "ref": "28f2ea47-6444-4f04-87ce-91adc32460fa",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5de99bd3-4800-418a-ab78-b599d24ac6c0"
        },
        "item": {
          "id": "3e358515-bba0-4798-8987-41a44f8e0185",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0e413db2-b2d6-4465-959b-0f46d853f303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b666e938-de8f-4a3e-b978-f143f5925b7a",
        "cursor": {
          "ref": "ea39decc-9e89-445a-8252-8b19510850bb",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4bc26b9b-4725-4cab-bab0-b3702e64a37b"
        },
        "item": {
          "id": "b666e938-de8f-4a3e-b978-f143f5925b7a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3dc1f8dc-1c98-43b2-8cca-00e06b9bf033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1029,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83619cb-0f5e-4ca0-9b09-fa460451f957",
        "cursor": {
          "ref": "1274d20c-dac7-47fe-907a-b307fe2ba8fe",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a42910b1-d429-432b-b299-c58261dfe28e"
        },
        "item": {
          "id": "b83619cb-0f5e-4ca0-9b09-fa460451f957",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "48d5ecce-1bc6-4f69-bdfb-40d91dab8ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1194,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec39425-181b-4a7d-83f4-dae38b3cc223",
        "cursor": {
          "ref": "1254ee24-9207-4cb6-b5c3-135336a73fb5",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "45c23e47-04e7-4a6b-a648-e5535a204290"
        },
        "item": {
          "id": "8ec39425-181b-4a7d-83f4-dae38b3cc223",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e14333d4-80c8-4866-8b56-375fd600c94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2500,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa456c5-1e44-4a3a-9583-12ea3ca8e14c",
        "cursor": {
          "ref": "b06602ae-af81-4713-9f00-aa3deec913e2",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "de2a28cf-e6d4-4241-afa8-c018a94a65e6"
        },
        "item": {
          "id": "6aa456c5-1e44-4a3a-9583-12ea3ca8e14c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6cbb9f2e-2752-4a07-b383-d5c12c36671e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2273,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195e7479-1b6b-4418-a967-7b630a864c2f",
        "cursor": {
          "ref": "61f5ab4c-aaf6-4fff-9c10-722bc8ca00d3",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "773d921b-a961-402f-a23c-ef98d8bbb640"
        },
        "item": {
          "id": "195e7479-1b6b-4418-a967-7b630a864c2f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3c509ef7-b033-44b2-a822-10efbb5d8677",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2713,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8093afdd-0c76-4495-8bc3-1d97c429edcf",
        "cursor": {
          "ref": "590a2165-039d-4afb-8560-adb8b1428866",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b84a9292-f0fe-4439-aaed-49a716668a41"
        },
        "item": {
          "id": "8093afdd-0c76-4495-8bc3-1d97c429edcf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "714892e5-ab88-4571-83e3-47d56a896f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1391,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a97a971-35df-4391-afa7-41338c847e66",
        "cursor": {
          "ref": "fbfa551f-1038-485e-935e-de4af921b2f2",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6956850d-ccbf-441a-b4b6-9992854f8ee9"
        },
        "item": {
          "id": "7a97a971-35df-4391-afa7-41338c847e66",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ef4621c4-4de7-42d3-9779-1a89cf39534f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1298,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed5cd33-e6df-4e94-890e-2db25b54d4dc",
        "cursor": {
          "ref": "0aa9acd2-b8d9-4491-88f5-1b7a393699cc",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "07a14343-36eb-4a8a-b8d5-9e13c03b28cb"
        },
        "item": {
          "id": "0ed5cd33-e6df-4e94-890e-2db25b54d4dc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7f504ca0-3edb-490c-afd0-746faea6efb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255b625a-4db5-4a46-bf58-19cb9f904a4d",
        "cursor": {
          "ref": "710aa024-23e7-4894-949d-56b3ae2d7b60",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6dd60fc3-f415-4b63-82ee-d8a7536ccc63"
        },
        "item": {
          "id": "255b625a-4db5-4a46-bf58-19cb9f904a4d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e8ffc89b-6fd8-46f4-a5cc-3352f8e2af67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21f2179-28ca-4e9d-86b7-3a24f0518f2a",
        "cursor": {
          "ref": "44c80dbb-8d57-4ccd-b9df-29a37e273ccc",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e0857fbb-218b-4378-9120-92e528cf2bf7"
        },
        "item": {
          "id": "c21f2179-28ca-4e9d-86b7-3a24f0518f2a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4bd1577e-e9c3-49b1-a183-1b375c15b959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fec728-e552-46d5-afec-ceb60753bf6c",
        "cursor": {
          "ref": "0ccfbcf1-171e-439a-83f0-44617d5bb77d",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "524374a9-31f5-4cbb-a0ca-077e969dd247"
        },
        "item": {
          "id": "32fec728-e552-46d5-afec-ceb60753bf6c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4ab338b3-76af-4ef6-a112-bd023bd1aedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397b41d1-3b1d-4d40-94f5-37dcceae9817",
        "cursor": {
          "ref": "8a02653c-7d87-423d-9678-88bfa4f73649",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f90d34fe-ebc0-4b3c-84a4-58dc513f4891"
        },
        "item": {
          "id": "397b41d1-3b1d-4d40-94f5-37dcceae9817",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "354214e2-95c5-435d-9ecd-98a4d1c54f7c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 829,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c196b9a-f6ff-4efc-818e-e8e7cc3270f5",
        "cursor": {
          "ref": "a567188f-c968-40bb-a41b-c82e7a61e9bb",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "536cde38-7592-45d4-bb28-66838bdc7409"
        },
        "item": {
          "id": "1c196b9a-f6ff-4efc-818e-e8e7cc3270f5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "773c6c03-d31f-4cc1-9267-c6056d07a7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3db248e-2610-4b2b-ad8d-0a1cf74ab26b",
        "cursor": {
          "ref": "f94e7bec-bd7e-457c-8540-8fd2ff809854",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "09a23bd4-7162-40d6-81a8-b0e3adc231c8"
        },
        "item": {
          "id": "d3db248e-2610-4b2b-ad8d-0a1cf74ab26b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "020cb768-f51d-4b7e-b355-7f452044d461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1446,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f2e2e1-224e-459c-bd02-7000c091831f",
        "cursor": {
          "ref": "8c172046-fe34-483c-83b7-48eae5239418",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e675b6f3-a7b9-4811-a987-81b95cd14b2d"
        },
        "item": {
          "id": "f5f2e2e1-224e-459c-bd02-7000c091831f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6e519383-21fb-46b4-aafe-a2d154b498da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1256,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1e7e6f-c215-490f-8e05-8a758314a169",
        "cursor": {
          "ref": "bc3b1d5c-b955-4a6c-9900-d6af94a51ca3",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8fd5d6d5-7116-45f4-96c7-99908165ba95"
        },
        "item": {
          "id": "ca1e7e6f-c215-490f-8e05-8a758314a169",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "84baad90-32b8-4ff8-bd96-7b900ba84824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1919,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239cf7db-d158-41a5-8d1b-94d90ad5f6ef",
        "cursor": {
          "ref": "8d4e6ea6-7abe-403c-bf8b-95365a8a2d29",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cf86aa15-3dbf-4d3e-91cc-1f20fcccc81f"
        },
        "item": {
          "id": "239cf7db-d158-41a5-8d1b-94d90ad5f6ef",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bd949623-7b80-4c3f-91db-e42c54f13d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1577,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766eff68-bdcc-4dc9-a727-deb79cc48540",
        "cursor": {
          "ref": "747bcc4e-2fd0-436c-8e93-5b4ece964c41",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "48d547cf-6069-4675-a6bd-a8ae357ba01a"
        },
        "item": {
          "id": "766eff68-bdcc-4dc9-a727-deb79cc48540",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "10137428-460c-4bb8-a829-b2f367fe5ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1572,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61cf235-f8ac-4e9b-ba69-b3fc52453d47",
        "cursor": {
          "ref": "e89accee-baf1-4d01-a887-2a4dddf6855c",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d1a3fe61-7b1b-4746-8b58-0a04dba8e1cb"
        },
        "item": {
          "id": "b61cf235-f8ac-4e9b-ba69-b3fc52453d47",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4d99a97d-5b72-4b5a-b449-c949b4667d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1227,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c494cb86-4027-49a6-af6d-cf95404cea40",
        "cursor": {
          "ref": "231d493b-a62a-44b6-8d9f-e5b647a3f712",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "aff3ac73-bd18-4519-a85e-7586a0d5fbc6"
        },
        "item": {
          "id": "c494cb86-4027-49a6-af6d-cf95404cea40",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b11f53f1-46c4-43a0-b2e9-251d39c70cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c58d117-b64e-4bc8-b980-a600d450dfef",
        "cursor": {
          "ref": "5d7be8cd-8069-4e0d-90da-ac2e9569e86f",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "397356fb-effc-4657-8415-1132c8374368"
        },
        "item": {
          "id": "8c58d117-b64e-4bc8-b980-a600d450dfef",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f7fbf479-e4eb-4fc0-ab79-f057ea4050da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b189a61-f733-4fa3-80fa-79aa2999feae",
        "cursor": {
          "ref": "2ab12eeb-e5cf-4b6b-8be2-0ab260febe14",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6fb6707b-85b4-4928-ba8e-2b28d5cc0bc0"
        },
        "item": {
          "id": "9b189a61-f733-4fa3-80fa-79aa2999feae",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "75e33ae5-e7d3-4c99-8793-f71cfaa2b9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24e40d5-6f5e-45ab-938e-a77e8de7e541",
        "cursor": {
          "ref": "28b1c06c-00b3-4bb5-9c9b-7d5222002ab9",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cf974fec-0054-49b5-89f9-a44f84928ef8"
        },
        "item": {
          "id": "f24e40d5-6f5e-45ab-938e-a77e8de7e541",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f7723cef-bf80-4f06-910f-9b35e38ed2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa4fb28-e18c-4f80-8dc0-8ccae2bf701a",
        "cursor": {
          "ref": "ce56003c-fb39-4e76-a4bd-9235bd7f5afa",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "003ede9e-8c13-4a14-8ade-06d245185f20"
        },
        "item": {
          "id": "3aa4fb28-e18c-4f80-8dc0-8ccae2bf701a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ec939ff2-4d7d-4eb0-a61f-17d2807b2ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122a5975-071e-4e31-ab04-9bef5498f10c",
        "cursor": {
          "ref": "9be46d2d-cc58-4bd6-9718-3f616e161ef4",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cd981f2c-d9b0-494e-8542-3221ad284e44"
        },
        "item": {
          "id": "122a5975-071e-4e31-ab04-9bef5498f10c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a4f7a224-34fd-4009-a1d7-19b126c868e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41cd724-bdd5-423e-a159-306fdaa04cb0",
        "cursor": {
          "ref": "aaee4d98-4ab2-4bdd-a369-e2ba0be07e5b",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "06dc5e71-4ffa-457a-8fd8-91d58ba0b6d3"
        },
        "item": {
          "id": "e41cd724-bdd5-423e-a159-306fdaa04cb0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ff12ab91-dc59-415b-8daf-3522859ecacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bb52d9-f50d-41d0-8941-5e59f6719cfa",
        "cursor": {
          "ref": "0448b2b5-be1c-433f-a1f5-7063998759f7",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5a2b03a2-8ffa-42e0-be40-cf06801bb774"
        },
        "item": {
          "id": "f7bb52d9-f50d-41d0-8941-5e59f6719cfa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "29cca2ea-5629-4851-93de-1224dea9771b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed9e588-1755-4545-95d8-bd4369757dda",
        "cursor": {
          "ref": "94225377-272b-4a80-a4ab-76640bae2ed8",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "282b21ae-cbda-4181-80cb-d482b1489024"
        },
        "item": {
          "id": "aed9e588-1755-4545-95d8-bd4369757dda",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "be6e0cf7-67f4-46f0-a036-15f27d4f02ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d83ebb4-b3d0-4ca6-a6fe-d31a26f6e3dc",
        "cursor": {
          "ref": "435f3886-9ad8-4d91-a06e-233ec8acb67f",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "774401a7-6e54-4bd8-874e-2f95b7edd01e"
        },
        "item": {
          "id": "2d83ebb4-b3d0-4ca6-a6fe-d31a26f6e3dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6c8ed283-af0b-469c-82fa-8732ebacfb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335bb901-3304-4f2d-8adc-9c84e085f38a",
        "cursor": {
          "ref": "9878908f-3617-44aa-a3ee-2c1c7b218e88",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "326eac4c-42b6-4eea-b5ee-d7928c47afed"
        },
        "item": {
          "id": "335bb901-3304-4f2d-8adc-9c84e085f38a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "13982b63-4cda-4b2f-8249-64b8dddeb53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282cf4b8-2abc-46ee-aca9-f2c484a1ac19",
        "cursor": {
          "ref": "be6b23db-c520-4804-aa0f-6dc2744857da",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "36f1ba3b-8580-4733-b4d3-28cf8d614873"
        },
        "item": {
          "id": "282cf4b8-2abc-46ee-aca9-f2c484a1ac19",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6b99880d-3c0d-4431-b469-d3f2f10b86a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6426725f-fe69-4aa6-9766-8cb87f677fa4",
        "cursor": {
          "ref": "4285adfd-4000-4be8-aad2-3ebbdcbe181b",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0f11b4cf-5aae-41d5-8889-5ed8faa8ecba"
        },
        "item": {
          "id": "6426725f-fe69-4aa6-9766-8cb87f677fa4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fe89f742-663b-4d36-b1ba-f411933b21b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735bf50a-132b-4d60-a075-1581cb3e015d",
        "cursor": {
          "ref": "56f149aa-7c80-4db3-85a1-e75304186dbb",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e9e7c170-15a2-4f2f-8dfc-0a4923487616"
        },
        "item": {
          "id": "735bf50a-132b-4d60-a075-1581cb3e015d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "22d8f9de-2fe4-4b40-90ff-e5997ca3f99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00f9c2b-2d0f-4282-a430-3470b80bdefc",
        "cursor": {
          "ref": "069cd327-2682-4ab2-89c9-fab9dacccbd4",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "67c7fd91-4006-417f-9ab4-7d72de7c7e50"
        },
        "item": {
          "id": "c00f9c2b-2d0f-4282-a430-3470b80bdefc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2e62bb23-922a-47f4-a391-7542176142c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071354a1-cdb9-4b2b-adda-56e701ae0bc7",
        "cursor": {
          "ref": "e2485cd1-8b62-4e7c-9bfd-a6007d93ea36",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "911df253-e1d7-42de-9411-2bdd1435ddc4"
        },
        "item": {
          "id": "071354a1-cdb9-4b2b-adda-56e701ae0bc7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4cbbe7f5-1405-43e5-8a6d-9b7b25ece410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5afcd1-27c2-4820-a485-d3f0e30ba04b",
        "cursor": {
          "ref": "0f75cd1b-fc97-49d8-8cb7-e1080385c451",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0582b3f4-eecd-4ff9-a5f2-a61609296b79"
        },
        "item": {
          "id": "9d5afcd1-27c2-4820-a485-d3f0e30ba04b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "63c09a65-c157-4d26-80da-da2417d94700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa01e5a6-f03c-4b40-8ea8-377bf5632e84",
        "cursor": {
          "ref": "e8088f36-7b61-4757-994b-8a5afa0d6f0a",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "13945b8e-8c0c-4e7a-8da4-1825c1661138"
        },
        "item": {
          "id": "fa01e5a6-f03c-4b40-8ea8-377bf5632e84",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "02cb9905-33c2-41f5-9900-473382234a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c065ed4-9aab-4aab-a0b7-0c564bfe4850",
        "cursor": {
          "ref": "8220e2b3-e564-4095-808d-bf25cbbfcba3",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "82f985b8-f2c3-46f4-8d1a-53c12dbe7d09"
        },
        "item": {
          "id": "6c065ed4-9aab-4aab-a0b7-0c564bfe4850",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2bd138ab-5e7f-48f3-adca-17907e656dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3601b56e-6c52-49dd-8e67-3456c1fbcd91",
        "cursor": {
          "ref": "1be12829-4aef-4880-9a25-fec2643cfc3c",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "60fe0ab4-4941-4eb8-8b30-9b02cc4bc107"
        },
        "item": {
          "id": "3601b56e-6c52-49dd-8e67-3456c1fbcd91",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8e0931b2-0595-457b-9ca7-358e18ddc2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d4d5df-175e-4c79-86d5-08b3b2cbd28a",
        "cursor": {
          "ref": "7813639f-e652-4aa6-a939-3c44ec59a0ae",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1e53307d-a8bf-4ec7-bc18-62f30c71174a"
        },
        "item": {
          "id": "07d4d5df-175e-4c79-86d5-08b3b2cbd28a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cff87551-3f9e-4709-b76f-34d0a09949bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe30497b-d565-49d4-9560-928620239efd",
        "cursor": {
          "ref": "6e824b6d-2e66-4469-9d8a-7701a782704c",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "91bdc9c8-b5d4-401c-ad9b-5f9431ca02dc"
        },
        "item": {
          "id": "fe30497b-d565-49d4-9560-928620239efd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e9a80c0a-493c-486f-b524-b2bf43c2ca76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fc3058-eb43-4a25-907e-703babbe250e",
        "cursor": {
          "ref": "13862bbf-d96d-487b-b0af-ce10e58e3dfd",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0971384f-708b-4d58-b55b-d1bc14e5f0de"
        },
        "item": {
          "id": "b3fc3058-eb43-4a25-907e-703babbe250e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aab8f289-7d20-4417-9731-085cd6eb5613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fc5d5d-577d-473e-8060-3a91d113ff26",
        "cursor": {
          "ref": "98dc8c31-a689-4a13-8b98-56f7e1f93cde",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "07e4f341-a781-48e4-ad12-f0c82efbc152"
        },
        "item": {
          "id": "57fc5d5d-577d-473e-8060-3a91d113ff26",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a40d6013-1bda-4d97-9a6e-8e3e1b2ff0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50712211-ac51-4174-bda5-008cb145bc10",
        "cursor": {
          "ref": "08e074c9-7c3b-43b1-912c-218f0c05c6be",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "30d7cff5-721a-4d12-a0c2-a237bac911e7"
        },
        "item": {
          "id": "50712211-ac51-4174-bda5-008cb145bc10",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1136b535-7e5e-4a6a-86c5-3f3b112c7277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbb71b4-d0c6-4222-a6af-ace6ab5c5985",
        "cursor": {
          "ref": "7c893556-21ef-4f9b-b8d8-dd46e2b14435",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "22f37c2a-54b5-4b2f-a07c-1c45a3f2834a"
        },
        "item": {
          "id": "1dbb71b4-d0c6-4222-a6af-ace6ab5c5985",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4fc955d0-5776-43a5-83e8-129e1349e4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bed7c42-cefe-4154-80ca-113682e3024d",
        "cursor": {
          "ref": "abc54abd-9408-4913-8fc4-acf98163fa9d",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4ae4a403-46d4-4604-97a4-04517339a73d"
        },
        "item": {
          "id": "5bed7c42-cefe-4154-80ca-113682e3024d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "08abc374-9e8f-4ed9-a5e6-899b9738d71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564ce12b-35f1-4c5c-a69f-e64d99d6d6e9",
        "cursor": {
          "ref": "c4678f55-735e-498e-a878-c7b93ba3ea1c",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "769a2266-6200-4a60-9d57-16770ff0a106"
        },
        "item": {
          "id": "564ce12b-35f1-4c5c-a69f-e64d99d6d6e9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "90dad234-ffef-467f-bc1a-0f3381749fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e1ccb3-779d-451f-98e5-56849379a662",
        "cursor": {
          "ref": "4dee5bf5-234b-4d61-96bb-f44fff2aa77c",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a1738445-3ee2-4da8-9f5f-6503f1c797e1"
        },
        "item": {
          "id": "92e1ccb3-779d-451f-98e5-56849379a662",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "953a06f4-90f9-4640-a03f-d9b971855d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f363e6-550c-4a71-b98c-131fe8bdd301",
        "cursor": {
          "ref": "25ff4626-e645-491f-9879-7feacb625ea0",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ed01d2ae-1372-4570-9eab-0e631da06639"
        },
        "item": {
          "id": "d0f363e6-550c-4a71-b98c-131fe8bdd301",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "65bcf873-7012-43a1-a0c6-273bb1254aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26efd3b0-952c-447a-a3cd-13ebb612fd39",
        "cursor": {
          "ref": "efd21789-df9e-4b22-9279-722888ead5fb",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5c8a092f-a731-4744-88d4-5c74157bb65f"
        },
        "item": {
          "id": "26efd3b0-952c-447a-a3cd-13ebb612fd39",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dcff2e73-6c04-43a2-bc36-f2e16aa79404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba00b85-b008-46b8-bd19-2eed28d0fe07",
        "cursor": {
          "ref": "3658bf4c-39de-4463-923c-1d135065cc3e",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0a297d4b-4ed4-46e0-bae8-3f9e7ea2e0bd"
        },
        "item": {
          "id": "9ba00b85-b008-46b8-bd19-2eed28d0fe07",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d7564dde-67c1-45f5-ba7b-661762c2cbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38404b14-3f0c-4229-ab2b-2d0796bf90ab",
        "cursor": {
          "ref": "51a4a827-4996-4484-9d11-2bacb770a031",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f69e97c2-0a83-4b40-afea-4552319d9d0c"
        },
        "item": {
          "id": "38404b14-3f0c-4229-ab2b-2d0796bf90ab",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0d997274-bfc8-4604-af11-48e09ad51016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9a0834-5fc2-4a07-8713-774fa630d66e",
        "cursor": {
          "ref": "7d870fba-e737-4d41-891c-35614bf3d97d",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e6e10b06-7c85-4574-95a0-07af380f8341"
        },
        "item": {
          "id": "ea9a0834-5fc2-4a07-8713-774fa630d66e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ba3a93f8-fbe8-4717-9a47-6f2510e77efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a46275-445a-43a9-acd3-5be2b712cb72",
        "cursor": {
          "ref": "bbbba49b-82f0-4d2c-9b09-ac01fcdefe4f",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "822a2209-7f1f-4521-b4f0-21b9db94aeb7"
        },
        "item": {
          "id": "91a46275-445a-43a9-acd3-5be2b712cb72",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4d4a9735-0466-450d-a28b-4bd54732f517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7f6d51-1207-4de7-ba0f-072cf1eb9cd0",
        "cursor": {
          "ref": "1afe7982-dedf-440b-ba71-474af5f0f5a4",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "92cb593d-5a76-4026-ad3f-d6a572901b1a"
        },
        "item": {
          "id": "0a7f6d51-1207-4de7-ba0f-072cf1eb9cd0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cc5a9741-e6e8-4a78-88d9-0d65ada1758b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebaefc0-7240-45ca-9b01-f8391333e7cd",
        "cursor": {
          "ref": "3ca790f4-a15b-47ac-9abf-f936f859302c",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "23437097-b360-42b5-bc24-c3cec13a1afd"
        },
        "item": {
          "id": "8ebaefc0-7240-45ca-9b01-f8391333e7cd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8c9868df-8b34-4eab-a318-8daeae15a6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f186475-a546-4614-8b8f-2540f8cbe28e",
        "cursor": {
          "ref": "eda87bed-48a9-455a-a15f-fb7902a7dae1",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f53e4e91-1793-41cf-b24b-104bf6bc9255"
        },
        "item": {
          "id": "1f186475-a546-4614-8b8f-2540f8cbe28e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "45d9891a-c1c4-4835-b97c-9441d27d1cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27047138-3100-4ae9-83b9-2118221f69d5",
        "cursor": {
          "ref": "c7e571f4-684c-49c1-bb1b-72acc458bd5c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "29b52b37-bb2c-42ba-91ad-7ab7c4fa97c9"
        },
        "item": {
          "id": "27047138-3100-4ae9-83b9-2118221f69d5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8541eb4a-20c7-4967-a7b9-494ba6d69f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f4d898-ab2c-4567-b7d0-687fe4729975",
        "cursor": {
          "ref": "de4357d0-7b2d-4adf-8d46-b73584d7d169",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8918aabb-d3ad-4d5f-9f66-c3ea4fa7b708"
        },
        "item": {
          "id": "68f4d898-ab2c-4567-b7d0-687fe4729975",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c86662fd-8655-406e-bba1-8eab4b139bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7d35ef-17d5-46a6-b54b-c49e7a03ce01",
        "cursor": {
          "ref": "b1ee99cf-6fe5-44b3-831d-7efe00a339e2",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5d4bad88-25f0-48b0-9324-2eeb066b5d13"
        },
        "item": {
          "id": "ae7d35ef-17d5-46a6-b54b-c49e7a03ce01",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "74a5ceb2-dc75-4ce4-a05e-265cf0a9f97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaeaffd0-2f07-4f12-bc66-39de918586c4",
        "cursor": {
          "ref": "d78b9753-f98e-4a4c-a5ce-82de63c50884",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1b7a9aaf-9a39-48cc-aeb0-b97465b96af2"
        },
        "item": {
          "id": "aaeaffd0-2f07-4f12-bc66-39de918586c4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ade8e5c9-450b-4198-9ca4-9f93b4639c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb2307c-b2c3-44df-85f1-4ce2d30d141b",
        "cursor": {
          "ref": "eda32882-a54e-4f0f-8b3b-3c84aaf2f996",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2af7b4bc-fb60-45a3-b0f0-8827539d9ac9"
        },
        "item": {
          "id": "9cb2307c-b2c3-44df-85f1-4ce2d30d141b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e089d89d-5416-4089-99bb-4396d7556df0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c0d839-9313-426f-a57a-40cc435b26d2",
        "cursor": {
          "ref": "40697bbc-ffa5-471b-9ff9-8f9d0adcf672",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4679f91f-0ff6-46b8-a5ec-32be28cefce8"
        },
        "item": {
          "id": "68c0d839-9313-426f-a57a-40cc435b26d2",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c27ecbcf-63d9-44f0-8188-c2f9316bb988",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 724,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51e7ba3-2924-436b-9b8f-1a72d687c577",
        "cursor": {
          "ref": "e7bf6ce4-ac1f-4b38-baca-46ca38e2b464",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "aeb39b4b-5981-4cbd-a6c1-24236ccbb4c0"
        },
        "item": {
          "id": "b51e7ba3-2924-436b-9b8f-1a72d687c577",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eccf4afa-7b30-4c5c-95c4-86122dadddd5",
          "status": "Created",
          "code": 201,
          "responseTime": 7329,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ead265-2038-4f43-b2a4-9c626c49a6b2",
        "cursor": {
          "ref": "0fee65dd-0092-47ae-80ca-556daf80023b",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f6cad1bf-2480-4518-a3a0-6372f190ea5c"
        },
        "item": {
          "id": "42ead265-2038-4f43-b2a4-9c626c49a6b2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5181a292-64cd-4e93-8f33-87640357f962",
          "status": "Created",
          "code": 201,
          "responseTime": 9748,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b6c683-5674-4119-8fd8-fa83139f3d6c",
        "cursor": {
          "ref": "9a2e596e-20f6-49bc-84c6-8b9af3bb51b8",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "844adc68-07e5-47b6-8538-08a5c9cc07b4"
        },
        "item": {
          "id": "01b6c683-5674-4119-8fd8-fa83139f3d6c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e97aa928-9664-42ad-9f03-4a1e650f2e5a",
          "status": "Created",
          "code": 201,
          "responseTime": 6482,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5a1a36-51d4-483b-b55a-408bb7e3301a",
        "cursor": {
          "ref": "3338adde-0db9-43c1-91ee-9b7f944e8740",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f4df20f1-e57b-4ea0-baae-4fed6a0f438e"
        },
        "item": {
          "id": "8d5a1a36-51d4-483b-b55a-408bb7e3301a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a3937a51-928a-4511-b040-e064902cafe5",
          "status": "Created",
          "code": 201,
          "responseTime": 6889,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4c2ed5-259b-40f0-ba8d-c705dbbb9286",
        "cursor": {
          "ref": "5c2cad29-51b2-4478-8fad-a6cb1852c60f",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "da8173b3-b661-42c6-8e52-86788653c87b"
        },
        "item": {
          "id": "8e4c2ed5-259b-40f0-ba8d-c705dbbb9286",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7bd13a2f-4c23-4fb9-8600-74bfe91d6b18",
          "status": "Created",
          "code": 201,
          "responseTime": 10635,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c6ae88-4e4e-43f8-9867-7f3658e86951",
        "cursor": {
          "ref": "985a36dd-a6ac-4c2e-ba6c-875bbc16e009",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cf35f1bd-c793-4074-a239-15b7c4454e2d"
        },
        "item": {
          "id": "f3c6ae88-4e4e-43f8-9867-7f3658e86951",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ce0ab3b3-11b2-4773-a7d3-daa09b40b381",
          "status": "Created",
          "code": 201,
          "responseTime": 12761,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b853cf65-562f-4a0d-adcc-da4e327ba27d",
        "cursor": {
          "ref": "fb500e46-8abb-4fe9-8754-043094857f33",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1b79996c-e588-4ff5-891a-972ccf1be4bb"
        },
        "item": {
          "id": "b853cf65-562f-4a0d-adcc-da4e327ba27d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "425e4f66-9d60-417c-a3b0-47adab15c1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b853cf65-562f-4a0d-adcc-da4e327ba27d",
        "cursor": {
          "ref": "fb500e46-8abb-4fe9-8754-043094857f33",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1b79996c-e588-4ff5-891a-972ccf1be4bb"
        },
        "item": {
          "id": "b853cf65-562f-4a0d-adcc-da4e327ba27d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "425e4f66-9d60-417c-a3b0-47adab15c1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bceaab-b92c-4461-b885-2cd16edaf578",
        "cursor": {
          "ref": "0a1299ba-17d1-4f70-a559-11d1ffa3c046",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ab0d3117-0603-4b62-9408-2a8262525eaf"
        },
        "item": {
          "id": "49bceaab-b92c-4461-b885-2cd16edaf578",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c2ef2663-b93c-4c22-a9d4-12122fd9f72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1022,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdeaaa2-673c-46b2-ad6d-eed385999d0c",
        "cursor": {
          "ref": "b3cccb52-32f1-4ec5-b30c-cdef061b272c",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ae441f8b-cc25-42fe-a229-8ad2f1469fdc"
        },
        "item": {
          "id": "9bdeaaa2-673c-46b2-ad6d-eed385999d0c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1de4ee64-7af4-4378-98c4-ca0d21d4b38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90997fe-c755-4ae0-85f2-a0b95f83bd2f",
        "cursor": {
          "ref": "25f4df0c-3664-4cbf-aa53-eb5f00ee3ab3",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7f43bca8-079d-4c94-8b01-cab032072a48"
        },
        "item": {
          "id": "d90997fe-c755-4ae0-85f2-a0b95f83bd2f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1ed5564b-655e-42a6-b5ce-535be1027f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5761e4b7-a515-4129-a8e8-9a6b10588295",
        "cursor": {
          "ref": "3293ebaf-8d79-4a19-8f8e-52be2ad68dd7",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "53ef2e91-94bc-4337-90f7-67690bd161a3"
        },
        "item": {
          "id": "5761e4b7-a515-4129-a8e8-9a6b10588295",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0969600a-ffe1-4946-8d23-0e7a838dfd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1d25ae-ebdd-45a7-8907-f527e7b43845",
        "cursor": {
          "ref": "e000e2f5-1a09-4426-88bb-c2680918c51e",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d7c37313-5025-4231-832a-ebfa672bb55d"
        },
        "item": {
          "id": "0a1d25ae-ebdd-45a7-8907-f527e7b43845",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cce01dfa-677a-4f51-9b40-536c856ea2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0451822a-f614-4ae9-bc94-5ae5324ce6af",
        "cursor": {
          "ref": "858bc2fc-35d1-4f8f-bcf1-b49471b7081e",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0df35ad3-b034-41f8-8e9b-4fdb1374ca66"
        },
        "item": {
          "id": "0451822a-f614-4ae9-bc94-5ae5324ce6af",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "64599f5b-ef6e-40a6-a69a-cb50c7286069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98448751-556d-4732-9463-c669e4f972dc",
        "cursor": {
          "ref": "0806abac-9063-4bc7-8e0b-9a9048053619",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "388c1016-ccb8-47c7-bda1-68ee24abd9f6"
        },
        "item": {
          "id": "98448751-556d-4732-9463-c669e4f972dc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2ffdfdf8-6f61-41f9-bad4-0d7e7c9c5e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40338af7-9399-489a-871e-7bac68eb9580",
        "cursor": {
          "ref": "f8c67f24-1273-4c85-8777-2995ec57edd5",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d59c3fe3-3225-4bd7-8761-89cdb6bb77da"
        },
        "item": {
          "id": "40338af7-9399-489a-871e-7bac68eb9580",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7093038d-57e8-4b72-98d3-11a575b73555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eec9b8f-2091-40e6-8864-32e6b1545397",
        "cursor": {
          "ref": "ef115b11-a972-49f8-90c0-7d1ade64e532",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "38895357-5f7c-4de1-a1ca-8dbfabe84278"
        },
        "item": {
          "id": "4eec9b8f-2091-40e6-8864-32e6b1545397",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8c70d3ed-62c8-4a88-a1e6-a7b6386ab28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69b5352-c3c5-415f-ab85-da86b3331868",
        "cursor": {
          "ref": "9773314e-2daa-4095-a5d4-de304af16d12",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "306252f0-a80c-4eec-a3f9-161c09f0e669"
        },
        "item": {
          "id": "c69b5352-c3c5-415f-ab85-da86b3331868",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "db4109a0-19ae-4b24-a57a-fb59de056b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43a413e-9654-414d-bf11-54bbbefe88dc",
        "cursor": {
          "ref": "86783eb3-e381-4dd8-969b-5e919960a286",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b467b5d6-7065-4f14-9bc6-8e983c46885f"
        },
        "item": {
          "id": "c43a413e-9654-414d-bf11-54bbbefe88dc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ac5a16b3-a507-46ed-9fb6-256738c91e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1083,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8d76f0-a926-4308-927e-3e9312226d7e",
        "cursor": {
          "ref": "e39531ba-af64-4ae6-8505-27fcb6c03bc4",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f2c7ca55-54c3-4c45-81e4-9d516b447846"
        },
        "item": {
          "id": "9b8d76f0-a926-4308-927e-3e9312226d7e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c0ff6e45-24df-4981-8a84-f0056a6ff656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9cd6c9-fc93-418f-b7c7-2da7af6ac650",
        "cursor": {
          "ref": "b9986c07-1718-454d-b3dd-20a3183961f3",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9eb60bf9-81c7-43a7-bf81-a8835cea0b19"
        },
        "item": {
          "id": "1d9cd6c9-fc93-418f-b7c7-2da7af6ac650",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7b4635b9-d3d2-4cf0-b1a8-57af7df114c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1002,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c740103-bda3-4986-96a2-8d64541522a3",
        "cursor": {
          "ref": "708bd6af-c41f-4182-8fa9-0181b2bac6fc",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "93953641-250a-4b8a-8157-864929b934b3"
        },
        "item": {
          "id": "1c740103-bda3-4986-96a2-8d64541522a3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f34553bf-d4fb-41ce-93a1-bc21a8b8fbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1079,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c360aca-e978-48b7-b921-b00905f75ab1",
        "cursor": {
          "ref": "198791ed-2d92-4354-82b0-d62a439ca922",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "87c32372-4578-423f-ab20-5884e408d464"
        },
        "item": {
          "id": "6c360aca-e978-48b7-b921-b00905f75ab1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1653489a-c813-4e89-8edf-91d9df206740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1174,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23845fb1-d365-4c24-b909-7c2daa0efa83",
        "cursor": {
          "ref": "1998c7cc-c13c-499d-9ab9-9f884538e103",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0f0c2df7-c602-4ebf-85fc-a9c2588c0363"
        },
        "item": {
          "id": "23845fb1-d365-4c24-b909-7c2daa0efa83",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "24c62df1-dd87-4187-8852-ddd55a4106b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1056,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a0e1d1-045d-4b12-a872-b5e52df2dbec",
        "cursor": {
          "ref": "5e4956bb-e562-43cf-a55b-3595b23a65ff",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b225f9ee-05bd-420a-a7ff-998565922ca3"
        },
        "item": {
          "id": "16a0e1d1-045d-4b12-a872-b5e52df2dbec",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "45db1cde-d733-455d-839c-c8c993f7968f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e71d235-62dc-48fe-ba5b-c12fe9ebbc8b",
        "cursor": {
          "ref": "f2d8b1ea-3bdd-4449-8ec1-d17cd836c3d9",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "097eef8f-e68c-4e39-9e12-b1d76e0362b4"
        },
        "item": {
          "id": "9e71d235-62dc-48fe-ba5b-c12fe9ebbc8b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e84fe876-c161-4f77-b821-d8ec4ffddf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d515f25b-3094-4b60-a3ae-4af0bf703bed",
        "cursor": {
          "ref": "151a512f-5f51-4d25-a622-f2ef00ba2649",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "50a368f2-a9ec-4a4e-b9e9-fb12360d1922"
        },
        "item": {
          "id": "d515f25b-3094-4b60-a3ae-4af0bf703bed",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "81822f24-e922-4dea-b741-b63cbe525887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7706bc09-4a6f-40f1-89d0-59a57a2d6f61",
        "cursor": {
          "ref": "9dab3f27-dba1-4595-89ae-4b430a56c9c9",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0edef490-c050-4034-9c21-2510aaa93852"
        },
        "item": {
          "id": "7706bc09-4a6f-40f1-89d0-59a57a2d6f61",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e3e2d742-47a8-4198-99e3-ff7c359523bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c96d7c7-3c8f-4835-ad94-cd9796760192",
        "cursor": {
          "ref": "d9ce3def-30dd-4f4f-b073-433ecc6c496b",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3f52ee1e-52b8-4943-8c04-582eec9b46f4"
        },
        "item": {
          "id": "1c96d7c7-3c8f-4835-ad94-cd9796760192",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a8ceda2b-9785-4076-87ff-2a68b2d451e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf595a74-4837-4a36-b023-b3abb294a15d",
        "cursor": {
          "ref": "f04cc007-28f9-4c24-b7af-998c262e1710",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "58c858bc-31b9-445f-9749-59ee5c2e49fd"
        },
        "item": {
          "id": "cf595a74-4837-4a36-b023-b3abb294a15d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9badbdd0-d887-4ddb-9a12-a3d3be0d049d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e33cc5-8f3b-4ac5-8676-633291982194",
        "cursor": {
          "ref": "ee1c851b-b00a-43c0-979b-6c88b6f3559b",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9b500ce8-0a94-491f-9716-bdc0abafce02"
        },
        "item": {
          "id": "67e33cc5-8f3b-4ac5-8676-633291982194",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fcd2c224-c3e2-4d97-b066-8307ff9595d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1615ec-bf13-4968-ad05-540c6b15773b",
        "cursor": {
          "ref": "faeb47c7-d29b-4c1b-b0bb-fd03c46f0643",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1e758bf6-caf3-4fc2-9eec-6c4e199b0b0c"
        },
        "item": {
          "id": "ad1615ec-bf13-4968-ad05-540c6b15773b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "60f64842-8912-4f67-92b2-b11d84760d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90708751-c3c9-45af-98e6-facfc63e301f",
        "cursor": {
          "ref": "e2fe1da4-ee8d-4a7d-bd09-0ee261f3fd36",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8a8e7738-69fa-4597-b142-716175cd035a"
        },
        "item": {
          "id": "90708751-c3c9-45af-98e6-facfc63e301f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "33ad3a4a-794a-4295-949f-ad6147a38801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4684742-76c8-45a4-a9dc-b635c2ccc860",
        "cursor": {
          "ref": "0822374b-cf6b-4785-b3a6-6ef5978dde5f",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a1f14275-b027-485d-ae0d-4ca8ed1694a6"
        },
        "item": {
          "id": "f4684742-76c8-45a4-a9dc-b635c2ccc860",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "415fa78a-4894-47ae-af8f-853c31abfde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f84aed-c003-4d2c-8fab-cc75fda70fe0",
        "cursor": {
          "ref": "6da62715-9bc1-483c-94dd-9b344e7a83bb",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "57c60b0a-b279-4397-ab69-abcef0f4a116"
        },
        "item": {
          "id": "83f84aed-c003-4d2c-8fab-cc75fda70fe0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "77c08c2f-d148-4dd2-bbab-051b4bd0db7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8b5183-178b-4ba3-b6fb-c54e73d02c4a",
        "cursor": {
          "ref": "60d2d57e-0548-410a-8f01-c0585395c69e",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "86d5b0c1-2faa-4ec3-918b-acea750a8e2e"
        },
        "item": {
          "id": "cc8b5183-178b-4ba3-b6fb-c54e73d02c4a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6f05ede2-a513-4e26-953a-e9990028a7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bbcecd-1861-4474-a10c-ed2f5934281f",
        "cursor": {
          "ref": "3c71e60d-6d21-456c-9bdc-d33f53888908",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "98d34497-c5d7-4232-af21-d1ad60203d99"
        },
        "item": {
          "id": "b2bbcecd-1861-4474-a10c-ed2f5934281f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ee3ddad6-1d8e-43c5-8418-5f6f8f4c4d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f1421e-1c08-4f6c-a0a5-6cd564e87a67",
        "cursor": {
          "ref": "3a8055c3-e509-4c8f-80b3-67079d316cd5",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c56bdb4e-6912-41ab-8821-d7863fcb8756"
        },
        "item": {
          "id": "52f1421e-1c08-4f6c-a0a5-6cd564e87a67",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "abaa765b-303a-4504-8a9b-7fb79eaf65d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bfddb9-d89c-4b40-a93a-bdd6934b57be",
        "cursor": {
          "ref": "5ce716ac-bbac-4ba1-b014-46f516cc8964",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b62d082b-550b-4043-a621-65e981712953"
        },
        "item": {
          "id": "60bfddb9-d89c-4b40-a93a-bdd6934b57be",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0a8966be-5fb8-4b8c-92af-5c3d17e7d1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426506f2-bba8-408b-bca3-206dd42abb59",
        "cursor": {
          "ref": "979c88de-474e-49a5-b2e8-7fc23b381103",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "38fef1d7-c888-4afc-a2aa-3fb4f7119a94"
        },
        "item": {
          "id": "426506f2-bba8-408b-bca3-206dd42abb59",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "24439fa8-f74a-4efb-a390-ffc95c10a448",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9409f1-f098-47c7-a57e-e59ad85f7932",
        "cursor": {
          "ref": "d867be78-c046-407d-8909-030170275ae3",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ae49fe18-a467-46d8-9067-b970c6f2cad6"
        },
        "item": {
          "id": "3d9409f1-f098-47c7-a57e-e59ad85f7932",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "f463d2fd-091f-4a58-929a-bb9a300dab1d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 768,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66871df2-7548-4610-a515-95d84ed826f2",
        "cursor": {
          "ref": "9c18c049-6852-4d5c-90a3-9d3ed747d963",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7f5e837a-d179-4506-85be-3772211be5c9"
        },
        "item": {
          "id": "66871df2-7548-4610-a515-95d84ed826f2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7a7ff2f7-dab1-4630-bb17-95f2532c52fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66871df2-7548-4610-a515-95d84ed826f2",
        "cursor": {
          "ref": "9c18c049-6852-4d5c-90a3-9d3ed747d963",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7f5e837a-d179-4506-85be-3772211be5c9"
        },
        "item": {
          "id": "66871df2-7548-4610-a515-95d84ed826f2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7a7ff2f7-dab1-4630-bb17-95f2532c52fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09445ff2-a871-4519-add7-089f767cb130",
        "cursor": {
          "ref": "3bbafdff-47a9-4984-8f6c-959ef0b23f43",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b7c0671f-40b0-4dcd-a1cf-b142fb17bed4"
        },
        "item": {
          "id": "09445ff2-a871-4519-add7-089f767cb130",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8f042237-4136-48d2-95f1-578a5a5229f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1214,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf15040-a860-4d1f-8375-f8fe3abd2339",
        "cursor": {
          "ref": "2b113ffd-2c21-48ac-b282-2b23f672743f",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "63776d78-7454-4b94-9b98-397142bd27b0"
        },
        "item": {
          "id": "bcf15040-a860-4d1f-8375-f8fe3abd2339",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "61315f60-e0df-4cdb-a837-8411c883e9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1075,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9243990-8292-43dd-8a40-ad4d0d51f831",
        "cursor": {
          "ref": "2bb5618f-2027-4248-81d9-26e309d3c587",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c357c63f-5092-43ec-8d14-abd525c6d543"
        },
        "item": {
          "id": "b9243990-8292-43dd-8a40-ad4d0d51f831",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "81588a97-958d-4508-9f38-5a9cd1941d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1143,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53186170-5b05-426c-9b9f-34efdb4f5e8f",
        "cursor": {
          "ref": "9daa56ee-ee22-4201-a684-fa7df14913a8",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "25eed167-17a0-4b0e-814e-c51670dbe6b1"
        },
        "item": {
          "id": "53186170-5b05-426c-9b9f-34efdb4f5e8f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "21431978-4ce8-4c10-b37a-dcdf044de2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1010,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ad04ca-0ba5-4680-a133-e8ce10b9a1aa",
        "cursor": {
          "ref": "637e3ddb-9500-48fb-9aba-22b769fbe505",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "26c43e47-e995-4e38-a8d8-48ecbc0527d6"
        },
        "item": {
          "id": "02ad04ca-0ba5-4680-a133-e8ce10b9a1aa",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cf170327-cc4d-4140-91e1-2c4b9cab25bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8a07fc-f884-441d-a0a1-6ff70bca379d",
        "cursor": {
          "ref": "a7a33a8d-68b1-4de0-a999-d8beb6d8554e",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b260aeab-625c-4e2f-992e-588db28f761f"
        },
        "item": {
          "id": "ac8a07fc-f884-441d-a0a1-6ff70bca379d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "93e09385-5774-4454-8773-3cda2cb27642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0079a66d-59f2-4948-b02b-552d287c6261",
        "cursor": {
          "ref": "316758ef-c429-468c-9ec3-792a7a4643cc",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "60001faf-606f-4d56-b0e1-e909e7c50539"
        },
        "item": {
          "id": "0079a66d-59f2-4948-b02b-552d287c6261",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "25c5912b-6263-46a2-86b5-61a023967552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9bed51-c32f-4b21-a28c-4dfc4f2ccc08",
        "cursor": {
          "ref": "599ac336-2cde-4c20-af86-1114d5b1d1ab",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e67bf532-4c09-4ad0-a097-1b40bc80f2e9"
        },
        "item": {
          "id": "7c9bed51-c32f-4b21-a28c-4dfc4f2ccc08",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c5cf28ed-661a-4274-8d30-986e3a0c3d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d07ed6b-9c7b-4fb6-b1b9-a9d6922afdb9",
        "cursor": {
          "ref": "b7179bb9-5aa6-4d10-be42-dc134333a434",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8b42e91f-adf3-4a0c-a641-83faa809ae38"
        },
        "item": {
          "id": "1d07ed6b-9c7b-4fb6-b1b9-a9d6922afdb9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "025a6486-5123-40e1-8ff3-ef9ad0ed4649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9a436d-059b-40bd-8229-cd134f4bc724",
        "cursor": {
          "ref": "117d7e71-1f3a-41ae-a99b-a45d7f338d16",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2f683682-f09f-4b88-94ef-e0bc17779655"
        },
        "item": {
          "id": "3c9a436d-059b-40bd-8229-cd134f4bc724",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a6919215-c1e3-4ea0-8594-d05fd1225128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7605552-cf5b-4ff7-a5a5-72e5edfd4296",
        "cursor": {
          "ref": "c1fbd004-71e3-4028-8f82-5f98871f6879",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "eb3d8c8c-d3a5-4308-88f0-492be6ac3efc"
        },
        "item": {
          "id": "a7605552-cf5b-4ff7-a5a5-72e5edfd4296",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9b3e678d-9e79-4747-8270-d23121038758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ed2322-2647-4b17-af56-be07bbebbd0c",
        "cursor": {
          "ref": "5cd0a393-bee6-40e5-afda-4fbb62c95d2f",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0219e3a0-6b58-4fe3-9b3d-c581c0cc908f"
        },
        "item": {
          "id": "c8ed2322-2647-4b17-af56-be07bbebbd0c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "891ad6ab-4ada-48c3-8d26-bc3948cb4e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac57e6ef-cce7-4750-9c1d-fde4a1c54f08",
        "cursor": {
          "ref": "0582174b-7b2e-4521-ba02-acc3a06c51ce",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d7632c8f-9e6f-4440-9d0d-c10f9460d703"
        },
        "item": {
          "id": "ac57e6ef-cce7-4750-9c1d-fde4a1c54f08",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "35188887-fbf6-4887-8a14-965aa595580b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc449f7-ab03-4ea0-b2cb-954902d56c57",
        "cursor": {
          "ref": "109be83e-ca73-450a-b70f-00b151419d22",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "064950e3-8bcc-4864-a41a-df933aa01e14"
        },
        "item": {
          "id": "dbc449f7-ab03-4ea0-b2cb-954902d56c57",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c61b8b04-6fb8-48c2-88e1-734291e224cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec642d2-8332-4641-8a11-e922a7dfc24a",
        "cursor": {
          "ref": "d7e8a867-548e-4c49-9700-f3c650b41b6b",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a2f4f774-05a5-48b3-8906-008be7e60637"
        },
        "item": {
          "id": "0ec642d2-8332-4641-8a11-e922a7dfc24a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eb93df61-25c1-4216-8635-8b6b5e9dee0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbd50fb-3a75-4185-a3f3-e3cfecc562af",
        "cursor": {
          "ref": "82a8cd51-4543-446b-8369-727fef955abb",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "53189647-ffd4-43c8-8a2b-f9a45390c9c6"
        },
        "item": {
          "id": "5cbd50fb-3a75-4185-a3f3-e3cfecc562af",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "163cabdf-406f-451a-8f48-e36294358d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94c2061-b3b1-468e-8954-51bff3cdfa1e",
        "cursor": {
          "ref": "9df3127f-d1b3-47a5-8746-7d50ed992466",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d7c8c455-3efe-4513-abec-96ac2872c24b"
        },
        "item": {
          "id": "a94c2061-b3b1-468e-8954-51bff3cdfa1e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4f1af601-8c28-4c6e-bc93-5d7a9c3ffeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9348b126-9e8d-49c1-a092-cc5e7d5128d3",
        "cursor": {
          "ref": "6af433c8-9c0b-4b7b-842f-aa9ea1dff7f3",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6d427a54-4d50-4a22-8a35-cedcb7bdec0c"
        },
        "item": {
          "id": "9348b126-9e8d-49c1-a092-cc5e7d5128d3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "eb9b5230-d848-426b-b02a-0780af8e1537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0440c1e5-c160-4b76-bce8-9db20ce9ec2e",
        "cursor": {
          "ref": "3f56117b-69a9-44f2-950f-4f43e54bf615",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3424dc52-f4b9-4cb1-8114-1017189ba00d"
        },
        "item": {
          "id": "0440c1e5-c160-4b76-bce8-9db20ce9ec2e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "296ce9cb-a13e-46e9-8648-60e045b92f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1595ef4b-5fb5-485e-a46e-cf3ed1b29aa4",
        "cursor": {
          "ref": "335d7ced-c84b-4c91-baff-0adf87fb4d9c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "65d53c8a-b5b5-451b-ad86-ed1a7b28cccd"
        },
        "item": {
          "id": "1595ef4b-5fb5-485e-a46e-cf3ed1b29aa4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "35695356-775f-4e26-a0ff-0cf00251e26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa55721-de60-4bf3-9854-530adad4faf0",
        "cursor": {
          "ref": "7badce21-1b68-4b09-9db0-989e91daf75e",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "73224cfe-699e-403c-b3c5-357eb110d7c0"
        },
        "item": {
          "id": "daa55721-de60-4bf3-9854-530adad4faf0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c3bfae46-ebc8-4634-94eb-1c02e38a93fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd5a5be-10dc-46b1-b302-e79b7a6a74f4",
        "cursor": {
          "ref": "29b03f13-38fc-4585-a522-0fa2d965df8f",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c5b4cca0-b1e2-489d-b8eb-684b1496c377"
        },
        "item": {
          "id": "3cd5a5be-10dc-46b1-b302-e79b7a6a74f4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6db6c054-a88f-46af-856e-ae94e1103a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e67475-300c-475b-882f-63ffa2d807ef",
        "cursor": {
          "ref": "a9b364f8-0e79-4de1-8976-acc8324ec8d9",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "82b9fe78-874e-4faf-ad52-22c32932d164"
        },
        "item": {
          "id": "49e67475-300c-475b-882f-63ffa2d807ef",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "836141fe-dc75-4cda-bd1b-abf0bc798a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aea64ef-14fa-458d-9520-c4538cc0cf25",
        "cursor": {
          "ref": "25df68fd-6b7e-4bf5-bc7f-6fbb5d176131",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e64130a9-179d-42a3-9160-174d99403595"
        },
        "item": {
          "id": "0aea64ef-14fa-458d-9520-c4538cc0cf25",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e8d8eb65-e7e4-4705-ba2a-ee9f3cf7d28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819fd7d4-69de-4729-abed-f8268b6fa003",
        "cursor": {
          "ref": "c336b372-7d66-429a-acc5-580731b08828",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4f433603-229a-44dc-9988-d677ef5e4e45"
        },
        "item": {
          "id": "819fd7d4-69de-4729-abed-f8268b6fa003",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ee190473-dc84-48b8-8570-225be2d6ba2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1ef967-400c-4ca2-b9ea-bafa918801f6",
        "cursor": {
          "ref": "11fb0d81-c512-4acd-986d-bafd66be9ea4",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "32a6eadd-1727-4172-8819-ed3441f5b3f4"
        },
        "item": {
          "id": "bc1ef967-400c-4ca2-b9ea-bafa918801f6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6afc6da3-b3fc-4f60-a749-b782707b49c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70279cf7-3f19-4a82-b254-9e5737ca1225",
        "cursor": {
          "ref": "840b793f-d96f-4be2-b949-1f6248ce83a0",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f93b920d-366e-40ab-a6f9-c10d5a045098"
        },
        "item": {
          "id": "70279cf7-3f19-4a82-b254-9e5737ca1225",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "521bd14f-f7d5-4645-a1e5-e201abe620b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0beb27-74ca-4cb7-9072-830389de691c",
        "cursor": {
          "ref": "0df60ceb-6cf1-4a28-8b56-11f1729b0ea9",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ca879c00-c8bc-424d-87a7-773469c79845"
        },
        "item": {
          "id": "1a0beb27-74ca-4cb7-9072-830389de691c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e6508624-6786-4836-a293-8590de04fdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4ee4f4-6c77-426c-aa58-63bd8bc03b5a",
        "cursor": {
          "ref": "c74ceab1-597a-4807-acea-ebffadd8e210",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9596b56e-da20-460e-af59-120d8fd95401"
        },
        "item": {
          "id": "db4ee4f4-6c77-426c-aa58-63bd8bc03b5a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "894133a1-a604-4135-b9e2-d5c777be6ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dee6589-2615-4c9e-b6f5-499ad8cf1f13",
        "cursor": {
          "ref": "4e1d50cb-78c4-449a-a9a8-2499d9c00818",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bd4f1e94-2970-43a7-bc8e-a06247f321ed"
        },
        "item": {
          "id": "6dee6589-2615-4c9e-b6f5-499ad8cf1f13",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "93edb6e0-6638-4d8a-8c22-16a3a47aac53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1105,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b477c7-0cf8-4d5a-afe3-a9137ba0cf63",
        "cursor": {
          "ref": "478d7af1-89b1-4160-98ed-3d450b50d1a4",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5983b8ee-560c-4494-bd7e-995b47a6b6f4"
        },
        "item": {
          "id": "70b477c7-0cf8-4d5a-afe3-a9137ba0cf63",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b1ef1cd3-713a-4279-a0df-22984131666f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1102,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c1bd6d-e7af-4e78-8141-27b5f89e1096",
        "cursor": {
          "ref": "182b4d87-5471-49d5-80aa-3b0b1c506a47",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4388989c-64d1-419d-ba22-405b2bf7e65a"
        },
        "item": {
          "id": "40c1bd6d-e7af-4e78-8141-27b5f89e1096",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3fdf0e09-80ff-4b7f-aae1-95018a04c4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1312,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bc9c7f-687a-4ed2-a61f-ba0c87129293",
        "cursor": {
          "ref": "2435f6e2-6fa0-4a41-899b-5128fd709bd8",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bbdf60d0-5b50-402e-8749-59baa66f58b4"
        },
        "item": {
          "id": "b1bc9c7f-687a-4ed2-a61f-ba0c87129293",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "346d0e8b-2a91-4292-b1cf-4bfa0a57f795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 888,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e9ab1e-234a-489a-a075-f82a48aa08c1",
        "cursor": {
          "ref": "cdcfd8d6-2283-459e-b9aa-6e2cb1472678",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b4358a56-f761-4562-8429-5731698a5cdf"
        },
        "item": {
          "id": "b2e9ab1e-234a-489a-a075-f82a48aa08c1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "20071499-b8d5-4699-89f2-3ada610e2944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbd5a92-ee89-4e55-b5c5-abd213d05c83",
        "cursor": {
          "ref": "9509ba02-81ba-4451-90db-f2f6345aa113",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "285453ec-aec9-4979-ba52-9885388e1ee4"
        },
        "item": {
          "id": "1bbd5a92-ee89-4e55-b5c5-abd213d05c83",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "541db965-506d-4772-90af-7f077126b410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88377825-abcd-4d41-ba67-20094dd008d4",
        "cursor": {
          "ref": "36ae344c-403f-419e-b6f4-0b2077a643fc",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7b8e1a3e-e787-4867-95b1-ae7210572990"
        },
        "item": {
          "id": "88377825-abcd-4d41-ba67-20094dd008d4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2e441329-0f4e-4ccb-b452-8d2fe24cd2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15de0428-43b1-461a-9780-d151274b8303",
        "cursor": {
          "ref": "cd2a30e1-067f-4da3-accc-3b4a8626ba50",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9d1080d4-5f22-4078-884e-f514fff081d2"
        },
        "item": {
          "id": "15de0428-43b1-461a-9780-d151274b8303",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a65c1cda-8d36-4163-ac43-8075b550fc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c97a07-e9d1-4df4-82f0-657679f2f8ae",
        "cursor": {
          "ref": "614ee816-6d8b-4700-ba6f-89207ffe63b4",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b4a4d85b-6257-4380-9af1-0d03c5ac7b77"
        },
        "item": {
          "id": "36c97a07-e9d1-4df4-82f0-657679f2f8ae",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0ce43c03-832a-4fba-a587-347263294328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d4787a-5ea5-4b99-81d7-8645ea357564",
        "cursor": {
          "ref": "6d61bb81-32eb-426d-8122-4ca2af421546",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0bf6e863-7855-4c9a-8d6a-136c5863aebd"
        },
        "item": {
          "id": "00d4787a-5ea5-4b99-81d7-8645ea357564",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8e0d808c-88fd-4fab-abcc-a779a117046f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d281ea36-030b-4e33-8607-45e994b04807",
        "cursor": {
          "ref": "1b7d1596-842a-4557-94fe-8128626b16a2",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9d3a2066-9748-4d43-bcf5-79affc0c8f42"
        },
        "item": {
          "id": "d281ea36-030b-4e33-8607-45e994b04807",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "337114f4-50d2-4b4a-8be9-fc53282888ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70732e74-4953-421d-a3c6-af9c05edb606",
        "cursor": {
          "ref": "e4d038fa-3459-4389-bf12-edeab2e01bfb",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5f5dd2d4-08bb-41f2-b605-ee9f4bfbe2de"
        },
        "item": {
          "id": "70732e74-4953-421d-a3c6-af9c05edb606",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2f3ef5c1-5cd6-4dbf-8b72-bf88e0daaae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb780d9-a052-4ca9-bb7a-5fd96a31e631",
        "cursor": {
          "ref": "13895452-0ffa-4b4f-bf0f-7b8751b5ce82",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "309daa46-311a-4f1c-bc42-abbbe9ccec86"
        },
        "item": {
          "id": "2eb780d9-a052-4ca9-bb7a-5fd96a31e631",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ad85dd86-8640-4e84-b960-a290ff20b841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5186e6-87df-4c2c-a34c-70ecafd30612",
        "cursor": {
          "ref": "f2176567-2a50-421f-8560-b19e4a100c77",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dface5df-6083-4064-b832-f7e246c91efa"
        },
        "item": {
          "id": "df5186e6-87df-4c2c-a34c-70ecafd30612",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "99183d21-0117-4c07-9042-e5127219482e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae774b2-17d6-4841-a70d-385894233892",
        "cursor": {
          "ref": "1e40bf2c-e638-4061-84b2-310c235a08a6",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ae63f0f4-a2f9-4415-9fd3-480a361add85"
        },
        "item": {
          "id": "aae774b2-17d6-4841-a70d-385894233892",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6023a48c-b26e-43ac-8eec-ffc23dc302b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3b324a-3eb6-40d5-ae9b-3e6d50249527",
        "cursor": {
          "ref": "94085814-4f51-4d98-9cc3-a582b94b37a9",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "29f50950-eb4f-4cce-80f8-aaaf63ce38c7"
        },
        "item": {
          "id": "3e3b324a-3eb6-40d5-ae9b-3e6d50249527",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6d4ce2e0-dd5e-4312-ab8e-444629d7ef95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056b4fa0-a1bd-48c2-bcda-872917e616a2",
        "cursor": {
          "ref": "0ff3d635-62ca-489e-b46a-36febd445359",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0eb29d4b-99f7-4923-b134-34b973d062e4"
        },
        "item": {
          "id": "056b4fa0-a1bd-48c2-bcda-872917e616a2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0fcc87e7-31b6-42b3-8e79-eed81c5c41eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6642f81-2631-479b-9785-f65a79eb891f",
        "cursor": {
          "ref": "cfeacd58-80ce-49d2-8e76-c65fe5503632",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "282980d5-c753-4399-9c4c-8a56cfdca29d"
        },
        "item": {
          "id": "f6642f81-2631-479b-9785-f65a79eb891f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4f524fd2-10f9-43a4-938c-c67fa29494ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f825fe43-282d-40c9-a802-ead0e0749aaa",
        "cursor": {
          "ref": "2be0be6b-d064-4715-93e0-40e241b6d8f9",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3c0c8ae5-d6da-4075-9409-51409445a1e5"
        },
        "item": {
          "id": "f825fe43-282d-40c9-a802-ead0e0749aaa",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c2cbf12d-8fdb-4fea-ac44-924671a0fcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d519374a-baf9-4017-8099-358892757d8e",
        "cursor": {
          "ref": "355c046a-cbbe-42f8-b80a-c160ce1decb8",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "83f9fd7d-0624-4ab2-8341-9ecb1bcf0997"
        },
        "item": {
          "id": "d519374a-baf9-4017-8099-358892757d8e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "361e94fa-262b-4af7-a3f3-4aaeb0576773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d0f5e8-82bd-4cbc-99a6-c7d56d441bd4",
        "cursor": {
          "ref": "502a0597-81d9-4e13-a960-89487b2e484c",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "76d2ecfe-1c0e-425f-a3a6-5b551e59a982"
        },
        "item": {
          "id": "79d0f5e8-82bd-4cbc-99a6-c7d56d441bd4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6e7f18c3-dc54-4878-96f3-c3c603e7ebb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85afe7a-c6bc-43dc-9d91-07475396c498",
        "cursor": {
          "ref": "bfdb8d8c-7eda-439d-adea-659fdcfc688b",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7a8081e5-8939-40e6-83fb-802e9ce6af74"
        },
        "item": {
          "id": "a85afe7a-c6bc-43dc-9d91-07475396c498",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f72ce022-30c4-4472-91cf-151e489d20b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f1fa0a-5a11-4482-a6c4-a5048876618d",
        "cursor": {
          "ref": "e8593fd3-b343-4484-ab8b-8a6b50de8986",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "351c3a8f-9bc5-4586-831d-2cfa97892ad2"
        },
        "item": {
          "id": "90f1fa0a-5a11-4482-a6c4-a5048876618d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "59d512f0-ff0e-412d-8ac0-6d3dbac66a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4346d246-680b-4728-8b4e-8ef1e94b804e",
        "cursor": {
          "ref": "6884dc6f-0af9-4246-b9d5-abdc90978032",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1ddc9171-5a74-4396-a533-c645d301d425"
        },
        "item": {
          "id": "4346d246-680b-4728-8b4e-8ef1e94b804e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d967708d-6530-47ec-947e-770a9f50992c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4008ab33-09a7-4eba-a852-cbef4303d61c",
        "cursor": {
          "ref": "8e854773-c5f6-43cb-821f-a5bdce80c770",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "20ea41d9-f57e-4cf6-a91b-5fc16338a149"
        },
        "item": {
          "id": "4008ab33-09a7-4eba-a852-cbef4303d61c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "724fc338-56c1-4e5a-90cd-5729f35fef49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb324f1-5bcd-4d83-b0db-c0000ba78e12",
        "cursor": {
          "ref": "3e28b94f-28c0-4880-96ca-684843de36f6",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "29e61cde-31d8-49b4-89c2-90ba8f68535c"
        },
        "item": {
          "id": "eeb324f1-5bcd-4d83-b0db-c0000ba78e12",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3e4f9b18-7995-4172-85e0-eb0073c571db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1025,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58be53e8-9de8-4496-818b-585263ed179d",
        "cursor": {
          "ref": "55c86743-c872-44ef-9948-ec1b54b6bd8a",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e432573d-2488-496d-9ad1-cbc42c66cb07"
        },
        "item": {
          "id": "58be53e8-9de8-4496-818b-585263ed179d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5b38a7c8-1409-4055-91a5-5292aabe51ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1111,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1adca9-0b61-49b9-bc39-9a1fa365268b",
        "cursor": {
          "ref": "cce71248-72c6-4c8d-8479-608e63356069",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d5cfac0f-d4ae-4e5b-96bf-199dd5a0ee5d"
        },
        "item": {
          "id": "ff1adca9-0b61-49b9-bc39-9a1fa365268b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ee76de05-ec6b-4e8d-8f2c-3344a2bc80ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 956,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363ca2bd-54ae-40a7-8a01-eaa24bdc5572",
        "cursor": {
          "ref": "e1a80b26-b771-4a53-8810-abc71b0ff48f",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "47b76cb0-1761-4841-984d-560a7391d49d"
        },
        "item": {
          "id": "363ca2bd-54ae-40a7-8a01-eaa24bdc5572",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "eca36535-595d-490f-92c4-dea065e1dc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1209,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2083eb9-2852-483b-b37a-3f241c6883c9",
        "cursor": {
          "ref": "b38a02df-2ca7-48d9-8704-68a7f19d2d25",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "51842127-0479-4973-b4b2-a3bf5c84296c"
        },
        "item": {
          "id": "e2083eb9-2852-483b-b37a-3f241c6883c9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "67e1e161-e7d3-47d9-bd3c-952bce0e217f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 892,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e802a441-c8f0-41e3-9605-d59c54a37b12",
        "cursor": {
          "ref": "b00bc357-205d-4e18-9cfe-844d13988e47",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b84e5a81-0804-43b6-ab36-043c5b3ad93a"
        },
        "item": {
          "id": "e802a441-c8f0-41e3-9605-d59c54a37b12",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "977f8beb-e301-493e-9adb-53b4c37cdeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1173,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116d770d-515e-4054-8ae9-7b5f32f9035c",
        "cursor": {
          "ref": "0310dcbc-2655-4099-a384-0b493e8a52b3",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "66bf6fca-4b00-4546-b2f7-5ba1c288727f"
        },
        "item": {
          "id": "116d770d-515e-4054-8ae9-7b5f32f9035c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "124ec204-7822-4b59-a9e4-bced489d8928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1071,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772c12d3-5021-42db-86de-abeeddca3d92",
        "cursor": {
          "ref": "3f1ed251-7fd1-434d-8a29-c08f19d320a6",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "432b5b49-16f1-4f8b-9543-fdc06f5f4a4f"
        },
        "item": {
          "id": "772c12d3-5021-42db-86de-abeeddca3d92",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a819843f-c2cd-4a85-b2c6-7bac35b2877c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1285,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f07569-75ff-499f-8883-1215241a7848",
        "cursor": {
          "ref": "c9a49526-4069-4e01-817d-c0447e59da29",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "aaaea9a8-7a30-4fc8-860e-19d98223aeea"
        },
        "item": {
          "id": "49f07569-75ff-499f-8883-1215241a7848",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2e31cb64-b0c9-4046-b68b-39340f55cce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89a4f90-afc0-48e7-988c-74092c341340",
        "cursor": {
          "ref": "f9d7a8c3-5d11-4e44-aeeb-10bf9aa920f5",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4b15665c-270f-498b-bb67-e23d67aa258e"
        },
        "item": {
          "id": "a89a4f90-afc0-48e7-988c-74092c341340",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "452ba3d4-c5bc-4a96-898b-222fdbbda4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a0982f-888b-49ad-97c4-118726c15fd8",
        "cursor": {
          "ref": "c2da61bb-6d2b-41c8-b7a2-92ba7a62ccb0",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5adfbb05-8207-4ea2-bc51-7a8dfe9f7a0b"
        },
        "item": {
          "id": "34a0982f-888b-49ad-97c4-118726c15fd8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "762aaed0-ffca-44a5-9a51-c934c2cc2544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f546081-74ef-45fc-a925-f89b5d9644f9",
        "cursor": {
          "ref": "07e16512-7839-411d-bfc9-4067286ef824",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "83760729-af14-4dd3-beeb-1e6136d85ab0"
        },
        "item": {
          "id": "2f546081-74ef-45fc-a925-f89b5d9644f9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cc924ee5-2636-467a-ab8d-6df7b67fb526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e516cbc8-4442-47b4-972e-8347a484160c",
        "cursor": {
          "ref": "bf5b02f8-69c9-448b-a694-dfdb53943a52",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c0ce6207-3bb1-4a4d-80ac-b6c1e994b2f7"
        },
        "item": {
          "id": "e516cbc8-4442-47b4-972e-8347a484160c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5fa898f0-d033-4864-8dc0-098f1d438dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2c7e2d-1fd1-4b2d-9a75-a400760b48d8",
        "cursor": {
          "ref": "37726879-beb3-4cd0-9d39-4c39ae543015",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "591dde79-5361-4808-aa3c-7b6d43e3fb04"
        },
        "item": {
          "id": "fa2c7e2d-1fd1-4b2d-9a75-a400760b48d8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "efd7cc92-1fc0-4848-9dc3-2037957055f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1047,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9955ba0-6933-48ab-9e70-64659948b413",
        "cursor": {
          "ref": "b2e147d9-45ba-4269-bcd3-89f79d6c0dd4",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7678a522-40ed-4542-b98e-eb56b83fd0e3"
        },
        "item": {
          "id": "e9955ba0-6933-48ab-9e70-64659948b413",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c7c17f36-d6ae-4f7f-a2bf-2e57f349be2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 958,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5fa59e-2d29-40ed-b295-1217adcdd79e",
        "cursor": {
          "ref": "6ad512b9-c402-428d-81c2-3d775def911c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a07db59b-29f0-4d22-a637-2f7439affadf"
        },
        "item": {
          "id": "bd5fa59e-2d29-40ed-b295-1217adcdd79e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c45a1bbd-2c93-4aa1-ade7-2252a4bb8b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1033,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cc6936-6dc5-4634-9cf4-c83fc73bb7fc",
        "cursor": {
          "ref": "a090fe46-a244-4df3-bf27-19701eb90dd7",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "263df78d-e061-4567-a317-e71bf3f72ddb"
        },
        "item": {
          "id": "32cc6936-6dc5-4634-9cf4-c83fc73bb7fc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a58f51dc-6c42-444b-9504-73f7a73bbfed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1086,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406b2bbe-c701-439c-af8e-7eef3db730cc",
        "cursor": {
          "ref": "25b282ee-7bcf-42d7-81e1-eaca2ca5b4f6",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d2b36b6a-1e62-41e4-9422-d7ed54bb1494"
        },
        "item": {
          "id": "406b2bbe-c701-439c-af8e-7eef3db730cc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c1dc08f1-f3a4-4000-b88b-664fb35c9b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 969,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5c9cab-feaf-45df-9d42-2a8b3d7c11be",
        "cursor": {
          "ref": "cc8c2aca-c9e8-482a-876e-fb9814b9aff4",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8741c17a-f47a-46e4-8864-5a158aa2b419"
        },
        "item": {
          "id": "2a5c9cab-feaf-45df-9d42-2a8b3d7c11be",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5244abf1-7d82-42ac-b6c9-4f43190a6870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0df82fb-84b9-464a-9165-f7c97cc5174d",
        "cursor": {
          "ref": "cd55c42f-ae52-4316-98af-060fb44fd344",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "567a0a8b-5af2-4f8f-9554-c93e39205fcb"
        },
        "item": {
          "id": "c0df82fb-84b9-464a-9165-f7c97cc5174d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4083e1f9-1d1c-40e4-9dcf-608408aa2b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1444953-99a8-485d-b10f-92212d05fd77",
        "cursor": {
          "ref": "88837106-cfa5-41ec-bbdd-711f8b5ece76",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c2cc504e-4742-4551-92ee-e559d6b86643"
        },
        "item": {
          "id": "f1444953-99a8-485d-b10f-92212d05fd77",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c97fef53-6726-4a0b-880d-844a2725a433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7303eb8-259e-44fa-b36b-3a04fc9bd35d",
        "cursor": {
          "ref": "c5d5e764-3574-49c8-ac81-f1f3b5b06fca",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cc9207c5-567a-4b52-bbea-1719c4629580"
        },
        "item": {
          "id": "a7303eb8-259e-44fa-b36b-3a04fc9bd35d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1c7299ad-1bc8-499f-b3bb-5d8828fac310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c58637-3f9f-4f86-8569-d52fad7d9723",
        "cursor": {
          "ref": "2bfd9d00-820f-48c5-8e46-34a93f1132cb",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d608c31d-d5ee-4aa3-8fd7-7faa375379f7"
        },
        "item": {
          "id": "68c58637-3f9f-4f86-8569-d52fad7d9723",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0697fa65-5b6b-4541-a395-b34482e6fe59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31f2f83-7c86-4814-8cdd-6d7f2d1215d5",
        "cursor": {
          "ref": "7ea2aed6-458e-4980-9a5f-6370c8017557",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f31af707-eeaf-4e8a-b9ed-57f6edfc1b64"
        },
        "item": {
          "id": "d31f2f83-7c86-4814-8cdd-6d7f2d1215d5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1225f5d3-879d-4dd8-ade3-faaeb8ccbdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0a0a13-c2e2-4b37-899d-1c539c1b6262",
        "cursor": {
          "ref": "24e1bccc-e778-4f60-817c-fa769d9d58c5",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e5976206-b296-4359-b4d2-c88aa78736be"
        },
        "item": {
          "id": "5f0a0a13-c2e2-4b37-899d-1c539c1b6262",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2a1173d6-c76a-411b-b50e-4e273d444519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4d7b39-bb65-4efe-950c-54b1746584f6",
        "cursor": {
          "ref": "920f9a5a-6fc3-4c02-9345-80d706cfc822",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b7555533-0311-4f5a-8a53-3598c769e8b5"
        },
        "item": {
          "id": "1f4d7b39-bb65-4efe-950c-54b1746584f6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f97e46f9-278c-4a10-8dd7-55c24d7069d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4a052a-b4fb-41da-a413-932b7b4b9110",
        "cursor": {
          "ref": "18604088-a2bc-497e-a332-5eff1363c33d",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "de9a571b-0725-4448-b5f9-8c599be26b08"
        },
        "item": {
          "id": "ed4a052a-b4fb-41da-a413-932b7b4b9110",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9de1bba4-77bc-455b-bf9f-f9fae0f6a479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b38375f-5ae4-407d-8e90-bcc0a6fad7da",
        "cursor": {
          "ref": "f4ea921e-34ee-4b34-83ee-96ac4d7344aa",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8eb2e0ad-3244-4016-a5bf-c22aa5144b7f"
        },
        "item": {
          "id": "5b38375f-5ae4-407d-8e90-bcc0a6fad7da",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "be741f4e-fac2-4a94-b9b6-ee8b4b9f6b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33c3f1b-9808-4c5a-abd5-006fb9276b84",
        "cursor": {
          "ref": "8cfa4590-2c84-4bb4-80f3-4130157c093b",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "684b6690-dd29-4faa-804e-3c16861646bd"
        },
        "item": {
          "id": "e33c3f1b-9808-4c5a-abd5-006fb9276b84",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "871c9730-9680-465b-9afa-837fc99f298e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47da430-8b81-4706-b7cf-9b66fb8b05f2",
        "cursor": {
          "ref": "6dc50f06-4218-41e2-82f5-6addefa7edb7",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "72e880b1-578d-473c-98d3-8fd2ebd7d275"
        },
        "item": {
          "id": "e47da430-8b81-4706-b7cf-9b66fb8b05f2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "eb93528d-8f25-440d-89d4-993f2ccf0ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6e39c1-f5ce-4b68-82e3-0af938f57b3d",
        "cursor": {
          "ref": "681690ae-9b13-4c4d-ac42-2be4f7af8d39",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "520a8b43-314e-4047-af78-3aad0d3c1abe"
        },
        "item": {
          "id": "6b6e39c1-f5ce-4b68-82e3-0af938f57b3d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c3d5ffa4-1ac1-4af9-ab05-8f469f470dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cc2d43-dfa0-4e72-bdba-cb7bc66ce8fd",
        "cursor": {
          "ref": "d3bed78e-2c96-4250-a276-3149bcd46455",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4df1e63b-dffb-4cd1-b6ba-c304e038a114"
        },
        "item": {
          "id": "d4cc2d43-dfa0-4e72-bdba-cb7bc66ce8fd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5d0e17b2-067f-452e-a153-f66bfa7f80d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d89b36-7ffc-4714-b519-bd4ce9b2893b",
        "cursor": {
          "ref": "dbd73670-0de4-481f-baef-c9143a7c7561",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6d6b2323-9b80-446f-a8ab-6d7ac7b17e01"
        },
        "item": {
          "id": "c1d89b36-7ffc-4714-b519-bd4ce9b2893b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "271d61d7-dcc4-4ce1-bb32-1295ddfe9f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce59277-e59a-4544-bee7-bd5e888bd8a0",
        "cursor": {
          "ref": "bd30be9a-42bf-4609-a6d6-25d3de62da65",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cd553e2f-fe5d-4859-98a8-68e2554989cf"
        },
        "item": {
          "id": "0ce59277-e59a-4544-bee7-bd5e888bd8a0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f8e873a9-fab2-49e4-9e58-2175d16ccbb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2399cd41-0b1b-4abf-b01a-f1ac973d5768",
        "cursor": {
          "ref": "5211b770-b0eb-4855-8aa6-22aaf039ef13",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cfe32a11-c358-4fb8-8fc9-8794c4a774d5"
        },
        "item": {
          "id": "2399cd41-0b1b-4abf-b01a-f1ac973d5768",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c83dff6b-d547-4426-b222-31d885838504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8aed40-59d1-4200-8bb7-d2dade284b9f",
        "cursor": {
          "ref": "a81898c4-5fd2-47b0-97cc-eb5430d67c98",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6aab7850-f3b5-4bf4-aaf6-bd61d659dcb6"
        },
        "item": {
          "id": "6b8aed40-59d1-4200-8bb7-d2dade284b9f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8556829f-879f-4641-8c60-cfc88ccc60ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e79601-4d1e-443e-a585-af096ada8e96",
        "cursor": {
          "ref": "79b0e203-d606-4eb0-bbb5-522c4d0ad2b0",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "33865128-e493-40c3-a258-8037411da79c"
        },
        "item": {
          "id": "46e79601-4d1e-443e-a585-af096ada8e96",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "15d020e7-d0c7-43f9-923d-cf59791c4339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629f16d1-c329-470f-8459-7533637ced50",
        "cursor": {
          "ref": "5808c930-4f55-448c-baed-2b4b6b259142",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1e856252-ee8f-4d26-868d-e439e4b6e422"
        },
        "item": {
          "id": "629f16d1-c329-470f-8459-7533637ced50",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6a0fca09-fa19-489f-b848-7befc382620f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bd8c50-83c2-4b66-a142-c61277f1c782",
        "cursor": {
          "ref": "c59b2fea-cceb-4484-9af3-2867449f09dd",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cc596682-face-428b-abb3-41cab63bc8cf"
        },
        "item": {
          "id": "f6bd8c50-83c2-4b66-a142-c61277f1c782",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7fb8d186-47cf-4903-b748-5313229f40ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ebfadd-9a7b-4b7f-9ebe-a37724996210",
        "cursor": {
          "ref": "cc60bd09-46c3-4274-a09c-8ec144ab9a91",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4da51578-660c-45f2-b2a1-1c50d17e18d4"
        },
        "item": {
          "id": "d7ebfadd-9a7b-4b7f-9ebe-a37724996210",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1fd8e038-2f6e-4e93-8a20-ac1aed1c8d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4467a674-adda-4cf1-a9c9-6066857a6ff8",
        "cursor": {
          "ref": "04805975-42b2-4f6d-889d-ed94e9a494aa",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "349c0162-def0-4cab-8248-c0156eacad9b"
        },
        "item": {
          "id": "4467a674-adda-4cf1-a9c9-6066857a6ff8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "64e96668-99a2-4af1-90d7-acac4f5c072c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a425f96c-5e05-4f65-b083-bb0800a49d5c",
        "cursor": {
          "ref": "51c9a129-9537-4de3-a3c5-9e7239b05af6",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4a7f7490-5ae3-45d1-8d34-a19b1a37f717"
        },
        "item": {
          "id": "a425f96c-5e05-4f65-b083-bb0800a49d5c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "04f25844-80bc-40c5-8c6e-9d3ccb1550e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b2a1a2-6128-4acf-bc37-7ae3232d9b71",
        "cursor": {
          "ref": "bee40f3f-feef-4f72-b7ec-73eaba1ae777",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "73e1a1e2-0982-4f6d-85e0-77d09740a42b"
        },
        "item": {
          "id": "a0b2a1a2-6128-4acf-bc37-7ae3232d9b71",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5c6a0088-68e7-490d-a9a0-e12500d8d1dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb52015a-99f3-4ca7-97a1-73f964356014",
        "cursor": {
          "ref": "daf36bd5-1d40-40e5-9b39-07fdfb294bbe",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3d59f737-87ad-4d83-992e-1de4cdd99d1e"
        },
        "item": {
          "id": "bb52015a-99f3-4ca7-97a1-73f964356014",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "c7787738-55bb-45d6-8b3e-f34d793c307d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 550,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae2e4a5-8c63-41dd-8b94-3c1a69406096",
        "cursor": {
          "ref": "7a8835c0-f3fa-4120-9ed5-c5f7515ceb91",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "710d2559-ad8f-494e-9a71-c46ea3f3742d"
        },
        "item": {
          "id": "3ae2e4a5-8c63-41dd-8b94-3c1a69406096",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ebb51761-02b0-4408-b65c-f8a08406c433",
          "status": "OK",
          "code": 200,
          "responseTime": 603,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f34fd02-feb6-4ddc-8fad-a1d9df58b209",
        "cursor": {
          "ref": "16e7d622-d4f2-4282-b2d4-158fdac70376",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1fbf69a4-e697-4838-a1ce-9eb336da1ced"
        },
        "item": {
          "id": "5f34fd02-feb6-4ddc-8fad-a1d9df58b209",
          "name": "credentials_verify"
        },
        "response": {
          "id": "194c2dad-2408-43e9-ae9a-f40f75ad3b9d",
          "status": "OK",
          "code": 200,
          "responseTime": 2147,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e874471-76f0-4e1a-9c5c-d13d7663462f",
        "cursor": {
          "ref": "325bc1f6-ca65-4189-a702-2b77ff7d8070",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "05753120-1952-4df0-9d25-9d216d449927"
        },
        "item": {
          "id": "3e874471-76f0-4e1a-9c5c-d13d7663462f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "04c08a76-0732-42d9-b353-e056fb473293",
          "status": "OK",
          "code": 200,
          "responseTime": 2803,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b17526-d489-4ed1-820e-aa083a36fbf5",
        "cursor": {
          "ref": "f5c43b64-63f2-4d42-9c1b-47e93dee3d76",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f6e79a53-a23a-487b-ae2d-d8d9f36d4aff"
        },
        "item": {
          "id": "99b17526-d489-4ed1-820e-aa083a36fbf5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ac68a98a-bc02-4e16-8ce8-6a819492ab15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b17526-d489-4ed1-820e-aa083a36fbf5",
        "cursor": {
          "ref": "f5c43b64-63f2-4d42-9c1b-47e93dee3d76",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f6e79a53-a23a-487b-ae2d-d8d9f36d4aff"
        },
        "item": {
          "id": "99b17526-d489-4ed1-820e-aa083a36fbf5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ac68a98a-bc02-4e16-8ce8-6a819492ab15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b17526-d489-4ed1-820e-aa083a36fbf5",
        "cursor": {
          "ref": "f5c43b64-63f2-4d42-9c1b-47e93dee3d76",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f6e79a53-a23a-487b-ae2d-d8d9f36d4aff"
        },
        "item": {
          "id": "99b17526-d489-4ed1-820e-aa083a36fbf5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ac68a98a-bc02-4e16-8ce8-6a819492ab15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb8682c-77f4-466e-bdc8-f310a30be334",
        "cursor": {
          "ref": "87639b93-037a-4fc5-b292-4571debac393",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cd0603b0-6e57-45e5-9e33-06a0c56c0d62"
        },
        "item": {
          "id": "fcb8682c-77f4-466e-bdc8-f310a30be334",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c1f1f3a6-8487-4a1f-a208-788099406cfb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 570,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c99c45b-5b11-48d3-82c9-72478b009e70",
        "cursor": {
          "ref": "a507905b-bebb-4fc6-8525-6313d3aa5ebd",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cfbd3c00-0c19-404d-9de9-a1aec85f4db8"
        },
        "item": {
          "id": "3c99c45b-5b11-48d3-82c9-72478b009e70",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2dbcf468-adbf-4285-b5e6-ef11e321b77e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c99c45b-5b11-48d3-82c9-72478b009e70",
        "cursor": {
          "ref": "a507905b-bebb-4fc6-8525-6313d3aa5ebd",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cfbd3c00-0c19-404d-9de9-a1aec85f4db8"
        },
        "item": {
          "id": "3c99c45b-5b11-48d3-82c9-72478b009e70",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2dbcf468-adbf-4285-b5e6-ef11e321b77e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4b0667-c620-4ef0-8ed2-49e17294ed31",
        "cursor": {
          "ref": "83e632b6-190b-49d1-8f52-af9c7bf8dd9c",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f21e1ad7-ad76-4173-b366-6cb49db689af"
        },
        "item": {
          "id": "de4b0667-c620-4ef0-8ed2-49e17294ed31",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a944cf7d-5e91-4bfc-83d9-795d095d035c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 810,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5de3dc-d013-449e-9777-6f84de57a299",
        "cursor": {
          "ref": "e1f28e27-8f50-426e-9cdd-b10ba2904172",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "47fb4dee-9a7d-4d3b-a031-52e585d481fd"
        },
        "item": {
          "id": "4f5de3dc-d013-449e-9777-6f84de57a299",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a73d0745-ae23-4fcc-885a-fae2270ba9cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5de3dc-d013-449e-9777-6f84de57a299",
        "cursor": {
          "ref": "e1f28e27-8f50-426e-9cdd-b10ba2904172",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "47fb4dee-9a7d-4d3b-a031-52e585d481fd"
        },
        "item": {
          "id": "4f5de3dc-d013-449e-9777-6f84de57a299",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a73d0745-ae23-4fcc-885a-fae2270ba9cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24bbe67-cb3c-4c17-9863-b59a87f1061a",
        "cursor": {
          "ref": "1fbef8c3-37c3-4791-9c09-e6d55f171cf1",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "456eba31-81a4-4293-b3a3-099cb6f78c0c"
        },
        "item": {
          "id": "f24bbe67-cb3c-4c17-9863-b59a87f1061a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "14ddcaa9-1628-466c-9894-345d7e949e72",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 850,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}