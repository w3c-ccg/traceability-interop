{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9edff44b-448f-4b1c-b5bf-1d823a219759",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e2622edd-d071-45c6-aea2-f3456b8f1e22",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd1ffd5e-e7ba-4e08-bcf3-0e44224981d7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "52531676-d874-414f-a5cf-0760f958e51b"
                }
              }
            ]
          },
          {
            "id": "5dc5972b-38ea-41f7-ba82-a1f055e8789e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "26b59126-eef5-4f8d-9d6d-aa97686cd86c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b19d8a04-4cba-4678-b79e-93769f3ab6f7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9cd5063b-7b09-479a-8631-d7f988acfb69",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cdc95418-ea95-4b25-99df-c9b16b98e087",
            "name": "Positive Testing",
            "item": [
              {
                "id": "05a96242-32ed-4df4-969e-1c1080d8b965",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1390c33-5b3f-4e19-89a5-d06c52810b78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "079c545e-7cef-46d5-b385-a3b932f19a9e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e17791dc-477b-45e2-88ba-2982eb923b1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a758e65b-72cd-436c-bc69-cbb7e63feeee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8da6c3c7-e8e6-43ab-9c60-b05a87b2ab5e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00da8703-2132-4c0a-9c99-595aae2b4eef"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f734f60f-95b1-4d0f-ab1a-5af80de2d3e9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7528c68b-70bd-4a75-a21b-20cf470d82c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15b76d8b-d419-43b0-8f63-53a3a99d52e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c4a23b9-de22-4775-aacf-30393226731c"
            }
          }
        ]
      },
      {
        "id": "2a5eeba1-8130-43e3-abf0-b1ddf6196b3c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "40abf362-c1a2-4a4b-b86b-3391a166f2ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc486e8f-04a4-4490-9e50-d7bd4b28e794",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9742d865-64b6-49e6-b4a7-2d03f31eda97",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca51a4a-c7f2-4ed4-89f8-a840cad93314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6727fac-ff35-4b2d-9a61-2a66a2b042ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7760bcb7-2422-440a-8205-5b15f6d315cf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94eb7412-316d-488a-a0a4-451f33da823e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f07ca341-257a-4cc5-b018-432657b7481a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7317e333-a3aa-4d2b-8f5e-9953b98a87be",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4bf8ce-a626-4528-9501-3cc30d2a0a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a02fc6e3-9d5e-4e01-b0df-6d986dea0bc3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5459d30b-abbb-45f3-b21f-3b0dac399782",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fc439ad-833b-46d3-bdd2-14fbe55860c5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63ac627-238d-420b-87d7-29810af47ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18569b60-024c-43f1-b36d-b153d76e4a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18f6598-ce93-4ed2-aa55-3f14f2127cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef1ee60-b183-4e96-a3a7-eb3837965eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a6efc2-d9a1-4186-90fb-4a5a00a4ec33",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1acf3e-8f0f-4167-b8d6-497fff479534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d48afb92-0e94-4450-93b2-47cf3a6d0ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54cff3c-b1ac-4301-bf9a-06e915898f4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "7e201153-dff7-467a-a782-aac217c1cb75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "68c0ae6f-1dc3-4f05-a56d-d40d26242c12",
            "name": "Positive Testing",
            "item": [
              {
                "id": "43489eb3-ca12-4d17-bbde-29d66742648b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a753615-dade-4513-9410-909e2b918371",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "698981e7-3ed0-466f-9c46-223d6565b5b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "911511ec-b280-4cc7-b98e-70cc166ceb98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "32d5c4b7-a0e9-4088-85d4-d0e1fba2e13d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0382fc0d-e12d-4378-a885-8939a9fa2666",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10c1100d-9d00-40b7-882d-cfdb322c01f9"
            }
          }
        ]
      },
      {
        "id": "0b95c2d7-9c7a-4b5c-8af5-fa896907527e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "49dafbad-73cf-4adf-a338-a6c61434e92b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ec7fe4a-0b41-4761-8979-84a8361c031b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8f7789e5-2eb3-4504-81ab-7aae15895c6d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3712b60f-b24a-4186-9291-1c65ef0d2927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2447cd16-2537-4c48-bc05-3295e2ac839f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a1ae45-82b1-4772-8a29-144cbef64024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89934e6d-73e4-46ee-99e2-2715da915221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed68c496-89f1-492b-93e9-3bf893bae648",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b2de87-7510-4eea-99f9-95379066f37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7d5588-1756-4d34-9f95-8786f68f3582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824b33b2-5cc0-4d7e-8b2d-b016d6f8af22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d78c9871-7ba6-42ae-8323-16a8171a6992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b079f2-4518-4c0c-987f-ec63e4937506",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b102f1-4ae7-4a5b-a3c0-6f5ef9029cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450ef84b-01e5-4e73-a3c4-ae369f2c80af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43effe44-a68c-4055-bf7e-157c3c378509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6be2fb5-f2cc-4bd1-ba9e-bd59796702fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0e4538-6ec7-424e-9716-bfef79b2fc57",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c681fc8-d0b8-42bb-a7bb-ccddf5123d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23aa65a3-1d1b-41fa-ba03-6949665b60a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd67397-498d-4f2d-9db2-82012b7e0821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "871b8576-2a68-4cb3-88cb-c26cc981939e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90179ec2-1ae8-495c-ad3e-ef6585c33ba8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cba6ba-f373-4143-9b85-63fbfe149784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e79e793-e8ac-4869-ac19-270decf3d308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4e7988-97a9-4e1e-b5c4-b32176e6a339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a668e52-5f6e-4c89-972c-d8a39c7e3cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9314b69d-6e60-42b1-ab28-1dd4021a873c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e6c3ca-3c7f-4472-800f-dd2a112ccd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a93c88-4abb-4328-b7a5-5bb078364e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b7e9e7-ec9b-4adf-a56e-17d19a251464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ccee9a7-cd7d-4f8b-80fb-cf87e0dadb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0811ca8-47a6-40c3-aa4e-f078d457c902",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19c6ddb-c26a-42ab-a641-6e2ec4d567c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f081ade7-ebba-4618-a427-07ebe19718c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b487986-dea2-4424-a061-1168dec1dea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2f87cfd-25e3-4b04-9c38-bcb1344d89bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0ddb71-19ce-417e-b33b-1ffe05d2b735",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f05d3c2-112b-4b60-ab85-39263b2bf76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dee9bf3-e7a1-4eb9-8c74-708f04f01856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78288685-b1e6-45a8-972b-440e73aa7285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "926e39f7-3221-403a-9397-2773eef2c6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550a61a9-7e0d-4f38-a775-75c17a115a47",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce1dd68-4fbe-486e-9b13-ad97f5559458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587fee0a-a71e-4e6a-80d5-74f3de45f384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0269e6e1-8a20-40ae-9fe0-3bbda640d063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29776673-a9e3-45c7-b803-7f735f8f5c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ab6e0e-c9a6-41bb-ac76-a1815606659c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181c39fc-0b06-4b06-a7ba-b21768ec5069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce56f3d0-40d5-4794-9f4e-66a16870bf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37813f67-9da9-4fb8-afa0-377de5cd63ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75893cda-b53f-4e99-9543-d5f4a200c867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c06f3e4-9b2c-4138-9892-ee83091f5bba",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef736709-82d2-42ff-952d-ab2dfbdb09c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff980034-53a9-4301-94ef-a9d67e29830f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14c8b67-34b0-4776-b069-403e6cb2847f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28a87c10-3769-4bb6-aa10-8fb1ae6e7835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5bab5f-72b1-4009-bdeb-cc5cbc771d20",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44211cb2-36fd-45e5-b5d5-97decaea9582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3454c277-ab05-4269-9008-31889687706e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c51998-b02b-45fb-b344-1e3653822c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abc2f96e-8147-4366-81d0-61b75b7e9d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b021507-1da9-49ef-91a9-b87a6b8b4863",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4a001b-0aed-4a4a-b146-3f05ba5a039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4098c73-6ab9-42a5-b7ea-bd6a7f920d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22cc53d-0b52-4e1e-b69d-d1dfaf672a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4887c84-408d-4bd9-85a4-a396f39c0bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0eafd4-510a-4500-a737-fde9727f6aba",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d8712f-3400-4b80-85a6-e1bf9f0f5716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e30e24c-8619-4a96-81f0-22e4ec8a0c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37665b7a-69e3-453c-8fe5-c6b04cd90417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97ee3169-d312-4af7-9883-b9ccc38bd656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dc406b-a1cb-4b98-9b7a-4d0d76df9e33",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7e09ff-6124-4c79-9ca9-e5064fee2a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726a2a4c-8940-4795-9000-690d52193666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f7aa33-f1fc-4375-a30e-d86f3c866339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c07e47a6-121e-46c8-bb7f-ecb7b3ca2459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2eb38b-3aea-4cb9-8ffa-9b09e62ed599",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb4e564-ace1-4402-8230-744a814005d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8116cffb-f8e5-4288-9f88-f54dd1ec7d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f81ccbe-de21-4ece-ab49-3c44fa951577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e495525c-1983-4451-8136-b4868d1d4d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91573cc8-5f45-4e53-a40f-18d2820a3420",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b44a91-56e2-45aa-b28e-403e4526ffc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530cb62d-6fe5-4899-8b58-720b404d8ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72ac39d-e564-4200-9072-a39f532579ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "309311cd-1c37-4819-9d10-6fba852f4b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9ddd2b-679b-4806-a1d6-21d62464f9aa",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003c96d0-e27a-4eed-a1bf-85ac3b487d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc09884e-6774-4e06-a46a-513b5be9fe06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6407831c-72a1-4466-b6f3-525eb276d6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5ed44e-080b-4d89-8d9a-11fa37fd1353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d98c1f6-c2ff-4064-b2fa-a99d2153720d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea845fc0-287f-4718-9620-c579336674e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad21113-888f-4354-9e12-f0138775f28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640a6f9d-8e33-4e77-b402-42f8f17a3b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aaf80b5-3873-4c7c-8654-558d89a9a31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1362c8-f791-4a44-982c-b71d4014181f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8a96aa-ac42-432f-addc-0f5b4c54c0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba92eed-6952-42ae-be2b-7fd317a90d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e7e5fe-428a-463e-b11d-73e496a8b26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e898778-a877-4654-aaf3-f27331974870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad64b2c5-77cf-4bd8-aa7d-88f1246120f6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c283e37b-cbc7-44e5-9ecd-cc43b44d2687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc88326-b780-4cdb-ab0d-8eecae282215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89ca102-7afa-45a3-98c7-94179fffefc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6112ce-de4a-4804-a8f0-dc5829abe1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab73f857-6869-4e9d-bc15-8011bc6dc650",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919fb43a-907b-46f3-840e-87b97122ee98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3e0818-95e5-480f-8c34-88a8dcb103f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f892ec3e-89ac-4195-b98d-741e3374257e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd450b84-abac-4832-943f-a99167977657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5548820-784d-45f3-ba8b-76564db7a469",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524ae285-aeb7-4a8a-b486-dbf2f908751e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c64cd9-66bc-4804-be23-b1c36f78bce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c665285-5f0f-4f0f-a47f-bfca89ceded4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f52f0e2a-a37e-4d3a-b5d9-df7ca786c6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2bdfe6-eec7-4169-86a9-d169b057fd61",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4a0cd6-8833-4d4e-8eca-fe150cae040c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501636e6-30fa-49f8-b8ac-9f0cf43b0349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5195791-6f27-436f-a7b7-90ab148446ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c05a8462-7585-4cbc-889e-36c161ab5824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c03b09d-2c31-4a42-836e-8407a939da87",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e956300d-c9b1-4c55-bfeb-e6916fab6c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa10271-d347-40b5-8c2a-783a08e81e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b9cd9a-67dc-4614-8ca0-027f7cd4e3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f25cdf7-79f2-4727-aae1-4e970549bdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a915212d-9452-41d9-b14d-25852064346b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d64f75d-d10d-4471-b36d-b6a28697c749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76845917-6863-4a7e-8b8c-881512bb945a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf2c66f-2a20-4deb-9fdc-ecbf5830239e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "691cfa55-5ff1-49ea-a7eb-48953fdff241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddd039e-7968-4074-8eb9-4f01915734de",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0119c810-ae04-4549-b365-8d1e2c4b676a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a93eb7-c2f4-4aea-860a-0a0925fdb4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9154c0f6-6b6a-4fc4-91cb-a06e72918c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f861b1-cbfa-48e1-a118-c6eeeeb2f0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ee5a50-1f84-4743-983d-f73ee6daa980",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6479e4-083f-4899-aa39-64af5727f9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7cc1c4-e0b8-45fc-809f-d7e6db1d9445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bc4060-3a7c-4104-bd7e-35cd8057f50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd73070-20a0-4e8c-99cf-999522f21bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28dcf56-123a-4ec8-a2c7-bb2efa17f467",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867b5a57-e189-42ac-be10-bacb03b386da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e880867b-50fa-4071-ab6b-9e7a79454f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73710cfc-9e92-46a7-8d3c-3d0277fbf1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b136dba-e8ab-4013-b1be-a5dbffc27cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c795d7ec-6f35-4b9f-bac7-08dfbe42a65c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4838453c-72be-48a9-8c62-b687047f4f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb8d1e2-5f06-4fc9-957d-bd0894f97d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0f2739-25ab-41bc-8089-889ff0fdfcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6df79fd-b88b-449e-87e4-9020d4a688de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323a7ae1-c6a1-4241-966d-f032607fb25e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5daf16-1c4f-4fb3-b63a-b2674e355a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497d4831-3422-4470-a5ac-d5709aaea4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152d8f09-79a8-43cc-8858-e5efde88e48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a63be7-7408-433c-a75f-1b38711b7290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fdd8e9-9aae-4ae0-b656-eb50eb750a8d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b182bee-c496-41df-939b-53bb7f6785b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c0502a-4cdc-4265-ba1e-78fd46f47b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695f3da8-bac6-419a-b689-3ab233470067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a29fb4c4-1c15-4e29-9ca1-83ec4fab8c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ceab4c0-43bb-4906-845f-89bac84da0ed",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848a09e2-91a7-4f10-bc94-bf33ab552f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b2fe4f-29cb-4313-b6c4-6ce2617607c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa03a5f-55a4-46d5-98ec-6b6befba5821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24d9ef52-91d6-4374-9b1f-bb7fe37a0ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e14003-ea76-417f-a3b2-03ce9dd21eee",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b20b8b9-03db-44c3-a63f-271de69c056a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915ea823-38df-453a-832a-e1f12591d2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc62277-58cf-4430-a850-d905823e6613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f19ba15e-e191-46d1-a7a0-0d60d25c74d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f902df-70ae-42db-9938-991b13d75359",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64599de-1b3e-42b8-9cbd-3a75e4ff18c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c86c61a-40c6-4d6a-91b4-a4b01dc6c75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d01e990-7d82-4c79-8689-1c28edd004d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c66113aa-2d78-404c-9ca0-7a3c27cbfb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0b6c91-ca7f-4f98-92e3-293b79fddecd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2762a7e-6d7f-44a6-8f26-121d99dc9130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df5cb192-b5c1-4e28-bcc6-6fbe54b691db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d831411-dc8a-4a15-b352-dfa1a9313776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b701df-975a-466e-a130-7185dca72375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2ef426-468c-4533-8fcc-0026bb1d53a8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc04ae4-16ef-414e-9c98-7332d6b798c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6535cdc-9349-4775-9952-22ddd1a9e6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7791845c-029b-425e-a04c-1fdf3f98a192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a721caa-8b98-45f2-b4df-327f7ce72654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16f33d0-8271-4b69-a82a-1fe51cc2d65d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8358bf-d182-4054-81ae-e1b6e847298b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db48085c-9111-4333-9c77-d1c2cabd4c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a9e742-70c6-45fe-add5-e6915f5e370e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a371dc21-0c5c-4c77-839b-5143b8f1a5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81cccab-5888-4ded-9d5c-dd8bc9dbb2cc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f0dd38-0c29-4706-8d70-9ac3c2f07ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d142fdb6-c8a7-491e-a652-50a73a5c160c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825941fb-b509-4edf-9ba3-19a62a87b7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa8b386-8a00-45dc-a074-30b6e2158f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1feb680b-3335-4cd9-a56f-73054204cf9c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f97b86c-fd50-458c-b7e4-fc5a5aafe26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7a9a2d-6123-4a92-a633-869954fed1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccf1d62-1ffc-42a1-bb15-235d39aa64a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63baa490-7150-49df-adad-be2671bd4e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374474d4-aa0b-43f6-ba42-74661a28981b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd56cf5d-82c8-4e38-9367-14bf4768e299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd16bf2b-6f7a-4580-9df5-2c427f7a49c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8c44ad-75b4-4cd9-a4e1-2492e8121575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01445fe1-133c-4918-9238-07aaebf0f90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4e1a5e-1f8d-4412-a38b-566e194a40bb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9699f084-1922-48a8-9e5c-4a6a6942a446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad7e906-e0f4-45c6-96ca-b112e9892602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e60a11-23da-47de-bde7-f9abec19479c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1f2185-a20d-4339-93b8-2a71dd131960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe29b3a5-8d45-4881-8506-ba98f435a838",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24577d9b-db32-4e8f-a5c7-0365dddc0d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b7f196-dccf-4d3b-990a-727ef743048e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11872b0a-5597-4496-8994-ae903fc25cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "57069d27-0820-4b02-af99-750733c50c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9f8d92-fef2-4daa-88cb-2d6825e89fc9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bbc56c-8c2e-4144-9164-736970354dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4046fd73-731f-45a1-b4ee-89b064593e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3564e2-e880-492f-a025-be7abc288900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a111edeb-58af-4a44-aad0-4da0dde6870d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c17e83-d9b5-4e50-8bc1-b29834707993",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4f4a38-f301-46c2-b208-bf41ac329f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46325060-c035-4330-8c61-44c156afe506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6598c3-306d-49c2-b1f6-5a9bd7d0388f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47ede89a-adde-49af-bd7b-6973790eba39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d19812-a0a7-4e43-b1b7-c56d0262da7a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6476a7-e2ef-451a-81ab-38dbe703b782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ecdefb-58c7-441a-abab-fc6d4c3adbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc124519-1373-48cf-93e8-eb29a98b2023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9330b325-c451-4548-9956-7dd1d9d27836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b617e10-bea2-4002-85fd-4d035065ba7a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de2ec1b-3b83-47d0-a7a3-eda5f69192a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1973e7f-13bf-47f3-a3e1-2d4d40728a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53065dd6-eb21-4bcd-8070-4787b30fffaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a03eba34-801e-415c-968b-efbd848da413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ee63df-2531-4167-9fd9-19792dc3a0d5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5f1b09-b0ea-4898-b5f6-e2ba94ff0403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c30af16-2f30-43d7-b1b5-54c32fd09374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c807d5ad-d851-41e8-9b0e-0794ccc65e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "799a0bef-bc7a-4367-8e76-fe3accd538ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38297525-616e-438b-a211-e3e180faf2ed",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bfaaf6-9baf-4e64-8fdb-736648d9c0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c744aaa-94d5-4e7a-85d0-ad453173adf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3f0dfa-ecdd-42ed-ac96-b844405b3e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2771e20e-5a4d-40bc-ace3-e8a01688b890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3a544c-fa56-437a-b9df-f80e037345a5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7fa3dc-ed23-43e4-ab1d-fe1178535f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344a418b-f889-469f-aaf8-ace4a4af338d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500aa37e-1666-4246-90de-91c768c8e993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa964cf-0a45-4e21-9973-dcb23c7775bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e62dc6-c868-41c7-8264-aff0564991bb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d214a001-0d67-49d5-960b-2f05c3f7fa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b64c9d1-497d-406e-859f-239ca11accdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ff2765-db46-43fc-a23a-fad7e96a15bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c2b52f-4512-44d2-8313-5dfa77be64cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accf0ea7-d468-464e-bd15-56049eb46bce",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fe4da1-b7ef-48a3-978b-74a6dd2e28ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd039fe0-ae26-4ed5-b253-a085c548a28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328696b1-c3cf-4c02-a8e6-23cb07aed90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "244f4a29-71a6-4196-a84f-022daec8631b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af31efa-6732-49ac-a3f0-f91354f94826",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ca744c-d13d-4df3-bf46-e6fcf213baeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de46c518-d284-497c-8536-f6e7cb66264f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6213ee-6e25-4171-8b4b-26904e748147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34feee2b-0e30-4502-b035-912fb68d4516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e39dc7-49ae-4f83-925e-5e85417204d8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486e7a7c-27ad-43d6-b708-bc333b47fbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e427ea15-b4cf-4822-a287-95b61fda6563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0bb81d-9f8d-4591-9b09-35f51efca7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6396d217-9608-43f8-a564-c8f7856e3157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c64c2d0-4e0f-46e7-89c7-a9e81e0fd84f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af2893e-7376-4c3f-8fb0-88f81828a11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120a2f4e-c630-43a2-934a-77d63fdd4e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af565f6b-3c8f-40b0-be35-4bb1a6be7a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7243f518-7fd7-4350-a787-77d13328886c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fe6334-c5bb-4fc4-ba01-79a4e15688eb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be93ef8a-cf5c-4d52-9d95-210bd31a414f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575d8c7a-bdf1-4c69-9d03-24eb121ddf97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaf3dc4-0cfb-4d87-9026-3024c44de976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b8e536-856c-4776-a789-2dc09ec0d1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc86cc6a-6307-40f5-912d-9554167dfa56",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909e6b83-0d85-478b-a172-1ce5e4d66d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac017b6-43ac-4578-8ca1-525dfb925b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e57ce3-c3e6-42f4-a8f5-86340631b494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "85d77f8a-af76-4b67-a700-f74450b12e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5317af81-3210-43ab-bab2-70175d4be47e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e54489-4614-41c2-9459-b0c1342c7c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9b6bc9-7a82-46f6-a74e-29995f9c283d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a282ee92-6ac8-442f-a70a-02eca2e5c66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "62433571-042c-457d-b82d-40204683b267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349b6693-7aa9-404c-ae79-4bb122696392",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03982217-c582-4c4b-9e7f-3fc86640d2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d34a1a-b59b-4b7a-9426-ab10c2b2ba09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190fd12a-79c6-4ce9-badf-8b6dbb6c2546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c09b9f2e-2429-4450-8a1e-6de3ba163d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d627c67-f7d1-4756-bc47-7e41b2a25701",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e91f9b4-f553-4f7d-905a-ebd9d8a46443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4063e9-5c18-47da-9c92-17e959db4c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c81acc0-ca82-41f8-92a3-a1adf1527d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9190419-aa12-42d4-9711-65feda578dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd409ee3-dfa5-4fc7-8a39-8292efa7f95e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcae2e30-45ac-4feb-8d2f-5490b7471e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f009876-b1b7-4d7c-a00b-c78722514f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decb247a-5033-4c24-87d0-02589f1165a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "30297cf0-c207-4153-8935-aa4197b71ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4b9842-f57f-4cce-9c55-aef66f0d0542",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91dff777-c765-4a64-b312-9a24015aa352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dbc605-6af5-44d0-88a0-df24ad47c564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee821042-ae2a-4b3e-8506-fa8a386b7142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff396a8-d100-4abe-936e-733dfbc187ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f2ce0b-cb51-4abe-ac76-068f06ed1870",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9731537-ea66-4cba-8547-85362ce9460d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6ee51c-42d2-417f-99e6-63d86a7dd4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac51cacf-e4d3-4877-b871-ba82beb0c9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c38ebd7-5cb2-4f8b-acf5-bb9f9de923b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fef70c-871c-4633-910e-1890f8163371",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d478905-7d8f-4811-8de2-980f463dee55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b66793f-0662-443f-8e43-287de5a5f4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf79d4e-2e89-4af0-9b6a-d3b39c47da84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f085be-480c-4987-b456-af1b77122172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9513f506-9c74-4692-8979-d5af98780c0d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce26560d-b5b8-4cdb-9e8b-0e437c9c7160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df1aa41-c5c9-406c-bee9-6675008f827b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e947f9-b1a1-4936-9b84-b8200c0221d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94290da3-0351-4fac-b3bf-2d482e6949d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04032271-a400-4db3-a802-59cb8cb070d1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b064d8b-7890-4180-bc90-81c3df02e079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf4180a-9485-418a-8263-ede1ad63dee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db519cd8-b674-42f1-97b7-6f2ca8cc7a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56885ca6-4397-40bf-aa53-94a07658c561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19220e9-f2f1-4f45-a240-9abc04898b48",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f847c6-623c-47df-9afc-dd7a1ddb1345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890611a2-1415-49f3-bdef-48854d1ec23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba5b764-999a-4f96-912b-d3b42ffbb158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "243b462f-3ecc-4c48-b92c-22b4fe57ff85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5fce6a-473a-455c-93e3-7cfa99ec90ce",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf67b66-5eda-42e2-a5e9-99b0870aab06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e84685-b838-4928-971b-b7e485cffaf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec5dc10-72f4-47c2-8b7e-a2040fdf5098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd67ef65-a150-4d3f-9c49-0460db71d19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf739d9-5b54-494e-b93e-d558db1653d4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1ed8ea-30fe-4004-b722-b6d78001cc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ddd4f1-32d0-4ee7-8117-f6192d2196d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b303f2-45cc-4eeb-a95d-1b95f726596f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3384379-6731-4b65-b5c1-7c28f786e98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4de3a9-f1e2-4411-9bef-49d96a6e6dc7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13eb8ca7-53bd-47ce-9f3c-63d8f555ad79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79f298b-58c3-4240-a493-9ba171335316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9747dd06-1a73-4762-9b5a-263a9368f602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94560238-c425-4443-b61c-ea991ec87f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b161d93f-8462-4210-82f9-241efada7650",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740c4647-4be5-40ac-afe7-cc330da9a66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afe785d-c845-4539-8806-f08285bce237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be3f8ae-ffc4-413d-954d-bae5758d8d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11311cac-8dca-47a3-ab5d-41ad284b4191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48243f66-2558-4536-9d64-c44a0098a41a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14981c88-b878-40d7-b029-91a93b4109e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3059206a-c9f2-499f-ac2d-2de3dd46d1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a984e1-92d0-4794-8142-14a1390ec64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0add9749-071c-4537-ae53-eb1303af4489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07bfd6c-8934-4b2a-ab6c-600594a57bf8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c828d8-f739-4d5d-906e-f12ec0090ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498f56bd-b80c-4d01-aef4-5509168c2aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fca96c7-b1a7-4657-8eff-2344fc8f2ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9b16c6-0f38-455f-ae4e-27e8b7191302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea4340b-a259-4ac2-aacc-d13de9d6d817",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c506cf-7a9c-4c77-88f7-511cd8a277db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3721a8c7-de59-498a-81fa-073b2ae93c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d4dd7b-6ec1-42ed-a090-84938f07887c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc2eaf1-dcde-41a5-9a17-3dd53b55533d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014ecaa6-8fef-4701-bda9-da936e8c924a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7695ea74-d0a4-4e2f-914c-d59bc94ef84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf507bb-5176-4bb9-9e2f-cc7b782444d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a69a6b8-0d66-4a16-b947-3d6677626c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3743c9-84c3-4460-bbbe-c30df89f2e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17b2c55-9c77-4e31-a6eb-0a0bf83ea014",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1d1514-91ba-4da0-bc26-c33f2110ba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f523fe69-08f9-41bd-b9d9-128c87993afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee10ecd4-103c-4cca-8b26-1e611434537f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed48f22-dabb-49d1-8ef0-4c7ce19b8638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28fa6cd-8571-481a-b64b-46fa884d188b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45502297-72a4-4342-bc75-a71e2f98f95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc56774-b60b-40c2-9727-9a857e3a5f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43b1f79-62d2-438e-8dee-c28dd4e517dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16933298-0dc4-4244-836e-865070c17da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c810715-1b1b-4446-b68e-1c374d90d958",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07378b42-7a05-4024-ac9f-f5c5e416eecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470b0aad-9afa-48d8-80f0-7410ce7b1752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daabd6b9-54ea-45d2-b207-5ae7a942c115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69f9d960-3378-44be-81d6-7218a1f9e5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95b630c-84da-4125-b3af-db3e6772283d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766e189f-2f9e-4f3f-8921-01c1d786e7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91959b5-32f6-465e-9cbe-e9c79758e17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9673125-af61-4655-a468-a82faf73a93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9089b78-b75d-4683-992a-c79df882dc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1dacd2e-58ae-4901-a33f-120eabce0356",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429a4441-c9a9-4acb-9dee-abb84bc0ab2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdbc56e-5f92-407a-a99b-d24e98db9e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b946f9-5e0e-4939-839a-abe31a7fae81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91f52aef-4805-46ab-9de6-97d2fb814b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d008b0-e8f5-48d2-a7f2-2977ba3deec8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0320d191-4dfe-44b2-bd8d-4bfee6a9f1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe957bd6-62c5-4ea0-9e75-81c6b3f677a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c6e45c-93d1-4133-9215-6808c679084a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9990447-c4cc-4f5b-b998-cf35d58fd65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3090de72-bb1d-4e5b-912e-fb02f7252cc0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6103482-4de4-4559-b4fd-4877b04f6340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef127be-b743-4564-bbc3-482899b7d885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2a52e7-2bf1-4104-971e-4c138b519934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a44e59d4-c0e1-4e1a-b54d-32e6812de732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3427647-d510-4024-9498-a2d2b33e3839",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bead5222-2cbd-4827-a070-33d55745c762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eca930a-14a8-47ec-a6e9-ccee6b60138e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f459821-6bcf-45af-9519-8f9b83f4835a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db8a1030-c106-4eed-bb1d-cd186369ac97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5415e26c-1214-47d8-aafa-5229be84a341",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55844ba-85cb-4f41-b001-e0e7acad5a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e5bad7-4146-4521-8e37-4db7f09bdf9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d9f367-8c9d-47c2-94f5-82558eb867ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10d1940a-6116-43e6-b122-df2ad931b38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a0eda2-a1de-472b-8fd6-ac5124cb0a2a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60edaef3-c56b-4026-803e-755789a5bbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5a7b73-364a-4759-9f4f-ba9e698fcc70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525d2441-5b12-4b16-912a-b685b4c8a29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "174b10ea-c6fe-489b-bcc6-0d4a42c75360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a559b72-692d-4409-a6df-a9091ee80721",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca163ca-1a98-4f52-b56a-c7eba2fde8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1302a38-60f8-4e8c-9cd8-538757276ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557465ee-d051-4ed4-ac8c-9c9814b2f121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1627aa8-26f8-46c7-badf-a4a18b94527d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6c8ac0-4a93-422b-b0bc-304a26af37b3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1520f467-e63d-4e23-a3b6-0566ba84c6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5564209b-c0bc-4241-848d-03cf9615cc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7fbaba-434f-41d4-8332-e3b6084935a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a070673f-20a0-4b09-9d8a-de5e93667306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e09381-e675-413c-82dc-6390b7d98932",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6631bf-fe00-4d6a-b686-42db8b0e51b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14147fe-7f02-4ffa-8694-c88371c515ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7600b3d3-5e8d-472e-b6f6-ff64f5e69634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "66cdb16e-e955-4025-9244-60ebd4524e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a7eefa-4667-4a0c-91ac-a55acd88f893",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7c7790-9adb-4aee-b16d-7eeabfe36c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688cfcfb-a973-4c92-9eed-4890c69ce8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca338bdf-dee9-4895-ad77-a2437c98685f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d12a29f-ad31-4811-911d-b0d02acd9d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93013ef3-eada-4293-bb35-18a243a8cc8a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e73da1-6d41-4450-9dd1-7f0c186d4fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb2b4e8-c95f-4033-8a36-70e1b88a7808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359523b4-4e37-4144-92e6-0cf2f313d2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "836c0916-03c1-4f6e-a2b3-8cae39dcd6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ea6df6-9ee1-410d-bb24-cd702bbd3951",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cda89f-96d0-48aa-bfe6-b8661928e3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed02a359-5d32-42b6-88b7-674586830a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d932d99b-8058-489b-b640-c7039597d664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8b6581-61d3-4906-9fa2-042a3a479ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2490ec-9f5f-4aec-9086-1b8a7557d575",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487f91ea-c9c7-4d36-a976-8aa6268321fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7d497acd-0b8f-426b-8921-af1e5f4f39f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e64e5a5-3b3d-4bba-89f6-5ed2f1361e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5586d492-5d01-4801-9b33-b6322c0048f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70aaadad-8ed2-42ea-9403-c8afd0587f97",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc521fc4-e4e6-4817-9b15-d0de112f96e4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3bbadd-6e6c-4fef-9661-d2012f51afe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14e8838a-455a-4d60-956f-33080e63f25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb31a150-e055-41d8-911f-6ae33b7fcc39",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e440335e-ca4f-40d4-b10e-14cff147f660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019306fa-b2ef-47ae-ad1f-5dc416458892",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58862f9-c444-4ccb-aa06-14708912b96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7377c70e-970e-4cc5-9e00-f172c0fe377b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f189ba4-2713-4293-97d3-d6d8654da5d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b92e6fdc-e19d-438a-85dd-5aee6fa2482d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b80e021b-4b57-4e4a-9050-66c0be6c1899",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "339c8085-9a51-4dfd-9b71-742ee60e31c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "917c0ef8-4b41-491d-a15e-5fa70b0d643e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "908447cc-70fa-4ea7-9443-c08202c5954f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a3abd3b-f3c7-472a-b749-93aaa8eb5637",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e4b767a-cc67-4a1d-af32-7205b347aa47"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4976d95a-ed39-404b-99f6-2eccc0f872fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1211c3a-abcc-4628-b8a6-d8398ed9fc23"
                }
              }
            ]
          },
          {
            "id": "bcfa6444-2408-42f5-92a7-78ac3a5dde12",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4df506a4-8d20-4e1b-aff2-11c158c4a137",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94cc49cf-7dcb-4e4a-95b0-f6e5b5a6e299",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96f55250-014d-4ea4-95df-9f818dae5a30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a61bbd3d-91e3-4d97-927e-afbf65cff284",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aca4202e-2620-4c50-8ac4-3ea4de263986"
                    }
                  }
                ]
              },
              {
                "id": "8d97881a-d5ff-43f2-85a3-e3dfb19bbef7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd8448b3-6088-408f-bfc0-67760a6384cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67229c24-8a39-4c90-bb33-c82f0bd19c43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b012755-3600-4724-9433-e0bc08374bc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "64196d41-c6f4-4e04-a2bf-6f33d710482c"
                    }
                  }
                ]
              },
              {
                "id": "38917f41-3061-49db-bdee-4e45b7c30de1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c726be45-d010-4b80-bf75-648a91bbb948",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "652e80df-2f78-4eba-a1e8-c6089b959efa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9df32a4b-9cfc-4429-aaf6-8e3a6e0cb0fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "411b25ab-a244-4edc-a104-1b5229f4f2af"
                    }
                  }
                ]
              },
              {
                "id": "3ada05af-627f-4feb-8dfe-e9f79c47f481",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "192dec6f-eea5-4698-88e7-aff681472292",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25ebca46-a5b8-4a77-b398-fe5f9fbdc489"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62f6217b-0427-4410-8fa4-0b9ae64317db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a6043602-050d-4ebe-9dc1-75bd159b746c"
                    }
                  }
                ]
              },
              {
                "id": "a42f910c-a48f-47c0-9886-ed4d3f0611d2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a7c8ad6-0c93-4351-adf7-00d87e97128e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb35dc6e-5990-4f07-b3ba-f9af5a59864d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f774ec78-00d9-4488-8d8b-bb243e99b8e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1e3bf15e-135e-49ad-932e-ad47af508416"
                    }
                  }
                ]
              },
              {
                "id": "d7634939-9d42-4d82-a394-059eeade62eb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "910b59d8-3c24-4b4e-a41d-114d065ed4a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be5c90c3-df14-4b50-946d-373ed8dae849"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d08b491a-8594-47ce-8252-797fc10d5357",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8b83ba5-7044-4e47-80c6-302842ec76aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17df0a0f-a3b0-4b8b-8bcb-a21904100830",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0548cc6-82c8-4f51-9a35-832624f33b21"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5b0c5fae-1148-4ddf-a6a6-2b97c664f0c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4789dbd5-df93-4950-bdf6-ced7545f255f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46b371a4-df1a-444a-85fc-a78017fc003a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a0a63f78-ec23-4685-b489-b5205daacaae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd10635b-6c2d-4e8b-a7f9-5450d678e4b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca5ab7ac-2e87-4f65-9e1b-246aa7983f55"
            }
          }
        ]
      },
      {
        "id": "a7a70939-b750-4fdb-b601-0eee24d6b220",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2a16f37a-79fb-4164-bd9f-9628b84d83d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cea4813b-fd04-4020-958b-1404a6376632",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e0a0c56-0123-45ef-9b61-68af6832058a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb2f78f-1143-4678-976d-2b862336b227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82563530-c557-41f5-b064-4d6305e15d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7412ab4-8a6c-4e63-a415-f2c4f4280779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b845cc68-223b-4108-a479-2d1474aa98b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33fd60f-7bf7-4c01-aa66-dc41ca66b7b3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f700a64-5c9a-4313-a4cf-1ed272d9812d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86010f59-c961-4543-b583-a4716d6e6c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5b4800-8d84-4968-a209-f126ea83d29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b873b78b-a680-4416-9f96-a593b972aa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7af275-20ec-45d3-b38c-fb7d9fe1a422",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf5082f-129b-4072-952e-a795ad73d000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56dabbf7-8ca4-4aef-944a-c2bd93798cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b195eae-9a42-4d78-bfbf-27cead4fa2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2311ce-1089-4931-b484-f8406548df27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6177ccd8-4b8a-4ffc-9d38-c48ef9158dd4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e5c600-7ffd-4157-b73a-d9ca878af0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4985a842-5ba0-4ee5-9591-c04bdc2a6d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fdcbde-77df-4051-a0ad-133a23543387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe1c0ac-12c0-4ada-a5ad-b6cda635bf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46634f6-a1d8-4942-9298-a937e6b39d14",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368d0a91-85ae-4ea9-8aca-89f4250c8506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd641066-1f21-4957-a70d-74abd3316179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d643a52e-cc29-4bd6-a696-ecdc6673fb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69ba7806-3756-444c-a3c3-ac2c654cf157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6633f7-8424-4381-9f43-58ebf4d5f366",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5523cc3c-e1fe-4eb9-9d27-09ac4785302b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8b09b9-b5df-43f1-9021-337f80452814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d55a08-e39a-4703-925d-ebff20642e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "157148e2-a5fa-4b5a-ab52-ae66832cbe3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ed9d27-a81c-42d8-90c2-f7d82a9d34b0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692ee864-e6e7-450c-8eca-a30a7d099647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3489d147-969d-4ec8-bdd0-50df678af216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f86e6bb-a71d-4128-a09e-e064ad90b3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a2b2ff-c81f-4655-9ec8-b91a7373ccde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b29e48f-e97a-40c5-a895-a2054823946b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d9a5fc-523c-4780-b757-aec0f4874c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c485b8-456a-4af0-8bc0-2fe4b265548c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631fd45e-b985-4a86-ab17-d947a72286ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26d1476b-eeeb-498c-90aa-8f917c58b201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be1d072-1ea2-40c2-b832-9a002e4356f9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e84f6c-fb21-464e-95b3-3230a2e2b732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4065501-a2e9-424d-be76-132828f30437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb92bd5-2eab-4019-a7a7-b98901072874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f93fe344-a72d-4921-8454-c54a60cd8ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179b2d6f-6c20-42de-9766-fcc3120a5135",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2925c9b-690c-4636-ad1d-679f5bbc1d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbbed53-c89c-4442-a9c7-415b495668a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c78745d-a56f-458e-a5aa-7a9c2da9bf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b04a7414-10b2-4272-8ff6-985403bc0c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf4dbde-abd7-4f55-978e-fcd777ce4b42",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14037bf6-2dbd-4750-b930-a9ad6b26feea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e82f06-0473-4901-887f-e9af1fd53558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac1c6b7-a02c-4603-81b4-47996bd710a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0275338c-45aa-4db4-974e-15f2a85e4a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a46271-7314-4c85-a0df-8a4767a2afcb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff31a6e1-e73f-483e-b8fe-ee0d8c8b15d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e632275-2c44-428a-9c2d-c9b77d0fec44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b69aca-b619-4eaf-a40f-7f286fd7d27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e05e394f-f23e-49fd-8573-9b9224f65b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5173c8-f637-4a1a-b36a-6f09a203e352",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fac5a9e-a8bf-42c0-ae24-dce9ae5d7dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec74b21a-0fd8-41f3-bdca-6d2ea646e227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf48f1c-b2de-4bdf-b16b-c3d919ecdd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7346163-742d-45a2-9a0c-8cb2e92729a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaa8046-de36-4c0e-8a76-0152187fa461",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cc257e-c693-4cd7-b1a0-9d94a4eb5d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40960aa6-0f44-42ec-8afe-4b7e28ffe5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966fae84-65bb-47e3-b13a-575308614aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "13d12597-c57b-4459-8bee-1d333d5fd724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9772954-acb1-4739-a722-8eb4197a2db3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bae317-09cf-4971-807e-d46b0adeba71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952b0c0a-d0b5-4431-9f1e-10945aa18f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4bc382-bd72-4043-944f-f2a228a99bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9acd6f92-16d8-4f90-a142-fc79531e41f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532a7d7c-ed9d-407c-b71e-6706c39aea9f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9914405-9013-4c92-935a-b1080b0ca1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df6bec9-62af-4e8e-8a0f-1f2ea2d42240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c088c7a4-7a80-41be-b098-30473f847e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "28e85b2c-753c-4a95-b454-ca5fe9ea86f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4548b6fd-81df-461e-8690-b6370a9a286b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8a7738-0257-4403-96d1-eeefaf01c37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09f9925-b8ed-40a3-b938-0e9653fa8b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b863953e-0ed7-4d87-a65a-fed174a6704e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a2378f-6ff2-433e-88da-c5dc876f8951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7e42b3-c61b-493f-9fb4-9b1e132ae7e6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29632d96-0409-4b1a-ad0b-07df9acf4b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00362073-77a7-4f7a-8963-9837d9bc3e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6ac1a3-004c-4d0e-82c3-4912f7c49787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c043ecb-f2ef-4cca-a0a9-36691236364c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f6a071-4e7c-4172-b42e-7773675db711",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c29f1ef-7cc2-433c-909f-a2432ed26b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b002d8-59e1-46ab-a020-45f754297747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc59d10-aa19-4390-a4aa-2044ca955512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f62b6e6e-3cec-46d8-b371-edb4aec14f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4bd070-1209-48c6-9f36-f679f9593fe3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2096da4-baf7-4294-851b-ee6211773cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c103c062-6fc4-48a4-b654-4cff445a16b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea81931-0169-4f27-9441-d5fde281f4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1c76ca-7c67-4781-a1d3-02ddec8a014a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d6f789-e45d-4939-9200-5079d90d7bcc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d9d01a-95bb-418d-95af-4090c4024118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8af26ff-c096-4346-88e8-b29946cdd9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c5ea17-5b35-4032-b051-9de4974457c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acb45ed3-3ada-4df1-b161-d33841656afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f46b0f-8adf-4644-a821-d7d0e820b47b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6bae06-280f-4d7d-bd0e-3e87b489a0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3617f9-3e95-47aa-8482-ca79c382d493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1cba66-eb54-43b7-ade8-cffa84ac3cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf24dfb-d4ec-4ba8-9a8b-81dfc31ec36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12030442-fbbb-4385-bde5-f2624bcc1fba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702191ee-e135-462a-8821-39b65789e7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7549dc8c-697f-4dc9-b2f4-57da66099649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7f309a-c785-468c-b5f6-0fb10610daa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a62de2da-87fe-4bd9-8464-a80e4db851fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2870534f-6d37-4f7e-b5af-c107d9a769dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8ada14-6152-45f3-9a0d-ef0aa777e6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bced3467-197a-4569-8fae-41c17cc039e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c0aa9d-6aef-4810-af91-55e86de77280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a32e84-59ef-4291-aeca-9611ad555396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861717e9-5909-4709-a51f-bea0a658452a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6e6ceb-84d8-4d66-b487-936b91a04f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14cb7a43-f6a8-41a8-bff7-14f705fa6617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec90a40-416d-4b11-a1e7-22a64996f1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0869e7e0-bc42-4329-844a-0c5b552a2223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618f9868-8805-4140-ba3f-46155b8b6398",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de57a92a-b515-4e26-9253-04f811931dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50f6f2e-2bba-4538-84f8-6c7e066aec53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e454a2-98de-4c05-ac3f-8a98af03beb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4185b7a1-c044-4a19-a912-dd8880bd12e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d520094-82c2-4dda-82d9-32c85bfe17ba",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2d2cb2-4017-4664-8937-791f456b0baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc5c388-fbb3-4a91-8829-e15844d57ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b47eee-acd6-43e1-8783-dd8ccfdda424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce14b8a8-4432-4b78-8f0c-771e19951a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d4beef-7d26-433e-acf3-4ca870fdf245",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30003e4-b20a-4c35-ae9e-9c3df4bec4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c557d9b8-35bc-4eac-b683-80d6f31acdd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e61fac-102e-4e33-8fd9-ba9107b8f55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cb7e50-79d5-4ef2-b0cd-721f801749f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c0b0b0-fe8c-4560-aebe-299589bf6974",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a854f0b-0e34-4202-a33e-5ed7b31fd2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae9afc6-d668-4a20-81ea-5b47b2d3012f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121ff649-d673-409b-a27d-7e8630b11aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d4e8a8-5b20-4025-995c-aca5ea279b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae16c1bb-b92b-480d-b30b-c0faf5b07f98",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05e12f1-fcf6-4123-bf52-39e716a7b5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f116659-8373-495f-9368-460d69530f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15c22d7-0f6b-4933-ad6c-c62ff94f710d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cb6fc0-5516-41c1-8cbb-e9370244d70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8c1414-f10e-4ba5-bd47-ef3b92948335",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57d7169-facf-4b4f-b4bf-d7d5b5b4db85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d59098-9d99-42be-951d-3afa529487e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ac4b44-5feb-4e6b-8f85-f5316b6798c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "679cb686-cd39-4bee-be43-e7ed1b89212a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574430b5-6709-469a-abac-912e5ae3c47a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af5d180-bbf9-4d34-8d83-968ab6e69a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c7c43d-0683-4e89-90d1-8418e519973f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e13a2ea-af46-4124-b3e8-feed3053ce23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5ccc35-c4f6-45d6-b670-1be0eba5c134"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f98ce2b3-1981-4206-a7e8-8424d406771b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a96444e-b62b-4b30-a269-c9d574c9b1c8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d68b19a-7098-4643-be75-e83b9446e763",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6446ac47-aee7-42b8-849a-5ea76ece354c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c1f06c-9e0c-49fd-b316-85e900d9b1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4b90398-17ae-4ce3-a100-176e7e4b0ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbcbd3a-475f-44e1-a731-67a5980a0fab",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd0fb0b-d948-432e-9133-19b883bbf8cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e90e9cd1-c222-4000-bde2-d37df9752e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "438f21c7-1b8c-4051-a790-b5a285534a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc1acab0-0752-4c1b-b5ae-46f9b0324288"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02b2f5da-5758-422e-8214-e55c405972df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d141b22-5750-4a84-8685-5c3f0e0da5f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "395f6524-5ddc-400d-b4db-a3d50e5a0eea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1e22426-a809-41c7-8bf9-d15ed3891b28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7f5d48e-eaa0-4b26-bff2-6bf4caa1204f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aaa89c7f-1593-4b93-88ad-017c19b29c0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2703c6e-8822-4a9b-a137-964b19a12714",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b56f3a9-1315-4bcf-a9bd-713241b0fb8b"
            }
          }
        ]
      },
      {
        "id": "e1b720b4-9125-4077-b8b4-18b9e6c824a9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "201386e3-d2b5-4b72-8521-de6c966261f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "029f66d3-189f-4590-ae6f-80267b6c2152",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc9e950b-07cb-4605-a9e4-78f64c9219e4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca1356b-7c03-4fd3-b3f1-43a6c049cfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7ee0ec-bdfc-4435-811f-d01a4df8e20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711eb890-cc64-442e-a662-30543ae7a9ae",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6995a0f-9f28-42c2-b26f-aa8f9aef3c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158e245b-45a2-4fde-93a0-5fe5d50c072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e26b97-0d3f-42f2-bb68-a707aac562c8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1f15f5-baab-4386-af71-72358b60cc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae5093f-4bb1-4dcd-b516-f8c36a71c800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4c4739-9db4-4143-8c58-9330598ebf79",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff462e4e-2c1f-40c6-89ef-5538cff09625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ee557f-d6fb-4930-a5b7-b5ed82dd70b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155fd39c-8f17-468d-a002-8d6359835e08",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6872c221-9ea0-4c9b-8107-989425e82dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028845da-64d3-4076-b3b4-ac6aa27f5d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb36ef41-e930-4985-a68e-b1211b17895a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376ac993-9e66-4ce5-9f39-00233af569d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2c7d23-25cb-4377-af1b-e55d758aba1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db41848-4fa7-42d3-8bd9-42561d9abece",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c4a087-fa62-478c-8600-b205b31b747c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0379b46b-68d9-44b4-b87c-ed752a187f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d4556e-7bbd-4324-ba9a-0bb85a8cd7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0185b7-6f4f-4000-a5fe-b1ff3896ceca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d40e999-e3dc-440e-9412-7df3768604a3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344d56e5-cbbc-4540-9773-cec34712a6df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4372210-9700-445a-9447-43fc87a79578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48d180a-03c4-41f2-93ab-decbbe622242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d330eb-d199-4e73-9a60-fa844df83b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99c9fe7-4f1d-48ba-b1b1-e80c0547624e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7b08d4-f6e5-46ab-9b3b-6d722b9d2042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f590c24-9572-4d14-a9e3-2e14d5fe85f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe54184-f997-4eef-80bf-45963f7c83b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fd8a81-052b-4b0d-bc5e-61f070374729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3ca18b-c657-4d9c-8e4d-b9903e13a576",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7243a03-1742-4941-aa61-18aad7712f68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72137ddb-ffca-4833-baec-31422e955d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb51c9b-e02f-4ac1-8d0c-d727d9d298ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b9f003-51d8-4def-9ba1-8284cf38f34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e117eaaa-586d-4502-96a3-b2716384430a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2293bdb1-3311-4d9d-9512-a5b40c2bc609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f5b7de-c904-4220-a675-86f4ed66b513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816fe964-91e6-4cb0-9472-2f27b783e297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b495a9-2be5-4728-8c7f-7d70708b97a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58acf0a2-df5f-40c0-b435-823fd9746fd9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1ecd85-36e5-4fe6-b60f-decc5e103a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56cd8d6-acda-4d1d-b7c5-b93efe52d190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9737e533-f7be-4166-9952-83b31599152c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5fb6fe6-8cdc-43ea-8410-2e3d365286bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff531524-025b-489b-affb-b2fa06e0c61e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a065d645-bef6-4746-8452-7843d7bd7217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77f20c00-34da-4eb2-9bf6-21bda8d3fded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c05cdb-f08c-402b-af51-39bc0ce27950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d6b4ee-177b-45a3-80c9-c8471d015c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d827879e-df82-41ab-963f-67fd719a1bf2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8404dc-b379-4578-88fb-dbebb40a74ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcdb3953-2fc5-4e9a-9418-9d7f252bce21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c5c54a-a7f3-4120-b455-79156ad7dd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6488e596-b319-4b96-ac03-4af4b8ac3b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61763b31-8e5b-4fdf-9c2e-579438876310",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f57c35-f45b-4535-810e-6ec98041ed78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "517a7392-4a65-42df-b13d-1225a6878156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f86cbe-1478-4d8c-a856-640856ba92b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b8bd3b-c142-4b2a-a894-940282333528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4430d709-5f3d-47bf-9cb4-aa1cc7e4f175",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c739c987-c7d0-4244-8293-e3c6fc4a4a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5142b456-42b2-4e09-a45c-c6ff29828856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d5b35c-ab6d-4633-9762-c1c178e96acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a426b5e-2d60-4fa1-9751-6dd765dc502a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71fa364-929a-4302-869a-97b534c6de2d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e15b7bf-07d8-4fb7-8a40-d1974ab8429b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004b25e6-c43e-4992-ac63-d4485cd0f03b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012af003-8b78-49f7-961e-8b8155bfbb5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f01761-b55c-4e5c-93d7-203fdfa67f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91779fad-4d36-4b00-86b9-12d163219e71",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86aab068-96ed-4b7f-926b-687395e0a18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f6ac84-e86e-4852-94da-6af50017eb79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4c3649-4d9b-46e9-8ce9-b948263834cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ad8c0a-ab5e-42dd-894e-fddb980abfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9551fb28-052c-4408-a9ab-b8751031d881",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85b6a79-809d-492f-ac01-d01755d36797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97949b04-0752-43d9-bccb-c63c4575c820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdb378b-4fe7-4e95-98d7-f991122cd67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7215ebd6-ff3e-4ef2-8b63-d61dd7a8f67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7e8c95-5481-40ab-be8f-2ad75bc1d6d8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1255a59-86a3-4b9d-9465-7ec5b2150f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571f9b52-ec5e-42e9-8e50-e5a4fe625626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6babbf3b-0e90-4fe6-83fd-fafa75418ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bacf42-d639-48e6-8f0a-399e190da0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acc1af5-3c8a-40aa-bfd9-1b73d640940e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4f3c36-9c66-4f1e-b51b-a60f63c6635f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dd8444-a271-49ae-a328-2fa376036599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f66e74-e600-41dc-84d0-fd07a8b787bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d73633-a515-41ab-b859-c4f79afa715e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ddc093-0651-4720-a7bd-fdd4499345d3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06adfe7-9e17-43b4-8e8a-38bbf1166b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ca1a9c-26de-468d-a474-5372bce828e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c467168c-3ef1-413d-9d47-cd8d40c305b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65c0d13-7642-4231-b3e8-50f97d40e8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5050fcd0-3023-4370-9f4a-f9e1b4a0acd8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8009a948-ddc6-43cf-acc0-10b9808a5638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872059fe-7ec9-48b6-a65a-c11f6ca46d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c236de1b-a96d-4830-8578-86456ef2c620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cce6772-bc34-458c-99a1-6b2d2195a8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704bb6e4-34a5-4c71-a14b-d629a27763f6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91a4247-b040-4de1-8a72-a35b5f507e48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04050299-f7ad-44df-b823-960203249a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4b0b5f-c93b-4b41-a7a9-764b3bc1310c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8307d77f-5e17-4df0-9eb9-6ea5cd408daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb115461-cd70-4c7a-a7ca-9c5d6dae1005",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e7aee0-55da-4864-b802-ea49b25b91de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c059e660-2153-41bf-839e-c7aeb0fc75d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "863ebce3-8fcb-4409-b42e-60c7ceda27ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdac9cb-3da3-478e-b870-81f2fc9c0bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d3c82c-3133-466a-82c9-07c732ad9ba1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e53ce3-0f2f-4620-b7b6-59ea61fdf281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fe61ddd-7978-4813-b087-335652232aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319955a8-726c-49d0-927b-054d6528b90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819e42ec-cef6-4aa2-8b90-a48dca3b55cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50abd056-9bdc-4348-9650-8777dd1511d2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d623cb9-64b4-427b-9f05-4c67a5c80a00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b213d9-dc42-490f-b765-fba791cd8ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95bd7e9-b615-45d8-80bc-975def67404b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c66de2a-996c-43d3-aed5-c2a2830e5018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bf369c-dbd9-42cd-a3e9-0a74a5fe608e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45cc8aa-c360-49ec-b9be-5fc478383983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4312dc85-6898-4fc1-ab1a-eec0bc036fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f805aad-9290-45cc-91da-8e8613a6f4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1f20a5-2637-4a61-afdf-90db32882b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37664634-06bb-487c-a7e3-44ed1a22be16",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3301c81-61ff-4224-bd36-a0a1ed795acf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9529af9a-5ae2-4cf5-be38-89df43215f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b4a09d-d7f8-4423-b71f-f295d85a60cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f973de-fc96-42cd-836e-dd82b81d7b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbda474e-5f41-42f1-8900-dc5de132f40d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c5eb65-4de8-43f5-b919-b6aff957729d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dedb5d56-2a7d-4754-b62e-2b137c22a850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a476c3-55ca-4ed8-8699-f05227227087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd743c8-7acf-4c3c-8eb2-a7201e624cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e1e08b-bfc3-4727-8481-d60a81a49b27",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445fe928-5591-4bee-b232-8185e9905029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b5c8c58-488e-440c-8a94-257bf9f88b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a3780a-9250-4ef4-92d6-a7f76dc60b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebf4cf5-ac8a-4545-827c-3427d6cb90aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4794a6b-47ae-4340-8bb8-3e14a79c75b9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9392105-4ce8-4179-a600-67cc7a1c984f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fab2b67-2fbf-491c-b9e3-3ed5f6644cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33e6227-13cc-4761-b7d1-6955254f742c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57bf05c-9041-4ed0-ae33-1b582e0292c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d34ecd-6c9e-4e3b-85e4-b635e55df583",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f18eb8c-ea53-4576-9ec7-27f8499b073b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d8b0477-31a3-4d99-81d5-46987272d749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5258b2-2c44-475f-90c0-c61c42eefaa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b840c213-b622-419a-b177-805c7cab2f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1571676d-8637-4435-8bc4-38b2031e063a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22c71a6-334c-4104-99ba-02136bc20c8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24c8f1a7-21eb-4ddc-a80a-d8f671b6f6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "792e2e72-3bf8-41ec-9e6c-b5dc42b3a91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680343cb-3531-411f-bcd1-1f8f5f999b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0926c4b-d08e-4ae1-aa7e-5ece11a81a71",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4c04a4-c832-43d6-b8f0-7fcbbdcd9a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a735bf3a-2fc6-48f2-84e3-41cfb734ab2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748195b1-c340-421b-9d95-d5f8f927cca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110ff26c-0840-409e-9ac3-a5a5fd89159e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2cddc0-ab44-4a4e-8fca-cc555113a2f8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2938125d-7475-46b7-83f1-e3922b9486e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6fb3e4e-cbc7-4451-8c4a-2fe0e8ae660b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a77143-a42f-4080-a59a-a1fb3331a317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a68ae5c-0d43-46d4-b9ba-bad7999d3b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c270ad-8e86-4aad-ac04-298a8f0a78db",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a754de7b-4628-485f-9033-9fc281d0077d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1157f0f-65dc-4ae6-b391-f2b1c913b248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3cf245-bd1b-4478-a474-babea746439a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d355ca-6149-48c8-a0e8-8634f63bbe4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758bc450-4966-45c6-adeb-173ccf2aa20c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca1b068-fcbc-4972-9370-002cb632c79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8672939e-65c8-45fe-90a1-7d2f98c8ca9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd48047-52bc-4f05-b7f9-9ee4bfa130be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4458278c-21a0-4755-8bff-19f22f874515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b271b1d9-6759-4edd-b135-fa4adb7e9d3c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60208e6a-eb4c-4b7a-8aa7-64dc3dd3d75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3950d9da-cf30-4086-96f4-2482c1e901d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17785d12-03db-4d64-8d03-dcbdd9fa34a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99e869e-4293-4343-b12e-728d86129989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac1e333-6b37-4391-bc84-849c356dd0aa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a03ee0a-2f6c-425d-b96f-4306b8eb7ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbd94a2-1ec2-4a34-a538-f2134e89227a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bda9332-0e52-4a61-8b21-4f27ec68f05c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0d55c7-5e33-4148-8dde-31784a8364ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0a7c2d-9f1c-4804-af8d-05d659f93e5b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be3fc02-a1a4-443c-923c-9dd5f17851e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec80901-ad2f-4fba-8e27-8c94d9974eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c64cb4-b3ca-4062-8b72-e0e85988d481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013b2d36-66d9-45b7-b06e-070ceddfe8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5361ee-a2cf-4dc3-9a2b-4d72491122ec",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0399fc1-055d-4add-9ac0-102b90632d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55ded15-f550-4bc0-bdaf-6a9dbbeb8f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e212e0c9-e54a-42ed-827c-be1bb1ab439c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee6ce89-dc1d-4e6a-8d36-843d9073bd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c973d24-d318-45b7-ae58-44e3be53812a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ac5869-a60e-49e1-828d-f33a91b5e33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a0adf8-0659-4b68-89a1-02280362ac12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1494e6ed-7350-414e-abe2-e89f2fe1bb47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b004bb68-692e-4ec1-9db2-0bbf9c01a5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde633a1-f1ff-4d3b-9469-7be78957b479",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a96861-6d31-402f-becc-90fe72b08637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2003a0e3-593d-4987-9650-70de9dd6b576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b620a6-1e3f-4c22-90e0-84e94213e5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0cd928-8851-4721-9ab6-423ece6998f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0eddafd-550c-4cb0-960e-fd7779fd0d90",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b04ee8-f954-4e95-85f1-e31894918ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc72eaf2-a4a3-4510-a48e-1772f160e050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202fec08-c4f7-4cc2-986e-17da40cb78fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c00befb-096c-4d5c-95b6-ec21050fd2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adea0152-c70c-4846-bd28-d54208f5926d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9014255e-1d0c-4d32-a5c0-3dc9cd175ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef7168f-161c-4e59-90c1-1202e2a669b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaa1736-2b62-4bda-8589-7352f29533f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f909dc-404c-4f13-9f76-15e7391e4615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780d8087-be65-41b7-b01e-97158d78a6e9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad5b191-5709-475a-87ba-87ffa0250b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aff9457-6616-45ed-a92d-aeedc9bf3fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4ea8b3-6d38-464c-a425-065406f02520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9f18d5-c60d-4ecc-aec6-c5d12d228ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccaf2ed-52e6-40d4-9ba1-090e436f3e48",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34761975-04ec-43a9-b225-4c7e343f0c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9ed83d-ac7e-49a0-bd71-dbe7d37283d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f951aef7-eb5c-4a1a-851d-5ffb6fd06d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fdb6e1-e201-48de-aae2-cd2729ebf3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cddccfe-97fd-4b8f-a881-4f3db93355f1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8fa3f5-8b8e-43b0-a735-d2c303b09f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0082cf9f-32c5-49c1-90c0-fdb4bb23acbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff4ac62-9b7a-4e4b-ba01-05fade39d381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e68c2f-be65-49d9-8f93-52351fb73738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe47369-ba19-42a4-a469-e2bcd3abbd7c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c338c6-0f49-4a43-85cb-658c9c7b642e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c86b51d-d071-46b8-ae29-f9e6ebf763d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db03483-9055-48eb-82b1-2fd06f231cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb8d487-b357-448c-90b6-276d25c2ce07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153a64de-14d4-4eea-8eed-9bb6307f1fa7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531e98b2-318d-49d0-b8cf-25844ed308b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d403e2-c284-4063-91a8-f66a0e83849c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d686b3-9b27-40c4-9662-638571a62f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8945d4b6-81c3-47cf-89e0-96b0c2b0de73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250a3f2e-14d1-4fa3-a5c3-b1a71705c200",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93ce82f-a4f6-4fbf-a82d-1820794c89ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f52e01-7f12-433f-8c66-9a1ca875edf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7784364d-c6a6-40d8-9723-cb3f39d72899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3697a5fd-4f84-41b1-8fb9-d89b0d828606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a246b66d-bd0a-48e2-9deb-f9482032514f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ef817a-7b6d-4b33-ac88-d8201e84730b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7151258-ae56-47b2-82b9-7cac00149989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e699644-e66d-49d1-86c3-b079de323a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c727d7-8cf1-4a57-82d7-d395bc6f0c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ac2beb-17fb-4b9f-9ac5-5adc3ec6ca55",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af2ff4b-6951-4da0-aebb-b4d7785841c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e936ace-54c1-4002-8e90-56ad7c57bcc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72895abc-d01e-42b1-bc81-752ea21f2b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad3036f-5a47-4b93-bf5f-efea65530de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba571de-e287-4a0c-8d28-88534fbadcf4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc1d16c-8436-492d-8c85-183cdbaeddbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72619fa-08b0-4756-98a6-bffba9094001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9864026a-adc7-4c03-ba53-2d67122d93cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e00c55e-261b-4e10-b95b-bd7741e6f274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14269451-3431-4ac1-8944-d0bfdf735721",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaedb80-4996-4376-ad19-517aad2389db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e661f284-1cd5-4088-a40c-bbb9de543bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cba48f8-f6ba-4e44-af70-d397a9803074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa33fa30-5b25-479e-8164-5acb768830b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3e79ab-f3b7-4aaf-9dc6-72977e53f299",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa66c226-46a4-4a39-bad3-08c375df2808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8e236b-53fd-4b6e-83a5-6502ae849d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5eee51-e034-4b63-be50-8036108ab188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749a1e81-fd2e-45c4-a990-056c0ff4aba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d359b19-0727-4be7-8f3f-8455d8b151bc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb69a55a-38f8-48fa-83dd-00dbf0630f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8b4f87-d0ed-405e-808f-1f2987e595b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc8430a-50a8-41bb-8997-72284f001f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d286a68-1f95-4bf6-abfb-feb0c3fec193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2821d9-d332-4f63-8993-0d7e1dfdb760",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afd745d-cd22-4ff5-bc36-35aaaa1064c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92996481-c337-46d2-aee6-f0a8a0c6ec9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975cd143-d396-4224-a139-f88179fd3cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71eaf16-4c07-4c0a-b686-99f4d5ec7716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3050200e-7e2e-49f3-ba07-d9ff12755695",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957d1220-e769-43f3-8979-85f3391da460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23e0b52-f86d-4999-936c-7d5b2111262f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d2cfc3-dfd5-48b5-9356-b9182181ffce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007250c3-b5bb-4110-b127-53f1ad491650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4187debf-12d2-4282-b70d-d98ef3782b1e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf0fb1d-0281-4374-9e36-2102eb3d31d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902a069b-fb81-4663-89dc-3bd29bbc91bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151a2689-e4f4-4613-890c-43079ff4340f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fb21f4-3204-45a1-b92f-b65b5d8d12bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d227db3-9629-4abe-b1a3-e74283ffe3a9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa76452-a645-4447-b5b4-9eef02012875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956aa3a9-3ed4-49a9-8a54-85e7dbcf23c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0b22f7-4014-48a3-ac7d-5a5125d65e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100b3169-f79a-48c2-8c5f-0b5349060141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f787df29-1b60-414b-b45b-86945986593d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fa6786-a1de-4093-9467-98ed10e743d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caec12a8-fb89-447a-8099-56bcd762f8d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faaf985-0196-41fe-837c-f7faf6b0f24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07139466-e0e2-49cf-b5af-0752ba99453a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfbcb30-c2a4-4f13-8e4f-540053b22052",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1987f8b-e904-4d23-8030-21dd0a963256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78d865c-3c52-484d-8947-6905edc068f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbd3571-b640-461e-b765-9520798621c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3527925-cb01-4436-865e-05d682712158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0569af4e-4af0-494f-9b60-6d1254bf57ac",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e7f365-ea9e-4aaa-9819-4c4cacb0845d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "862331dd-1357-4246-bbcb-4f4df1f6493a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab07fa02-e669-4b10-82ec-a652847ff56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42fdc95-5a65-4e55-a862-832338cc7cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c5ed06-183c-49ad-83e3-28625edfe829",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae79560-8e19-453b-a74f-431747bf1d62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b56498-c19b-4698-8fad-436fe4fffd3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbe7c70-9072-4460-9f81-dcc123a67e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02515fee-c6a2-461b-a9cf-3ddc5a9117d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d112601-e709-4dcb-95f7-79745e24ab4f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a57157-c461-449c-86ad-75893be0fd96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8580b232-d39b-481e-95b5-50acb644761e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ef0a49-88c8-4fac-a163-d06441854ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee06fced-b6ae-42fb-ab12-ecf69b2ca712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f65887-75af-43d6-8057-c05f8d5e4425",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057495b8-10af-4252-895d-4a0ac268c52a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e07e771-61ad-4e0f-ad2f-d31cfcf5b65a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca800ea6-4f4d-407d-9694-394778ae9b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2960a5bf-0185-4afa-a10a-86f4585fbbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cab4f47-617e-4e56-82e2-36b4971c0ac0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4199ff22-d658-453f-ba28-1a078cf671de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661c6a62-b43a-4dfb-b4b0-6fb3f07a2c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdb4e12-e3c0-43ad-ba85-96780ed7b02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c297da2-1024-4929-b54c-d3a8c2691aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157e693a-4549-40ae-9d01-71ed314f5463",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09ccee5-e862-4a4d-b234-010d81e52224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eda4d5b-f922-4005-a4e1-188970d878ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31eea31-68bb-4c48-a296-e734120ee955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c949666d-292c-4f28-90ed-8c0015fa10af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19da1417-e141-47f0-a1a0-2b167e372623",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49383475-2958-4f97-9e64-6cb461a5a40b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ace9e6a-5b60-45c6-9587-91c8d5445938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d58dafa-75fe-49ec-9940-e1e20d3a7602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3add970-9be7-4e16-81de-c668abe91f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6632f3d-656b-4727-a35e-f280bda25bae",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743adee1-7452-4c13-9927-75886d0769bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d5f16f9-cddb-49c4-ab8e-864c8700c476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4806bdc1-43fa-4fec-a0c5-0c990ff68eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b9263d-a643-4cb2-9737-b8b59c8708d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c798dcc0-ed2e-43ff-aa86-1137dfb71fb9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9e4761-c396-4365-9a40-2d9de73b7abf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c9a6fdc-f13e-48cc-a158-1f22d0746ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d5d681-6482-4297-ae5d-f78e5fc595fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1a8478-98f8-474a-9e6e-b57d4badbd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a10091-1787-4db1-983d-288e273b853e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ee1808-b797-4b2b-94fc-bde64a916af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7580403-579c-435e-9c54-4f28625c5889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd02cf8b-0513-4bde-8cbd-40686f6fc414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1e45f8-a8ce-476a-b0ef-4eeda3e36b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b457fbc-9988-436b-a906-18b42ff35aff",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62af327-6b1e-462b-a130-23ba660e4508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ab3a0c-fcd4-4de8-be75-149b87e020a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fae1314-2908-4d37-a1b8-c4d983bd2130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8aa7c0d-6b23-4ae0-96b8-35a93fac28a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e37248c-b11a-4269-aa40-76baa191d8b5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb01123b-cf86-4da0-9010-d78e0f7b5648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e94e18f4-4994-46fc-a2fe-0a2f4856df50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22061fb4-d5fc-446d-a2c8-456aee297a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053b2c38-2e07-416f-af92-83de43421c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77055c2f-8e8b-43ce-9ab2-ad46eb845ab8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43c743a-1b7f-42ca-a402-e88f4bbf08ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23581159-9061-4435-9a3e-a7a28a0defa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec82d30c-7c96-494c-9e0c-30f788322949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e60dcea-d321-4fe8-abc3-080454d39a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389fd7e7-5a26-490a-9cb9-dde94d8ccec1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650bbf65-7b66-49e6-bed4-06add28c593d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b52091e-2bf6-4930-87f0-ec9f47e1cfb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28242e0c-e66b-42a7-a8e4-ec786689e0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b71f662-2b53-467d-948f-88c898de1d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a47a02c-e6fe-4aec-ab79-ba7e9ff61c5a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3042ef21-6928-41d6-b757-924ed4f9cfbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1763fea-c8a3-492e-9f15-31fac51a2bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b62e529-5210-4515-bcc6-7519936f021a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da61b609-67b9-40f8-bad1-b691a4eeaebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b989b00a-60cb-4a01-839f-e6eefbc1e754",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf715678-335b-40e0-8f38-3fe65bbe034c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a433a2-a0bd-4f90-82e7-86c3640496cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81efed9a-3e9f-435b-a605-274e32fc3e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f488eda-f0a7-42f9-8483-0da3d6da72ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a6c3a7-2c19-496c-a934-33977b38234e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97746124-c73a-4f2b-8b9e-0eaf2d1f1977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ac800e-6702-4ce3-8aad-0907c1216507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab997a23-7bc8-456a-a43b-eae862209fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4f7f50-5e0a-4d7b-a420-b58801021551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc96f6a7-d424-4758-bd44-f77afcf09550",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7abc55-13e7-4d0e-84ca-345c68d1d825",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcf801e7-5b1c-4e76-a209-e8d2069cd709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac387048-50f5-4863-8b30-ecb8584438bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707e1388-f602-4e39-acb0-dd53eba80a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3fa0d4-ed9b-40f7-be9c-434934571b19",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4beb1df4-30eb-4b44-bcbf-d254a10aa942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1e6ae1a-1e49-4b68-9bdd-85f64f4bf68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedbb2c3-93b7-47e5-b000-3894f7494039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5991a39e-c72c-42e3-8dd5-3d69074c8156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33c2103-8a2a-47e8-ab85-7c161e3c5f5c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7863d73-fa12-4037-b6a2-2879fb949168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8816c2af-b524-4fbb-a1e4-ba428d408d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6ac55d-34ee-4d70-937f-b93b9482041e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9119ba-23e0-4683-937b-7c6fe4a1ba28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b25898-8b8b-4adf-a28c-02d74a5ac500",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe2610c-0f78-480b-ae51-c7458862db62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f330816f-3786-4c19-bce6-9a2e55bdc45b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "044adcd8-0bae-4672-b5e7-28cc698ba719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1eff7f6-b804-4fb7-b833-ba9a6280a201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff6e284-118a-4de7-8e7a-f714739d5739",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaa93e4-7c2d-400b-9c23-0d65f17c4966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc33c3ef-b91a-42ab-8a19-7ddad67c2752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1b606b-6774-4d7a-b0d3-3eb5979f18d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc44184-c6cd-4e9c-ab32-09f2bdb999f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf2eced-5f0e-4d3a-8e13-d14852b928e6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048fe7ad-3e3d-4858-941a-d794c857c3ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b3ba7f6-2504-4421-91d0-aee59fd3106a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9444a283-022d-49a9-81e6-5c6aa8bd4f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1c699f-35d6-451f-a8f8-b7d9c2f0a2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3190a09-1d67-4384-b3d9-a6e5d2fbf00a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ab127c-0470-4f95-8d32-70ad249f87fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12debba3-d318-4e5e-b104-9983e0aff963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9cf6f7-8ef0-4421-85f8-9fc4bdc6386c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d7bccc-7106-4ae9-a9e1-dab60399fbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8bb163-1df6-41e1-8a2d-cfb0c1a4deb0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b634c3f-429c-4b6d-a327-1a8163fb07f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24ec4d2d-cf7e-40f6-8e38-f6a1cbfa1caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d59cafa-968f-4814-b332-2dc571863151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ae1cbf-23bb-4d6c-b86f-d90bb376a767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8ae185-9154-440c-9c19-1dd74134f901",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac55294-7083-49d6-94f4-e4dd05cf9550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2ead15f-faa0-4aad-b530-f05ee1283d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a21fab9-591b-4127-a490-676f4b0ec55b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2044d494-3e8a-4342-b4a6-4feec0b1761e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20a569b-1418-4013-b50d-44a2b370532b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24fa02a-a04f-45db-b59d-22dc70823708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc972e8-767c-4d9f-a001-aa1b2039dc94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7883599a-d88a-4752-866a-4b51bdd87a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1a40c0-f773-40af-9f6d-434ecc3fd270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f203d7d-805b-4597-b245-322f11d1167c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95895b5-dba9-4520-8df7-20fa075e3599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1db83a2-e04d-4cdf-8438-d3ed5eb8544f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a011c1b7-5c01-4c0d-8ad0-4aaef9cc1b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfed813-7e61-4d7f-8da1-5cb7678344db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612cc64a-2ba2-47ce-a3c9-6cddbf3a3b2d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107003b7-54ff-4a06-bdca-8a312885a1e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04e6ce4a-1f00-4465-adff-fb697c57cb3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5123021f-e32c-4409-9f07-c29c3d8292c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9dc53e-d96f-4630-bf4b-8bf88792af66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2973f442-5c93-4ef0-93f6-273ef5a9a407",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ca9a14-8625-4577-b994-1a2aa163548c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4936e96f-9f73-419c-bf6d-4fd9b01031a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4481d7aa-6f08-4eb5-8747-9e10387af607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3103b9f-742f-4b27-af54-a0e4332f5fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b085fa7d-b94b-43cb-aaea-af4fe6f57d96",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2d4135-6b29-4fd9-8e9f-fc1f7e5902b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b8872f-259a-489f-aebf-7066e4a2e3e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b39d654-3902-4a18-8e11-8546e17e0561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966310cd-f914-4023-8cbd-2f5d23b816e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971adc7b-db96-4c73-84bb-52ac5bf5b036",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ff4630-d2a5-4454-9b8f-f696350e1806",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "890fad50-2970-48f4-8b41-5d3c122757d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840dd506-afdd-467f-8d2d-a249deba3cc3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd62967b-43a3-414f-b883-c3f59abe6a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dd320e-8cae-46f4-a1c3-ca6f7691dbfd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dd880e-fa7c-4bc8-9cf3-a7dfdb796e14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d0af92d-40c8-4b27-8969-eb12e4748c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e047cca0-7fed-4ae6-95e7-211c81f802f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d07c707-bdf8-44b6-87e6-6b209559bdcd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a407fff-9531-4560-a013-939debddc1d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be81529b-9250-4daa-9dc4-2aafb4fb8560"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef9ce03a-93a2-41ee-8ad1-7f12eba605ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce6226f2-9b20-48d2-9dd7-b5d6ce011755"
                    }
                  }
                ]
              },
              {
                "id": "238d37ff-82f2-4be2-a706-af35ed467e99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a4bb44e-0071-4429-bd53-44727e44f72c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6a5e19-3240-4a08-89a8-6e6f312e822b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0c521b9e-a763-49a3-86e7-ce7f10d67f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8622dd-1de4-4e0e-b124-12445261a7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e79a17e-40b9-443c-801d-2151e5c5555f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf0e769-ae40-4c29-93e7-179204156189",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eefe318-8b04-4a5c-84c3-97ecbea58678",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "30799287-59f7-4382-b0c6-81c351f30cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cad313-353c-4c18-8bec-950ed361a244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "381a2ba4-984a-4a3c-8b00-b50ecfb70396"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fd0949f-69da-4b24-9130-211d652433d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4fc3572-163f-46f3-a0fd-223e206451ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3355821-34af-435f-b09d-739b05747930",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3f2b8bf-58e0-42da-8552-8b2006cead0b"
                    }
                  }
                ]
              },
              {
                "id": "c364116d-0ce7-4b05-ae9b-cbc892622e91",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0916b122-306c-424d-b243-a17151c56fe5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ed905c-f247-4e38-b507-580f740213dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c807bac3-5d16-4e2b-bab6-723722c3c9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34cc05a-2fd4-45d0-82b8-6e7e0cb6a08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb3a3a8-9670-4793-b118-f24d536d45e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1eec74c6-04f0-4126-8cbc-0e541e92ab87",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d29264f0-b101-4033-86bf-8dfb987ffccf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf216e9b-09c7-44f7-8f0e-e904d643df0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "01a6aa44-9cc1-4c7e-b683-bc214c9177b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12d70f6e-2bb1-4802-8e0f-6e4d42b4abf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a464615d-9633-4237-8089-cbc571e44de3"
                    }
                  }
                ]
              },
              {
                "id": "246b0e80-7a1e-4c90-af7f-c23a40677ad2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7cd84bd-09db-4500-9516-ccb9a51d5da8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d12d721e-6b1d-4375-b23b-c38721684301"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca0d42d8-1ceb-4b39-927c-f32633ced4cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "108513c9-de11-496c-a8c2-faff1054d470"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7447199-787b-480b-ba96-626cfe921632",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0f6d1b71-70ab-46ff-87e4-f78f47a37d7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6114cdba-ed09-4238-92e5-34fb9305533c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f74c7b2-e9d0-4e05-9649-ae5ab7d83314"
            }
          }
        ]
      },
      {
        "id": "18fbbf39-8291-43dd-9a10-4147d3b25f06",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cb649154-b73f-4e61-93d4-36c70bca53c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "762292d5-3c62-4628-ad90-a05856d89a4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46c1591a-329d-4da7-b8a1-ea17f4189ef5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242d9ab3-4d59-4f52-91a8-0b00231030d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fd8b76bf-45f5-4498-8077-e5b0c9c134a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4a13c0-474a-4715-b2ee-d878948fb1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34ba9170-bd71-4af2-a474-6e375ae7a5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d1ce5c-a2a0-4b5e-af92-f2f35a465502",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e3a7ea-618e-458a-9fad-490726238a06",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c771bba7-07b5-4f4c-8385-8aa752109b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a24ea93-6c59-4995-909d-808191df0b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de5f5a03-5989-43c0-86cd-08ac50267e3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06b37d03-bcbf-4e64-81c1-6666cd4908bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "818c150e-1b72-4337-bd29-840da1e6026d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c41e2d5-03ab-485b-b872-90a287dbe72b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fbd7459-0a7f-4434-8fec-9330c08caf44"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc6a94e0-86ad-466d-8da5-dc406f73c33d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "69459199-e31f-4bbc-a956-a861678d5b51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a559db0-035a-40af-abf9-45c9e62fe4ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e209bc5-347a-4c6e-a718-5fca42721da3"
            }
          }
        ]
      },
      {
        "id": "3939e344-d84c-4fb6-970d-519d93087f4e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a69b9d61-c224-4200-bbee-23966f265ab1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5adf57ff-ae94-4839-8c47-b34a4c94a1fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba22e6c4-fada-4e42-bf0e-a377e14b9853",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafa4836-1863-4d30-8062-99b3312512a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "258adb3e-e123-4b88-9f21-5768b46bc1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "040fa3a5-428a-404e-90e7-3115c752cb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53f745ca-7270-497e-a320-12b7306db4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd87aec-d749-4e14-add3-25509af0d74c",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8174bebb-7132-41da-8bb7-1a8830d70bb9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c12f344c-b09d-4e1d-86b8-8af07b08a4e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d210a5-5a53-4aaa-85f6-2c60b49e6ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07ec888b-2fc6-400b-9b44-30f36c015484"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaefe6cd-fb4d-4648-a421-0c5f51515891",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb9452e3-4707-46a3-86fe-81d992331761"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9de33fe9-27cb-4546-bb92-bf9f55ab15ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5866f0f-f9cd-4ccb-8a76-954b057d6e26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "988427e2-24b0-4b77-a2f9-31da5335d46d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1dcdf760-0e47-4b45-bce4-9d874226d5b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ace4b53d-9324-45e5-a738-a31b5e73d707",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d90510ab-55a1-466c-8c74-b375b451a365"
            }
          }
        ]
      },
      {
        "id": "da5a627c-eeb0-47ff-ad02-a52a7d1ce064",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d2350825-024d-4a8e-8b7a-b167ac24da2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b706372-5b93-405a-a3d3-fa57b4f08640",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd5dcaa5-98d4-4395-8c2d-33b2a19075e5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595108a3-823f-4a4e-abeb-6b6cda7ec9f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c2c0a29-7653-44dc-8ea7-37f803868d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1ec3ee-246d-4e2c-886b-f666b8233321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7abde5b-e5dd-4c7d-b064-70d41832edf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a8c0c2-6c15-48ff-a08c-06585ad873bf",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c2433a-96f8-4c76-8a8f-b27874667d1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "624593cd-9173-4bc8-afaa-e24fa101ae43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3fa558-42ed-4bf3-a353-f6f9f03d18e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d2182f9-44f3-4d8f-954f-d6e5a4f8bc4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb7c06db-dda8-4cee-b305-05b805b0175a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4d74630-3b26-4354-81c7-2f620537e784"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d47c0e18-e4b2-49fc-86aa-ccc18584a628",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bac3b9bd-baf8-4173-b5fe-b5e93c061cbb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "299e0e91-0de2-44f0-a4c7-32635ce94457",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "beb22d40-cc37-457e-bf2a-1f4f399bfcdd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b87ea386-171b-4351-aa73-c58230730e54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a1dbf58-135a-4dde-bea5-b4e325e5281e"
            }
          }
        ]
      },
      {
        "id": "af2fb853-b4f9-4873-869f-4535e765d878",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b37a01b-6393-471b-9a12-ceca00ca88eb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09290f6d-48d8-47d5-858c-e0972cf1b0b1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e73a8bc8-4997-4f86-b8f4-cfeb54d3d673",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "925550d8-2727-4181-8dd7-7c0034985734",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6db9dc6-8853-43b5-ab64-8fd8478be2b3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 15.576923076923073,
      "responseMin": 3,
      "responseMax": 319,
      "responseSd": 45.642484491234114,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683592639759,
      "completed": 1683592654271
    },
    "executions": [
      {
        "id": "e2622edd-d071-45c6-aea2-f3456b8f1e22",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bcb184db-0873-4576-bb54-11507f433950",
          "httpRequestId": "a284dffe-e8b6-40d5-98b2-e8e42bc63c3a"
        },
        "item": {
          "id": "e2622edd-d071-45c6-aea2-f3456b8f1e22",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d8fa60b7-d380-4081-a7d4-adbbb8b768c6",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "5dc5972b-38ea-41f7-ba82-a1f055e8789e",
        "cursor": {
          "ref": "06b6edc3-d249-44cd-808a-51af6ca12e39",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "50df555b-f593-47e0-8d5e-99e2f35fd394"
        },
        "item": {
          "id": "5dc5972b-38ea-41f7-ba82-a1f055e8789e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7ccbb2a2-5b9f-47a8-99f4-4c9e0979ad82",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "05a96242-32ed-4df4-969e-1c1080d8b965",
        "cursor": {
          "ref": "42726f22-e9c9-48ff-a65d-0514b5e8a1f2",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "921f3f18-89af-48c0-8272-fc46a7c737a4"
        },
        "item": {
          "id": "05a96242-32ed-4df4-969e-1c1080d8b965",
          "name": "did_json"
        },
        "response": {
          "id": "990a2bdb-1f77-496a-8e19-5fe37bdd87cd",
          "status": "OK",
          "code": 200,
          "responseTime": 319,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9742d865-64b6-49e6-b4a7-2d03f31eda97",
        "cursor": {
          "ref": "22c06e54-fd5a-4787-ab06-fbcebc9c884e",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "56fc41e1-d59e-4178-ad7b-fe10b9d35bc5"
        },
        "item": {
          "id": "9742d865-64b6-49e6-b4a7-2d03f31eda97",
          "name": "did:invalid"
        },
        "response": {
          "id": "e67fb855-0a40-4eab-bf4a-391d9b09be17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9742d865-64b6-49e6-b4a7-2d03f31eda97",
        "cursor": {
          "ref": "22c06e54-fd5a-4787-ab06-fbcebc9c884e",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "56fc41e1-d59e-4178-ad7b-fe10b9d35bc5"
        },
        "item": {
          "id": "9742d865-64b6-49e6-b4a7-2d03f31eda97",
          "name": "did:invalid"
        },
        "response": {
          "id": "e67fb855-0a40-4eab-bf4a-391d9b09be17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7760bcb7-2422-440a-8205-5b15f6d315cf",
        "cursor": {
          "ref": "3f077401-e982-4ae7-8d3a-2b9938940894",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b5eba0fc-d36b-4d4c-ae0b-a5fc63f36d11"
        },
        "item": {
          "id": "7760bcb7-2422-440a-8205-5b15f6d315cf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "95c07c31-86a6-4a23-8865-090fff9939ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7317e333-a3aa-4d2b-8f5e-9953b98a87be",
        "cursor": {
          "ref": "e24421be-e538-4a78-83e3-52e19f8918f4",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "368b2264-a286-40d3-bae2-ddc3f307c7c6"
        },
        "item": {
          "id": "7317e333-a3aa-4d2b-8f5e-9953b98a87be",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b9f80a9a-4fe0-4350-9659-183011f74524",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc439ad-833b-46d3-bdd2-14fbe55860c5",
        "cursor": {
          "ref": "3c920708-ca6a-4069-b1ad-2860c20a61e3",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8b5314f9-8695-4650-b9aa-611380893aef"
        },
        "item": {
          "id": "2fc439ad-833b-46d3-bdd2-14fbe55860c5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "10a11651-462a-4f98-a30b-52725055e54f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a6efc2-d9a1-4186-90fb-4a5a00a4ec33",
        "cursor": {
          "ref": "d62d6869-fcf1-423f-ad30-26c1c48fb03e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bdbad352-f240-4901-9277-79efdbbb110b"
        },
        "item": {
          "id": "d4a6efc2-d9a1-4186-90fb-4a5a00a4ec33",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e82e3339-7ae8-4d01-8188-32b9afc5672f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a6efc2-d9a1-4186-90fb-4a5a00a4ec33",
        "cursor": {
          "ref": "d62d6869-fcf1-423f-ad30-26c1c48fb03e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bdbad352-f240-4901-9277-79efdbbb110b"
        },
        "item": {
          "id": "d4a6efc2-d9a1-4186-90fb-4a5a00a4ec33",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e82e3339-7ae8-4d01-8188-32b9afc5672f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43489eb3-ca12-4d17-bbde-29d66742648b",
        "cursor": {
          "ref": "890c4569-7344-435f-8756-dc7e9d5bb2e2",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5d711a23-68d0-461a-aa90-3571ef29bfef"
        },
        "item": {
          "id": "43489eb3-ca12-4d17-bbde-29d66742648b",
          "name": "identifiers"
        },
        "response": {
          "id": "b3d9aa6a-403e-49af-b593-8377a5915765",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7789e5-2eb3-4504-81ab-7aae15895c6d",
        "cursor": {
          "ref": "4d8fc584-72bc-4861-8278-40cde8e0b495",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3bfd2ef8-df28-4dc9-81a9-15d2a3fbe70a"
        },
        "item": {
          "id": "8f7789e5-2eb3-4504-81ab-7aae15895c6d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ed4b25b2-315a-4aff-b6a9-80a0327fa28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7789e5-2eb3-4504-81ab-7aae15895c6d",
        "cursor": {
          "ref": "4d8fc584-72bc-4861-8278-40cde8e0b495",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3bfd2ef8-df28-4dc9-81a9-15d2a3fbe70a"
        },
        "item": {
          "id": "8f7789e5-2eb3-4504-81ab-7aae15895c6d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ed4b25b2-315a-4aff-b6a9-80a0327fa28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed68c496-89f1-492b-93e9-3bf893bae648",
        "cursor": {
          "ref": "77a3fdde-7cb8-4f17-8009-d3869156d939",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d94f69fb-7591-402d-8baa-cf6d1b0079d6"
        },
        "item": {
          "id": "ed68c496-89f1-492b-93e9-3bf893bae648",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "765e160c-54d4-4af2-909f-944547333306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b079f2-4518-4c0c-987f-ec63e4937506",
        "cursor": {
          "ref": "4a3ab222-bf11-43e0-9691-28f8e7bc7b20",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4b6dbcbc-ec21-4cb7-8927-3c036385b8c6"
        },
        "item": {
          "id": "f9b079f2-4518-4c0c-987f-ec63e4937506",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1faf472d-d843-46ce-b26f-aa2ec99f8a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0e4538-6ec7-424e-9716-bfef79b2fc57",
        "cursor": {
          "ref": "5d4e3397-4bac-4e30-b467-871bede99dcf",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cb3d87be-07c2-48f7-a31b-97328edda54b"
        },
        "item": {
          "id": "ac0e4538-6ec7-424e-9716-bfef79b2fc57",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7283a65b-d48c-42c4-b5da-17d62b022204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90179ec2-1ae8-495c-ad3e-ef6585c33ba8",
        "cursor": {
          "ref": "17aed93c-f229-47ec-88dd-302ddbb78a96",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "babdf5e6-e4db-4d3f-aa0b-f489e77b22a1"
        },
        "item": {
          "id": "90179ec2-1ae8-495c-ad3e-ef6585c33ba8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6dd3c960-9c22-4152-a41b-beb923809d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9314b69d-6e60-42b1-ab28-1dd4021a873c",
        "cursor": {
          "ref": "915040ac-6c1e-4b05-8d3c-bd9c663ed282",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "240ed6ec-310f-4271-8c11-a8a1fd9d92e0"
        },
        "item": {
          "id": "9314b69d-6e60-42b1-ab28-1dd4021a873c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "31cab322-eb96-479e-aa6f-b413dc215902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0811ca8-47a6-40c3-aa4e-f078d457c902",
        "cursor": {
          "ref": "b46582ee-f01e-4bf0-a7f5-b8770a4158c2",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fd191783-bf37-4d64-a0e4-8a45223942ca"
        },
        "item": {
          "id": "b0811ca8-47a6-40c3-aa4e-f078d457c902",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "72ea6c7a-fe1e-4481-83f6-aca3213d0143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0ddb71-19ce-417e-b33b-1ffe05d2b735",
        "cursor": {
          "ref": "fb47d406-002d-45a6-9072-5560e2c50ebf",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c638ffcf-a895-43db-9af6-0c80b572246d"
        },
        "item": {
          "id": "ae0ddb71-19ce-417e-b33b-1ffe05d2b735",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fd162436-0512-43a9-856c-1ac422b5d81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550a61a9-7e0d-4f38-a775-75c17a115a47",
        "cursor": {
          "ref": "5927083a-a60b-4ef8-924c-c3f66b4da762",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5dcf5fa7-fa6e-4e0c-9fa9-fa2fa0d5a3c3"
        },
        "item": {
          "id": "550a61a9-7e0d-4f38-a775-75c17a115a47",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "aa51c239-b55e-4341-9d19-b584cc025668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ab6e0e-c9a6-41bb-ac76-a1815606659c",
        "cursor": {
          "ref": "43dcf461-67c9-4674-938b-8f39149697d8",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b675d869-c2d2-49c9-8e04-cbe0f8943b0b"
        },
        "item": {
          "id": "71ab6e0e-c9a6-41bb-ac76-a1815606659c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fe620d79-0f02-4ae0-900f-ebe716088253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c06f3e4-9b2c-4138-9892-ee83091f5bba",
        "cursor": {
          "ref": "0024d43c-f893-4a1b-bdb8-b4790fc1fde1",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6cc99bdc-d8f7-44af-9e38-e163c4088c26"
        },
        "item": {
          "id": "4c06f3e4-9b2c-4138-9892-ee83091f5bba",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "14b2ea22-8812-45fd-a6b9-53e5a95305d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5bab5f-72b1-4009-bdeb-cc5cbc771d20",
        "cursor": {
          "ref": "e5b83d7e-739c-45c2-9ec2-dc7660ac2bfb",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f6ce2362-95f1-4865-a84b-ec4bc9d83cf6"
        },
        "item": {
          "id": "5a5bab5f-72b1-4009-bdeb-cc5cbc771d20",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3fe9c261-35db-4e9f-8c16-eb37b4c19a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b021507-1da9-49ef-91a9-b87a6b8b4863",
        "cursor": {
          "ref": "d859e324-4088-48be-89f4-ae91ac1ccde1",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0e67fe1d-8e92-43aa-94fd-3422cbd6ac44"
        },
        "item": {
          "id": "9b021507-1da9-49ef-91a9-b87a6b8b4863",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d17d5ec7-31ab-488f-840a-eaf10949d9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0eafd4-510a-4500-a737-fde9727f6aba",
        "cursor": {
          "ref": "d3ac0919-31f5-48bb-9703-3086bbe80ea2",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "55547fdb-7bdb-48f9-9656-64ff5d100e42"
        },
        "item": {
          "id": "5f0eafd4-510a-4500-a737-fde9727f6aba",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "294e4975-aa95-4dce-bdae-9b0bbb06bdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dc406b-a1cb-4b98-9b7a-4d0d76df9e33",
        "cursor": {
          "ref": "7bf9935b-aa94-4458-8707-b3b04da6b956",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "494434d3-83f1-4d0c-bc83-541fb9931fc9"
        },
        "item": {
          "id": "75dc406b-a1cb-4b98-9b7a-4d0d76df9e33",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c15cc206-749c-484e-a9ad-414a7102dc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2eb38b-3aea-4cb9-8ffa-9b09e62ed599",
        "cursor": {
          "ref": "1370c1ea-ed65-4923-b981-9ad398c54351",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1f12ff23-ad20-40c4-a1a3-07c7e450d879"
        },
        "item": {
          "id": "db2eb38b-3aea-4cb9-8ffa-9b09e62ed599",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5a25c719-269a-47dc-86de-b0e83c774712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91573cc8-5f45-4e53-a40f-18d2820a3420",
        "cursor": {
          "ref": "6bcf7382-af53-4a75-9099-c749c14b91d5",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2ef3bf7f-a92e-499e-a3c1-50f17d69a60f"
        },
        "item": {
          "id": "91573cc8-5f45-4e53-a40f-18d2820a3420",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7382076f-6390-408d-a97b-4e480f868c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9ddd2b-679b-4806-a1d6-21d62464f9aa",
        "cursor": {
          "ref": "f6f2a50a-9e2c-46af-b078-dfbdf030a5c7",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "42046c44-b9c6-44a2-9985-2e8794c66749"
        },
        "item": {
          "id": "5d9ddd2b-679b-4806-a1d6-21d62464f9aa",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "378d9b99-1590-4a51-bd64-f24f654e163d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d98c1f6-c2ff-4064-b2fa-a99d2153720d",
        "cursor": {
          "ref": "f9e97564-6047-4145-bc25-602c83aa42e4",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "25b0629f-9373-4e2e-b3ca-034e46357b18"
        },
        "item": {
          "id": "4d98c1f6-c2ff-4064-b2fa-a99d2153720d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3105d001-7fcc-45c5-9ff9-3191794dc02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1362c8-f791-4a44-982c-b71d4014181f",
        "cursor": {
          "ref": "f420f8d9-bd4d-4383-947b-6a8d83fa7c8b",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b0e5275c-1a45-4509-bce1-c36e8adc1e13"
        },
        "item": {
          "id": "ee1362c8-f791-4a44-982c-b71d4014181f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0518e306-99cd-4bf2-804a-36314d8f5b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad64b2c5-77cf-4bd8-aa7d-88f1246120f6",
        "cursor": {
          "ref": "120d0ddf-2076-4b77-8c29-5313f4ad709a",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "52bf85b1-8e5c-4733-b89b-f390c344920f"
        },
        "item": {
          "id": "ad64b2c5-77cf-4bd8-aa7d-88f1246120f6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d28109e2-7c07-4280-aaac-ddc0dd993a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab73f857-6869-4e9d-bc15-8011bc6dc650",
        "cursor": {
          "ref": "155ce837-d37a-455c-a758-f2ee8f80c211",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ec3a241e-ee00-404a-8481-d7eb436d683c"
        },
        "item": {
          "id": "ab73f857-6869-4e9d-bc15-8011bc6dc650",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dd5031c8-d459-49da-920a-28ce55aff962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5548820-784d-45f3-ba8b-76564db7a469",
        "cursor": {
          "ref": "d1820baf-bcdd-41f5-a532-e704b4ebe43d",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cccddd86-9865-4c84-9342-f3a6c2d2ed4c"
        },
        "item": {
          "id": "e5548820-784d-45f3-ba8b-76564db7a469",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cdf3e578-de78-4d17-90c4-17c4c75fd283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2bdfe6-eec7-4169-86a9-d169b057fd61",
        "cursor": {
          "ref": "27104c44-e87c-412e-a889-4645e9e0b832",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2323c766-4576-44f6-b35e-4bfdd0a16b04"
        },
        "item": {
          "id": "1e2bdfe6-eec7-4169-86a9-d169b057fd61",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a7f086ec-629c-4ce4-a2a1-5cf513a7dddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c03b09d-2c31-4a42-836e-8407a939da87",
        "cursor": {
          "ref": "88244c39-b4d6-47dc-9e35-e92bb6329c36",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "45d0b0d0-4367-4cba-8f64-f647254ca63b"
        },
        "item": {
          "id": "9c03b09d-2c31-4a42-836e-8407a939da87",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e3b72053-3611-4b0d-95a6-4f8ebed6dc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a915212d-9452-41d9-b14d-25852064346b",
        "cursor": {
          "ref": "1a80619e-cc0d-4add-a8fa-782284118f3e",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9ef4f6f0-4f52-4740-9b65-20603af4855d"
        },
        "item": {
          "id": "a915212d-9452-41d9-b14d-25852064346b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0a05d321-9064-4d8e-b6bb-71aa5e18f73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddd039e-7968-4074-8eb9-4f01915734de",
        "cursor": {
          "ref": "43d37fc9-2991-459a-b53e-3688981307ae",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1aa14f7b-ecd0-4f9a-a1e6-ae970de32111"
        },
        "item": {
          "id": "dddd039e-7968-4074-8eb9-4f01915734de",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "78dc9738-9be0-48e8-8c6c-d8b9e8d8e304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ee5a50-1f84-4743-983d-f73ee6daa980",
        "cursor": {
          "ref": "56732a74-8ee4-4c5d-93b9-1de489778675",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9b92d235-562f-48c6-a278-c5b334bc8be5"
        },
        "item": {
          "id": "97ee5a50-1f84-4743-983d-f73ee6daa980",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a9c87594-4032-4783-94f4-d29c2ca65177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28dcf56-123a-4ec8-a2c7-bb2efa17f467",
        "cursor": {
          "ref": "c9ac7748-9723-4a8d-976c-07005e7217d0",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5c95bee5-3bdf-4862-83b3-3930459eff4b"
        },
        "item": {
          "id": "f28dcf56-123a-4ec8-a2c7-bb2efa17f467",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d4f7f79d-c641-4d9a-b4e0-f846fdcbea85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c795d7ec-6f35-4b9f-bac7-08dfbe42a65c",
        "cursor": {
          "ref": "4f736c9c-3551-4efb-a5df-d9c8c95d1f5f",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "646cd500-9025-4527-b811-dfb64359acd1"
        },
        "item": {
          "id": "c795d7ec-6f35-4b9f-bac7-08dfbe42a65c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d602002e-30b9-42c5-87c4-b19caa49f18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323a7ae1-c6a1-4241-966d-f032607fb25e",
        "cursor": {
          "ref": "b9a32718-6f45-4e11-bfd2-8388f7666bdd",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "455bd6c4-1d51-4e9a-94c8-1d3e53c1bcde"
        },
        "item": {
          "id": "323a7ae1-c6a1-4241-966d-f032607fb25e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b048b194-47e1-4dc2-b295-7ef335115eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fdd8e9-9aae-4ae0-b656-eb50eb750a8d",
        "cursor": {
          "ref": "beb45949-f656-4a15-b6b7-feb50cd5914f",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1771d862-c293-462d-bac3-20895b6537f9"
        },
        "item": {
          "id": "c3fdd8e9-9aae-4ae0-b656-eb50eb750a8d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cab68e54-d2c4-46a2-8efc-64df8561e8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ceab4c0-43bb-4906-845f-89bac84da0ed",
        "cursor": {
          "ref": "a9e5d982-5604-4991-bf36-58e6de551f96",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dac89b77-6be0-4886-abc9-de9b259582de"
        },
        "item": {
          "id": "8ceab4c0-43bb-4906-845f-89bac84da0ed",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "149c1ee9-0976-4deb-95f3-02b8c01e5397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e14003-ea76-417f-a3b2-03ce9dd21eee",
        "cursor": {
          "ref": "7f125410-5402-4209-87bd-f8bdafe2565e",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ad688099-cc58-4eb7-8473-4ce516d5c983"
        },
        "item": {
          "id": "38e14003-ea76-417f-a3b2-03ce9dd21eee",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "27d2a50c-4226-41d8-98e2-c2d54171e6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f902df-70ae-42db-9938-991b13d75359",
        "cursor": {
          "ref": "42a34603-1581-421f-9d47-3612dfb14561",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "90874f48-d1e3-4178-83a0-fdb4d6584d62"
        },
        "item": {
          "id": "53f902df-70ae-42db-9938-991b13d75359",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0fecaf5e-7154-4bcc-a6ac-9ae212b62f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0b6c91-ca7f-4f98-92e3-293b79fddecd",
        "cursor": {
          "ref": "835128bb-3159-4344-aa3c-600f5474ac3a",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8f7ce570-a874-4035-b68b-0f2d73fc15eb"
        },
        "item": {
          "id": "ea0b6c91-ca7f-4f98-92e3-293b79fddecd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7e1f78cb-1f07-4683-8cf7-b9a023d8c250",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2ef426-468c-4533-8fcc-0026bb1d53a8",
        "cursor": {
          "ref": "73f71c1c-e813-4026-8392-952c2ca205c1",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2f41463b-e0fc-4d6d-a3e7-a696cf951762"
        },
        "item": {
          "id": "bb2ef426-468c-4533-8fcc-0026bb1d53a8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6dc5bc69-6105-4f5d-a4d1-117c7d254c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16f33d0-8271-4b69-a82a-1fe51cc2d65d",
        "cursor": {
          "ref": "5ab8f2b1-ca6b-4d7e-9be4-7e2b8f80fa60",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "52d289b1-900a-48ba-93a9-c5b8d1b41024"
        },
        "item": {
          "id": "e16f33d0-8271-4b69-a82a-1fe51cc2d65d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9874a4a5-af6b-4f37-a9b4-9706295b0982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81cccab-5888-4ded-9d5c-dd8bc9dbb2cc",
        "cursor": {
          "ref": "18f076a5-0285-4ffa-811d-ca0916f461af",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "050aee8c-6cb1-4277-ac9b-299210b770bf"
        },
        "item": {
          "id": "a81cccab-5888-4ded-9d5c-dd8bc9dbb2cc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c9a8a4bf-2ee3-4955-bff3-133533c1b4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1feb680b-3335-4cd9-a56f-73054204cf9c",
        "cursor": {
          "ref": "3bcfac41-9400-40f4-a422-d3217f6bef9b",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "69e8eaf3-fa49-4615-b93b-3d0528233634"
        },
        "item": {
          "id": "1feb680b-3335-4cd9-a56f-73054204cf9c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cb7d3f86-16e7-4b4f-8837-32ee44023dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374474d4-aa0b-43f6-ba42-74661a28981b",
        "cursor": {
          "ref": "56da3a0b-f3e8-4de0-9fff-9ee620f0a183",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b6060389-d3a2-4a5e-8a71-91bb7fcaa7d5"
        },
        "item": {
          "id": "374474d4-aa0b-43f6-ba42-74661a28981b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a86a013c-4ffd-4c76-8e37-be6e75bf845e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4e1a5e-1f8d-4412-a38b-566e194a40bb",
        "cursor": {
          "ref": "f6aba743-2737-41b5-9798-3611081e315e",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0517de62-d5bc-46cd-ae90-68c630e4548a"
        },
        "item": {
          "id": "2a4e1a5e-1f8d-4412-a38b-566e194a40bb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bce7246b-cfce-421e-add7-feb7b8257100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe29b3a5-8d45-4881-8506-ba98f435a838",
        "cursor": {
          "ref": "89d2d135-ef7c-42b0-8f23-ed61ef6eff74",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "89cec808-f457-42fa-98e8-51f52d9080d3"
        },
        "item": {
          "id": "fe29b3a5-8d45-4881-8506-ba98f435a838",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "76e9208d-98c7-4169-9cfe-779ca8e8ce91",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9f8d92-fef2-4daa-88cb-2d6825e89fc9",
        "cursor": {
          "ref": "031c087c-def0-47b9-89c6-f84e2de43dd8",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "35adb88c-16bf-4a68-a2ec-d5300a3626d1"
        },
        "item": {
          "id": "3f9f8d92-fef2-4daa-88cb-2d6825e89fc9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8f4c8d41-ed34-400b-a5ec-103554a13eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c17e83-d9b5-4e50-8bc1-b29834707993",
        "cursor": {
          "ref": "fc95dcab-cd6f-469b-9f87-6529d90058b4",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bb5526eb-c158-44af-82d9-06826bba14e9"
        },
        "item": {
          "id": "38c17e83-d9b5-4e50-8bc1-b29834707993",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5efd6bdf-bba1-4d2e-a01f-cafe58f8b809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d19812-a0a7-4e43-b1b7-c56d0262da7a",
        "cursor": {
          "ref": "1805029a-323a-4151-9be6-1cbbd83f161e",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b5f3743e-9f5a-4ca2-b4e9-fbb095f84799"
        },
        "item": {
          "id": "71d19812-a0a7-4e43-b1b7-c56d0262da7a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b056f9ff-010a-41da-92e8-af89f49d251a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b617e10-bea2-4002-85fd-4d035065ba7a",
        "cursor": {
          "ref": "dacff1ed-488e-4f33-8d7d-06d374f028bb",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "dcee9eac-b562-40a6-b870-49789a050b78"
        },
        "item": {
          "id": "7b617e10-bea2-4002-85fd-4d035065ba7a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "17702d8a-441f-4aaa-a299-8913c32e6514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ee63df-2531-4167-9fd9-19792dc3a0d5",
        "cursor": {
          "ref": "4588b4ab-2c1a-45b7-bd67-5cb5afff4a58",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0e6a1520-502a-4b93-baf3-6c3e777be28b"
        },
        "item": {
          "id": "e9ee63df-2531-4167-9fd9-19792dc3a0d5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f19464ef-171f-4254-b2b9-05e7815d819d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38297525-616e-438b-a211-e3e180faf2ed",
        "cursor": {
          "ref": "fbdd9976-104d-464b-b2e7-f3e7cd96ba8e",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "06d1aea2-a212-4f9f-97e5-63a33f397bcc"
        },
        "item": {
          "id": "38297525-616e-438b-a211-e3e180faf2ed",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "af477aba-6769-4f67-9c6d-4cb7102451d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3a544c-fa56-437a-b9df-f80e037345a5",
        "cursor": {
          "ref": "b710605f-4a65-4678-bed3-9c64b596dad8",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d77d0b6f-5988-4258-9287-d53de9c65c99"
        },
        "item": {
          "id": "0d3a544c-fa56-437a-b9df-f80e037345a5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "07e09fd8-0ff3-4588-9aca-5d707660ec5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e62dc6-c868-41c7-8264-aff0564991bb",
        "cursor": {
          "ref": "8423a0ed-a17a-455e-b37b-8145a0c7809c",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4123cad1-c293-4087-8765-81dfd4815a00"
        },
        "item": {
          "id": "98e62dc6-c868-41c7-8264-aff0564991bb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1cc53610-9ca7-47af-b458-100180921f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accf0ea7-d468-464e-bd15-56049eb46bce",
        "cursor": {
          "ref": "b738965c-d114-4537-8c91-3a2b8ceec1c6",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fbf5cb7e-efb6-4c4c-82da-a286ab0e4ae8"
        },
        "item": {
          "id": "accf0ea7-d468-464e-bd15-56049eb46bce",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d8e85982-7241-4622-a418-39dabf4c1b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af31efa-6732-49ac-a3f0-f91354f94826",
        "cursor": {
          "ref": "85f140eb-61f8-45cf-944e-4f39174be33a",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f401c9f0-36e0-4107-accc-6920075000a9"
        },
        "item": {
          "id": "8af31efa-6732-49ac-a3f0-f91354f94826",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "99523f24-466c-4026-b730-e2c025803bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e39dc7-49ae-4f83-925e-5e85417204d8",
        "cursor": {
          "ref": "5479e186-857f-41ce-981d-2fef41249675",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7508ef6c-7441-4c3f-a73f-f9df28a2c77c"
        },
        "item": {
          "id": "13e39dc7-49ae-4f83-925e-5e85417204d8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "252fa1b8-1b4b-4e84-a08b-2577dd6c632d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c64c2d0-4e0f-46e7-89c7-a9e81e0fd84f",
        "cursor": {
          "ref": "92cd9f8a-5745-4810-888e-4725ec811b5b",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ee3cfa8a-71d7-46e2-ba6a-43689a1ed73e"
        },
        "item": {
          "id": "8c64c2d0-4e0f-46e7-89c7-a9e81e0fd84f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4242f392-8abe-4abe-bed4-2e3177e0b2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fe6334-c5bb-4fc4-ba01-79a4e15688eb",
        "cursor": {
          "ref": "8ea7492b-41e7-44f9-a954-3db4ee0fd64a",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ef27d171-c724-4d93-9db3-15804d4f6c94"
        },
        "item": {
          "id": "d8fe6334-c5bb-4fc4-ba01-79a4e15688eb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d1e55584-c725-456d-9344-48c438060b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc86cc6a-6307-40f5-912d-9554167dfa56",
        "cursor": {
          "ref": "18abac6c-effa-4195-874d-a7f0352c6db3",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4d552c04-58ff-4c4f-b10a-082f28280640"
        },
        "item": {
          "id": "fc86cc6a-6307-40f5-912d-9554167dfa56",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "08bb787b-f71e-48cf-80ff-c771258dcca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5317af81-3210-43ab-bab2-70175d4be47e",
        "cursor": {
          "ref": "f8cb1d0d-9a18-45f7-a87f-e7ed48df220d",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ccf2cb13-7b19-4a0b-aa39-cb9688fa575d"
        },
        "item": {
          "id": "5317af81-3210-43ab-bab2-70175d4be47e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f5b8154b-4d0e-4a81-a9de-893a456c0901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349b6693-7aa9-404c-ae79-4bb122696392",
        "cursor": {
          "ref": "18f74223-77a2-451c-8b0c-822494f58d9c",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9c394f88-fc95-411b-8896-fd30bfea7357"
        },
        "item": {
          "id": "349b6693-7aa9-404c-ae79-4bb122696392",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fff15a57-a42d-4c42-9aff-f86158924f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d627c67-f7d1-4756-bc47-7e41b2a25701",
        "cursor": {
          "ref": "d6eeff19-f835-480b-bca4-b9917cfb5b2f",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e525692d-1995-4db9-b92f-74574fabfa7e"
        },
        "item": {
          "id": "8d627c67-f7d1-4756-bc47-7e41b2a25701",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "885e2faf-dff7-47ea-8b73-7cc7fecab805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd409ee3-dfa5-4fc7-8a39-8292efa7f95e",
        "cursor": {
          "ref": "5b443d46-a31f-41c9-b509-3866c454398e",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a5f41560-3a61-4004-b8e3-013fc1c462ce"
        },
        "item": {
          "id": "fd409ee3-dfa5-4fc7-8a39-8292efa7f95e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d4ba7053-29c6-4eb8-bbd7-7960a5e60c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4b9842-f57f-4cce-9c55-aef66f0d0542",
        "cursor": {
          "ref": "950c3a37-9aa4-4c67-9183-1cedeafc5979",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f730a66d-0e86-4265-a6e9-1cd6a07b266b"
        },
        "item": {
          "id": "bc4b9842-f57f-4cce-9c55-aef66f0d0542",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3f87ce97-1f2f-47b2-80ae-604b0b6437aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f2ce0b-cb51-4abe-ac76-068f06ed1870",
        "cursor": {
          "ref": "dde01bd5-f684-4d79-8a73-1e4d7500fa2a",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bdf715cd-eb74-4602-809e-c267c2af05e5"
        },
        "item": {
          "id": "27f2ce0b-cb51-4abe-ac76-068f06ed1870",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f88da8bd-5d1e-4c3a-a9df-eb1bc5bf0a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fef70c-871c-4633-910e-1890f8163371",
        "cursor": {
          "ref": "9d0289ce-d9c8-4907-a9b4-de2a8a58351a",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4325e0be-b07c-4cda-a53d-d898d90d1c3d"
        },
        "item": {
          "id": "94fef70c-871c-4633-910e-1890f8163371",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d67e8966-c0bd-46be-9fc1-e32cebae6a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9513f506-9c74-4692-8979-d5af98780c0d",
        "cursor": {
          "ref": "c1a0dee9-17e5-4324-a5ff-b11601e85fd3",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "837afa68-2e57-47e0-a3ba-23545ac7a219"
        },
        "item": {
          "id": "9513f506-9c74-4692-8979-d5af98780c0d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fa377e6b-aba4-4a71-b13b-f7f962dbf613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04032271-a400-4db3-a802-59cb8cb070d1",
        "cursor": {
          "ref": "5c7d2607-1090-4df7-baac-ac6d17822dcc",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ccd39b88-b893-4e69-aaec-c5d874296419"
        },
        "item": {
          "id": "04032271-a400-4db3-a802-59cb8cb070d1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "799928dc-9cb4-4931-9ea7-ce967a1ab397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19220e9-f2f1-4f45-a240-9abc04898b48",
        "cursor": {
          "ref": "123395e6-1ce8-4bda-bb1d-4eb3d5794033",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "28ff0bb2-121e-4cd5-9769-c031194d48e4"
        },
        "item": {
          "id": "f19220e9-f2f1-4f45-a240-9abc04898b48",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6555701b-0de6-41c6-9c3d-e5f9f3a750d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5fce6a-473a-455c-93e3-7cfa99ec90ce",
        "cursor": {
          "ref": "84a1a0e0-93e0-4e74-aa0f-cf63e1d38b52",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "143bd29f-7ba7-4ccc-a507-7e653f09aec9"
        },
        "item": {
          "id": "ce5fce6a-473a-455c-93e3-7cfa99ec90ce",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d4ea66ac-7521-40d5-a323-3b7eb8afc446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf739d9-5b54-494e-b93e-d558db1653d4",
        "cursor": {
          "ref": "0c77ae88-4b06-4a1e-8925-aca705be3a0a",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bc881390-30fa-4db6-b054-2ad71fe66847"
        },
        "item": {
          "id": "baf739d9-5b54-494e-b93e-d558db1653d4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5bb47eb3-89aa-4057-9be5-cd3db044881c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4de3a9-f1e2-4411-9bef-49d96a6e6dc7",
        "cursor": {
          "ref": "d4985c48-ee7a-4d34-8512-d2c3cedc3ac8",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7eda1a92-07c3-4693-b728-29424471be57"
        },
        "item": {
          "id": "0b4de3a9-f1e2-4411-9bef-49d96a6e6dc7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "aa925027-562e-4e7f-90bc-60f00b6ef605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b161d93f-8462-4210-82f9-241efada7650",
        "cursor": {
          "ref": "ad91a46a-ef92-4585-aef7-2c3e997a894d",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3e2fefbc-075c-4a17-86c0-570bb4f0c2d3"
        },
        "item": {
          "id": "b161d93f-8462-4210-82f9-241efada7650",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2ce9f942-c5f2-45cc-82b1-c8b00962f0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48243f66-2558-4536-9d64-c44a0098a41a",
        "cursor": {
          "ref": "41345838-7b7d-4a3c-bbcc-2ac5dfc6799a",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "38a514b9-eeb3-4f78-b3f1-1b480158aea7"
        },
        "item": {
          "id": "48243f66-2558-4536-9d64-c44a0098a41a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a142545e-a83b-422b-beb0-849c496f3f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07bfd6c-8934-4b2a-ab6c-600594a57bf8",
        "cursor": {
          "ref": "ed9b887d-80e9-47f4-aaf4-60b25265a1c3",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9d776455-99e4-4555-b62c-f38db424c8e9"
        },
        "item": {
          "id": "b07bfd6c-8934-4b2a-ab6c-600594a57bf8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "78506b9d-45b1-4820-87e0-25843ceee955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea4340b-a259-4ac2-aacc-d13de9d6d817",
        "cursor": {
          "ref": "44bd16fa-ce58-4b35-a2b1-64aec1b9084b",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "06f8adef-335f-42f6-b802-c5fbc95d4178"
        },
        "item": {
          "id": "3ea4340b-a259-4ac2-aacc-d13de9d6d817",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5a5f4a8e-76c9-4b72-9024-528df8575796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014ecaa6-8fef-4701-bda9-da936e8c924a",
        "cursor": {
          "ref": "29aad6f9-d9de-405d-84bd-5bf0492a199c",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b95e8ce1-5d3f-4a24-a1e1-c41edbd839d4"
        },
        "item": {
          "id": "014ecaa6-8fef-4701-bda9-da936e8c924a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "94e95c6e-d122-4b68-968f-faabefed5abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17b2c55-9c77-4e31-a6eb-0a0bf83ea014",
        "cursor": {
          "ref": "ba889bf0-f82a-4733-9284-7df90162f34f",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bdefef92-77f8-4992-90ee-097d27db73de"
        },
        "item": {
          "id": "c17b2c55-9c77-4e31-a6eb-0a0bf83ea014",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3d53614c-ba57-4ff2-9d73-78460546fb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28fa6cd-8571-481a-b64b-46fa884d188b",
        "cursor": {
          "ref": "461da7d3-bd93-498e-aeae-a474f8a01402",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8e460c45-cd6e-4ccd-9bc0-d831d43e0e6e"
        },
        "item": {
          "id": "f28fa6cd-8571-481a-b64b-46fa884d188b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "494cfd0a-bf2a-4c56-b2ec-b4fc3d1c13ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c810715-1b1b-4446-b68e-1c374d90d958",
        "cursor": {
          "ref": "9820c1a0-24be-4f2e-8837-67b4a7cf24a1",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ccb293ba-a33d-4ab2-9aae-b682057b9d7f"
        },
        "item": {
          "id": "2c810715-1b1b-4446-b68e-1c374d90d958",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a71fb3f5-d5d2-4585-a018-f4db36b1d035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95b630c-84da-4125-b3af-db3e6772283d",
        "cursor": {
          "ref": "1b8350db-2890-4c51-b681-d4c4401fd8ef",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "44b09713-3096-4ae0-9233-449cf36c1487"
        },
        "item": {
          "id": "b95b630c-84da-4125-b3af-db3e6772283d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8c6bf9a5-833e-4d9c-8563-04b732f49fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dacd2e-58ae-4901-a33f-120eabce0356",
        "cursor": {
          "ref": "9d4ebfab-a875-4a6f-87f0-5dc0f1800771",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b14e304f-b17c-4d76-a40e-23a3672713b9"
        },
        "item": {
          "id": "b1dacd2e-58ae-4901-a33f-120eabce0356",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8bd3ce6d-5e17-4873-9809-550a4806934e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d008b0-e8f5-48d2-a7f2-2977ba3deec8",
        "cursor": {
          "ref": "3124927a-52a9-44b7-b363-96970f39bf4a",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b4c2cb59-cc9f-4aec-84b8-946b8ddc57ba"
        },
        "item": {
          "id": "43d008b0-e8f5-48d2-a7f2-2977ba3deec8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "947a6f59-75fe-43d7-8c67-c52674f16d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3090de72-bb1d-4e5b-912e-fb02f7252cc0",
        "cursor": {
          "ref": "b6abd8d2-d060-4055-966e-9b6624a1eea9",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "caba117f-4909-4eda-bcb9-1cca65a45a8c"
        },
        "item": {
          "id": "3090de72-bb1d-4e5b-912e-fb02f7252cc0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6c56c196-fb17-4f45-bd83-f1f48d4b334c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3427647-d510-4024-9498-a2d2b33e3839",
        "cursor": {
          "ref": "7681d5ea-3b80-43ca-b1a2-6660905cb06b",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d099829f-3a8f-4244-96d5-385d10c493f7"
        },
        "item": {
          "id": "c3427647-d510-4024-9498-a2d2b33e3839",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1a2c36a6-aaed-4ff0-a943-42e9725cc995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5415e26c-1214-47d8-aafa-5229be84a341",
        "cursor": {
          "ref": "802068b3-61ec-4165-ad71-cd630e530c99",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "daaaff6a-b4ec-4e7d-86ed-7d686247bfd3"
        },
        "item": {
          "id": "5415e26c-1214-47d8-aafa-5229be84a341",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0d4f75b7-1503-49fe-b808-2c3bcf720190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a0eda2-a1de-472b-8fd6-ac5124cb0a2a",
        "cursor": {
          "ref": "d9045738-5fe7-4bb2-bba2-f1c5ee09a211",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5b6ac31e-12b1-4b32-8710-0a1336618b39"
        },
        "item": {
          "id": "51a0eda2-a1de-472b-8fd6-ac5124cb0a2a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "79f576f2-2f1f-4664-816c-e9e19a0c50a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a559b72-692d-4409-a6df-a9091ee80721",
        "cursor": {
          "ref": "8de59ea2-ab5b-449a-bf33-02f1bc35d3b4",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ba948d2c-d0ba-48e7-bec6-acbc9463cae8"
        },
        "item": {
          "id": "8a559b72-692d-4409-a6df-a9091ee80721",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "80658257-42fb-4e89-bcb2-c369bef0f42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6c8ac0-4a93-422b-b0bc-304a26af37b3",
        "cursor": {
          "ref": "34e17bf0-dd38-499b-befa-b7a1172f09c6",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "be2f7661-bd47-4673-a431-a0b471c5dd16"
        },
        "item": {
          "id": "3f6c8ac0-4a93-422b-b0bc-304a26af37b3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "aa21d2fb-e2da-449a-9f5c-e2f2e8edb050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e09381-e675-413c-82dc-6390b7d98932",
        "cursor": {
          "ref": "8a4fd9a3-7ba8-4c69-880b-458ca500b899",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "dd71a1a8-e659-484f-ab62-eed6523e226d"
        },
        "item": {
          "id": "a2e09381-e675-413c-82dc-6390b7d98932",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "edce533b-9ec5-4b17-a35c-59d0275a0611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a7eefa-4667-4a0c-91ac-a55acd88f893",
        "cursor": {
          "ref": "a4626f66-df3f-4403-8713-b5788341f205",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "623b2337-c46e-4af5-8922-33f5c3e7c240"
        },
        "item": {
          "id": "46a7eefa-4667-4a0c-91ac-a55acd88f893",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bec9c7d9-2da3-4699-adbb-987480fba52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93013ef3-eada-4293-bb35-18a243a8cc8a",
        "cursor": {
          "ref": "33bb2ddd-17a8-4680-b2c7-15c7f28f8f2e",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f678bc26-d5fb-420b-a991-8a3483dea3f0"
        },
        "item": {
          "id": "93013ef3-eada-4293-bb35-18a243a8cc8a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f2595c2a-ba0e-4d27-b30c-537cbce2787f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ea6df6-9ee1-410d-bb24-cd702bbd3951",
        "cursor": {
          "ref": "b3e2684d-ace6-4fc1-bfc0-c62eb1a6f5c5",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fccf5b39-a0ef-4d6a-b729-9364dea84f5d"
        },
        "item": {
          "id": "d2ea6df6-9ee1-410d-bb24-cd702bbd3951",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2f790694-bae2-4661-ac26-e840c00a8431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2490ec-9f5f-4aec-9086-1b8a7557d575",
        "cursor": {
          "ref": "b55ef9f1-5a6e-4f09-97cf-68d0f3bf9f04",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "27127755-47a3-4226-bb8e-48b2f2864d79"
        },
        "item": {
          "id": "ee2490ec-9f5f-4aec-9086-1b8a7557d575",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "30f24c64-f901-44c7-8114-b6ee0817dc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc521fc4-e4e6-4817-9b15-d0de112f96e4",
        "cursor": {
          "ref": "f8fb9624-ea56-4a34-a383-d37fb037b27c",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a208467a-b216-42f1-b233-8adb74ca8337"
        },
        "item": {
          "id": "dc521fc4-e4e6-4817-9b15-d0de112f96e4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f82a74de-1226-441c-a893-c766ea053c23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019306fa-b2ef-47ae-ad1f-5dc416458892",
        "cursor": {
          "ref": "a75c8569-2b4c-4b2d-b122-44d59d67813a",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8b34d87b-6b69-4a3b-a7db-77c469e11ea2"
        },
        "item": {
          "id": "019306fa-b2ef-47ae-ad1f-5dc416458892",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "072b5c9a-996e-4c2c-8226-87c1a946d0f3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 145,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df506a4-8d20-4e1b-aff2-11c158c4a137",
        "cursor": {
          "ref": "6b7b19c7-da1a-46ce-85e4-3e455b4e781a",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "892b3200-099b-4999-955e-dee81120f43b"
        },
        "item": {
          "id": "4df506a4-8d20-4e1b-aff2-11c158c4a137",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ac5e9c82-9e53-4b48-8ef5-bb7492c66cac",
          "status": "Created",
          "code": 201,
          "responseTime": 235,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d97881a-d5ff-43f2-85a3-e3dfb19bbef7",
        "cursor": {
          "ref": "673d4ceb-58b5-4bbe-bd2f-f2ed9b4bf845",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "166b74ba-c607-442b-8edb-d3fa453d27ea"
        },
        "item": {
          "id": "8d97881a-d5ff-43f2-85a3-e3dfb19bbef7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6d1cf85d-2a7e-48ca-bc45-dc194515eb95",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "38917f41-3061-49db-bdee-4e45b7c30de1",
        "cursor": {
          "ref": "4149dc8b-510c-43f2-a7ae-3abfbf64a828",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "709730c3-3997-46bd-905d-dd5b32ab0413"
        },
        "item": {
          "id": "38917f41-3061-49db-bdee-4e45b7c30de1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "084bf042-1fc6-4ab4-a63c-3e1f756278e5",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ada05af-627f-4feb-8dfe-e9f79c47f481",
        "cursor": {
          "ref": "530e8950-149a-4849-9a09-d030867c3112",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "adfeb545-6cb2-4e6e-9e85-00be25a4236d"
        },
        "item": {
          "id": "3ada05af-627f-4feb-8dfe-e9f79c47f481",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "41233c67-51a8-4cbc-a9e8-2f9eef5ca12f",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42f910c-a48f-47c0-9886-ed4d3f0611d2",
        "cursor": {
          "ref": "eb8bfa4f-86a6-4bcb-8747-87e1f86b37ca",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f07f7551-381b-4a27-9727-a460aa1feb31"
        },
        "item": {
          "id": "a42f910c-a48f-47c0-9886-ed4d3f0611d2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a379aab3-d0dc-4d3c-82e4-398046c1781f",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7634939-9d42-4d82-a394-059eeade62eb",
        "cursor": {
          "ref": "31e2386a-79ca-4a44-8f3b-8dfb50c25b9e",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7216bad3-6dc4-4b94-9ad8-c71221c6fa62"
        },
        "item": {
          "id": "d7634939-9d42-4d82-a394-059eeade62eb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0aee2f83-090a-44a9-8087-9f07d46dcb27",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0a0c56-0123-45ef-9b61-68af6832058a",
        "cursor": {
          "ref": "71dea18a-c620-4488-9c4b-95f952d5c8ab",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "389452e9-a7e3-447e-a859-0060a2b566d6"
        },
        "item": {
          "id": "8e0a0c56-0123-45ef-9b61-68af6832058a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5d9f59ea-24b8-45ee-b5a4-05a0eb3b2e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0a0c56-0123-45ef-9b61-68af6832058a",
        "cursor": {
          "ref": "71dea18a-c620-4488-9c4b-95f952d5c8ab",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "389452e9-a7e3-447e-a859-0060a2b566d6"
        },
        "item": {
          "id": "8e0a0c56-0123-45ef-9b61-68af6832058a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5d9f59ea-24b8-45ee-b5a4-05a0eb3b2e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33fd60f-7bf7-4c01-aa66-dc41ca66b7b3",
        "cursor": {
          "ref": "63c8dbd6-0143-4948-80ee-12eb1a0ebd6e",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5c7de894-ba98-491b-8a1e-f65883988a32"
        },
        "item": {
          "id": "c33fd60f-7bf7-4c01-aa66-dc41ca66b7b3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6535130f-cc95-4637-9e9e-2d92c2aec7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7af275-20ec-45d3-b38c-fb7d9fe1a422",
        "cursor": {
          "ref": "1ee1dff2-ab57-4e76-8fe3-27d59b33344a",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3481943e-c3d9-4f5e-8a19-4e0ebc44e0c5"
        },
        "item": {
          "id": "8d7af275-20ec-45d3-b38c-fb7d9fe1a422",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "39b2a8bf-a6ce-49f2-a329-6ea89856da68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6177ccd8-4b8a-4ffc-9d38-c48ef9158dd4",
        "cursor": {
          "ref": "896545f3-639c-4297-abbd-011cb637b396",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "99866325-de55-475c-9fbb-da2698ac3c5d"
        },
        "item": {
          "id": "6177ccd8-4b8a-4ffc-9d38-c48ef9158dd4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eede5684-97c7-4534-a1f3-872d1ee9205d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46634f6-a1d8-4942-9298-a937e6b39d14",
        "cursor": {
          "ref": "7efd3c55-f236-4b59-9a72-ac8601308413",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3f72d341-df08-4d52-9a35-b5a9ea148ab5"
        },
        "item": {
          "id": "c46634f6-a1d8-4942-9298-a937e6b39d14",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "87f36b7e-19f5-4e72-af0c-ed3f45a74be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6633f7-8424-4381-9f43-58ebf4d5f366",
        "cursor": {
          "ref": "fb97be32-dfe6-4d92-92dc-f795094f628c",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5beebfe0-540a-4b67-9c7a-5378deed921b"
        },
        "item": {
          "id": "0d6633f7-8424-4381-9f43-58ebf4d5f366",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "efee137c-b5fd-467e-9346-b7379e21c276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ed9d27-a81c-42d8-90c2-f7d82a9d34b0",
        "cursor": {
          "ref": "d0ba5cb8-189b-438e-bdfc-5cf1e2c65fc8",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "638152fe-b824-4cf3-b98b-c1126fb0b3b0"
        },
        "item": {
          "id": "d4ed9d27-a81c-42d8-90c2-f7d82a9d34b0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c6bf2626-b18a-4064-91e8-ec25bde7e71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b29e48f-e97a-40c5-a895-a2054823946b",
        "cursor": {
          "ref": "c5c0161a-d883-44d7-8fd5-817e33609592",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "880c5b6e-c1cd-441e-a01d-ae99922caa99"
        },
        "item": {
          "id": "3b29e48f-e97a-40c5-a895-a2054823946b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de0eb3b3-ba22-4caa-8fe1-28fa58afbd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be1d072-1ea2-40c2-b832-9a002e4356f9",
        "cursor": {
          "ref": "414557a7-9100-432d-8184-2418fc7a9d7b",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "aa6fb288-8142-4d91-9c33-9f62865d311a"
        },
        "item": {
          "id": "0be1d072-1ea2-40c2-b832-9a002e4356f9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4d0325aa-b10e-4831-8321-a820c0b78bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179b2d6f-6c20-42de-9766-fcc3120a5135",
        "cursor": {
          "ref": "9cc20b8b-e670-472c-9b25-87462e16c08f",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4bf76df5-a46f-47f4-9c07-a9aef96378c0"
        },
        "item": {
          "id": "179b2d6f-6c20-42de-9766-fcc3120a5135",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e499aa40-7587-41b2-a355-977556864d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf4dbde-abd7-4f55-978e-fcd777ce4b42",
        "cursor": {
          "ref": "16fa1b82-92c9-429a-8b21-3b37b126b96f",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5fde9307-0bd1-4ed6-b51f-7872219bf10e"
        },
        "item": {
          "id": "caf4dbde-abd7-4f55-978e-fcd777ce4b42",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aa6f8d4b-df53-4ea0-9d0a-8b0cb05d0069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a46271-7314-4c85-a0df-8a4767a2afcb",
        "cursor": {
          "ref": "96230ba3-ca62-4773-987a-0b422b26c6d2",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3a36efd7-e2b0-4010-9fb2-eb057a0eb91a"
        },
        "item": {
          "id": "48a46271-7314-4c85-a0df-8a4767a2afcb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "75aa6151-f24c-4e2b-bd45-343629776395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5173c8-f637-4a1a-b36a-6f09a203e352",
        "cursor": {
          "ref": "577e0191-0562-421a-b348-0c8c4625a143",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a66b2b5e-1c37-4df2-8d85-1d0b73be8efb"
        },
        "item": {
          "id": "8f5173c8-f637-4a1a-b36a-6f09a203e352",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5bc8df49-baf8-42f5-ad03-42805ee182a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaa8046-de36-4c0e-8a76-0152187fa461",
        "cursor": {
          "ref": "0f695e45-1c4e-466b-aa61-2523e6427a17",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5fa6c1d9-354b-4ed7-bb2f-7d711143514d"
        },
        "item": {
          "id": "baaa8046-de36-4c0e-8a76-0152187fa461",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c4a164f4-e445-4596-bfa4-7c63214efc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9772954-acb1-4739-a722-8eb4197a2db3",
        "cursor": {
          "ref": "fa7c7aa2-c9cd-48a6-abcb-8a33d06926a7",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e7b2733d-cff5-406e-a623-98face7497e6"
        },
        "item": {
          "id": "b9772954-acb1-4739-a722-8eb4197a2db3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4afa7dff-7270-47cc-93a0-fdfda34b4fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532a7d7c-ed9d-407c-b71e-6706c39aea9f",
        "cursor": {
          "ref": "15e7b819-c14a-49e9-9bdc-1734b24b8a28",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dff548e8-d4c2-4de5-a9ac-2bf0bfb07b64"
        },
        "item": {
          "id": "532a7d7c-ed9d-407c-b71e-6706c39aea9f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "71b203b6-bec3-43ad-89e1-ffaaedf236c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4548b6fd-81df-461e-8690-b6370a9a286b",
        "cursor": {
          "ref": "dcc2b3a9-dc3f-4173-b6d3-a3f1c29cc6a2",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "212ef557-8b7d-4601-a3cd-e5a96e1787d3"
        },
        "item": {
          "id": "4548b6fd-81df-461e-8690-b6370a9a286b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "53160c80-a8d6-4e22-b3f2-7e113eaa3c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7e42b3-c61b-493f-9fb4-9b1e132ae7e6",
        "cursor": {
          "ref": "6b0cd618-9410-47b5-9372-baf7ac306511",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5b44b320-548e-45f1-bd93-045b9ef23bc8"
        },
        "item": {
          "id": "cc7e42b3-c61b-493f-9fb4-9b1e132ae7e6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "486deed0-8a2c-44db-8cc2-2484aa3cf88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f6a071-4e7c-4172-b42e-7773675db711",
        "cursor": {
          "ref": "3a8d23aa-a41a-49cf-ac7f-fea54cb1f38d",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "70855c73-3587-4c50-b744-f8c407738aa2"
        },
        "item": {
          "id": "67f6a071-4e7c-4172-b42e-7773675db711",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "55a51a2a-89ce-4ff4-98de-4a4d0d588d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4bd070-1209-48c6-9f36-f679f9593fe3",
        "cursor": {
          "ref": "493e5de8-7053-449f-8f5e-f7b5384c2596",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d9c1e87c-4009-4779-aef9-67170abb699d"
        },
        "item": {
          "id": "de4bd070-1209-48c6-9f36-f679f9593fe3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b0f7d1c6-f8e6-465b-bfa4-852fcb09eae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d6f789-e45d-4939-9200-5079d90d7bcc",
        "cursor": {
          "ref": "d76cd3b3-e397-49f4-9c45-a9ba7ede3bab",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ede1f0b5-6d93-47b6-bcd0-579633c5bfe7"
        },
        "item": {
          "id": "b2d6f789-e45d-4939-9200-5079d90d7bcc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d7262376-e5cb-4dfc-afd8-df3111b98918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f46b0f-8adf-4644-a821-d7d0e820b47b",
        "cursor": {
          "ref": "a671368a-cfd0-43bf-9280-89ab8c91479a",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d0198b1e-3615-429f-a09f-3e745289f568"
        },
        "item": {
          "id": "b6f46b0f-8adf-4644-a821-d7d0e820b47b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ef0264c2-db05-4166-90d7-e442b8cfbd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12030442-fbbb-4385-bde5-f2624bcc1fba",
        "cursor": {
          "ref": "b6913428-1400-468c-8dbe-690ed42d0e7e",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c4d71c16-a2af-49a7-a35f-4c0906d0e10e"
        },
        "item": {
          "id": "12030442-fbbb-4385-bde5-f2624bcc1fba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2dd1a808-2baf-464f-b2a7-8d0d89e406ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2870534f-6d37-4f7e-b5af-c107d9a769dd",
        "cursor": {
          "ref": "0ffffd5d-ad9c-454b-8060-5121e5fdeb7a",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0188e588-0ad7-4b0e-be7d-3f192424f703"
        },
        "item": {
          "id": "2870534f-6d37-4f7e-b5af-c107d9a769dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "88db3fdc-57d2-4ee9-a7e9-fa15483dd4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861717e9-5909-4709-a51f-bea0a658452a",
        "cursor": {
          "ref": "8f3199ae-b192-4096-b1e0-b5c55fd56dba",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "69228bda-a4e1-4a3b-8cec-c3a7284fbd11"
        },
        "item": {
          "id": "861717e9-5909-4709-a51f-bea0a658452a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1330c573-017e-4bd5-95ee-e306db4aaac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618f9868-8805-4140-ba3f-46155b8b6398",
        "cursor": {
          "ref": "3b0f5d8c-0ebb-40e6-bc70-de23e4494393",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7b85f719-eb3e-48a0-b1d5-16f3e792ecd3"
        },
        "item": {
          "id": "618f9868-8805-4140-ba3f-46155b8b6398",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "14662e18-84de-451e-9986-76c197faa7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d520094-82c2-4dda-82d9-32c85bfe17ba",
        "cursor": {
          "ref": "a180a639-a237-4fbf-b280-2cb4651de82d",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f62cb591-27fc-4e3c-84d9-8b987ebb976b"
        },
        "item": {
          "id": "8d520094-82c2-4dda-82d9-32c85bfe17ba",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9ebea782-51e5-4f44-841f-45208c04e0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d4beef-7d26-433e-acf3-4ca870fdf245",
        "cursor": {
          "ref": "3acd8c20-5760-4434-9072-faa0479d7f2d",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a771b251-53ed-4c2a-baa9-99bbe476648b"
        },
        "item": {
          "id": "04d4beef-7d26-433e-acf3-4ca870fdf245",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "64025014-0aaf-4e77-b723-20e20a9e5970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c0b0b0-fe8c-4560-aebe-299589bf6974",
        "cursor": {
          "ref": "0d388e81-41b3-42dc-a502-fd5cbcbf5374",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f2199ae1-0503-4c3d-879f-269167a3e643"
        },
        "item": {
          "id": "01c0b0b0-fe8c-4560-aebe-299589bf6974",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8514659a-f04a-45b2-bb6f-2bc005e8696e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae16c1bb-b92b-480d-b30b-c0faf5b07f98",
        "cursor": {
          "ref": "35a6ceae-0b6d-49ab-b45b-e15ef8ff891e",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e4099770-09fe-4a64-becf-5fc901a93ca0"
        },
        "item": {
          "id": "ae16c1bb-b92b-480d-b30b-c0faf5b07f98",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ed737ab2-9ba5-4470-86b3-2893ae16cac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8c1414-f10e-4ba5-bd47-ef3b92948335",
        "cursor": {
          "ref": "1b2e1293-35ac-412d-92e8-4e5878eca43b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9dccbaf5-c310-4017-9e6f-6e5dfe2b839c"
        },
        "item": {
          "id": "db8c1414-f10e-4ba5-bd47-ef3b92948335",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "94f3e055-85e9-479c-ae79-dfd608358a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574430b5-6709-469a-abac-912e5ae3c47a",
        "cursor": {
          "ref": "ea025216-ac36-407b-9e13-91c1ca02fb6e",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1504fcb6-939c-49a9-8a65-8c29d3ba0636"
        },
        "item": {
          "id": "574430b5-6709-469a-abac-912e5ae3c47a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8bf69413-4afd-421e-a90a-279c92f6459f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a96444e-b62b-4b30-a269-c9d574c9b1c8",
        "cursor": {
          "ref": "59504dae-54b2-4dae-a243-01ddc2bcadd1",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c5ac4585-ec2d-4e7b-968a-debc36e0fd3c"
        },
        "item": {
          "id": "3a96444e-b62b-4b30-a269-c9d574c9b1c8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "88a4efb2-f646-42c2-accd-14d4b5617f97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbcbd3a-475f-44e1-a731-67a5980a0fab",
        "cursor": {
          "ref": "6648176d-a9d5-485f-9463-27446b9a1d0a",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "42cf599f-b973-40cb-af9d-a787e06ad684"
        },
        "item": {
          "id": "7fbcbd3a-475f-44e1-a731-67a5980a0fab",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "fd786572-eb17-467e-854c-d67b05e2c270",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9e950b-07cb-4605-a9e4-78f64c9219e4",
        "cursor": {
          "ref": "065d5cba-dd20-4b80-b3f4-c887aa654251",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7c2581cd-9c5c-4790-9f6c-a728d90b80ad"
        },
        "item": {
          "id": "dc9e950b-07cb-4605-a9e4-78f64c9219e4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dacfe328-71a4-4600-a52b-b9b4c4477054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9e950b-07cb-4605-a9e4-78f64c9219e4",
        "cursor": {
          "ref": "065d5cba-dd20-4b80-b3f4-c887aa654251",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7c2581cd-9c5c-4790-9f6c-a728d90b80ad"
        },
        "item": {
          "id": "dc9e950b-07cb-4605-a9e4-78f64c9219e4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dacfe328-71a4-4600-a52b-b9b4c4477054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711eb890-cc64-442e-a662-30543ae7a9ae",
        "cursor": {
          "ref": "ef351046-3fb1-42d7-a3af-bd1365120e63",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "03d0aeb9-69b2-4bdd-bdbc-d2c24d638642"
        },
        "item": {
          "id": "711eb890-cc64-442e-a662-30543ae7a9ae",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3783f8ee-b440-4cbe-b710-e05de8a74704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e26b97-0d3f-42f2-bb68-a707aac562c8",
        "cursor": {
          "ref": "bee821a0-08ba-46fb-b716-fd9d87d9f609",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d012f157-02ef-4004-ab3b-71c9a7da7320"
        },
        "item": {
          "id": "05e26b97-0d3f-42f2-bb68-a707aac562c8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7452653a-91c0-4906-aa08-33bbe2793254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4c4739-9db4-4143-8c58-9330598ebf79",
        "cursor": {
          "ref": "79e40697-fcd0-400a-9352-d0c64a0a9042",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "59f03123-52cf-4a7b-a528-41b87a7b6f53"
        },
        "item": {
          "id": "5c4c4739-9db4-4143-8c58-9330598ebf79",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8222909f-cbee-40dd-8434-977933771817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155fd39c-8f17-468d-a002-8d6359835e08",
        "cursor": {
          "ref": "f1045a5d-2577-4c30-8ebc-252d8114ed01",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2118b4e8-e367-482f-be53-59d8d0c21a8a"
        },
        "item": {
          "id": "155fd39c-8f17-468d-a002-8d6359835e08",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d43671bd-c1f6-4503-a568-95d185711d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb36ef41-e930-4985-a68e-b1211b17895a",
        "cursor": {
          "ref": "16ebfd40-5e64-4193-bd99-86eb68649346",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "75ca39ec-0241-441d-91cb-6e411c71ce9d"
        },
        "item": {
          "id": "fb36ef41-e930-4985-a68e-b1211b17895a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "becaa63d-d771-4992-bc2d-3e39131a5fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db41848-4fa7-42d3-8bd9-42561d9abece",
        "cursor": {
          "ref": "16914888-8857-4674-be9f-6b816fb5ee8a",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7ba90374-173e-4e1f-aace-e6fa2504f5da"
        },
        "item": {
          "id": "7db41848-4fa7-42d3-8bd9-42561d9abece",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b85af97d-9924-4b69-b5cb-eb3997db93c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d40e999-e3dc-440e-9412-7df3768604a3",
        "cursor": {
          "ref": "4285d3a9-6058-43c8-ac03-249ca10ecbdb",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8baa30a8-5148-4f74-834d-aadc85142000"
        },
        "item": {
          "id": "5d40e999-e3dc-440e-9412-7df3768604a3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c87d139d-7f5f-4340-ac5c-6183755b1072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99c9fe7-4f1d-48ba-b1b1-e80c0547624e",
        "cursor": {
          "ref": "126f4fbe-21b0-4d08-b205-e9b3f913565b",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c6ed558d-4a3c-42cb-9e63-a33992292cea"
        },
        "item": {
          "id": "f99c9fe7-4f1d-48ba-b1b1-e80c0547624e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9a697d42-192c-4aae-bebe-4a98659144d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3ca18b-c657-4d9c-8e4d-b9903e13a576",
        "cursor": {
          "ref": "f35800fb-a95b-4cce-96fd-79d95165a79b",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f0f9b78d-0564-4821-bff5-a79f9b048a4f"
        },
        "item": {
          "id": "aa3ca18b-c657-4d9c-8e4d-b9903e13a576",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "78b7fb83-5073-47a9-9b2b-823209281976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e117eaaa-586d-4502-96a3-b2716384430a",
        "cursor": {
          "ref": "8c2a9046-703a-4460-b01a-cca6d2fa8383",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9c6b5633-691e-4c32-942a-feae5a6dd74a"
        },
        "item": {
          "id": "e117eaaa-586d-4502-96a3-b2716384430a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f7f00452-7c59-4c30-8ec9-488e9fbab925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58acf0a2-df5f-40c0-b435-823fd9746fd9",
        "cursor": {
          "ref": "9ce92007-c278-40e8-82b1-966414b78706",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5378db67-5be5-4293-a857-97a791a26960"
        },
        "item": {
          "id": "58acf0a2-df5f-40c0-b435-823fd9746fd9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9aafc9ac-e4a4-41a4-b0ec-c84da47cc653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff531524-025b-489b-affb-b2fa06e0c61e",
        "cursor": {
          "ref": "27cce619-8946-4ba7-9a89-af20e0041304",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "97e10f59-1ab7-4057-b007-0833fd9a2d34"
        },
        "item": {
          "id": "ff531524-025b-489b-affb-b2fa06e0c61e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "83c57969-b341-43ce-81f4-e4ce8cd4339e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d827879e-df82-41ab-963f-67fd719a1bf2",
        "cursor": {
          "ref": "c3de1a1a-3ec7-4886-9a08-bb6fdb841ae6",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7b7ef72f-20d6-46c2-8424-458c6e2db088"
        },
        "item": {
          "id": "d827879e-df82-41ab-963f-67fd719a1bf2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3ec64b05-4ef4-4622-85c8-8de997aba15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61763b31-8e5b-4fdf-9c2e-579438876310",
        "cursor": {
          "ref": "d4b056d7-26f5-45ef-bbe5-a098ae6ab8e7",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "09c19de1-148d-4925-8e59-bf4d627ff667"
        },
        "item": {
          "id": "61763b31-8e5b-4fdf-9c2e-579438876310",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4a922b51-11de-4776-afa9-d3bf9a2e5511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4430d709-5f3d-47bf-9cb4-aa1cc7e4f175",
        "cursor": {
          "ref": "53cddece-3717-4be5-95b7-d1867f2394b6",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d5ba99fa-d29f-4628-9d8d-36dc303b0399"
        },
        "item": {
          "id": "4430d709-5f3d-47bf-9cb4-aa1cc7e4f175",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "04fd2e2d-7668-46de-82d3-02744a8173f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71fa364-929a-4302-869a-97b534c6de2d",
        "cursor": {
          "ref": "708b84d0-f15b-4eab-a2e8-0de8de53ca61",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "87a4ed2f-21b1-458e-bd05-c7c60654b15c"
        },
        "item": {
          "id": "a71fa364-929a-4302-869a-97b534c6de2d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4f679460-808e-4a75-a449-be29da7285fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91779fad-4d36-4b00-86b9-12d163219e71",
        "cursor": {
          "ref": "f25f7ad0-a9c1-454e-8306-e8a5607e4160",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bcff499f-6327-4a2d-a496-7f5f8f1d41f9"
        },
        "item": {
          "id": "91779fad-4d36-4b00-86b9-12d163219e71",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "40ce4ea6-a6b6-4e87-81f8-9bc5c1ed5758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9551fb28-052c-4408-a9ab-b8751031d881",
        "cursor": {
          "ref": "23385d94-18f7-4e55-8855-f0b76a234af7",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ce5c4c4a-6753-4080-aad2-08975633d9f4"
        },
        "item": {
          "id": "9551fb28-052c-4408-a9ab-b8751031d881",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f55c5fdc-dfc0-493c-950a-cbdd0ccc44fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7e8c95-5481-40ab-be8f-2ad75bc1d6d8",
        "cursor": {
          "ref": "6e6fd4d9-c206-4dcd-b4c9-746889a7b7b6",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f057c018-2974-4efb-92b5-be2c2223c941"
        },
        "item": {
          "id": "5c7e8c95-5481-40ab-be8f-2ad75bc1d6d8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "02a38875-b98a-4268-9a5f-ae983d98bfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acc1af5-3c8a-40aa-bfd9-1b73d640940e",
        "cursor": {
          "ref": "eda57922-7815-427b-a04d-ac8d7cda835d",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "36aea3be-2352-4360-994a-b38ebcbb17fb"
        },
        "item": {
          "id": "0acc1af5-3c8a-40aa-bfd9-1b73d640940e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "36d1a038-f8c1-4032-99cc-57439e10b776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ddc093-0651-4720-a7bd-fdd4499345d3",
        "cursor": {
          "ref": "88566207-f68a-4130-a74e-157bd413d2ff",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1b33e715-4e31-4992-9bf5-961843350481"
        },
        "item": {
          "id": "60ddc093-0651-4720-a7bd-fdd4499345d3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a64b4584-d538-4988-bdd3-29dcc3572c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5050fcd0-3023-4370-9f4a-f9e1b4a0acd8",
        "cursor": {
          "ref": "f2c28179-cadf-4a15-92a6-fefa97f7260e",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dbdcb8a3-f553-4df9-a15b-c63cfd2f0dac"
        },
        "item": {
          "id": "5050fcd0-3023-4370-9f4a-f9e1b4a0acd8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "db01cf1d-dc96-4a34-b1fb-f0bf17f49ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704bb6e4-34a5-4c71-a14b-d629a27763f6",
        "cursor": {
          "ref": "ee5cfd26-e426-468d-9e73-13b0b770dd1c",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cc2fdad8-f06e-4fb1-84f5-415c127cded2"
        },
        "item": {
          "id": "704bb6e4-34a5-4c71-a14b-d629a27763f6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a33b7510-6363-4732-ba90-6c28f4273776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb115461-cd70-4c7a-a7ca-9c5d6dae1005",
        "cursor": {
          "ref": "9d83e5cc-475b-4246-a849-0b9063552718",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4eed7161-6521-464d-b6d8-6d967473f6da"
        },
        "item": {
          "id": "bb115461-cd70-4c7a-a7ca-9c5d6dae1005",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bf3b5ade-80fb-4cbd-aaa0-34adda8138ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d3c82c-3133-466a-82c9-07c732ad9ba1",
        "cursor": {
          "ref": "6628d37b-bf17-402a-b93e-6b4ef941630d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e69426f8-8125-47d4-b15d-dd562ad55f42"
        },
        "item": {
          "id": "30d3c82c-3133-466a-82c9-07c732ad9ba1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b042085b-6fe8-4e9e-9776-78288ad6372f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50abd056-9bdc-4348-9650-8777dd1511d2",
        "cursor": {
          "ref": "da37e55b-5334-47b8-8917-534b8c0aefe1",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "29e0d623-0d1b-40a4-b288-275de71796c6"
        },
        "item": {
          "id": "50abd056-9bdc-4348-9650-8777dd1511d2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5de00ffc-28e7-4378-b63a-dbcbe6e92e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bf369c-dbd9-42cd-a3e9-0a74a5fe608e",
        "cursor": {
          "ref": "b338046d-3d83-4280-8351-e468a50621f9",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ddbf7d95-059d-45c5-9757-a7aad9d17a2e"
        },
        "item": {
          "id": "b1bf369c-dbd9-42cd-a3e9-0a74a5fe608e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f0420a77-ca68-44f7-baf6-093fa2ea65d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37664634-06bb-487c-a7e3-44ed1a22be16",
        "cursor": {
          "ref": "a2842623-4ae6-4543-94e8-ecb490f7e348",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "19cebd6b-1242-439d-948f-900eb968822c"
        },
        "item": {
          "id": "37664634-06bb-487c-a7e3-44ed1a22be16",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4620b8f8-694d-42c4-a3ca-7f31a7e4e453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbda474e-5f41-42f1-8900-dc5de132f40d",
        "cursor": {
          "ref": "21572683-88f0-41fe-aa53-ef9568437a12",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "99d2932b-3181-4975-aa38-736514ac3a5e"
        },
        "item": {
          "id": "cbda474e-5f41-42f1-8900-dc5de132f40d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4af277c1-8f42-44c8-b310-e0e424e3205b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e1e08b-bfc3-4727-8481-d60a81a49b27",
        "cursor": {
          "ref": "ffd77c5a-97e8-4558-aa42-bc704210c035",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e838585a-233d-4139-b51e-74b8eb1b3bba"
        },
        "item": {
          "id": "24e1e08b-bfc3-4727-8481-d60a81a49b27",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0f2b1891-b0b8-4261-849e-b6c80726774e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4794a6b-47ae-4340-8bb8-3e14a79c75b9",
        "cursor": {
          "ref": "659962c5-6814-4799-81f6-196160df830a",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "64b6b151-5aee-4ed8-b8b7-6cdb21169fda"
        },
        "item": {
          "id": "b4794a6b-47ae-4340-8bb8-3e14a79c75b9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "94c3adde-a47f-421d-ace1-ddc819e37d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d34ecd-6c9e-4e3b-85e4-b635e55df583",
        "cursor": {
          "ref": "857f6fc2-5a0e-4041-9a2a-d6315081ca50",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1f22dc05-95fd-4843-bc1a-805b2fb066ca"
        },
        "item": {
          "id": "21d34ecd-6c9e-4e3b-85e4-b635e55df583",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "01f5d9bf-9dd8-45e9-9ae5-b61a005d9ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1571676d-8637-4435-8bc4-38b2031e063a",
        "cursor": {
          "ref": "b6dc140a-5f34-4879-bd0e-acc5bfdc23b0",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c75296fa-3333-473e-898f-438155725f07"
        },
        "item": {
          "id": "1571676d-8637-4435-8bc4-38b2031e063a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "406a6297-f5d7-49ec-a151-06035d747851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0926c4b-d08e-4ae1-aa7e-5ece11a81a71",
        "cursor": {
          "ref": "0d561924-8071-43b3-805f-981438a2d722",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1b4bf672-2973-4f6b-b91d-f1419fcf85ac"
        },
        "item": {
          "id": "f0926c4b-d08e-4ae1-aa7e-5ece11a81a71",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0a656148-e2ae-4a86-a186-ee5625b6c558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2cddc0-ab44-4a4e-8fca-cc555113a2f8",
        "cursor": {
          "ref": "de9b5b3a-9168-4a68-977f-c252d4facaf3",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "86eb5ed7-c912-482e-9d05-ada272d6e5b7"
        },
        "item": {
          "id": "db2cddc0-ab44-4a4e-8fca-cc555113a2f8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fbc2df37-a1fa-44d4-aff5-17abe7c20432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c270ad-8e86-4aad-ac04-298a8f0a78db",
        "cursor": {
          "ref": "689bcb8a-bcad-4c6f-b38d-d31a47f24f6e",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b66c62c1-9d0b-4d23-b50a-12f6a764a824"
        },
        "item": {
          "id": "a5c270ad-8e86-4aad-ac04-298a8f0a78db",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "45893858-72d4-4fb4-b2e3-851e06040181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758bc450-4966-45c6-adeb-173ccf2aa20c",
        "cursor": {
          "ref": "15435911-9b8d-406c-a823-5606dd7bc4ef",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4347be8b-67a8-41a7-92b8-d22b90902d0b"
        },
        "item": {
          "id": "758bc450-4966-45c6-adeb-173ccf2aa20c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "30743204-2019-41e8-85b3-937b8ed6ceec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b271b1d9-6759-4edd-b135-fa4adb7e9d3c",
        "cursor": {
          "ref": "8e701c14-db6b-4344-98e1-194a26a04841",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ede2bbbd-9e97-4149-aeb0-a59f6aa8a83b"
        },
        "item": {
          "id": "b271b1d9-6759-4edd-b135-fa4adb7e9d3c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9a5b79f5-c3fb-4107-94b2-531300125876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac1e333-6b37-4391-bc84-849c356dd0aa",
        "cursor": {
          "ref": "7d60b969-510e-4f0b-9c7f-760ce838119b",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "752f3d37-7fba-49de-b30d-2040cc127601"
        },
        "item": {
          "id": "7ac1e333-6b37-4391-bc84-849c356dd0aa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "378b32f1-0fff-43e4-9602-5a4ada6ee35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0a7c2d-9f1c-4804-af8d-05d659f93e5b",
        "cursor": {
          "ref": "696e03bb-4fc4-42ad-a9d3-1d84cdf6430a",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f093dac5-d44f-44f8-a417-bfbaa94353ca"
        },
        "item": {
          "id": "4b0a7c2d-9f1c-4804-af8d-05d659f93e5b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1f084899-a8ea-433f-908d-39209c12406f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5361ee-a2cf-4dc3-9a2b-4d72491122ec",
        "cursor": {
          "ref": "90c2982f-8e51-44c0-9435-9aab5860c741",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ba1d8f7e-50d6-4a15-91ce-6fd64dd92eaa"
        },
        "item": {
          "id": "4a5361ee-a2cf-4dc3-9a2b-4d72491122ec",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e0217b86-5ce9-4b5f-b73e-ff34784e4e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c973d24-d318-45b7-ae58-44e3be53812a",
        "cursor": {
          "ref": "35650d55-36bc-45e9-90c7-b7e088722571",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1cf05b5b-ceb7-417f-ba97-921b88a34068"
        },
        "item": {
          "id": "2c973d24-d318-45b7-ae58-44e3be53812a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "89a711fd-da5c-4bfe-96cf-5390d5a6e879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde633a1-f1ff-4d3b-9469-7be78957b479",
        "cursor": {
          "ref": "8bff8185-2479-4e68-8c60-0ce3cc456708",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1ffed895-7c31-411e-983b-9e49ae1a0ce6"
        },
        "item": {
          "id": "dde633a1-f1ff-4d3b-9469-7be78957b479",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9fde2186-ec58-42e3-b086-c0aebfde54ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0eddafd-550c-4cb0-960e-fd7779fd0d90",
        "cursor": {
          "ref": "ba924817-5228-443c-8a22-72a793cbef9f",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ce38b6e3-9505-4f30-9266-3ae05201b5cf"
        },
        "item": {
          "id": "d0eddafd-550c-4cb0-960e-fd7779fd0d90",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "277843de-04ac-4028-8b36-7b70e5237bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adea0152-c70c-4846-bd28-d54208f5926d",
        "cursor": {
          "ref": "f8f34686-6954-4699-8b3d-78f9f51bb8d6",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b6d859af-fbcb-4587-83de-ab2dce073bef"
        },
        "item": {
          "id": "adea0152-c70c-4846-bd28-d54208f5926d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bb130ac7-5c6a-421d-9a35-0a6ee0150ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780d8087-be65-41b7-b01e-97158d78a6e9",
        "cursor": {
          "ref": "e9759b1c-3211-4872-a512-7c96a3fa1e19",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "744abdf5-8d96-4bcf-a578-7127f21443f4"
        },
        "item": {
          "id": "780d8087-be65-41b7-b01e-97158d78a6e9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a7ef7d1d-c91c-41de-9e3e-b120aab2b2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccaf2ed-52e6-40d4-9ba1-090e436f3e48",
        "cursor": {
          "ref": "6c761bd5-0dfd-4d5f-99c7-9ca12e95cebd",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "184c8d63-eb0f-4721-bb32-3826ae52a853"
        },
        "item": {
          "id": "eccaf2ed-52e6-40d4-9ba1-090e436f3e48",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "318804cf-6cf8-486f-b2de-1925343b019f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cddccfe-97fd-4b8f-a881-4f3db93355f1",
        "cursor": {
          "ref": "54ca0ead-2f72-4f5a-8a8d-4df8926dde05",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9a860815-04a5-4fc0-b3b4-ab13f8a13791"
        },
        "item": {
          "id": "6cddccfe-97fd-4b8f-a881-4f3db93355f1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b10570bb-20eb-4ccd-bdc1-4f9d6b8a5620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe47369-ba19-42a4-a469-e2bcd3abbd7c",
        "cursor": {
          "ref": "7cff9de9-a40d-4e64-8702-d34bd7c5cc6a",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a952570e-9946-4909-830e-e82602712447"
        },
        "item": {
          "id": "dbe47369-ba19-42a4-a469-e2bcd3abbd7c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b5c29328-8cbd-4135-bc54-2e1bd8a9b2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153a64de-14d4-4eea-8eed-9bb6307f1fa7",
        "cursor": {
          "ref": "babd178a-4238-46de-9f7b-475cb97eb425",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "76207fa4-b97b-495e-93ae-c22652b6feb2"
        },
        "item": {
          "id": "153a64de-14d4-4eea-8eed-9bb6307f1fa7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a2e24456-75ad-4c7a-882d-bbaf980ce8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250a3f2e-14d1-4fa3-a5c3-b1a71705c200",
        "cursor": {
          "ref": "cdd8d167-c535-4772-9c9d-49ca5817c658",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fe87bf2b-c59d-4251-8d77-34c1f1e99fe5"
        },
        "item": {
          "id": "250a3f2e-14d1-4fa3-a5c3-b1a71705c200",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "85938752-32aa-4600-87d6-0822251c712a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a246b66d-bd0a-48e2-9deb-f9482032514f",
        "cursor": {
          "ref": "027b970c-dfdc-428b-90ed-2b4c8d091136",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "31737d7e-9fc7-473a-9a5a-eff146a5ea25"
        },
        "item": {
          "id": "a246b66d-bd0a-48e2-9deb-f9482032514f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "50b1fc8f-a4bb-472f-b1b6-4556044b8f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ac2beb-17fb-4b9f-9ac5-5adc3ec6ca55",
        "cursor": {
          "ref": "4b6dead7-a8fd-4fc4-a32c-f48deb79d788",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "31301c66-1822-462d-a9a4-b4176f1b2555"
        },
        "item": {
          "id": "f3ac2beb-17fb-4b9f-9ac5-5adc3ec6ca55",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ce76e9ed-8693-41ee-993d-423bfb4d7e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba571de-e287-4a0c-8d28-88534fbadcf4",
        "cursor": {
          "ref": "774d1e98-8466-4655-a61d-691d62e00e70",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fe8ea91e-9a66-4db1-85a5-d8f1a8fa1b66"
        },
        "item": {
          "id": "2ba571de-e287-4a0c-8d28-88534fbadcf4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cbda162c-7bf4-4f79-8633-714b4312a73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14269451-3431-4ac1-8944-d0bfdf735721",
        "cursor": {
          "ref": "e26884de-ba79-4307-8cdd-9960af8e9e7a",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7eb36a42-e2d3-438b-8404-156516ab1ecb"
        },
        "item": {
          "id": "14269451-3431-4ac1-8944-d0bfdf735721",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "09fab540-f7b5-41f1-a0dd-f84880f0705d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3e79ab-f3b7-4aaf-9dc6-72977e53f299",
        "cursor": {
          "ref": "6a721a9c-2f10-4dc7-8af8-91392fc33e1d",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f5e7de18-85ac-4431-91ae-599594fa239a"
        },
        "item": {
          "id": "2b3e79ab-f3b7-4aaf-9dc6-72977e53f299",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "708e4182-32a6-4d82-b780-570b4bb21a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d359b19-0727-4be7-8f3f-8455d8b151bc",
        "cursor": {
          "ref": "b9295058-8a1c-450a-8f9d-aa99a3702d6d",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8d34100b-d483-4db0-84d3-5af397fce63d"
        },
        "item": {
          "id": "9d359b19-0727-4be7-8f3f-8455d8b151bc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ac991914-05f0-49e1-900f-720dfe70ee2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2821d9-d332-4f63-8993-0d7e1dfdb760",
        "cursor": {
          "ref": "e6e5850f-7517-4f87-9ce0-8d4c9f0d99d1",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b51a0763-902f-4e52-8ef4-0186b37bd8ec"
        },
        "item": {
          "id": "2b2821d9-d332-4f63-8993-0d7e1dfdb760",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6dfd8f8c-060c-4a86-9d3c-e81e71b89113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3050200e-7e2e-49f3-ba07-d9ff12755695",
        "cursor": {
          "ref": "c71907e4-dd5e-429d-8470-f7b0d4eef39e",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "35c50960-8c4f-4475-b039-5f3fa31455e6"
        },
        "item": {
          "id": "3050200e-7e2e-49f3-ba07-d9ff12755695",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7715f994-9c3c-47bb-80d8-eebe1aa9b467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4187debf-12d2-4282-b70d-d98ef3782b1e",
        "cursor": {
          "ref": "491b318d-4af2-4b75-bd41-e526867a2e9d",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1474cdce-e83a-4911-92d4-acd56ecc7088"
        },
        "item": {
          "id": "4187debf-12d2-4282-b70d-d98ef3782b1e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b0fb8da3-6195-46f6-9b0b-b5090d519eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d227db3-9629-4abe-b1a3-e74283ffe3a9",
        "cursor": {
          "ref": "c6e413f9-c4c4-4093-bd09-acbf5492cad8",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6796a180-ebcf-4aa7-bd66-8302d2d5e1c5"
        },
        "item": {
          "id": "9d227db3-9629-4abe-b1a3-e74283ffe3a9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4bd13c41-cb3a-4bcf-b4ad-05ee1e35e4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f787df29-1b60-414b-b45b-86945986593d",
        "cursor": {
          "ref": "098d4f88-033e-494a-bbce-42a2a6593930",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0d2fa512-6976-4a1c-ae05-223347096845"
        },
        "item": {
          "id": "f787df29-1b60-414b-b45b-86945986593d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8056e9b5-c3cd-4383-8f7d-001987b31a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfbcb30-c2a4-4f13-8e4f-540053b22052",
        "cursor": {
          "ref": "4f5cfbc4-27ea-45e7-841a-4e6a9d56fbe0",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1429fe51-9297-442d-a835-b97f6ca02a31"
        },
        "item": {
          "id": "0dfbcb30-c2a4-4f13-8e4f-540053b22052",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "40d36651-e313-4783-85ab-ded50efa0fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0569af4e-4af0-494f-9b60-6d1254bf57ac",
        "cursor": {
          "ref": "c093c94f-57e1-44ac-bbcb-62c4c55a3970",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "90d0b4bf-3f25-4105-ae85-fb946b6830d4"
        },
        "item": {
          "id": "0569af4e-4af0-494f-9b60-6d1254bf57ac",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "359b9a8f-9b2d-463b-a6ed-f76b13342cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c5ed06-183c-49ad-83e3-28625edfe829",
        "cursor": {
          "ref": "ad5638c8-e411-45c5-903e-ead00bd492bc",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c145417c-b230-4f77-b7f4-ed2813c08926"
        },
        "item": {
          "id": "65c5ed06-183c-49ad-83e3-28625edfe829",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "709147f5-bef2-4417-a0b1-4deace149ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d112601-e709-4dcb-95f7-79745e24ab4f",
        "cursor": {
          "ref": "43512927-6cc6-47fd-aac5-5718a32083f0",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "18cece4a-ad28-4ec3-b785-94e90d22428f"
        },
        "item": {
          "id": "4d112601-e709-4dcb-95f7-79745e24ab4f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "eda73493-0f5a-443a-8149-4a462bae0211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f65887-75af-43d6-8057-c05f8d5e4425",
        "cursor": {
          "ref": "49e86dff-9d3a-4526-bb1e-0194db41edd0",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3fad52df-01e7-4c80-b853-158bae6b53da"
        },
        "item": {
          "id": "b3f65887-75af-43d6-8057-c05f8d5e4425",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a96c5f0b-f220-4fa4-93ba-ac85721f1614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cab4f47-617e-4e56-82e2-36b4971c0ac0",
        "cursor": {
          "ref": "8cf91ea7-1547-4f92-9378-0f6059449192",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0dfd978b-a9b1-4110-98d0-f5025716765f"
        },
        "item": {
          "id": "3cab4f47-617e-4e56-82e2-36b4971c0ac0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bdb2ef25-a3d7-43b8-9b0a-9c6c98a09056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157e693a-4549-40ae-9d01-71ed314f5463",
        "cursor": {
          "ref": "6c29aee7-921b-416a-bc78-bd75d97f28c2",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d5e6a991-18a5-4257-b268-b7e5b5f0ff64"
        },
        "item": {
          "id": "157e693a-4549-40ae-9d01-71ed314f5463",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "69f60af2-1e47-4485-b394-3b283b4fb776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19da1417-e141-47f0-a1a0-2b167e372623",
        "cursor": {
          "ref": "8d5b15cf-1104-45a9-9fe0-6d873844aab6",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8e850ea4-b0b0-4852-bb1b-7909a5f00ec5"
        },
        "item": {
          "id": "19da1417-e141-47f0-a1a0-2b167e372623",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "157df36a-fd0c-49ec-ba0e-05a9ee91c7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6632f3d-656b-4727-a35e-f280bda25bae",
        "cursor": {
          "ref": "41cb8e8e-f002-4690-9ee3-4a285853aa48",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7b6e38df-0e65-43c4-974c-3a191e811c88"
        },
        "item": {
          "id": "a6632f3d-656b-4727-a35e-f280bda25bae",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3ffae66b-9e67-4485-8a1d-bad002c2084c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c798dcc0-ed2e-43ff-aa86-1137dfb71fb9",
        "cursor": {
          "ref": "6d1b0808-dcac-41a2-a109-90c2acd11de3",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "08cdc723-1886-4298-b010-4a0b13375533"
        },
        "item": {
          "id": "c798dcc0-ed2e-43ff-aa86-1137dfb71fb9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5acf0c7b-2515-45c9-902b-384802f8bfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a10091-1787-4db1-983d-288e273b853e",
        "cursor": {
          "ref": "bc8d5d31-b4ab-4ab2-94e5-f75f39e827ff",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "af5aca80-9f5a-4ef1-8fd4-d1a47012c39a"
        },
        "item": {
          "id": "09a10091-1787-4db1-983d-288e273b853e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "86599612-31de-4fa9-93ab-e7484337f27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b457fbc-9988-436b-a906-18b42ff35aff",
        "cursor": {
          "ref": "75303fb1-8c76-48f7-93cd-ae63bede0d54",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c97aa030-1c9d-454e-bbdc-02fdcc751a20"
        },
        "item": {
          "id": "7b457fbc-9988-436b-a906-18b42ff35aff",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "27c75ce9-405b-43db-8026-450de877c2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e37248c-b11a-4269-aa40-76baa191d8b5",
        "cursor": {
          "ref": "5a355a99-9446-4b95-a1ee-39aa6405b4e7",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5c190a32-ce28-4da5-ad6f-3521647feb4e"
        },
        "item": {
          "id": "7e37248c-b11a-4269-aa40-76baa191d8b5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ad06e557-2937-4f57-85e2-7d1f4bd161c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77055c2f-8e8b-43ce-9ab2-ad46eb845ab8",
        "cursor": {
          "ref": "7592eef9-96e4-402f-950e-0adda923fe79",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "234de1ca-df7f-4d1f-afc8-d7014e80b2d6"
        },
        "item": {
          "id": "77055c2f-8e8b-43ce-9ab2-ad46eb845ab8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c8f244b1-d1ce-4d78-8198-b42472c46ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389fd7e7-5a26-490a-9cb9-dde94d8ccec1",
        "cursor": {
          "ref": "45c05712-6629-4696-8793-76dd91812e59",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2870f2e4-5eb1-4c1f-b03a-238d8105d8f0"
        },
        "item": {
          "id": "389fd7e7-5a26-490a-9cb9-dde94d8ccec1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f542a6cf-6053-4095-a409-a95beeead058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a47a02c-e6fe-4aec-ab79-ba7e9ff61c5a",
        "cursor": {
          "ref": "43befc17-1302-4fd1-b94d-42d0a54fe921",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2e99a4ff-953c-4d57-9847-4991b42c0252"
        },
        "item": {
          "id": "3a47a02c-e6fe-4aec-ab79-ba7e9ff61c5a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2abea5e2-aaab-40a8-a9e9-52bfe6c1ec8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b989b00a-60cb-4a01-839f-e6eefbc1e754",
        "cursor": {
          "ref": "d8c2748c-8911-479d-9a77-9df2726571fa",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5d3729b3-0fd8-4f81-93a3-e98dc5a9a080"
        },
        "item": {
          "id": "b989b00a-60cb-4a01-839f-e6eefbc1e754",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c6e6e602-2480-49b4-8ff2-e699ef9f0716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a6c3a7-2c19-496c-a934-33977b38234e",
        "cursor": {
          "ref": "5fcfbf8e-482f-4e52-8d9c-8ed4734d4521",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ad7d1981-c840-4062-a3a2-9c87c51dae69"
        },
        "item": {
          "id": "28a6c3a7-2c19-496c-a934-33977b38234e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "27e726b5-9994-4735-8553-3646e99efb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc96f6a7-d424-4758-bd44-f77afcf09550",
        "cursor": {
          "ref": "5103496a-63e2-4309-b7d8-bf25b4327fc1",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e900e176-2b30-46cf-8eae-dd6cf17dda46"
        },
        "item": {
          "id": "cc96f6a7-d424-4758-bd44-f77afcf09550",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5f290a78-6a11-4780-8104-c99e1aeb48cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3fa0d4-ed9b-40f7-be9c-434934571b19",
        "cursor": {
          "ref": "0ad28b36-c994-4bb3-9b61-29ff867e1094",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9c10935a-87b1-42b0-8d7b-1af1b75dcbc5"
        },
        "item": {
          "id": "5b3fa0d4-ed9b-40f7-be9c-434934571b19",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "02da67b6-a40d-48ff-8e69-4020eb3bc857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33c2103-8a2a-47e8-ab85-7c161e3c5f5c",
        "cursor": {
          "ref": "ce23d14d-2bee-484a-91d0-958c7604687c",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4ba78992-4298-4d6b-bee3-920352e65274"
        },
        "item": {
          "id": "c33c2103-8a2a-47e8-ab85-7c161e3c5f5c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "265de66b-fd95-4656-a663-f049507a4881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b25898-8b8b-4adf-a28c-02d74a5ac500",
        "cursor": {
          "ref": "125b8dfd-55a3-4908-bcef-dd915d518c9b",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b94d98b6-be24-49a8-a7f5-78448a6fd744"
        },
        "item": {
          "id": "99b25898-8b8b-4adf-a28c-02d74a5ac500",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5cbff5d7-0065-420f-bebe-03ca3db95140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff6e284-118a-4de7-8e7a-f714739d5739",
        "cursor": {
          "ref": "32998c21-13ce-4bf2-a484-d3bf86d8669b",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "54f10a89-db03-440e-931c-6c345a70f263"
        },
        "item": {
          "id": "9ff6e284-118a-4de7-8e7a-f714739d5739",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b559f121-65bd-42f4-a558-1b45163d876c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf2eced-5f0e-4d3a-8e13-d14852b928e6",
        "cursor": {
          "ref": "153f5c31-f467-4f48-8f8b-8354abd93b3b",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5562de69-fc41-498d-b1ed-7a03e4de72eb"
        },
        "item": {
          "id": "abf2eced-5f0e-4d3a-8e13-d14852b928e6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7fc5d875-2d2b-4ab4-b17e-9de7c62469ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3190a09-1d67-4384-b3d9-a6e5d2fbf00a",
        "cursor": {
          "ref": "7e7b5eed-c67f-446c-b9e5-f18db2f7883b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f4372732-0912-45ee-8a84-93167011ad92"
        },
        "item": {
          "id": "d3190a09-1d67-4384-b3d9-a6e5d2fbf00a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f6c1b06b-b9d2-46c9-bbaf-46a94876b7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8bb163-1df6-41e1-8a2d-cfb0c1a4deb0",
        "cursor": {
          "ref": "d84eb0bb-683a-45cd-b912-6d2edb2967c9",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8d4bcc4c-7de9-4d28-b710-bce52e2179da"
        },
        "item": {
          "id": "4f8bb163-1df6-41e1-8a2d-cfb0c1a4deb0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fc7f5040-b15d-4197-95d5-c8db5ebf0b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8ae185-9154-440c-9c19-1dd74134f901",
        "cursor": {
          "ref": "b9392fdf-e0cb-4c76-bbcc-0b3fce3c51ed",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2270fb7d-8ac2-4873-b8dc-fc776ea5c8b4"
        },
        "item": {
          "id": "bc8ae185-9154-440c-9c19-1dd74134f901",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d7c429c3-66b0-478e-896b-b48580e94eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20a569b-1418-4013-b50d-44a2b370532b",
        "cursor": {
          "ref": "7cad434b-aa87-4088-a2ff-df12415c5939",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "dc5918a7-ade4-468b-a4d7-af27f3d97cfc"
        },
        "item": {
          "id": "c20a569b-1418-4013-b50d-44a2b370532b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3fb52df8-b6bd-4ca7-8e04-459bf8546a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f203d7d-805b-4597-b245-322f11d1167c",
        "cursor": {
          "ref": "3d90d7f3-aa58-48d5-b57f-2a439f9877b7",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3519f909-6b50-44a7-8107-10a6ff53f8d1"
        },
        "item": {
          "id": "5f203d7d-805b-4597-b245-322f11d1167c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c4b08cd1-a149-4eb4-ab63-d15e3ad73848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612cc64a-2ba2-47ce-a3c9-6cddbf3a3b2d",
        "cursor": {
          "ref": "e7f7f3ea-8835-4919-be20-145ec0487c76",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d70d7f38-a0b6-4424-98a8-3211796be065"
        },
        "item": {
          "id": "612cc64a-2ba2-47ce-a3c9-6cddbf3a3b2d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "20e37d06-a65f-4a8f-90d4-fc1d6972095c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2973f442-5c93-4ef0-93f6-273ef5a9a407",
        "cursor": {
          "ref": "8e0c1f1f-5097-4cd2-9078-966c9c5fb6a1",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8f90dc0c-06e2-4439-9767-16ec60671165"
        },
        "item": {
          "id": "2973f442-5c93-4ef0-93f6-273ef5a9a407",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e2382070-8fff-4cac-9bac-bf161b68e190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b085fa7d-b94b-43cb-aaea-af4fe6f57d96",
        "cursor": {
          "ref": "60671887-fc3d-447a-8a89-f7fcab214fe3",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d58780d5-346d-4b12-b6f2-8907746bcd98"
        },
        "item": {
          "id": "b085fa7d-b94b-43cb-aaea-af4fe6f57d96",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "003c7c40-8828-479d-9e22-7d70f545a865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971adc7b-db96-4c73-84bb-52ac5bf5b036",
        "cursor": {
          "ref": "dfe50763-1d29-4d77-ad4f-a196a4cbba2e",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a94cfea7-d731-4716-884f-af94a9b3710b"
        },
        "item": {
          "id": "971adc7b-db96-4c73-84bb-52ac5bf5b036",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "90df64c8-e893-42b0-9269-c53789681fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dd320e-8cae-46f4-a1c3-ca6f7691dbfd",
        "cursor": {
          "ref": "f1b4f929-6bd4-4b26-b024-133f0030aa09",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c8aa9937-ce54-4dd1-8379-a22c5f388539"
        },
        "item": {
          "id": "82dd320e-8cae-46f4-a1c3-ca6f7691dbfd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5e03c92b-b9aa-4beb-b573-a252ba2aa13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4bb44e-0071-4429-bd53-44727e44f72c",
        "cursor": {
          "ref": "064c1398-2a9f-4fae-a700-da150b52c257",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "29352e60-6f37-4eb8-b105-d1e6ef8a31c1"
        },
        "item": {
          "id": "3a4bb44e-0071-4429-bd53-44727e44f72c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "30e6c510-7685-4fcd-af05-2588c70e0426",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf0e769-ae40-4c29-93e7-179204156189",
        "cursor": {
          "ref": "52a73404-07c6-4c93-9a3f-59baa52b501e",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "053ee64f-007e-4bcb-a9f0-5a958b136518"
        },
        "item": {
          "id": "adf0e769-ae40-4c29-93e7-179204156189",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "0c4d4e3f-ec66-48a6-abae-7753bebafbed",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0916b122-306c-424d-b243-a17151c56fe5",
        "cursor": {
          "ref": "d0068367-015a-4a97-a71e-042a3276f2ee",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1f3be112-6a15-46e7-b20b-c27a36e465fc"
        },
        "item": {
          "id": "0916b122-306c-424d-b243-a17151c56fe5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5a493012-3b58-4e60-ab30-3ad2faf11505",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29264f0-b101-4033-86bf-8dfb987ffccf",
        "cursor": {
          "ref": "ea7d82bf-0d28-44bf-b149-3bd9be3b1c97",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "920b4bf6-577a-4410-a362-85ddd8779564"
        },
        "item": {
          "id": "d29264f0-b101-4033-86bf-8dfb987ffccf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "72711d65-2d26-4815-8f8c-af9870babda8",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "246b0e80-7a1e-4c90-af7f-c23a40677ad2",
        "cursor": {
          "ref": "67353bc3-8a1f-4f6d-915d-c4f638a5f2ad",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dfe485a2-4659-4617-b7f2-3d13206555fc"
        },
        "item": {
          "id": "246b0e80-7a1e-4c90-af7f-c23a40677ad2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cf2b916b-4549-465c-ae32-942e21ae9183",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c1591a-329d-4da7-b8a1-ea17f4189ef5",
        "cursor": {
          "ref": "225d7137-fd94-4df0-8eab-3d50ef99f50f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "59c88be6-48f0-4203-b741-7746220012cb"
        },
        "item": {
          "id": "46c1591a-329d-4da7-b8a1-ea17f4189ef5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1bea7dcf-d761-4472-8986-84e6557b2a8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c1591a-329d-4da7-b8a1-ea17f4189ef5",
        "cursor": {
          "ref": "225d7137-fd94-4df0-8eab-3d50ef99f50f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "59c88be6-48f0-4203-b741-7746220012cb"
        },
        "item": {
          "id": "46c1591a-329d-4da7-b8a1-ea17f4189ef5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1bea7dcf-d761-4472-8986-84e6557b2a8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c1591a-329d-4da7-b8a1-ea17f4189ef5",
        "cursor": {
          "ref": "225d7137-fd94-4df0-8eab-3d50ef99f50f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "59c88be6-48f0-4203-b741-7746220012cb"
        },
        "item": {
          "id": "46c1591a-329d-4da7-b8a1-ea17f4189ef5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1bea7dcf-d761-4472-8986-84e6557b2a8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d1ce5c-a2a0-4b5e-af92-f2f35a465502",
        "cursor": {
          "ref": "11e37e9d-77b1-4e30-83ee-157c051e6e31",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c5987c8c-2360-46ae-9ecb-b1e9f337b8d1"
        },
        "item": {
          "id": "87d1ce5c-a2a0-4b5e-af92-f2f35a465502",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "0d7afb67-cf86-4e35-9b89-20bd6c8fb430",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba22e6c4-fada-4e42-bf0e-a377e14b9853",
        "cursor": {
          "ref": "45f6c623-0318-4453-ab0a-58f99530389b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0bb3f1de-c15d-43f8-ae07-0b9e357fc6cc"
        },
        "item": {
          "id": "ba22e6c4-fada-4e42-bf0e-a377e14b9853",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4657d86b-ee8e-4486-b64d-0bc4162d1fc3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba22e6c4-fada-4e42-bf0e-a377e14b9853",
        "cursor": {
          "ref": "45f6c623-0318-4453-ab0a-58f99530389b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0bb3f1de-c15d-43f8-ae07-0b9e357fc6cc"
        },
        "item": {
          "id": "ba22e6c4-fada-4e42-bf0e-a377e14b9853",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4657d86b-ee8e-4486-b64d-0bc4162d1fc3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd87aec-d749-4e14-add3-25509af0d74c",
        "cursor": {
          "ref": "e6e58ab3-30e7-4146-a817-4fab04b357ce",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dccf1924-21f1-4c91-80c4-3550b1ef967d"
        },
        "item": {
          "id": "efd87aec-d749-4e14-add3-25509af0d74c",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "cd793892-d074-4a56-b4c2-8335e407dc0f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5dcaa5-98d4-4395-8c2d-33b2a19075e5",
        "cursor": {
          "ref": "e8f0e0ec-f3c5-4e4d-9bf5-ffa91885de34",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d610e6c1-a58d-458e-a4a6-b5f3536ce747"
        },
        "item": {
          "id": "cd5dcaa5-98d4-4395-8c2d-33b2a19075e5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4682c30c-4096-4bd3-92fd-3c384ad60f81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5dcaa5-98d4-4395-8c2d-33b2a19075e5",
        "cursor": {
          "ref": "e8f0e0ec-f3c5-4e4d-9bf5-ffa91885de34",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d610e6c1-a58d-458e-a4a6-b5f3536ce747"
        },
        "item": {
          "id": "cd5dcaa5-98d4-4395-8c2d-33b2a19075e5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4682c30c-4096-4bd3-92fd-3c384ad60f81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a8c0c2-6c15-48ff-a08c-06585ad873bf",
        "cursor": {
          "ref": "4792ca62-e8fe-4a99-ad43-accd068fe46b",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1120a2f1-b5b4-452d-8c53-e7dbd52cd51d"
        },
        "item": {
          "id": "a9a8c0c2-6c15-48ff-a08c-06585ad873bf",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "de73746b-8b38-4ad7-9161-b12cb48797ca",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}