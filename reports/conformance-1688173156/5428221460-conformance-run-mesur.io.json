{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2a5edd8c-dcd2-4180-92e5-947d9bc4dbb2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "15303157-82fe-4b44-8759-af74319dc128",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c5dc6c3-c911-4d66-9d37-8d553c42ef79",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "56c422c3-9bd6-41a8-ae63-3ddac522ab7d"
                }
              }
            ]
          },
          {
            "id": "5df4e14b-148b-4507-8e88-23273531a5f9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc540fda-0a38-4501-884e-660604c65951",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c20faad8-40aa-4f2d-9bba-7e3a5e6c4ffe"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a3987a81-4441-4c7b-b889-b40bcea7cd0d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3c430c68-9b27-49f1-b814-a0d14abe5276",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81c8bce3-b935-4050-9bcf-d91717172907",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fc6536c-610f-4039-9508-205c8f5e2f1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7fe972a4-a20f-4f76-b8dd-0a9b5ba4aa8a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49aa0500-a4d9-4b0d-a40a-25cc2565f193",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63b57b94-644b-4603-a5de-28560c03cbd8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e400a0c1-d433-4d8e-9c4b-d1781543467c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ca862ae-96bc-41f9-bde0-341a35f91dca"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22089e9e-0725-4eb3-a39b-d78048765781",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5991a4f5-1600-4ab7-ac2c-fb9bf671aa3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69fc0e83-c848-41d6-9cfc-23c9a8d83f69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4d987c3-4512-498f-ae70-0f6ca0d2058d"
            }
          }
        ]
      },
      {
        "id": "adff47db-c034-497a-92c6-a577b9fd145f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fcd3d3c0-5d34-4705-b634-ab61b49612a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0145de9-e220-4b48-9001-29dbef5fbfa8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "064a3e73-cc83-4b9a-ace5-f1e301973256",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fb1bbf-cdbf-41c3-8718-34dc0c635e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01bd8952-7006-4497-bb0b-f03310cad737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7ddd9d-b819-4df7-a2b8-39903319fbe3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c28ae7d-cba0-471d-8e95-1b4ae8027a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89713e2a-b3a2-47f1-88fe-cfb6b5e6ce1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbd2740-b99c-4d4b-8879-8bc36fdd45e0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8987db1d-f734-4bb2-a9e0-f469d78c1dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5de897b1-e7eb-4a98-9279-8838f9b8e6ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4df69a7d-6624-4f38-b49c-c3324640d6ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52433f01-47cc-40c2-89ca-32efdd55772c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac96489-ef8d-4efb-a929-7ff7fa3b931c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d5bbbbc-8d85-4f55-8740-a69fe3ea0581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2884c59d-1ace-4e1f-8ed8-f615aadff570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047d6488-1145-4afd-9ec8-d740017054a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "68ec9a49-c0f1-47d1-91b5-e6d05f161a41",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07031247-bd65-475e-b9c4-0a0541acb3a2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "044b1226-cd89-4dd5-948f-701b5e44b8a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "81f77e28-6154-4379-956e-c5ad509b5a1d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01ff6c41-3312-4542-aa8a-0ce2011aeaac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f9a59178-045e-4b37-b45c-bed5f1e6ab9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78fd2fa1-6383-4e73-acc8-cbc84e69b9b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e456d44-f1d6-4735-aeb2-5993fa3bbfbe"
            }
          }
        ]
      },
      {
        "id": "b729bee1-b7b8-4d92-815e-374173157f56",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9f597b18-659f-41db-b734-b484ba0a432a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9c30a98-dc0f-4ff8-b1a7-7cfde9cd73ff",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bc893f93-99ea-4272-8f83-75a091e9e496",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2091dfcc-8f9c-44c0-abc5-2069421e4814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2764fb-40cf-4dff-b1ea-75dc3c6924a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278a0854-108f-4497-99fd-e580feb46edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f47af08-8542-40cc-a6a0-c41ebc0fdab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f878f15-78cc-40ba-83f8-48f63df3cdbd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97efb08-c075-44be-8920-cb06d885ee8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9337565e-b5f3-4ebe-a85c-b624b5770d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a20f37d-9cfc-4761-bcef-acc1fd424755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7db2f07-8250-4455-a51f-ab43628bd8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f17f9fa-f89b-42cf-9500-8f36f7c01064",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d973ca89-31b5-4b84-ac22-12a6f2f49ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2121dee-dc38-4973-ae6e-a2072c52d0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd459420-39f3-48f5-af4d-4e068e504ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f364684b-d22e-45c4-ba94-ec741625d5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa95a0f-4c61-4bff-bcf9-501d74e9c43e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ebe527-948e-4331-8baa-f6fc467e85da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675312fc-0fec-436b-9126-ef877cbd7e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0b3d0a-192e-4767-9e5a-3b9ce1ba5435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83dc41fc-e950-44ac-b5b7-c87538c93a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e323ce-91f4-4c19-b4c2-1382ef24fda2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3479daaa-6067-45cf-afd1-7af168fd2cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31478a1f-1586-42e2-b463-bb5f94d81d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5187bbd-e306-4224-a8af-1d83f20fb7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e32e8393-3f82-4a3c-96ca-6073c4528781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3040c4f-d573-47a3-a6ad-ead785c53799",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75477a7d-5dd0-44c1-9fbe-05e08513b83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a0160a-dbcd-4318-9ec7-d2237a37be8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1744f75a-8c52-4d74-b1ca-4c5a44417568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b759f51-db44-4e07-9072-bcf972316634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3c69d5-b722-42c0-a8b0-62d391082616",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb681820-f811-46bf-be21-4b1e6c0d8b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c80902-84af-4ea4-bb6a-f1b562b54449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b24202-e2b5-42fd-ada5-ebc42417fb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e9293ac-0a67-44b8-bb87-dc7d47fa0dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667a6700-9f08-4491-b300-6c72e55316bc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a09b68-9506-4a81-96e1-63e58ff120d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe81089-cdf9-49db-b829-b5c101f3696b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb07d55-b164-469e-b4b9-e84418fefb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9357a9c0-391b-4f12-93c9-c9a0fc1f9696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e26af0-fba1-4e78-8da5-87f7a5014168",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c65791-5342-4667-b69e-7b881a9f5d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ee5f97-e9fa-4f30-be44-62fb810da497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d1dfd4-0868-430e-b1d8-06a2226b1296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff241ebf-6cd6-4562-987d-d88e5398a87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1839c96-8ec4-4c8b-a25a-607df916a28e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b3795d-378d-4e55-9647-1c334ea4d94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfffd4f7-c99b-4088-b590-63a905ea6e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425781df-78c2-4290-8fc1-f459e251bfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7574ac5-0897-40a5-8b41-f3afc72dfaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09eec0d-3f28-4bbc-98ea-3e318a3371dd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a115a2f8-d680-4f58-b416-d1f10026d255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3716988-812e-4878-a51a-e083bafa2c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1014144-ee09-4833-958a-1d0a5d53e509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "671d910c-9f60-4816-b966-b41d2d51cb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccb429d-75d7-47e3-b7e4-63076d181fce",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22352c6-d92a-402c-aaa0-94e419402242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9f71bc-1965-4bfb-9084-512a21aaef59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfd3036-6aa2-4d32-bc2f-48085e6dd6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "188c7f3d-8b5a-4d85-b8de-78287d968b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2ac851-eb10-4e69-8682-59ce0ff885f1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1db4bc5-1e2e-4efe-a704-2220e67be049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e230fdff-d9fa-4aa0-9ce3-61354f14723c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f6ce69-9e80-4ff9-9a22-8d24e4bf5616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c20f08c-d09f-4c1f-b8a5-87acca6253ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0150afbc-fc67-47ca-b696-d3fa7d947ed8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc54c97-9fb4-4104-8c91-238610a23ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6b0c2a-39ab-4c2a-b0da-25dd67e5a225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb82c0d1-ecd9-4ba2-bee3-8dc0be14447a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4849372e-d5e4-4d11-a852-dd290acf765f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a86b58d-f1fb-4e67-a32b-6f9b2c6b4d6e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10479a40-c547-46b0-a577-209601c77544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec39c1f6-61f8-48d0-b586-ca4ee3ff5722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba15650-df54-435f-8ad4-174e914ebf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fe00725-0633-4aa8-8c27-4228e622d7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8bcd58-0b36-46e3-ad30-2bb11036e685",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d157f49e-9ad0-47d6-a2a3-eb5a2a4ae00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a07d1c-a22b-442f-a3fd-a0b580519c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da17f8a-eac6-41ab-ab92-27e0f2d9af66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5c5b422-b9dd-4abd-96c0-1630b99d8080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1f9836-da24-4bd5-a1b7-e5294703f2bc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b6b260-4cc3-423b-a556-8eaf2661ca67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6620610a-06d3-4dd1-a97d-bccd80eb6f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40691df-cd16-4992-b634-9fc861cb7320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dc2f39e-f494-42db-8acd-09f5585ab65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5d89df-5d60-4f99-99e8-f0d4e62185d1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dcf035-3b79-43f2-bd98-87682d736675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7fe17a0-7589-42bf-a0a7-df74f6af54f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6cb1ff-10f6-4290-8bb6-2a7fbe48bb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5df46bb-dd35-419d-889b-5d91ef5fa3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78022f7d-08c7-43d3-bec7-92c86e6e3e4d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc54c26-e51b-4f4d-9b13-b3db0d2ec7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284994b1-6367-4c57-9bde-af8161b5ba3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3532f941-246a-49aa-a7a3-e1d68f528b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b737a144-12b9-43be-8236-65b35cd2e798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67964835-80d3-4316-9238-6fde2d0ceca1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2f59ee-e80d-40f9-adf5-9dff69ca3aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa9921c-e861-4df3-9648-201a53fcbea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ee1721-3f37-4bd3-9a39-30dc812a01cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23aa8250-35e0-438b-8f7b-21f7946157ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d6c25d-aec1-4387-b503-99dab56c80ee",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3a3347-6f8c-469a-8931-602abde1a2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999fb2c4-3063-4bb2-baea-a197de12c64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98174598-8313-4f8d-9a0c-11b8177eb5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "266935ac-be71-4111-adfa-d6adb5d2b2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947d1380-fc07-4ba3-bb31-3d4ef47e0a62",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb365dd9-0095-4823-8bdc-7a4e6f47f3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2aecad-8c95-46dd-8816-ac1b3d8b046e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdca2c4f-883c-47b8-8444-5c22cc218868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b934ec25-c6a6-41b4-a8a7-58208c21033a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74ef6c8-67cb-4774-aa86-fc43e488ec81",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289a613e-b796-4b2d-87a3-3842c848612e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9551602f-baa6-446c-8229-9b6a2cd55081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac5b530-b919-489b-b809-a9420706798c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f89d46c5-9cb2-4f15-9d82-702e912cfa48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f05d77-0a78-475d-b415-b05d3ca844c8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a62e7e1-2ad4-45a9-8665-11f8739360ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86733969-3181-45ee-82b7-1a9b63553a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a488d82-7402-4ff9-9eb6-f558f0e4a598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "79fc8d57-b864-4105-bbdd-6f359e88fb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448b9ee4-279e-4425-857c-6d61f57f6356",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f412f4-d079-428b-b8eb-5c68b82d73c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c818ea7e-1508-4c5d-aaf0-443a2a2da5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373395d5-1d35-4f42-8b15-74ebc0fd0540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0103f236-5a86-437b-9370-40c66901a0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2667f4-7aa4-47ff-8ba8-cdb5283d70db",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d7a47c-47ad-482c-b83f-b157626b4574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92dca21d-e8be-447f-a1f8-bf66c7eb916b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7eb2af-b492-428d-ae98-d5462d972536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f523188f-0713-4962-b655-3d69ccae158d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3262e81a-554c-44af-99fd-8175e2d20f00",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8404d4d-9e38-4e7a-8b5f-9297d8cf3544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ac7045-4d21-4d61-9589-0ac2d75ea92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278a3622-e8ea-4ebd-b075-3ec42284e362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "115577e9-bd91-41db-a21e-e6ab21fe676e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37045dc7-0281-4d1b-81d0-7f2880fda84c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b4a92c-a9ab-4a87-ad76-2112fc394d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6dc892-b33e-4ba3-99ec-52a56c735ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8becc04d-b698-45d8-a31f-01db3a46317a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "923f2457-9809-4e70-9f26-54e29c0a9b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b96d2af-600d-4153-b73e-697c06b9de10",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a256ed-52cf-4854-bcbc-50ca33cf0c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57acb1f6-243e-419b-a749-2863b87bbe1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d967c8cf-e713-4c4b-9d57-d8800c865bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be6bd5a8-caeb-4d8a-9b0a-83e62edccc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc0dd8e-b034-4a58-8596-e920799e3033",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f20b9c-6789-4553-a27e-3a62d8cfacc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd2a05b-b981-46e0-9133-1792a38dfe5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f3d840-dee9-440a-b821-8232a1734247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6956a25a-1170-444a-9f30-456043abffe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce5301d-2922-427f-b2f2-a88d95fee624",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08948676-ced2-4ed6-be8d-92cc0d684cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d140f92d-7e3d-4201-8210-b8c578af2563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd22c3d-f0d2-412a-aaa2-87d563d61c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1793b673-6d77-4e94-bb7d-21bb01d015df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764bcf87-4a9b-4674-b735-85bb10340f2a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f3ab29-12da-4de4-946c-8ad314040a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a99f5eb-43ce-4551-962a-80c43c247368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f590be25-4056-4ec5-80ef-93f1f8b084c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0ec0e2-5c46-46c5-bbe5-89ccabeeda9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2123d10e-0246-4b1b-8996-90597039520d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7695e44e-1f5a-4100-8806-36585f5983d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1d0bb7-a152-4fd2-a320-ad9d6c5c60c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf998a15-6f1e-4a8f-9a03-07a521c37fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0b50a3-3c81-416c-9d59-2ed6565ac012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9daeb49-1204-47b3-82c1-3dd594085a64",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a293f8-5836-4943-af29-4a95ae47f3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b688844-55bc-428d-809e-db5978774e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b168481-34f7-415c-a221-c0b52b539edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "830e2710-72fd-4cf1-a01d-ad59f53fef67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572601c3-398c-4f08-a0e5-342280f29f72",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d3771c-4892-41f1-b524-d269162c5d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1c65b1-8f15-4139-826b-a5867d79a457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1206b497-4f1e-4994-b578-4d6f003e6dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "75b916ab-c05c-4077-9428-5a24a415d2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7d1732-68f9-4adb-add9-5733e3cd02af",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71725a2c-54a2-4d8b-a0f3-0bf07dac98df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae0112c2-e5a3-42c8-a5ec-40408d755add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52c26d9-e2e4-4aaa-a405-6786653a1c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3df872e-be02-448b-9fe5-fe40d429cf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66324d50-c715-4697-8e31-5c73e0addf92",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56011e2d-0bd6-4a83-b3a5-68263646e35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e665267a-8e37-420d-bfa4-0a27abb2c6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bff164-9d3e-4f9b-9cf8-50076511fb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "185106dc-5c92-4895-81e3-ebd2a620d98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a2cfe8-50f5-4eb5-909c-9061c0c556a9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8323303b-bcb9-4646-9c18-a4439c7b3a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763cc2ff-dd37-470d-a1fb-864e29888b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd465dbb-0283-4ae0-ad35-b2737da66b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2225f50f-9194-40a4-810d-21bdd7bccc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa1ccd7-5756-4d44-ab62-1c24b9cd3c6c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c38efa-8a79-4c50-986d-0f528c1937cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a789fa-37c7-4c09-9728-c64537078fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ca67c8-8776-4db0-ac41-d36146a476be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e76a7bf-bca0-4100-a035-e0edd80d9cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae243b24-4ae1-4e72-9ae7-bf2329d7148b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f70e9c-a7f6-48b9-9c66-09d22a1de23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a7bd74-6d88-480a-84c3-d97d88496e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798297f9-3dfa-49e3-aa31-6439458e175c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1436bf67-91eb-4881-bb94-ec338a3dbee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0cbbe9-c390-4f38-bfec-1a5807b13d20",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99b1076-0cae-44fa-afcb-ac3c25bf3091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb05a395-5731-4512-85c4-fc942d8603ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359afb4e-e2de-4f21-a839-0e40ace703c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "59d84ed7-c41b-48a7-8d4a-c9a29457cba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112f01ed-1ede-4d50-838d-7b18aaf9dcaf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f619e0-aba7-4b73-a8e6-c503fb510247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47982d5c-3d30-4800-8357-2d4a2eb7b83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1a7da3-724f-433d-bbef-04a111526133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7336f409-b3dc-4af9-b2a4-be3d05627006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07f1fba-3478-43ce-bd33-e33a1d8b21cb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e4413d-55f3-459a-ae81-1970119adc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a58adb-3f12-4022-97b3-545f257c4edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa4425b-01c2-47a8-b9ad-227f80263275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "56d43a46-a8c7-4c1f-b6af-24808d6398ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313bfee4-9630-417c-a67c-c5eb941d6c18",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dbd159-74a6-4bb0-9543-411adf7503d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fa3f96-4578-4fe5-b8ac-6f7298e546c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2945e068-eb76-47b5-8852-de99b80df595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6c4483-4173-4ffb-b1e0-383ed9a29927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85695cb0-e829-4933-8541-e0f68ec00923",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64057f5-cadb-4925-bc17-8d5c481b7f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c381ee1-0bd4-4941-b2a9-d87cf4ff95a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b18d558-b389-46fb-90a4-55b8d8e0f758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1e4941-84bc-4c96-854e-966a884df1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3030873b-f9ab-43ab-949d-1c0db994c759",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f62cc3-3e15-4046-9614-4b327dafb80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eddad3f-9a73-4e3f-95e6-b568d7a16426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2277ed-b874-4d60-b49a-51cc72a0c0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d1c5b8-5ed2-40db-895b-e79920d1cf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3610bb23-bfc5-4b8b-999a-5c186f964dc8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8cdaff-5260-4cbc-af78-0eceb256c391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad1f11c-6247-4f69-8d54-586027cafee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62e3371-38cd-4337-83b2-93a9757cef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "959ec6cf-4dfb-4f6f-93ab-5a8ea150e56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549924cd-8dc1-4542-9b03-54f7cb9b5086",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad9bb1e-c0f2-4490-8829-c177dc7368fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aec8fef-ab46-48c6-a881-9ccbf4438b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2110f8dc-6a52-4ce4-93d9-e3fc9eb27ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b388e7-b573-4169-b1f6-9783b5168b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4041dd21-151c-4f98-9e3c-53fb7df86487",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395c0fd1-d9d2-442b-9bcd-c486c96cdaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09eae69b-a93c-417d-bfef-6e11707451c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb175b2b-1d58-44da-ae65-b30fc9690107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3170f87e-d87e-4bf1-a847-873a41911d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049d777e-e236-43e8-a716-b2eeae244dd4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ec7753-204d-4627-b159-39a1cfaa9c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c796a2-a213-42ad-af70-b14bd223048d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4eb79d-6bcc-4d59-95e4-d32efa3cceea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0d8a92-ebfb-4ae4-b730-40d35de03c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ff52ef-9d23-4190-8c33-1825315f8bd3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e113edad-d59b-43a3-9f5a-08d94b4d9e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6b261f-5d26-47f2-b127-0e5b51fc52f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c7a9be-c64a-4d46-ad4f-852fb0b1d56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8dbe55-d5a5-48fd-bc06-d5843750126a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a8bd31-c97a-421c-b057-cf8de7b4fe41",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a40982-e1f6-498f-bb1b-ab2ff2c00761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ee5784-b9a2-4f53-bcce-257ad197c2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1831ad8e-8046-49d1-8a2c-855933d2e130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30fdb1ac-35fb-46da-849a-8f125f2fbd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1259ea-d73d-4bf5-a4c5-949c5aded110",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a00446-ba06-4c60-bfdd-32dd6a90edf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facb9c19-993b-487b-8386-c911e5bf4339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32133df8-1744-41c4-b77c-d79783e6d434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19dc6279-47bf-45b8-a11f-f471d0bb0e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76688e29-2d3a-4323-a973-35a21ed5fd66",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd5171f-ab67-481d-a8f5-77cfe96d64cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d385f0-890e-4572-ba9b-8e3413931918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44dc2b18-a031-4eba-bc76-8d6f438f4073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01057d6b-7703-48f3-acda-9d886e881255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922e6573-ebfe-45f8-895b-4a7686e9e269",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35299d29-03f2-48c9-bb21-edb91e32e8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de84f3c1-4a71-4ca4-95b9-4912f6a210a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ca7c97-ed15-4002-889a-ddd2f310921d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7c3c24-db27-45a9-af37-af325f2c07cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57da982d-eb7e-4198-9962-84ecdd78301b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55fa37a-a584-44e3-9863-de4adcb86c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb033d3-97c9-4a3e-8134-06f97f724d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2befa6c-e856-4525-8203-92e349cace22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6dad303e-5ff1-4d9d-8a01-2ecf5fc94766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4000944-74fc-4600-9bf7-d8e6fdf1b01c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fcded1-026c-48ec-ba17-7c1f3ca380fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190ac51f-249f-4eba-ba25-f6164178069c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156317a3-5254-4b5f-bb88-0eb0d8bc50fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a217360-40b3-4d1c-b893-b4f13df3c636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d15ba3-aff6-4a56-9fbc-9c538125fafe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7d0123-1426-4673-b3ba-49fe3fccf8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b5d86b-97b0-448d-ae84-e1205e908457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd2214d-2912-47b5-a54b-9843d8753448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "59a2f1ef-7204-41bf-8147-7ccd2354a6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca57ea77-a000-435f-a33f-1054a9960b6b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f4f652-4c1e-4ede-b0e3-2ab896743a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e291af-47e1-416d-b342-9028b052f660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46e00f5-3712-4de9-b5c9-d8efb9e9c6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7802510-2125-40a5-850f-d02746a7b2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d6ff96-9aaa-4f22-b8f8-e129a5e0c5c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54563a5b-9f68-4a08-be30-518325111a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69169061-e384-4060-9d0b-1077d4eee00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f543b8-bc44-4421-adc7-6b8ae23d1a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "477d2ea9-f552-41f3-832b-4cd3c52102c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0e5b93-6372-4b3a-aa99-a123cd16c12e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7162c9d2-0776-4f17-b82d-6de5175663b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d20d8db-ea3b-4d68-96aa-8f142b41bad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3856d380-669c-4878-a499-bf31a0874177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "010b0c8b-abbf-4861-9757-0eee7f2f4d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b38073e-a28c-43f4-9f70-47e4a06d92c6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624ae2b0-bf0f-4b0d-a0bb-b480bcc26fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48aea631-3c24-4eef-9822-15aed19e0dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a622dea7-8e78-4929-ac96-29edf605be6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4109594d-354c-41f9-a998-5a74f18eddb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17cac2a-bb53-4afa-852c-58a39c4e50de",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49fcaaa-bd7c-4c8f-b89f-0ece4d78ee03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb7a4af-1c6b-4e95-89fe-5d4a0cd0e63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b144835e-383d-4392-98e4-6d8e3e7145da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9c69bc-780f-4ec8-b1e5-487309d24095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1596998f-338b-4aaa-b305-d3f907ebf9de",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03128528-052c-48b4-9df7-a78606d79bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a82f9f9-b90b-42b0-a6b2-89133e9424cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64db3fa-22a5-44f9-8396-3b32c94268be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6806ba1-250d-4610-b6e0-8edadb11d74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d663b490-5ecc-4b62-95ca-0d7012b61b3c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b180857f-ec05-4a4f-b6d2-eae94fb5cd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57b1706-28f5-4026-8078-8d71baf6ba34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c192e4-3784-4451-abd3-adb9f61a47dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42bbaf96-31f3-46bd-9417-994bc9d65857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a84ddc-1729-45f5-b691-80189de4caa2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3fbeda-b44e-4d6a-a72c-a14af0f3bff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6583adab-1998-4214-b685-6dd77817677e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b2808e-30c9-45b2-9a3a-51d867e5a1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb171397-8dfe-413c-bfa9-58415e63ea3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdc9197-92ea-4395-889a-d1ce028b026c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d84466-61c7-440d-8937-b9d7df0d734c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e7d83f-f309-406d-a2fa-49cdd0acc40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0c36ac-2269-4829-a89f-6a153aaf9eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3426f19f-7214-4d1d-b6a1-c8f1f6abeb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b631cbc-4cf2-41ad-b143-06a38169c99b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d6c72d-c2c7-4bd7-84b1-bbc1d57730fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d4d373-e417-4be2-9a62-3f3848566f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3352edea-378d-49fc-81ba-c65bcd91a2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0708f606-df62-4c75-8c08-a7a653a9021e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc320e94-e301-4fdc-ba21-52574b427d07",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f618c0-9176-49de-81f7-240d7ced1039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f8e4af-c9fe-476a-b0a2-c0df30ca7386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815192da-ef9b-49d3-8cb4-7d49f1db7437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe36770c-bdf6-4053-9a07-96519da32f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df263aa9-9663-4d15-b6ec-23a516901a2a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee4c966-653e-4896-92f2-74a87a3b2f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875a2c6a-c65b-41f7-9027-41f4cfacab0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c15149-dc1a-4efa-bd8e-4b06d5b99a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a88dc3b0-757a-4b97-b06e-f263066de3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f367bc8-9340-4592-b1d5-f8d77eb44615",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f16cd6a-39d1-478a-bf9c-a5cd689d33e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ef68ec-9b0c-4181-8464-36128e66d157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab7e9f9-e225-4570-a5e1-6ded55aba9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d77a60-6c7c-4282-b98e-4e57716a7478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa530f6-079d-46a6-999c-22cab7c1286c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f6eeb5-e884-4ef4-815c-edad1692d4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42464c86-16c0-47a1-a528-ec94b0fcc719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4fafe1-8041-4fc7-86be-3d8f830c2aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33528e4f-804d-47b3-b44a-4cf1230d7934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cacc0e-ef9c-4cc8-b267-78a5d6025c60",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b79f0f-8f1e-40dc-98fb-eb2e35f38b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4705991e-41a9-443a-b423-8aef18b79e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed589db6-f96d-4150-8e2d-a369b025d38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5277d74-bd9e-43f2-9f1a-c31acb4719e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3065bc31-6dc3-4b7f-bfdd-3d2fd8ffbe86",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51c2ac3-97d9-4c53-b0b4-c0bbcb26bf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca479fb1-5851-4ab8-aad7-204979c5dd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e4a212-0da4-490c-9bca-0c6ae1c787dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "878b2f2c-d684-453d-a7a0-2c332309aea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3562e21c-1b2b-432d-9c50-f23962ed321c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913bb56c-f848-4b4c-8ab1-743dad37f725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacdfb9a-99dc-4305-b685-6d3847957b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a013bda4-b74c-4513-b3c1-ebd778b2bb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22b01dba-ff0b-4b07-8910-a95a40503cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbf194b-631e-4d83-9fdd-8871a9d99ec2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36cad7b-76ba-4380-9944-176e1097158b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fcc3ab-824e-4e70-ad3e-e474ec167533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2561fb-2105-4b54-8d44-7341afb02af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c005752-3627-46f5-94de-a878e7b86d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417d1936-425f-45aa-903f-ef6f589bc905",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee29bf3-576c-490a-8f64-d2e5c3364b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004bbb3c-5ed5-4bd8-976f-32bc6f837ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184babd9-134c-4d01-9b85-2e31912a8aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a2eeef-822e-473e-be1b-05c9e84bccd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfeae2e-e7c1-4f72-ae8f-a3592290620b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be59bc9d-8a39-4262-a890-d0152d9834fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9976d95-8ad8-422f-a008-115e7965e770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a77a876-36cd-4215-b79e-6f63a050909f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e51cc064-8d78-4c82-9072-21caa298dda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd208b84-4f39-4956-b861-e3229e0887e4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd6b84c-5398-4462-b6ba-d65fd44e1751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9e0e37-6a5c-4ff3-ab3a-82d5bdb2e2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e302201-435c-4f63-bca8-328d3a9cf7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43599625-ae06-4239-b3b0-e5c068664052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577fbd36-2009-49d9-bf3d-0335d4131bb9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08780130-0313-43fa-9d87-90f43eb0b0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f6679a-cfc4-4d88-a12a-cf2aa727bd7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084e99be-48f2-44ba-aee1-731dfdfa1613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9f933e-14dd-4c0f-939b-1b4febb7d341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd4e444-2187-4730-8d03-364ce53755d0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85a8ee5-f90c-4257-a946-234d8376a58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84634598-9e4f-49f4-803c-d8226a4a819a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c049fa63-e46c-4593-8271-f2c2c306184b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a7be58-929f-4c2a-a2e5-11f925068341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5393d39-706a-4ef4-a20e-d0788e0e65ff",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3fa5e9-000d-45ae-a37d-be903d712d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0515fadd-4568-4d3b-bdc6-fd700d2ace5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c305dd97-5b5f-4639-90b6-a0da3bb84b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44c52a99-baab-4e78-9c3d-f93747eea37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f8c8ce-21b0-4e74-8dd6-3f8b10b1bb50",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124db823-36c7-448f-b56b-c0c4c2818386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c232d2-e69a-4fea-8dd5-c1ed6089d306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f156ee-ca89-4d01-aee5-124196e641d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c620c3c-601e-40a4-9154-2962308394cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521d1618-10ec-4d93-af94-0be3f15b6187",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c832125-8bff-4934-9b29-085a326cc960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b926f9-da64-494f-9bfb-fa6495f931d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c935f54-c43b-449a-a860-234d395f4f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "564cd3ca-f28e-403e-a44c-0e9b58e03c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f1b6ef-a386-4368-b6f5-fc36c5bca3c9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33aa5dca-71a7-4a1f-8a9b-ea397c68a3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5beb5b58-27a3-4143-abb0-d229e8eae8de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ed37cb-175d-435c-bd03-f18a28ce5896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69daf8ec-7dd4-49dc-b456-f2b05d4d2ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c14ef8a-1964-48a0-bfd1-f24f226d9b77",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024fbaab-3a15-4565-8730-6c7f9a80f336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd41cde-6eed-451c-a2ad-5c2944d0091c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea08b12-0638-486f-a403-8225cab107ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa5e2cd-f864-48b2-801c-438981060fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5b6e52-e77d-45c3-9954-0c3efee1f3d8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f690e185-6eba-43bc-ac9a-757fc47a8ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf7a1c3-b6e9-45df-a003-8e31c56ae813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2802d19-da6f-4a99-a64d-79ece524600a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb95b89-da02-4439-b448-f5491ed9e91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262d7e4a-7666-4126-8b2a-d6b619fca390",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6cf29d-b85d-4461-b1bb-df050157f8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21eaaa24-e375-492b-a873-997a67d69ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa54c7b-b7cd-4ed7-ad97-52d2f687aee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac9385a-b1f1-443e-b32a-9e74d8954141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab427cac-75c8-44cd-a957-c2874e74355e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601b7ca8-bd1a-450e-963b-ed94304fa393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08d22ea-c4fe-4c43-ad1b-1b73ceea4c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ab7d63-6add-4012-beb4-f4266db90e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8784a4-1dac-441e-a512-ef7e37821508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2c56e6-07ba-4ca8-b841-905626118cf6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a5ebee-596f-4902-97f2-9e8368840d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e05557f-db5a-43da-a66e-13c4ad9543e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9a5be5-9ca0-4277-85f0-aa587e64b983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "657d02f7-8369-43e1-840a-79b0c504b592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae506773-40d2-426a-9a5d-5e7a83293c98",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feba02f9-4829-4801-aa0e-b35a773f3657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b35a0a-2076-41f5-869c-24495b40625d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b789279-266d-4f59-9b6f-2851f27b3078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7ee0ee-b65b-447b-a7bb-fa9f655076b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cce3d1d-604d-4ff7-b9c5-c4f408cfbfa9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b6563f-da6e-45f2-b6e7-cd3e7c5c76ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c8ce2654-fbc8-4949-9f74-3e1fd33e798a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d7329d-5cd6-4e8d-88c2-bef3f7e6e4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5933ec3-7dfb-4a72-a817-a72c4ce97f69"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99167248-ddd1-4157-b081-36891d4c21ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ece25cc-a55c-476c-b474-7e89a55e81ae",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cac3a6a-d139-4de2-91d9-ce172a6d042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9d9c826-33ff-4a5f-8023-c1b085d7a67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59eb1c8c-d3a3-4b7c-81f4-89d798ad6ea6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf51366d-7138-4eb8-a634-6b8a2fbe9df8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6af523c-e70d-42b7-848a-ea07cc078384",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2177d8bc-270f-4264-b9b7-4ce9e99dd9e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b9669a1-1dc2-4d5d-9c5c-ff7d37ae631b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f5d5965-5a09-45ff-924f-38f19aceab0a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6fc7cdc8-b4e2-45d9-93ca-dba40dc4dc64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11a49c1a-bdc3-40ad-9ef8-3d52c6f74b2c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c8e2a9f-e924-4001-8024-eda56fbeb4ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9c7ec1a-ccad-42e7-b5ce-375b926e78af"
                }
              }
            ]
          },
          {
            "id": "8951cef4-82a1-4832-afff-94a90f1a9b65",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3960097f-946d-4685-b5c8-00cdd2dc068c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdf72d5b-c4d7-41a2-8789-b81b56242485",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2403b0b-da08-4f2d-b56a-522cbed4732d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7071a1fa-4f91-4d4c-9134-3f2a1ca1261f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a1244353-2180-4610-bb5f-152a80f5d845"
                    }
                  }
                ]
              },
              {
                "id": "a40eff14-6a7c-4299-8578-f6e1192a4ba7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95a3f9ed-5cca-4fc0-9ece-9e8dd1f209bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ece0700-4ec9-4c2e-86f0-aa6050cfb6b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edab0212-0a8d-4873-a18f-57b2941be9d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fca35255-fd34-4c87-b3ac-31c698ebc34e"
                    }
                  }
                ]
              },
              {
                "id": "aef6e644-24e3-4ef3-ad99-76353c703add",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bbb539d-9a4a-492a-ae6f-a572017bdef0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd89622f-5312-4e1c-b0fd-5c474c69c23b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3aae671d-a5d6-49e2-9d53-d24cfb17bbcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a04cfdf3-c31b-4d92-868d-e4e03a25ead4"
                    }
                  }
                ]
              },
              {
                "id": "7e9dddb7-94e0-4de6-a8f8-3306f336d63e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d43940ba-ca84-407c-b5b2-bceb25fe714d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "678cf08a-3599-4b09-8fca-baf0e5e0b4f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f9af5b6-e9e2-495a-b199-37e180dd6a69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "381457ee-1fc2-4617-8f0a-2412321a090a"
                    }
                  }
                ]
              },
              {
                "id": "409060c7-1044-4ddf-91be-c502816802fb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a189cd10-bce1-4c81-9cd6-e389c91c382a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c25a5b5-6d23-4c6c-b15f-7d3b4ef8273b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "819a0c28-55db-4c17-92df-89e66566c361",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "985bdc05-758a-4081-8141-ed25f84f1b4a"
                    }
                  }
                ]
              },
              {
                "id": "98e7c463-24e0-41a9-ac12-faab8a22b539",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4083b20-0395-4a3e-ad8e-4ea3b1f70f45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1b77a13-a69f-4e4c-9a5b-952ce2b8c2bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "991ec4f6-ff28-4f8a-b1b8-3d46f08ca97a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6552fba6-02d6-4ff0-bddc-5b0194924567"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "96b68101-6151-4eb7-b2f3-50fffe556476",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6c7c68d-fa28-402e-9802-95d56c584177"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "06cdad8a-9a97-4184-b210-dc3ef266419e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22e2d236-4b8e-470f-bb8d-790073ef4c2f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd99af02-8ba2-4538-995d-ae1425e86f21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6418b2ba-52e7-47d9-bcc6-c38a267ffd01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43ab6753-1bb7-4ab4-a4a3-1c57616287c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43fa019c-b6e0-418e-a382-13b304e19e81"
            }
          }
        ]
      },
      {
        "id": "17f241f4-e977-45cb-94c7-58d94680af44",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b6ba0659-cdb9-4c47-a2a8-bfa5a88bf838",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a1c0612-cb9c-4375-bc35-ca0a0f5151fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d75974f-1626-4684-923f-d1713277dd34",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae40597d-b453-4514-ac3c-aa040184cdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824dd491-98e5-4d7a-ad92-aa6056a0f36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbae190-2bfc-4be0-8a0e-bf8662494d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a750af-40f5-43ef-9fc9-9aecc94a006e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de158a6f-1ace-4c2b-9241-4da08120cb81",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69da98dd-2720-48c5-997e-9c5381e404eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f66dc12-8eb6-40b8-9feb-740e5603d5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829c8efc-673c-405e-b7f9-f1c8c2132875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bf052c-be54-4f31-8229-fe085d8b0b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54af5f0b-8d22-422e-bccb-0c70ef889e48",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27949dc4-0a0c-44cc-9a6a-9d6409d9c34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6882e9c2-b7d7-4408-a329-d11f3c4e81bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fccdefd-61ae-46f7-8484-a033075ecf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ea44ac-fb23-412c-85b5-d9496f536cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcb6ea8-1d06-4ca1-bdef-233161052416",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcc008d-be30-4327-bdb0-293ce8ddcf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3bb16c-d4c3-47e0-9711-d91f6e45a13f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774b4ef8-7493-4b4c-9f21-35b462cdf8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e52ea75b-7498-4e95-97f0-b8c761e8e5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4634b47-5346-4785-ab1b-32c381ee912f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494e87c3-b15e-48c0-8597-e6bc31b82e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448bf5c8-8964-4c39-abc1-81cddd14d93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277414ac-29c8-444e-b8d3-556cbe2156fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "271c7bee-00b6-4b97-b71d-b9742b7b55cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5533c4-d9fb-40a6-8f49-7ef78053499f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c7579c-c109-484d-ade3-ddf092904842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d915637-2128-4a10-a17f-cadb1243df2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59ede14-9536-4b6e-af69-65136ee4f563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66e9ea55-c988-415b-9dfd-13d3f30000ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb03b9f-41eb-4c22-bc9e-48b9a06da667",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60c4f94-0af2-4883-bd67-512b43564488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcc5ce7-fdb0-4e50-8d14-8599889430a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0a17be-2042-48f0-bc6e-a8772147b759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f397669-a975-4b30-b718-88de34e886b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5bb115-a326-4193-8e7d-10bc1fcb5466",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21659cd2-9fb9-42e0-89ad-129b2f554f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa09dab-f267-4bc0-aa90-5ef34774810d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d59202-ff68-40fa-ad5f-2ec9b7c86d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28d140fd-7cf2-4a6c-89ff-bca5662ba582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1397b078-896d-4fd9-9cfd-70c4ee87be17",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e295cb-ba0e-4156-88ed-b263191043e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d2d00c-dea9-4836-a2a7-f38efc0d6272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2e5d11-b9d7-4788-be9d-a47434b4dd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbee401-7526-4810-b756-0efbbf8f7d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22fd0d0-2d15-4cef-b5cb-7caef7d4ef4e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4937d9ed-6379-4f80-b45d-53c0ee417c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60371a5a-41fc-4fda-b2cb-212289d48c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b096998-870a-4dd7-9b5f-ad388573ef02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad74238a-5172-4baa-bdd4-7e6d56f32944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40bfdf2-79d4-4954-bb3b-55e05d28e2e7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa1cb0d-33ca-4b15-adb1-2cc82ed78cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef82c5a-f7f4-4e31-81e4-eb93417534b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7228233-bccb-4a3c-95a5-0dea8956935f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e566b3cb-f3a6-49a7-9f61-392031357a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12628fcc-bc47-4014-bcb6-2a6f015efcdd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354f411f-8875-4369-930d-80d41f0d42c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5f6eec-0eb9-40de-a16e-009749a09e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785f03a0-4de0-43f3-b56a-2bcb7439fca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16f7527b-b268-4802-9512-a95dfb644dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b454ac8-0770-4a38-b15f-df32f4220156",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddad2f4-da21-4ac4-805f-3d08ca51b165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2c1ffd-76fe-413f-a3d6-cdddd36bfa37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3288b3c-c717-4fe0-86ca-896688807c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f8e8bd-05fc-439e-b615-4d1bf2a2d369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b47296-d7ae-4edc-88cf-4bce776d8a44",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acecd8b-4664-47e2-93f7-9769e6f04a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc830ed-c847-4fe1-8399-74701d751d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a05f3a7-ab16-4947-af19-da5c99a8e4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c38f9e-7cb5-4f13-9dfd-b7b8a5fe3299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ec1f3d-6005-4aaf-8641-1b62706099ed",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73711940-c7d3-44d3-a914-b63fcf59a6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d01f2d-dc47-4e2d-9e74-02a19e9d0643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9103443-0c01-4cd2-8b56-d59e160d0147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba19be9-d977-44f0-8f34-7f5d8666e736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549cb7f1-48a1-4ea2-a264-b7bf7771ab6c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0431a9dd-7fbf-46ee-ba62-6d78166abfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ce9b8e-c71c-4c2e-816b-44abb33d5032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2164fbd4-f5fa-4e9e-881d-fe625b83a004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6cbe57-7b0e-4a99-9377-9086ae394bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea81434f-50c7-4b32-bad6-69b25e878413",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8520fd-016e-43a4-a2f8-800822c9f095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66e4cfe-52af-4a27-a91c-2ddeba86e2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a4c11d-1289-4d15-9456-b3feb360944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a941046d-7607-4f1e-96c1-621b1087abfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ad9d72-2ab2-452d-8534-83659c4c93c3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59be420a-7671-49c0-9e2a-1973329df5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d455002-a7a9-4830-b71f-b93483747b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3408188-87da-4d7a-af47-6a7086ab3864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "780844d8-54e7-4217-a310-29bb1caee37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8036a06-6ac4-4037-8b9b-419714e9256e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586bc3d7-0764-45ea-a10e-98e8023628fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09084cb-4585-4e60-b3e2-e43a928ab0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1844d7-f15b-47bb-bd6a-412308a4170f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12250c56-3292-4c0c-bf12-13cf3ececb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5555aea0-0fd5-432f-9aea-497c00a3369c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15cd8d2-61db-49cd-904b-481f1b804126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee64ab6-1bf1-4236-a26b-c4afeba51571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc61292-8db7-4ad2-8470-1c76db419af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9929b36f-ef2b-4ecb-854a-5fe15deaf1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecd7875-9716-4d2f-8d47-e26c93b2dc92",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dc651c-c292-42e4-9294-44816268d613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0f8b33-f2d1-4def-aa8d-233a98c5203a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81062162-6998-4ebc-8c72-115d2087fb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a912f4aa-b062-400d-9975-07ceacb528fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5f7e41-2e76-4aeb-8738-f4207271cb4b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14dadb5-c64e-47e4-abe7-57ac2abaf0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c4ce4c-8581-4e62-8744-09bbc17eb1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcbc9db-5d87-416d-b34a-8b9218d40f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1344795-13c8-4bb0-b66c-1e1ee93720a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9690ec30-3a65-414b-8b8d-74cf2f94eeae",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb1b238-bcf7-4521-b16d-48a3be41c1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec86e7f-fa7e-4bfe-813f-e105e39edd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e8d8b8-e44a-4ff3-b50f-a15cf89e206a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6f0737-122d-4e4c-a3ca-2b7462c2b069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90e80bb-f626-43b8-848c-e9aa643577c5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d1a981-52e3-4c1a-a569-6798b0f3965a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c630c2-4324-4d1d-aa02-5b94be28aa72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175aefd8-16f1-4296-bade-36e56b9b84c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "951b160a-ee37-4834-a09c-1875dcb7af9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d88d23-13e7-46c7-b2ab-cd7cbda5f5b9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a525364-46d0-4aa8-8146-f45d00886cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e25c9e5-59fb-439f-96cf-60b2a4ae56ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f16218-0ee1-488a-88dc-0c51db65b6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a36d36d-7102-4222-8d9e-ac32c2fe4342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dee7a3-438e-465a-919b-6ba7d90c4e9e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6c9c7f-e0a7-437b-bdac-5c111ebf58a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f577cda2-2c36-449f-b87e-c12466e5a29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687606be-edd2-4458-959a-9c8d8b33126c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec1ae2c-5bca-4c2d-85ec-6ebcf08fbe21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d6cacf-15a9-491a-af45-4d45482f4a39",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7608696-7428-4209-b893-7a922f63b94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5941546a-abeb-4f92-9deb-8d658d2da62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7d3618-bb38-4244-99bb-607007f04838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d818598-f2b1-4b77-a8db-efc633e16598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19fa1ea-3321-447e-a0f1-996e6954bb68",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ab7264-3879-4512-ab53-a609dfcd2588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c757f21-aff4-466c-a766-c6b1be732699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86663a9b-bf45-4669-b00b-dfe00ec39699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4310ac-52d8-4d04-a691-e22bfcb6f409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febb28e9-9302-42f0-8481-b0fd4bcace36",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a0c701-d86f-4fe9-8002-6791e9670ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db584db-ac66-487c-9dbc-8adcf330c0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37deb8cc-ed57-4afb-81fb-3f44c4fdfece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c0e442-d72f-4c32-88c4-531ca39a0029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549fc08c-a0a6-4fae-a7cc-790535a5a31f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88e5470-b9b4-437f-9898-476a47e8767e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff6deda-6863-40d5-8e10-fe62e527d66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7aafb2-0933-4b5c-a6cc-12209400d264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99daa6e1-40af-4886-a60d-fd49e938380f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe4bc38-bb54-4230-b258-4212a11e798e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c602f04-5629-4dbd-ab3f-bd69bf73ad7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21792466-1bea-4a80-a911-ca91e02bf3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fa9f1e-9640-4ad5-be4e-11dbf66d8d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dfd9ffe-b4ad-4256-aa19-2d31cd644889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea876bc-a480-411a-921d-bfb7146da7bd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d88b844-0b29-4bbc-af7d-2fa2c087f4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed17133c-9e83-4674-addb-146b353f57fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858a2dfb-aad3-4cb0-85bc-9f311ac691c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59f1ca41-0ed3-4f40-8250-3eaa624621a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e179dacc-d82c-4b23-8e5b-50df1a015752",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b985da3-e162-4155-b4c5-9d83293853c4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210b87cc-98cc-4181-bd75-c897b67fad32",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f164b1e6-64d3-4fa1-a516-0a4b677cc96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f599d8-d6db-4ec7-8b51-5f601e67725d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "975cf477-6b6f-4640-b783-56c4c7627dd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95a2c093-1e85-458f-8c52-4178fb094324",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89b01dc5-a4df-4761-815d-bf5b7412f1cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "adc3a275-4b9a-494d-ae46-8d7aad84dd75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a95df9a0-ab38-42a2-a264-26a2264a3b85"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e63b919c-e7cf-4b7e-a9db-599299d7cc27",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "14febd59-5c1a-4704-937f-1b9d12d4c8e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9661602-f599-403a-9133-478d0d1ddf2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8c8a3a7-ddd1-4c98-bed5-68eb42e426e1"
            }
          }
        ]
      },
      {
        "id": "daf97ab8-004a-4d56-9108-7969cd185157",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d26ef296-5372-4b4d-a289-53c36330885b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "715c6be2-d5e8-462d-b981-561add504127",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8dbc5b1-59f1-4006-8219-6c9cc3e7da7c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e332c79f-f7f2-4e83-8099-80f72f771bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc0b190-8ae0-4c5c-857b-acf61e36a61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2a7f52-5bdb-4d43-86c5-91d687b5e55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a96da9ce-3806-4bdc-a92d-42a4f0283e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365cae5c-bc55-4769-9b01-8f207126d970",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d000de2-693e-4cfe-a9d1-11dcac00d570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c24896-ecb4-4f90-a504-c1b87c31c88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cb0f66-ce4d-4d86-939e-e30d1875a1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f767d60-3aa2-46a0-ba26-14fe26eb9a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93de4b9a-ba9b-483b-8a47-ca48448e2d90",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49aa856-9f00-44d0-877d-301e1d8183e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c02285-2fe4-4107-8ea1-169f9b3deac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fecd9d1-e387-428a-b589-aa91af1bfd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef35463f-1721-4aae-92cb-4ad5d896b214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508aed97-4cf3-4fff-8d1d-8f15c63e788d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a24175-920d-479b-ab45-1c14dc746e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b62e4d3-756d-4673-957f-87e9723b33a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b28411-69a6-4ca5-bfea-b2bd348a0ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d0144d-6693-4ead-a4ab-3181d2629c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a637c3d2-45c2-4184-8542-a638fd2465e7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fb9e5c-3a50-4897-a43d-d7cafe153e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eec4633-1e97-4ed8-a0b2-052ad41a653f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78396dbf-eea4-45d8-9188-ce9b1ef5ed04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "668719fb-dc4a-460c-8e52-68d8f13829e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62002257-9dc3-4ded-966e-0ed3cb6aa1f3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4402c73-862d-4d8b-8cfb-168002bc0e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc989410-5a05-44a6-bda9-553b3b5b91c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1ac5ac-5a7f-4d94-93ba-2a46aa3ad0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "162c2e6f-f3c4-48b5-99e2-db2359c59185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b95d422-32e7-4855-bb1e-5cb9099ee16b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf867c8-7dd1-4034-be2d-0c475e8f0378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3248e6-432a-473c-9bc7-c14dbd5cfd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66960b47-83a2-42c6-94a8-7f004f34960b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "036925b8-eb1e-4d72-834f-3c46e87f1368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5241aec2-62c2-4427-aefc-c9de758ea4bb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7949bab9-c66c-4cec-896b-2bb694bdd558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2e7d9d-aa2a-4174-b609-870bbf15d6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36131eef-7051-408f-8441-631b89a4b187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8e4fbc-b971-48f8-965a-4470564b6ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74ecb8a-fe5b-4c69-b7c2-a17131fd6b67",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045b80f3-c108-4fc2-9172-cae6cc1b5767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc9a657-9458-40c2-b057-c0d8ad4c8616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a55c10-1a61-44e8-9731-c72db1f3e661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c43a276-2e70-42ee-8c08-45bca7ee39eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df53100-56e9-4ab1-bdc6-e88b24c9924d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75ebf67-7c50-48d5-beaf-c528fbc1a578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb600a3-bf46-4fe9-be6d-8e063e377edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84683e6-1669-48ab-bee4-517d8006f7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30b6bc47-15f7-43ad-a17c-a60c348b7394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1021b931-9163-4047-a4bb-979980ce720c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7a1d9a-13d6-4e84-9846-73ac3230e5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44bbbbb-f994-4092-beb5-6bd5978c13d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2be1c3e-1235-4695-8329-8231d430d923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c98d0e05-56fd-4fed-96ca-78ece7b68bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcc6aa8-7b19-4221-8900-825150f86b0a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488a80f2-0410-4ae3-a804-067df65bf31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfc64e1-91cf-4f95-9363-641e9cc96dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c527beac-4233-43d4-9797-25b01f17e09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e7633a-7843-40c4-934e-5be648ea9e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a926e374-a318-475a-96ef-7a9756518cdb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae06d54a-60fd-454f-91f6-ef0b234eb3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1577db-49d9-4818-ab49-26a97b3828a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749b2bc2-58d8-4fb9-b189-bf4531aefdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62aa509e-f001-43bc-bce8-c15268d934bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06372eb-91f2-4bdc-bf7d-cfe48cd8e527",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab49e29-5c03-4418-988c-7c7522f8c507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf6fd1a-d390-4b74-8e6e-eb688ec5928d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43065745-48b1-455c-a538-d19fd05519d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb42c1f3-04ba-42e9-8c5c-ea00387b60ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3728903-7c4c-412b-a8d2-c89b67b575b2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383fb9a2-d761-420d-ac6e-52fc8a4c0b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f157743-3d22-4419-8b18-0bd1f4a6a660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680e8e2e-b4d4-491d-b97e-4dca5fa8fd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "397d8693-ce7f-45f8-a4a9-5fa82aee4dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab1862f-d4c5-4de7-be80-331ae0a31309",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7610807a-71ed-4d8f-89d8-77f655478b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddae6a3c-1a24-4e90-bf05-adbbb2b624c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faf5c63-7768-4d8f-893a-389dd34bd573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3bba14-1ee6-4539-91f9-f3e40999fe84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45237ce4-209f-40aa-b8f3-ab0de2745e81",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65897005-f7fa-400e-80ee-8c4897b14f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ebee44-d377-47fe-8c1e-e6228985101d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c396b80f-3517-4ee3-9d22-feef4114eca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9178ce25-41cc-449e-a1c6-5f77cac916a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966849a5-eff9-424c-9ab1-a03f8b28ca8f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd796723-3505-4765-907e-cb7da65fea1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0311fc6f-36b3-467c-a386-301a2eff2946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9b8e41-8c78-4471-9876-8a286627d098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59f753a1-b4cf-477d-832e-0b0187efc9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df290de-9a82-489b-80eb-ae0e5ae9273c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d5b217-8a92-470e-8169-e70a8cf5f9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff427e1f-7926-4244-a7b6-b7fe6cde364a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da0e59f-1743-4077-a496-83d4d576a151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2cb3ce-7bf6-49a5-8d57-30f717d1ccad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6adc98-20e4-46f7-9e9d-3e3dabd9fb4d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ab0e29-a835-42df-aa70-b2b3a15f4fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66766200-c275-47c0-b260-a0a382294421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbe86b8-0af6-4f63-9e37-f880ce8c2a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c89760-d619-439e-b933-af246a0f69f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc3e9f8-4924-4be7-9732-5121150306ad",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6101437-7b90-4760-9d78-0a7cb6023563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0f36d0-cf5f-45f5-b42c-27d64bb0086d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0a792d-fc26-4f89-8e85-bdf9dfab611f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c139ec-ebfc-43a4-a6c7-bf562a072ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c488d1-2536-49ea-9823-d9bb29224ae2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c83f4b-51af-47a3-aee0-e41d92b5d27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634a90ef-c2d8-472a-91af-1b9ae439a419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3783c90f-3093-4252-8ef6-338e538a5d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a7b090-7be5-4dd8-a892-e62f9c38cd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2358fdaa-9af8-4436-98a3-982f01ac3387",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34ce3fd-e38d-4f9f-8edd-47d4f70c3fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8009a202-23df-4324-a4ee-962541856d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37b324a-14b3-4a23-ad3d-0b7735e9acd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09223f16-21b5-4358-906c-70c6d88643e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a8fb47-9379-41f8-9438-b0fa611ad8c6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b396a55-371d-4ab8-a20c-14e4539d3f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfa9e22-89e8-4963-91f2-ee7db8943adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce8bd2d-b768-4e05-b0a6-a10c9cb53070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c46dee-3304-425f-a870-500b206a3bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb40c840-4c92-47a0-9859-0f3001c1ed0d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c576b04-0f31-4dbe-8d94-d426cb24d7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69698b75-0951-41ff-a6e8-984f0f40e86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7805a9-1b03-4f0d-aa1f-3c692eaac6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20756f60-3925-48ca-8d6f-8707b1727e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4b62cc-faf5-473f-99f9-e3d5273fedae",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114d43e2-2456-4440-95e2-406418440f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121ea31d-5b27-4fd2-a47e-cf7b74dcd515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebc7dbb-e32b-49e7-9833-e21b0ee1c101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d826efc-5106-4d93-9cda-7a88a7fa7db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c75d59c-ddff-4755-b238-95741d2189a7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4acad28-bff1-4509-a824-9631b30bcad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4545da4c-1686-4a64-be42-e42b287ceef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b64a47-ea11-403a-87ca-45128d0c323c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "615efdca-517f-482b-a07a-40af7827a2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc84d518-014f-4a1b-9a5b-3ffac8e929ed",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4801aa98-4454-4961-a629-a5d5d053b35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e204ccbd-068b-4126-a800-5b1307f50887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5ee5a4-eae5-4992-ace8-5212ae98bd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eed0b97-30c5-44a9-b970-176fc4e93be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdb9971-4aba-4044-94d5-f5e6823bbbf8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15416d53-2c45-4df3-938a-60d5cc135d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019402e2-d787-43fd-8fa9-ef5f0296affc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71d80a4-0390-4506-80be-e105b0e518de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cbf66c-60e6-4b84-9802-e03cc929e55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1c0eb8-a04d-439a-99ef-e44f2ce8b6d3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1953b872-f62a-4ec1-8c2e-26947fd693e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c8dc49-1a1d-4352-8f3c-5ab2bb785232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f2fd23-d549-4db2-a7e1-25a11662e1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aadfa69f-7114-4c1e-aa23-0f28882939e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ad17f7-509a-4e6c-ac91-874b87017b4d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4539c4-542e-411b-b91e-cfa4fcbaaf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febc361c-6efa-4e60-8093-133d5c14933b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e107c4-56ce-413c-a13b-5c3b115e3f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd24463-8885-49e2-9861-136022864889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433f8a92-d73a-41a4-b9c6-2014cfbd85ab",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ce6ff1-7f00-4ace-a984-9271e0093f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedc170c-d694-4a13-8bc0-67501f686b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7103716-cf1a-407f-a02f-7dfdd4b29f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8dde930-d349-4a9c-b5d2-fdb7764f1003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82d8f96-9a31-4592-8add-ab8efda08f36",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a5a5ff-6bd6-456c-980d-bef73cc98909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cefe13e-f2c4-4cf0-80e3-ef7b3e8cfae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59884cd9-4e1f-4cb7-ae91-470f492b0aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "592ae75c-b294-4e56-9c39-c0adc617aed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d30bac5-e42d-403f-bfdc-ddfe9148e10a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d02c91-c6ba-4ad0-be63-c61a9a5458fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e82328e-b10f-40e5-8152-7beab5b8e7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8eb197-7194-4fc0-960b-b08ab8486cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "961421ab-d5ac-4b35-8aa8-c104dc0cdf33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e76963-7c2f-4be5-b4db-578534c21eb6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d651ef-e810-4894-853a-5ca384c7c598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cf2240-35df-4ce2-8a09-1b60a7a6bada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b81c4b2-23af-493b-823c-f9c4e9d06c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80380ccb-7c7f-4eb3-af24-449b344f3a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2151b68-212e-4205-b6b8-c2589d2943fa",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346d7d54-e25b-4c4c-a92f-573ae854cecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcfc3804-1b61-414c-8962-1016b16c9d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386ba37e-19c3-44a2-b07d-5e84e235bc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06010660-481f-440d-a860-580757049e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561e35f9-9f89-43e4-96ce-aeb37c93e1bf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a6358e-2460-4138-ab10-d512fe71bbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43331148-b731-4312-bd30-72ba20d3274d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b26f59-f440-4171-a282-a1c5d1ba0770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84dd9268-af48-45b3-8493-e864f22651c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6680b3e-86c1-4854-9965-405ee35b61b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37c1f068-e7b0-4092-be07-d556a5cbb170",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df159a40-e12e-4369-a12e-231dcc12048a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cc56eb85-8865-41b3-bb59-a1b3e581e90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85be838-6d72-43c5-aecc-02cd6c83d184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b6374fe-e66e-4377-8137-e4a80aa09542"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "263adc50-484f-4cea-b34e-81e272fc55e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72841ce5-a592-46e1-ace0-aac3b2267526"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cddf351a-ff99-4875-860d-ec0cf6d4d278",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "038e3a0c-57e1-40e3-9493-ad75938510c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d8d2c5b-2fb3-4b4e-a430-8bd118d7c108",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ed255be1-ae2e-44ae-9c6d-16047e4fcac7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "253e2581-7eab-4223-9511-2a6383baafaa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "033a753d-4180-4442-92c8-8aadf99a20a7"
            }
          }
        ]
      },
      {
        "id": "a1b9a3b7-20d8-4e89-bf04-0d4c4a7db28e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cbccfabb-15cb-4c39-a19b-a4bf85bd57f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d18cfd55-e353-44bf-9b7a-b9f0f6df615a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5d9c2dc-2957-4098-ab1e-753b7728a1bc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a872c31c-b67c-4f3e-bc31-a6cd40b29c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d398f514-2d3a-4b3a-becc-360c1bc7720b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213281c0-b295-41c5-939e-c2917b83f7c2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d436937-e280-46e1-8941-4d9ed7848458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1d677e-dee7-4337-b335-93cdd9b67035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07af1f17-27b3-470b-be4f-2e4810cfeec3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93da053c-5020-4d50-80d2-ac49f7e9ab6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69d3448-fa0d-40ab-a02f-036b52608fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aa1114-2af3-44f0-8692-ab56b7973cae",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde9ecdf-7a87-4645-b6fb-eb67872d85ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7286cb60-9913-4c87-8d19-216990bf58f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa0f7c3-8475-4694-9233-c7f6a3b85bec",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd955325-0d83-401a-aa65-e90e0ff9f4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9785fc-8dc4-4ccf-9828-c751086ac1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e42d47-2e40-4b5c-ad43-4e139d78514d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a560a11d-d3dc-4d71-9fe1-37ea1ee7f0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e69ad4f-febf-4713-97cf-cf20320cbc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17841cab-b9d6-43fa-ad69-c529eb2feffa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abc7882-1878-4ba8-91b8-36f4e8c4421c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9d6cf2-a974-4d82-9614-31c0663a3112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcfb92c-75f2-4324-ace5-80f582340090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d590c85c-bb1e-4e71-8b4e-330353ac6f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf85468-0813-4558-b483-caf2693a384b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36374db3-b73e-48e0-be62-37b65321bb0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273ff1de-87e9-4731-a76c-19693d945ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc71d16-bbb9-4a55-b2f4-f4d63c4f8061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e28ea6-2233-41d0-a308-2ce33c46762c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f05500-581f-411f-b952-186796c17260",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1658d142-e254-47b1-8117-ae052e7dd6a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f9a8e08-8231-49b4-aca9-7793921ab382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ea5547-6a48-419c-85a5-0d1ac0a94deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e72c70-92a8-44a9-9813-d07952ce9c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb80481a-f1ab-4eea-a4c0-6f6d3763b626",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5680773d-9980-48cc-95e5-dafc5e8c8ee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfef98aa-de49-4021-8b3e-662660d6f771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2b5074-9328-44cc-8e24-fa8f7fc5e39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f7e23c-68c9-46f9-9740-223220a7ae0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69fd311-4a14-4136-8449-783bde0cc770",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4f6d44-9db9-4f18-a01f-aafb5a035384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2c54a8-a126-45a1-9a9a-2dffc5685409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c773086e-762e-4e1f-a4e3-e9aee55436f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97598dc1-dcf0-450a-80b6-81fefdcacda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd88a73c-b1a9-4eaf-ac55-4f47d42abf5e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c46bc3-4ea0-4902-98ff-b850b848b2cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbc9991-33b9-4702-8a81-2729f881e94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e7145c-958f-4ded-be5e-69c19610a753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddb3e40-3d45-470d-86d7-10a44f1e5de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb98d73-a7c7-4a14-9dd0-230f58eaecde",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6608daf-ba26-4764-b5cb-88d30ac7a7da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c50a140-e4e5-47a7-8441-53003eb0ec2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af1453d-87cf-4c79-8669-119855f2c0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78383d8-0b54-4af2-93fb-dad25c2f21ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c6f2a2-233e-44de-a99b-8c95963df5f7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b104844-badb-4e14-a433-f9573b593743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ad8fef-9236-4b39-96b8-75691c6a2ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cf19d4-5216-4c3a-b2ae-b8e5c2cca562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adbe401-39fa-443f-95f2-96282fc627e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bfca57-22d9-4300-9082-08e7040cb636",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fa4190-a40e-4bb3-a127-80236b3bb2ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a903876c-db35-43a6-8613-1ac3da638f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b751d8e8-d89b-4a41-b991-3defa9dee543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7678e1-ff9c-44d1-bc45-2b6bd98ac117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c611ef5b-425f-4593-8c41-dda032408d4c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4271a9-3252-4408-9cd5-25be150898c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3cccaf6-85bc-4a0a-8ddd-a43fe322461e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed2a834-a26f-4d2e-9fdc-7d4c37b19df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea56202-d942-4c87-b993-6a6f03af7f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f0e518-8fc4-470c-9a7b-4563ceb134c4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868a8344-abd4-41e2-990b-e3aa821c2a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766102ee-e9a5-417f-8576-c86eabf2d3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec714b4d-5d28-4c2c-846d-77dd8ef38ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed22ebe-10a1-47e3-82d0-20720515bdff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad635486-b517-41f1-ad18-0efa1b6e3c97",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92424d55-9b4f-4bcb-9314-38ff7cb61037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c2555d-ef1d-4d2c-af6f-6228f95af766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45f9d68-bd26-4052-9cbc-562ff3231ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7c43d2-de9c-4e5e-8866-56eb1857c5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4910da0-c89a-4fd3-a590-2eb765a90edb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc9b058-38e2-46c1-b31e-8da68a3ddeae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d141755-ec2d-4a99-94b2-e63149af0c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89674964-1d25-4320-8ce8-ac3711554bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8f58ec-a97e-4c44-8c2d-dfa24ab97ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bed879c-c93f-4c2d-a6fd-10932c5591b7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9fb0b6-5e99-46a7-b3fb-2df04c10ee27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e1d209-a9b9-4330-93cf-8341d83db404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "059c1778-4183-4a89-a719-6751074acbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17935ab-9d80-4226-a8dd-d461c9c045a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5641213-3203-4de3-bf7c-dbd7416ad42a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3005b1-d3f4-434a-b7ed-01287022d8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9813de6e-77b3-4be8-8c4e-d4ade8447e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3b1089-a814-4912-918f-742a7292bd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab23893c-b63f-4ab6-b031-f1d3044cb457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d5cf6c-c7b4-4a04-9cce-5012b861e313",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a32bf57-92aa-4eec-ac73-1b27ca75063a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41176ba-ae49-4147-b83d-6f3af9f0e6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3263453-20ba-4348-bbc1-566af41dbb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b351fdad-b15f-45ae-84dc-09074fa688e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f66aa7a-39bb-4b8e-98b9-057becb218cb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80663959-973a-4eab-862e-c21ff1023135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38291f2d-0b43-4dac-8809-5e6e2cc92acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2877dc-a660-47c6-8f53-ebbf266001d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e395c97-4be8-4980-8677-03c8d957010a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfded949-34f5-4ab5-90da-c782912a078b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24f0dd9-aaa2-4fb3-bfff-91e8d53654e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21b2225-1f76-4148-b631-812bda665654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7349cd-9485-4873-9b42-fc6540bbac6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6e6538-271f-4950-89b1-c55a4a36cd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18a0f69-a9f6-48b0-9a74-3b62dec3b995",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07af284f-4767-4b62-bc60-b2be1c7cfc18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6416f547-7463-4110-aec1-8454adbfab0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee8d348-c109-4eea-a56e-1aaeef4afb69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57277d0d-d58d-449e-b949-c45f64b702ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb842f4-eff8-4132-bba6-a589b872ed51",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcae5226-4ced-4953-b28d-179fe0c2daed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97973dbf-d011-4c78-a7b2-bebcff00349d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075dca12-ac52-439e-a311-0c4c912fc062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9753af75-fea7-42b5-8ea6-0aa0d14d4beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77eee017-7edd-4198-a633-c549c98258a4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a15a0d-0ee0-491a-945c-2162d3f26c49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35bedd62-d71d-4a69-bb14-38f06a82af2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34845306-e493-485e-a001-6239f724f5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3b8726-f54a-4e1e-bf6c-fa4f1bf8790b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7408bc41-27a9-4c62-ae89-780953928d46",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c135863-443b-4dd9-a8e7-76e7eb655859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c946e24-96a1-4a4e-85d3-bcd5e54368e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427384aa-babc-4f0d-82fe-eace9e5effec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6838dcff-b916-4169-aed4-e2e957a58071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45ec695-39e8-48aa-9ab1-1cc3b63f53d9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81340e7d-d229-4ede-b167-669f4f86119a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d57fc43a-5850-4851-8e28-2e9e24b08a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecc862a-64c8-4399-8f6c-a5682ef73abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f90b5f9-17ae-4abe-93b4-b4f0a9f97f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2daacb1-ca5a-4b1a-b1f3-d5a83120c2ba",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba06c8a8-2ea7-4c50-a5f4-338451c0d06d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024afd06-aace-4302-bba4-4e074e980439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8bb288-4884-462a-b046-bdab1dc6b1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664088da-22ef-451d-9dd5-9e692c3d2066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e63b3ea-9cbe-4dcb-9ba0-33ac71c0fa53",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99463588-ab20-44b5-add8-9dcef2fc83dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd178ec8-4462-493e-9318-8568197613f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e5d5bb-bad3-4a00-a8e7-2aa28d3142f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fa2419-a084-47b3-8229-d1a126959262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4556961-8a60-4871-a166-0ac023574663",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c6f4b1-2758-4741-9199-674684508199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9794af4a-9579-4470-ad7b-f3e2fcbdc18e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b8a4d5-693f-46a6-a38d-4a7669112d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2bf2c4-39b3-47c4-8d1e-13140cf103cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8ce421-188d-4422-988a-123f896f2be1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4635c5c5-9924-4282-8286-5c6eac1826ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eaf4cf6-b57b-4253-a4bd-3442c9c7d49c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f61387-0404-4241-8d30-6a0b7d11996e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971bd055-c142-4250-8115-34407bd3bd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e7bd59-7110-45a4-b747-a1bf0f96f46b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269f7c84-f793-4698-bc87-e4382c36450b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e170d3-a971-4339-95a7-19fdc6e3442a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bdf758-c024-46ce-8d01-6fb794085a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd59b4a9-5a14-4089-9cc4-5abd2410d715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d51440b-6b37-4f72-8ac6-9285742c8f07",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9fc286-8e19-42bc-91b6-9d1350a9e10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b5fc65-3926-40f9-98db-115d2eca158a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9223cd92-f37b-41da-a747-0912da4c95dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a41287-ced9-4ab3-93c6-87dda19bc8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582b5f63-8d40-4a90-81a1-d955e916c9f2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a44ae68-f471-4d60-a243-cbd787cb8975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05695ae-08ee-4905-9a8d-e8573e0b11cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a7733e-013b-4af1-8ede-ee46a0adff82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15cd87d-a7bd-408b-b77c-940021e5aa15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da018e8-b352-456f-ac8b-ca826a1b175f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4638815-f272-4089-9079-915399b2d969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d1a2a4-2dc3-43ca-b195-b965826db2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63170f64-a95c-465a-8d2b-79671c0d0169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061903ea-176d-459d-bb30-2e0747e97dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c373b9-0b48-474b-9427-26c1d9d0a2f7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b47daa-6fc0-4279-92ee-bc5b3bfb71d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9721b8d8-2fc1-4801-9bb4-8bcf182ce249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9635d5b7-a313-4cfe-9546-abd650cd1fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c3e57a-4429-4b9e-8121-72d3102f1fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1f3053-56dc-4a27-8071-8261b37d6c1d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30529aa2-023e-410b-ad75-1c87342447c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcbee442-7100-463f-bdaf-13c8fb863530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef3bc22-80ff-48c0-be7b-819f3efdd429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a1e307-38fa-447b-9b7e-78d658f7e5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33267d12-36b2-4735-bca9-ad1bc64aa4bd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067b2e99-d4b6-47a1-b612-8180213f12bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafce294-abdd-4775-893c-6f73f391aab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05229883-15da-4c73-8390-e59cd69baa7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a7f5e3-675c-45c3-8bc2-64ad3963edfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663f6a7b-0d28-4f55-9493-07f539af5f36",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e0e494-39bb-4cc8-95d5-7d610d4479c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5faa9b-7e07-4850-808c-9a321e324c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294b9f60-d50b-4da6-8f4e-27b04945233e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37fbd3b8-b031-49c2-b66c-f81197c91db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fe084f-7c27-4387-893b-0ee5ec9d628a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378117b9-1e40-47a4-8b6b-7f0c5cc3e29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4253ccf1-ea8f-44ec-9a2f-02cf53c1299b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab808556-3e1b-4bd5-a6f8-c80514175beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2198312-f9ca-4f1e-a483-a7b4166639a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08c3ff2-cc83-4437-8eab-489742e12956",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd00413-1492-45e3-8260-5cc9b06a797b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0166a111-9605-40be-9c61-445713b1af8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abd698f-bea2-4149-a630-4588d3b6a959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c8674c-d5d4-4db9-9843-a0ec1832a31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e838d7-368b-4f23-8538-c0845ab9b3b1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a957610-ba76-4565-9ac7-27084ffbf534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64b9dd2-23e4-4e4e-bfc9-6a7c0bfd54e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485c3ce7-342d-4402-be55-abaa4656a5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e603d8-ceb1-4256-b7a4-f080659230ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ae67dc-93b0-43b5-b9a3-42fdbf97da21",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974b85a1-baee-4466-8237-5b904c9fb9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68dc05e3-3ea9-410e-a2a4-b4bacbd48c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd95ccf-b2f5-4543-a7f0-54136bd0542e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621694e9-4e09-486d-ade7-8f7e091b96f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d72ee71-0f76-4fed-8687-27cada0ec210",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1197b095-21b0-478e-bb01-29a41685cbf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ca42f6-8456-4a02-a737-aea749776b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabfb758-dc01-499a-b7a5-bafd5764e8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff006a42-3464-4fce-b2bd-7a66f95ae533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbda247-aed4-4555-a635-e08ee35f00b9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b9e900-feaf-4c23-ad76-9c8b6691cb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2e4dd8-e288-4e46-887a-1ade21fbcc93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1a61bb-5fa7-4291-bb61-c6e37ca2058b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd44f305-2b5a-47a4-9168-2a125c9b7cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e421ee0a-cf40-4133-90eb-2d4038ad1025",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a4af02-4ca7-4173-bb1f-166b19b04007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc5431f-aed8-4913-aefa-9a001a59ec4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdec74ee-7d31-416d-93a5-c2e4e4d26d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c9843f-6a46-4abd-9292-c588c645706c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559f37fe-36b8-4d6c-bf4e-eec02045f8af",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6d94e0-7792-4fff-b8d2-914ebf023c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a98a23b-6ddb-41ac-bdd2-c291296e22f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff6030b-0a82-4f20-aa78-9a2fa0e71da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6749613f-821b-43cf-b389-c714f99fee56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1716098-c607-4d4c-b4e8-64c36cd58f58",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c3c934-6d9c-47f9-9592-0b65cb8be804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c365ca8-7ede-4d44-bcfa-905856b6a8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bd76ae-f409-4045-bb28-2286e1f24bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619aa232-7170-4854-80c4-3150cc333727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64873d9a-01f1-4ffd-bde1-79974a8ac58a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c609b2-957e-4532-84c0-2681f3f314b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2b4ed1-f514-427a-8aa5-e44a938ace21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657a0334-58f1-4d63-8019-1b565fb43d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fac01e7-c24d-42ef-ae4c-1b8f850b5fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35a962f-06ef-4d87-8f7f-198c43b40ac1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b9acd2-b605-4d74-b15e-dbe341fb06fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629e070c-9544-4053-bc11-8ff2d844adeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a5a616-97c4-49ea-98e3-81546b144d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72e94a6-63ab-4477-9fdb-7cb66f20f0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e71d16d-2a5f-40be-867e-3700ef309a1f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53e972b-cf5a-4842-88a6-20d65f44d27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad56234c-9395-4cbd-9eea-eddf8d96353a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cb9312-7356-4165-81c1-18e9c4961a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4168a802-8b39-4cc8-896f-ae4452fd6e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e24a027-4827-4613-ad8a-4a27191c8215",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd581d1-79a6-418d-b19d-311557edb9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78cd9e3-3234-4e70-962d-33a974c47eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4bc446-2174-46cf-a009-3695b26a77fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb843521-d5dc-4c2c-acc6-b49e5f944d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b049547-0a6e-47f6-bff1-b7ec0784e167",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1edd5a4-8aff-4324-b455-33369db7905a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd0508e-8168-4ffe-90c1-d638953405e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67904f37-c6b8-4919-9bd1-6736a447859a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1f2a4e-70ef-4bea-8253-4317b41c071a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5289103-1fc6-4f53-9d1e-181a50ce5240",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ac06ad-301c-459b-b6fe-60d0190d557e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cba9f2-3113-434f-9ca9-cd6442c3d4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23aafc4c-db41-4564-be2a-912c3d02b083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c598bf-ea3a-4a54-a334-91d194db4020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72486143-4549-4ec0-a086-a62b21e405b3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33575a1-9fe9-48a6-b61f-aa7a59214baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab16272-32ea-4bff-80e0-505a7d26d66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d696d01d-3b41-438f-a1ac-f94d774f055d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f4631d-cea0-4d51-a31a-2a7bdceaf56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb8011c-bfcb-4d57-ab34-0b0f13754b1e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd211f8-f4a2-43e2-9284-8633cd250bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1977b3-9de8-4eb2-858e-63dc022aacf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a240af1e-5c59-4be2-8d7a-2a9b6a60a1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f82348b-0812-4430-a547-4e30c3e39fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68955a1-4614-4a2b-a19f-bee5fdfa7fed",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3208a21f-39da-40a1-9556-7a1ee2422ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b41cb7e-bb38-4d7c-becf-5de69510a9d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706a817f-8585-49ff-b3f4-31f62f068326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c80efdb-5b80-453f-9275-7ef80945e986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cc9d48-a77c-487f-bc35-3c8b31f53f31",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3e6bc4-0f7a-4ee2-aa2f-bd5da1c1eb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f5e166-6cca-4d61-94c6-0efb19d51411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b0b7b3-50e0-49b3-a457-024cfcac0be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1771711a-88e7-4a3d-8299-fda93b18d037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b25d16-731d-4e50-a519-4c641075bcf2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e3e77a-2fed-46d0-8900-b132d69e52cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78c0e18-45ab-4b0a-b20a-7970fc8eadac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc84a0c-2bdf-4670-bfa2-f07b5a38191e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba47a49-8cbc-4df6-989b-f82c77da0b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650a52cb-aa68-441f-93a5-acb5c3759aa5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9620eac9-8de0-4610-9340-5eb34dbfb0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf3983f-a058-4fd7-bf00-10fd2bc7ea16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a747b273-494f-45d4-a443-ec4fe2dd3ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66394bd8-7454-4ffe-8d8d-b536f36aa1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd9ecfc-5ee4-4e1e-9225-64c4b45b54ad",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c15a58-2a96-451d-81ee-2d7ecfdbf967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff4a41d-0f77-4826-b197-414e4ce78c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ab24f1-ddda-44c1-a425-ec90cdc7181a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18156c59-22fd-4654-9666-d83001254ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb550124-9c39-40f5-9983-80c7ee1824cd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720f0208-64c2-4a43-a7eb-448f67d87a26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0639936-6937-4c51-a892-79d42bb25ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f74204-66a6-4685-b33e-c0d796cf26b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0e6875-1da3-4c37-99f3-326221488cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667d0e65-ed24-4a76-8053-d32c75b3e8af",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769aefa5-6e33-4c83-9e33-42b5ac70b5b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1fb3ef9-ecd5-43e0-84fb-dec4bb16a0af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caeae4b7-03b7-42cc-9ea4-5877e3e4a9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eba415b-09a8-482a-8bcb-af1042fe39cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48cce3e-b4e1-42d5-9f9d-0a80c80447ea",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975c9cb0-e3e7-45fd-b856-a9dc71b99fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d8c932-2831-4311-9122-adc093d3bbf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc08917-df94-41b0-bf24-3b17f252c014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79811103-6042-402a-8aa5-a8b3e45d46be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d13de72-8398-4c54-b4b8-108f3caf23f1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5414da-0127-4ded-9199-716cf59569fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0dc5c3f-82ea-41b1-9a40-7c782ca46ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d1d819-4b00-45c6-b18e-7cb614859464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0355e73f-3f68-4c57-a4e1-20f7f06f9a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7a0da5-8237-4e7d-91ba-eab07db34e41",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70097ac3-ea2f-4c32-92db-2d43e7c6e81d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f72e465-b78a-4be7-a404-f602ba18dc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb8da33-e7d9-4956-a25f-e4a8cadfbabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda1d6a2-4e05-4e9e-90b9-5da678925799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bd961e-d42a-4e77-b266-f726ca984145",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cded94bb-7685-4432-99e1-8dc395ae790d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf7b4c56-0609-4f82-b95c-f7282d21494f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8572dd-7499-4d1d-9397-684ff35f044f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e48f1f-82b6-4726-a965-f9666b347e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d77cc8d-9a80-4481-b35d-3427ed29c9ce",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b090a2-f54c-4026-b177-792c330e41b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ca0da0-473d-47be-b4c1-5f1916c88240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49060882-596c-4b42-9471-e394c81345f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0bbcb9-c2c8-41ac-8b74-28f84cc33594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6111330a-00c1-4956-9550-f33eab6d3d81",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48036e8a-2302-41b4-80f4-085da7b4019c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32f36116-3cc4-41ab-b677-e9c71537d3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d36517a-0856-4b47-8a6f-0276a054042f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cede785-9954-480e-be18-6cfc2965366d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb2fc09-355a-4c18-813a-b2cb52003d8c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f019ecb2-3a39-4b0e-9a36-c375afcb7ee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6d3648a-7897-4a41-aa93-f7116b977514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2f68b7-2d05-426b-8db6-73b60ec734f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c269c96-096f-49d3-acfc-26ce0910819a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce71b8a-fd73-44a1-8c36-9f97bf80cce2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21b48c8-dc55-4817-be9e-0c7cc3942402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37d0f5c9-4eef-4cac-a87c-d82f3dd4e2ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bddefa-acc6-4021-b2dd-d355e56fc1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62db339c-faab-4c08-ad4b-5e0ca567756d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243a4f7d-ac96-46a1-a45f-471577a202c4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e1eeda-72b3-4c5d-8963-d67e5ba538ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4983f1-1e89-49dd-b354-ae980d0f3e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f89630-dc32-4015-a716-b997dbb59a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21bd20f-e2b6-4bf0-96d9-5088c0604878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b197a07-a5d3-4bbb-82b4-36fe580578a1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f07209b-7892-414a-9b1e-c34250429242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f58c4a-ef4f-4f28-a462-fccf03ca55fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6bcd03-3c35-43f0-97a6-63089115b0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6fd8857-af8b-4dd5-b1bb-038ae740715e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366d72f4-a23f-420c-bd31-fdb44ee98880",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ea20fe-c416-4aeb-8dd0-faa9d330ca01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bd4a78d-bfe9-49e2-ac1d-6b3e6696e5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cbe9f4-b8f0-48cc-9187-16db4546ed49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b74944-af81-4a82-af16-98b7b955e7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ffcab9-c806-4ae7-ab32-08524af75320",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf25062-9f08-4aaa-b8dc-e8122a3dffce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac716df5-6b29-403e-9831-647dada76362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c41d221-9b2e-4dad-b5d1-64754f90067e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165adcce-443e-4e2d-ba08-d8f5af04cf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0e3ad0-f3c9-4169-853e-775f592795e0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9212add4-ae6c-4889-9732-7fdda85cffdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43a4bce2-774f-4a71-b0eb-b2ff8748725e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8835c568-fd3a-4619-89f3-8b45e2bac32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83517906-838a-4dce-9afc-3d1870f17e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4154a7c-2296-4d8e-bd04-990ac6fed08e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90eb6fd0-69c8-4566-b2e7-5ec58d979fca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e23c8f1-a5e1-4739-a483-ed73fcce5180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c850eb4f-4886-48d9-99ea-69970108b1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4825c7b5-62da-43d2-a0dd-c5948f5d7369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a90ccf-85be-41b6-a7e2-9f5dac6480ee",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5cb31d-a56c-4492-aa42-592eac8a583b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70540d59-5183-4216-bafb-afdf40e0123b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f633e523-98af-42ef-96f1-9893b4cb2ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1900bf4b-e4c0-4129-ad0b-e3e9c3300ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6bc090-4292-4f88-9d67-7d0a0b861e4c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82afb2e-e466-41b6-9ee8-31eb131d3287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b15b2f01-a418-4d16-bbc7-e91718b94ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5a650b-2b35-4863-b9ef-d012024c81eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9fc586-57b8-46d7-8fea-815ccb6934ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd077145-2604-4740-afac-be65e9d22ff1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bbcd2f-fd9f-42fd-8b7c-7e966cb655df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e1484fa-b087-427c-a7a8-55b939887190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27a16e7-fe87-4873-937a-2e50b3693be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db5f0dcc-b53d-4bcb-9588-28c17174d82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27074cf9-ea52-45ab-bdd9-34edc75f05cd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37b5b10-7b51-4e05-ad03-cb4c2cf4a46a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b30c0c7-b0e3-4a3c-a3c2-89b383fe2c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffe34ad-6408-4c7f-8ee5-9bd34b85a71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ac16d9-f9f7-4643-a34b-4a01a032f8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a33f7a-fbef-4419-b672-3d7e7017bcba",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f84f7df-7631-48de-9ac1-286511943af9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54a05d61-9355-4d6b-94a1-7c3bcdf9cbc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c844f15-3eb9-4fb0-8149-a944da7722ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838a9072-1db2-49da-ab4d-d299a65f931f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32f6d14-ea5f-4886-99e2-62237c3b6699",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32210cc-73bb-4e2c-bd49-29c5b9dee6a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658397bb-8730-4a59-9959-b0be65911ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e216621-bd54-4cb9-b9d2-76aee6372a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534ce785-4661-4b5e-9e66-07ff6e8acab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd8e615-7621-4fcb-8f2d-5a67f60ed5f9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef998ecd-0ee6-49d2-b5f0-9de46130b979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded89ac8-9c51-47c5-b6b6-1d80d4bce811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd468912-ee1b-4c66-a38c-9597e00b6b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d9fc12-62d5-47a4-b522-a39fb8d1ccb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd15effe-72af-4118-8036-fec16daceb10",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d877aa14-3d6b-40f2-9f17-444d67e872b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4332f41b-c1a1-48ab-9473-8c379890addf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319b6c29-daef-43e1-bc19-d5509a03aa30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae13af8-4e4f-4fa1-a81e-ef148c8fe423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a3f42a-00d5-41c2-b477-ed1c14e22423",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2367e22d-74eb-4fe0-a753-e40a9cd3bc50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0976822-3918-4383-8514-ba9f01e6275d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3fa2c4-5274-4b20-8e8e-bd646d1d444f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b472f4-ebbb-4bd6-9f0d-e6627406319e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5157176d-3823-4a4a-beab-18eb59e0ba75",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faaf330-7b4d-44f8-8020-4c1280f67b97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14fcc8b3-51de-481f-a31c-22be2e0ff649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb6d688-c34e-4a15-ba9f-9cba5f77bc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3661cbb4-bce2-4915-9a1b-4759ca5505b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3543e29e-586c-4383-9b3a-1e044b4817b5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b642d2f0-94ff-4be5-860e-cb8ecc3ff5df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b1c140b-4b38-459e-817d-8affc7fb5970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55206ca7-171a-4bf2-a6d7-7b058ed477a8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2d8a0d-8a93-470b-a8f3-bcb4c5a7a29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288009dd-e5dd-447b-8f90-7ccb0a0adef0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4d51c4-490d-4a2b-8393-874b4b892d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0153d518-a538-4a0e-b085-fd2b0eb06620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64125e0-4fd0-428b-8a15-0046a1e82f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625fc9be-a147-4ef9-b29c-25abf529e56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06fdc40-cb85-41a2-a1f5-1ad4f2015cb2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b89641-6802-4ae7-865c-299d6e0797e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72d9f321-d193-4fb7-baa4-7cec8a1a6082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f65da2-a4bb-4b6b-a051-ad1d11938558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495c4f66-d851-48b7-afea-884bbff32f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021f70c8-5e25-4d09-9c7a-aa74dc83e428",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071143c9-a4a2-49a0-8421-f82f6e84cbaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be7f39e1-3a80-4e2b-9d0d-e30f7c714b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcb20fb-1934-47a8-a9e3-ce5e3986ac23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041fa47e-efae-43ec-8cd9-b20f109a4096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073d8ca7-2337-4a2f-8a81-d875d0f5da0e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2739b229-7171-42ab-8a1b-698b0dfa4797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba0e75be-4851-4c63-8d80-0266b29cab48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8371f24c-3bcf-402f-97ff-35f0349ad699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802b40dd-53fa-466b-85f5-6921c0eb8057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f39cf58-9780-4616-8e9e-50a68e63bffa",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df259942-fd06-413f-938f-bc9e81cb1b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf07c60-1eb1-4bd1-8d80-61e2d7025f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834bc42f-a8d1-430e-b834-bd9858453507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244fc586-ebfc-4c42-b3a2-c48d2b2716c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1f180c-d8a9-4a53-a743-232ca4cf6114",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc9bf13-f9f8-4b2b-8549-b47b6377d8d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2beaa209-308d-44e3-a088-518d22deeb57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97f4021-228e-42f7-9ad0-fa80ceb19cd3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8235e0-df06-4511-ae0d-2b94a77ae6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f123c2-06a1-42d7-ae88-20979b17553c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b0579e-7ded-4ce4-a950-9344d437b362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1dbb13e-14c1-4072-8513-8b5ef10157b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b1c612-ee61-421f-9fa9-6605d78d3f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6dd74e-288d-4beb-ab4e-b8ce7dfdad10"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e86195a8-7d7b-44eb-aed7-2c7e57ac5801",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01012cab-55ab-41c5-b232-b53413991458"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43cf0e50-e24e-4302-acc3-a4bf1c5d3e12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e431069b-6a19-4dea-8b54-820e5cca04a1"
                    }
                  }
                ]
              },
              {
                "id": "c280e47c-b2c9-4b88-9af6-87e7922b7dc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03062bc3-6e83-466e-b41d-0230ff07c156",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdd4656-7380-4eff-af64-c84bd6647b08",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "54751e7c-7cf9-4f9a-98fb-429feac4204b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8d1d3e-c494-41f0-b184-3aab37cd97dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec77dea4-7055-4c6d-b077-62815c1e911b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaa3e394-773b-41a4-9f4e-f7d38e6f75aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b6ba080-ffd6-45c0-850f-80d29b38aff9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb942eee-2198-4f63-bea6-43b3bed2768c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5505a99d-fba0-48a9-8940-5308b0fde67b"
                    }
                  }
                ]
              },
              {
                "id": "5648fcc5-0be4-4997-8479-9b8e49a991d0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fa752f2e-35ab-44dd-bee5-03b924955c4a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4013a3c4-983f-4c1f-b53e-a39ec322aae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "63c50ad1-b9f6-40c8-b039-b27d9d2436f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fabbbe9-ecc9-4ec7-9b80-b78dca961219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b41c61-a2a3-4f7b-b592-cd24dcb1171a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4103de7b-92cd-4334-ba55-14f357745505",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9fcd0424-ba3d-4817-83b5-05be11f1e699",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1908ef19-d93f-4b87-84a7-7c497a927d20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ab8171ff-88b2-49b6-9c1a-d3f0c64e5576"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28e804c5-4bdc-463f-8027-6ad11617318d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0e24084-13e3-48a4-8a50-0f071dcabb4b"
                    }
                  }
                ]
              },
              {
                "id": "83c3f4d8-94f6-4259-b34e-ce94a45d32e1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4eef2f1-6a72-4952-816b-a1d2e0e89c91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b20c8a1a-0d9f-45ff-b3b9-f619e2c2b72b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "521606d5-a2f3-4235-81ce-a2c36c1c2c16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b9ad6f0-2cfd-4ccf-8087-63c9e38825c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "987badd8-5ac8-45d0-bb7c-103529c71ac7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "66eb20a8-fafd-4d28-8500-451a47e2aa23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc25db85-7a15-4e2b-8ca9-9ef5a2bc9416",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5e17e27-c8ba-4a1c-9368-b8dfbeaf35d6"
            }
          }
        ]
      },
      {
        "id": "e62222c6-ec50-485e-8093-b0109e3335e4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "63fc93aa-af26-48cd-88d7-42240eb8de46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "889efe78-f9ba-47b1-8184-81ab669bce74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d6862be-2ada-4da5-b4f2-1b88b4b73966",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51f1f35-3877-4738-a8a1-2f3f9158ed94",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "099d0963-6be5-49ed-9a5e-dd5c43c2fe05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a4b0ef-ca86-4922-bf13-3b6e267559a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da9623a3-679e-4a9c-9c24-398b2ee6eb1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6db938f1-1f1a-4a11-8aab-4f78cd434b22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "979b13eb-a561-46fa-b4a3-1bc79be99520"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76902ed1-58d9-4b98-a5b2-12ac709712a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b3da207-accd-4846-b8de-a6868dc6ad59"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "581ab63f-1e83-4d8c-9c8d-9a157a2947d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1ee3ae4a-f765-47d7-b646-2b45ac1855e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdfc27a4-43c5-4356-854e-a9904363e8f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "713202c2-14b8-439c-a9de-3ca08e3e279a"
            }
          }
        ]
      },
      {
        "id": "7ab61d41-ada5-4302-8c0a-9b2fd58c7133",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9d9cb996-d8a3-4563-aa9a-fbcdbec04cd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "751da128-cd72-4ee8-9034-69565bb43ef5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e78d0d7-880d-4373-9f8f-219598cb05c2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ac76fb-9c08-45ef-9f59-7e2652d9dea1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dc9ca9f-5bb1-4e06-80bf-8784cc56e72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b811ec31-80c1-4172-812f-36d2b61d0d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f5e1315-b774-4006-88ee-50a2e4d8c18b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45241087-90dc-4533-8ba9-c182a12e2fb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5250714-a642-4fc0-8cee-7fc7a5e27f1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "562b891e-0919-494e-8e9c-502e7b9fb1fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8723abed-e328-4dc3-bf8a-a8860669122c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f46968e4-61e7-4f10-9938-581f72e8d887",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "974e5e59-b8fd-4793-a7dd-2b7a6e162dec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3e3d22e-deb8-45e5-8078-1d7e91cf07e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c09c507a-5c3d-402b-a43c-2b4e049d5bac"
            }
          }
        ]
      },
      {
        "id": "c898d972-fed5-48ac-8e3f-68d52440a418",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "aaa4f336-b0a1-4940-889a-8592c6dcad5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "715e332a-94f6-40fe-9c52-a629c44fe390",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46f13f8f-48f7-4b35-82ea-d49c328ec218",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622a9c5e-a3f3-4bd0-a0e9-e4de35ef8099",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc648ea8-971b-4918-8b08-ca4785e0da67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a9bcb9-0d31-4a59-9998-1e666edb1c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55dbe1af-e1f0-46d6-a9f9-1b9900f84f85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1291cb79-76c9-4eb1-8ad1-ce3e510af6d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97677331-5dc5-4553-ac14-031752297139"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dfefe16-1d0a-462e-9019-3c02711dc6fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d7cadca-3d12-42c2-8d75-75b91b8fa0ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "297577f3-0154-410e-bc26-ad2625cf8376",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "945f152a-f03b-4437-9854-83d578492318"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e651bf4-ef1e-448d-a882-fac9e49730ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b95c9dd1-442e-43c0-9d6c-210f5b73f873"
            }
          }
        ]
      },
      {
        "id": "943a982f-5433-42d7-a8fe-3edf9ab722ea",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e5fd90b-f7d8-493c-9d0a-0820db8ef4ff",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35c6ff57-0e79-428d-b0e4-619c48f0c70d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "81584143-816d-4b13-ab3c-7400277f392a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6232e0b-eace-4484-b088-4d8626d932a4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8213034e-e426-4270-94c6-792f76405b8b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.4823943661971795,
      "responseMin": 3,
      "responseMax": 295,
      "responseSd": 19.1369151387462,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688172740033,
      "completed": 1688172753582
    },
    "executions": [
      {
        "id": "15303157-82fe-4b44-8759-af74319dc128",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7247f7a4-bd3a-43c6-a4ae-30cf0a8f49ff",
          "httpRequestId": "4045da8c-608d-4fbd-b597-3f9025574787"
        },
        "item": {
          "id": "15303157-82fe-4b44-8759-af74319dc128",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "aeec9c7a-1c4c-446b-a02c-61f432d00b44",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "5df4e14b-148b-4507-8e88-23273531a5f9",
        "cursor": {
          "ref": "d0d00c1c-a9e2-4731-b964-0d344efef5b2",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5b0985bb-fc58-4aea-b694-e8cf80447d0d"
        },
        "item": {
          "id": "5df4e14b-148b-4507-8e88-23273531a5f9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "48b9251a-595f-40fd-99c9-83419a3038c5",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "81c8bce3-b935-4050-9bcf-d91717172907",
        "cursor": {
          "ref": "7b40e6b2-9070-45bc-aa91-9aba4eee653f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "55446695-da9d-44aa-a844-e2062f3b27fc"
        },
        "item": {
          "id": "81c8bce3-b935-4050-9bcf-d91717172907",
          "name": "did_json"
        },
        "response": {
          "id": "f454e080-0916-4741-acba-01b88895aecb",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064a3e73-cc83-4b9a-ace5-f1e301973256",
        "cursor": {
          "ref": "43431b29-1dbb-42b8-b2e0-b001c894b9c6",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "12b5f5ad-bd4c-442d-b976-279d9897d0aa"
        },
        "item": {
          "id": "064a3e73-cc83-4b9a-ace5-f1e301973256",
          "name": "did:invalid"
        },
        "response": {
          "id": "37121b8f-ae90-43f5-876b-0008124d67dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064a3e73-cc83-4b9a-ace5-f1e301973256",
        "cursor": {
          "ref": "43431b29-1dbb-42b8-b2e0-b001c894b9c6",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "12b5f5ad-bd4c-442d-b976-279d9897d0aa"
        },
        "item": {
          "id": "064a3e73-cc83-4b9a-ace5-f1e301973256",
          "name": "did:invalid"
        },
        "response": {
          "id": "37121b8f-ae90-43f5-876b-0008124d67dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7ddd9d-b819-4df7-a2b8-39903319fbe3",
        "cursor": {
          "ref": "5aeaa146-b80c-47e1-9f73-963d2ff11971",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "384364b8-e967-4717-9701-37e0d78dc8cc"
        },
        "item": {
          "id": "ce7ddd9d-b819-4df7-a2b8-39903319fbe3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "377ea1bf-eb5c-438a-8b2e-f141dcecde16",
          "status": "Not Found",
          "code": 404,
          "responseTime": 75,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbd2740-b99c-4d4b-8879-8bc36fdd45e0",
        "cursor": {
          "ref": "0ca3eaa7-b126-45b8-91d9-e9b0af33af67",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ebcaafbb-a9ea-40a1-983a-0fa3c80f11b0"
        },
        "item": {
          "id": "8fbd2740-b99c-4d4b-8879-8bc36fdd45e0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e6305cbd-4191-47fd-9a7c-9c94105eb69e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52433f01-47cc-40c2-89ca-32efdd55772c",
        "cursor": {
          "ref": "93b7b8e1-bb19-4a14-a550-9db755ba7e10",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ed450f4a-63b6-4700-8212-b2b0737adbc1"
        },
        "item": {
          "id": "52433f01-47cc-40c2-89ca-32efdd55772c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "66a2b5c3-28c5-4af0-a1a3-51b755c85ade",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07031247-bd65-475e-b9c4-0a0541acb3a2",
        "cursor": {
          "ref": "c28706af-4251-4492-a6f6-be2de640a8b0",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dacff24b-1e4f-4935-8a0a-f301d02f17dc"
        },
        "item": {
          "id": "07031247-bd65-475e-b9c4-0a0541acb3a2",
          "name": "identifiers"
        },
        "response": {
          "id": "29ac308d-486d-418f-a67d-87861f3fc608",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc893f93-99ea-4272-8f83-75a091e9e496",
        "cursor": {
          "ref": "454bc859-9e87-47a6-beec-16c8bfffa634",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "98500355-f1b5-4a6e-8e22-f7f578636406"
        },
        "item": {
          "id": "bc893f93-99ea-4272-8f83-75a091e9e496",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3c96a9e2-04ae-4e68-8f6f-24ef23bd7616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f878f15-78cc-40ba-83f8-48f63df3cdbd",
        "cursor": {
          "ref": "82cdc6f9-c254-45a4-9b5b-b485ae0ce5f4",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b9589537-be82-4758-9688-a4d1b6db6d7d"
        },
        "item": {
          "id": "1f878f15-78cc-40ba-83f8-48f63df3cdbd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1014b0e6-7fdf-4a3f-ab40-14d4f94b58c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f17f9fa-f89b-42cf-9500-8f36f7c01064",
        "cursor": {
          "ref": "4af9bda9-8ef7-4c64-90bf-f34901cfce90",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9f3f7883-dafb-467b-97f3-00ebd381670c"
        },
        "item": {
          "id": "3f17f9fa-f89b-42cf-9500-8f36f7c01064",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9dc32d63-f6d3-430b-a977-ba9389da27d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa95a0f-4c61-4bff-bcf9-501d74e9c43e",
        "cursor": {
          "ref": "3e2fe062-e23c-4860-b9ba-5c1207932287",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "86f89a40-c155-421c-ac12-3b730642221d"
        },
        "item": {
          "id": "8aa95a0f-4c61-4bff-bcf9-501d74e9c43e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2a03e5e0-b2da-4233-8622-2382f85841ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e323ce-91f4-4c19-b4c2-1382ef24fda2",
        "cursor": {
          "ref": "320ba05d-40a3-4dcb-a2a9-28d53a4c93c8",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0205f638-8d1d-4dd4-8bea-2cc66f86c971"
        },
        "item": {
          "id": "40e323ce-91f4-4c19-b4c2-1382ef24fda2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "898f1942-a77a-4baf-9f27-503078e2f2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3040c4f-d573-47a3-a6ad-ead785c53799",
        "cursor": {
          "ref": "5974815a-1828-44d0-9203-b678bd3e3449",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "11cc02ea-ff9c-4b5a-afa6-ae38b00ae670"
        },
        "item": {
          "id": "e3040c4f-d573-47a3-a6ad-ead785c53799",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "06e1d3a3-a102-4909-88e8-1407e66b747f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3c69d5-b722-42c0-a8b0-62d391082616",
        "cursor": {
          "ref": "83356db0-2ac4-4cb2-8282-b0cecbb08c25",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5bc52040-c7a5-4382-bc15-fbbe79091d06"
        },
        "item": {
          "id": "2d3c69d5-b722-42c0-a8b0-62d391082616",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c0f84193-2e6e-4536-bfbb-fac759392d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667a6700-9f08-4491-b300-6c72e55316bc",
        "cursor": {
          "ref": "8c5a0d4e-9bdd-485e-ab18-48188d0da98c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b7fd366c-5516-4caa-95bc-c127a48f9987"
        },
        "item": {
          "id": "667a6700-9f08-4491-b300-6c72e55316bc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5d94a580-b560-4ac0-a5ab-173929537e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e26af0-fba1-4e78-8da5-87f7a5014168",
        "cursor": {
          "ref": "19ba916c-f048-4f67-8062-6cfff2275aa8",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4f096275-6ba6-4242-a5f6-3a71bbe2d9f3"
        },
        "item": {
          "id": "e0e26af0-fba1-4e78-8da5-87f7a5014168",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5ad81c3f-f43e-4f52-bad2-f58eba28ec80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1839c96-8ec4-4c8b-a25a-607df916a28e",
        "cursor": {
          "ref": "11d7b674-2a3d-433c-8258-48bfe09f8ea4",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1b9fe851-aa2c-4aac-9d80-32af9d83b8aa"
        },
        "item": {
          "id": "b1839c96-8ec4-4c8b-a25a-607df916a28e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6ab17645-4f9b-42fa-bf0d-9314d55536a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09eec0d-3f28-4bbc-98ea-3e318a3371dd",
        "cursor": {
          "ref": "207fa1ed-f56f-4820-9044-95d1f2717e1c",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "327295e8-fc5b-46f1-a68d-6d76b65bdf59"
        },
        "item": {
          "id": "f09eec0d-3f28-4bbc-98ea-3e318a3371dd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "360fbf12-3f7b-4c47-9fa6-3e15466e0171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccb429d-75d7-47e3-b7e4-63076d181fce",
        "cursor": {
          "ref": "40e7db54-380d-4a1d-8f7f-d26413b012a5",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "affe3d65-0ecf-4335-b775-429c065ce86b"
        },
        "item": {
          "id": "7ccb429d-75d7-47e3-b7e4-63076d181fce",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5ff1ba88-41ee-4dce-a932-01965220875b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2ac851-eb10-4e69-8682-59ce0ff885f1",
        "cursor": {
          "ref": "9d759bd0-24da-4cfa-b253-7e303d35f813",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4e933070-8ceb-4605-b3a2-2b57faaec298"
        },
        "item": {
          "id": "6b2ac851-eb10-4e69-8682-59ce0ff885f1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0fed985d-512a-4a7d-a813-58dc55db3a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0150afbc-fc67-47ca-b696-d3fa7d947ed8",
        "cursor": {
          "ref": "2bc7dabd-6996-45b4-a349-3753fe4dfaad",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ccc0bb2c-a7af-46fa-9199-d98ff64f9785"
        },
        "item": {
          "id": "0150afbc-fc67-47ca-b696-d3fa7d947ed8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c2770545-10b3-4269-bd81-f685bf4cdbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a86b58d-f1fb-4e67-a32b-6f9b2c6b4d6e",
        "cursor": {
          "ref": "414e097a-a5f0-4cc3-8904-2f6ca894437f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4ec28e2f-9281-479d-8207-ee9105d9dba7"
        },
        "item": {
          "id": "4a86b58d-f1fb-4e67-a32b-6f9b2c6b4d6e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8b732d20-6ce4-4c0c-afe5-4f88e3bb5fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8bcd58-0b36-46e3-ad30-2bb11036e685",
        "cursor": {
          "ref": "4226f9e6-689b-4bdc-82ba-2509cb7a93ec",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "04665493-7ca7-488e-925c-6d16f8605b17"
        },
        "item": {
          "id": "7b8bcd58-0b36-46e3-ad30-2bb11036e685",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fb461675-7355-446a-ac45-443dc5b10a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1f9836-da24-4bd5-a1b7-e5294703f2bc",
        "cursor": {
          "ref": "6bcd8878-ffba-448c-9b69-217088bffc71",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "43bbeee2-4f63-44b8-a51b-a5df038cdd74"
        },
        "item": {
          "id": "eb1f9836-da24-4bd5-a1b7-e5294703f2bc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c92fa39d-f5e0-44a4-acce-641d9d38d330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5d89df-5d60-4f99-99e8-f0d4e62185d1",
        "cursor": {
          "ref": "abd3afe7-4de0-4df1-937a-62dbdd970892",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2aca571c-f5d7-428c-b792-fa36ee4f3961"
        },
        "item": {
          "id": "ba5d89df-5d60-4f99-99e8-f0d4e62185d1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ca6012c1-f2d5-42f0-ba9b-03228399dd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78022f7d-08c7-43d3-bec7-92c86e6e3e4d",
        "cursor": {
          "ref": "a7002300-0aca-4b8d-9776-63e05fd73754",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a65a8242-eec1-4d0c-ba0b-ef97b4b0f088"
        },
        "item": {
          "id": "78022f7d-08c7-43d3-bec7-92c86e6e3e4d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9186ada4-63a3-45c3-b753-b2c8d8971314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67964835-80d3-4316-9238-6fde2d0ceca1",
        "cursor": {
          "ref": "2627986c-2ba5-432b-beba-9feaeac060b2",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "de2c6e0b-392e-4c4b-bb13-896d7dd8ae9e"
        },
        "item": {
          "id": "67964835-80d3-4316-9238-6fde2d0ceca1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0618a225-2f75-47ef-9b37-e79df617d0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d6c25d-aec1-4387-b503-99dab56c80ee",
        "cursor": {
          "ref": "02d14570-6cae-48a6-95cd-79acb216e7a0",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1ed46994-152c-405a-a817-540e34535d99"
        },
        "item": {
          "id": "11d6c25d-aec1-4387-b503-99dab56c80ee",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8e8628c2-dc3c-473e-a50c-fb8b1bf865db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947d1380-fc07-4ba3-bb31-3d4ef47e0a62",
        "cursor": {
          "ref": "5db19a76-c9f5-40f5-8af2-2fde5487c192",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "51936c9a-f648-4788-9dab-e763c59e1705"
        },
        "item": {
          "id": "947d1380-fc07-4ba3-bb31-3d4ef47e0a62",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "70755fe9-6bee-4457-ba90-ef87af568779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74ef6c8-67cb-4774-aa86-fc43e488ec81",
        "cursor": {
          "ref": "b363d424-e308-460c-8ee6-689170b89b34",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "82e782b5-18ae-4e8b-9800-ac8e220653a0"
        },
        "item": {
          "id": "a74ef6c8-67cb-4774-aa86-fc43e488ec81",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "84fe6169-e51a-4125-8537-7e15b83d9f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f05d77-0a78-475d-b415-b05d3ca844c8",
        "cursor": {
          "ref": "24f53dab-e78f-452b-97d9-8486eacc37e0",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f15fa2fb-7d6b-4dcb-ad6a-12a953d11ccc"
        },
        "item": {
          "id": "92f05d77-0a78-475d-b415-b05d3ca844c8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d7d24511-8fbc-44f1-9078-740e87f3fe79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448b9ee4-279e-4425-857c-6d61f57f6356",
        "cursor": {
          "ref": "4f22f4df-555c-420c-b5c1-27cb27f08ac3",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6c39cbef-eee0-4a6b-9fe1-65d51efad6d5"
        },
        "item": {
          "id": "448b9ee4-279e-4425-857c-6d61f57f6356",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dc3b288c-62eb-422d-8d8a-feef90bcbc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2667f4-7aa4-47ff-8ba8-cdb5283d70db",
        "cursor": {
          "ref": "c807cbac-31b4-432b-9071-be951e53281b",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a0e1d546-dc07-4c69-8886-ca7cb853fdcd"
        },
        "item": {
          "id": "3b2667f4-7aa4-47ff-8ba8-cdb5283d70db",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "da2bac3a-94ed-4edd-9867-f6fbe91eca16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3262e81a-554c-44af-99fd-8175e2d20f00",
        "cursor": {
          "ref": "6c8f5ec0-7468-4432-ab77-97ab64e39bcb",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "18095b12-179e-4310-96ea-19e8f4e42d57"
        },
        "item": {
          "id": "3262e81a-554c-44af-99fd-8175e2d20f00",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fc99a10b-ab61-4c57-b0df-a50099af29a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37045dc7-0281-4d1b-81d0-7f2880fda84c",
        "cursor": {
          "ref": "fb3acf1c-6e17-4dde-bf7f-ea28f91ca403",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ca6dcf40-08f7-41d0-a6ee-927dd55d0aed"
        },
        "item": {
          "id": "37045dc7-0281-4d1b-81d0-7f2880fda84c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7ef4a606-9d7d-4ff5-a2ad-d5a611489b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b96d2af-600d-4153-b73e-697c06b9de10",
        "cursor": {
          "ref": "98e53b4c-c146-4119-b5b4-e991f172d49a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c51f9b5f-603b-48f7-aa37-77e83c42bb81"
        },
        "item": {
          "id": "9b96d2af-600d-4153-b73e-697c06b9de10",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8dcb5c32-7903-4056-8c89-913a67881422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc0dd8e-b034-4a58-8596-e920799e3033",
        "cursor": {
          "ref": "57777661-a034-4ef2-b242-e5ac957557b3",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6b544ec6-14ee-4709-b17a-7adf404eaaa3"
        },
        "item": {
          "id": "4dc0dd8e-b034-4a58-8596-e920799e3033",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8916bfc7-aaae-436b-a7e1-7dd0c76ef534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce5301d-2922-427f-b2f2-a88d95fee624",
        "cursor": {
          "ref": "0bbe43a7-48f9-437f-b726-3313f77ae679",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1dc6bd99-1067-474e-b240-940369ba21d3"
        },
        "item": {
          "id": "6ce5301d-2922-427f-b2f2-a88d95fee624",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7a85f9b3-17cf-4b4f-add6-59aefc5219b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764bcf87-4a9b-4674-b735-85bb10340f2a",
        "cursor": {
          "ref": "06bd8dd1-ccc8-434b-8e39-a1cf4f04b222",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2f2c70dc-faf9-4192-8a93-b0fe74fee14c"
        },
        "item": {
          "id": "764bcf87-4a9b-4674-b735-85bb10340f2a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "70f6b0db-79cc-44ed-a36c-10108a1e8669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2123d10e-0246-4b1b-8996-90597039520d",
        "cursor": {
          "ref": "dc093a37-dcc5-4f6b-8a2c-d8183583356b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1af8427d-407e-443b-aaf6-a14b7ce3ae4f"
        },
        "item": {
          "id": "2123d10e-0246-4b1b-8996-90597039520d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "53215b8e-8373-43b3-ba4e-437b8894eb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9daeb49-1204-47b3-82c1-3dd594085a64",
        "cursor": {
          "ref": "2074814c-2a05-4509-9c6b-dc107f790abb",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "33add7e1-e342-4d4e-9cef-6d0fe5d8c267"
        },
        "item": {
          "id": "f9daeb49-1204-47b3-82c1-3dd594085a64",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8c8cd920-1fda-4ba3-b3f9-df844c83f0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572601c3-398c-4f08-a0e5-342280f29f72",
        "cursor": {
          "ref": "470fbcbc-5421-4961-a1b2-c30f01d0d4b8",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d0e49808-bbc3-42e5-9612-75af0e7bc537"
        },
        "item": {
          "id": "572601c3-398c-4f08-a0e5-342280f29f72",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "32d7de55-297f-4ffd-b9cb-b395b61713ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7d1732-68f9-4adb-add9-5733e3cd02af",
        "cursor": {
          "ref": "4fd2573b-1afe-4ab0-a85d-404665b72531",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9daaa218-d0c6-4852-90b9-71496588496f"
        },
        "item": {
          "id": "8b7d1732-68f9-4adb-add9-5733e3cd02af",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4e202e5a-df53-43b8-81be-704632d0fd9c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66324d50-c715-4697-8e31-5c73e0addf92",
        "cursor": {
          "ref": "20c44070-66f8-449d-b656-5f055869e88e",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "02140989-9d84-4d4c-86c2-e2f5d27be03c"
        },
        "item": {
          "id": "66324d50-c715-4697-8e31-5c73e0addf92",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5b17518d-8bbe-44f2-aaf5-79dbc68002e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a2cfe8-50f5-4eb5-909c-9061c0c556a9",
        "cursor": {
          "ref": "90409133-d05f-49c1-b696-c307920229ee",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "184ef084-d9b1-4bf9-b15e-56cfb36dac5f"
        },
        "item": {
          "id": "34a2cfe8-50f5-4eb5-909c-9061c0c556a9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bd1a7164-b288-4c19-85d9-2fa1ae8997bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa1ccd7-5756-4d44-ab62-1c24b9cd3c6c",
        "cursor": {
          "ref": "363adca1-e8df-4943-af42-2c44b0c2dbad",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4b27e526-89e5-4823-b1a4-6e0f356d8082"
        },
        "item": {
          "id": "5aa1ccd7-5756-4d44-ab62-1c24b9cd3c6c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "857b2425-79c0-4833-982f-b6ae29c9c110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae243b24-4ae1-4e72-9ae7-bf2329d7148b",
        "cursor": {
          "ref": "56ab6f75-3668-4780-b3ae-07be2852274b",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ea51e19e-c3eb-4a8d-8ac5-427aecc0dad7"
        },
        "item": {
          "id": "ae243b24-4ae1-4e72-9ae7-bf2329d7148b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e5969d88-b7f6-4b60-acc1-13f34fe946e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0cbbe9-c390-4f38-bfec-1a5807b13d20",
        "cursor": {
          "ref": "0abc2150-72f2-4bb1-8dd6-1b252ccb3713",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a101f41f-7202-4cc3-9bb0-a9afc7da0989"
        },
        "item": {
          "id": "5d0cbbe9-c390-4f38-bfec-1a5807b13d20",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4c634566-5b6f-4191-9684-38a381c8cbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112f01ed-1ede-4d50-838d-7b18aaf9dcaf",
        "cursor": {
          "ref": "27cf92d3-deae-4d28-8b76-6c9353f035a7",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "575419c4-3f80-4b38-8356-a9322201fb4b"
        },
        "item": {
          "id": "112f01ed-1ede-4d50-838d-7b18aaf9dcaf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "73c86bcd-578b-4b91-b55e-9a599658e578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07f1fba-3478-43ce-bd33-e33a1d8b21cb",
        "cursor": {
          "ref": "67071914-76ed-494a-9125-bd805647712c",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "82a5c499-2371-400e-83cd-70f5203475dc"
        },
        "item": {
          "id": "e07f1fba-3478-43ce-bd33-e33a1d8b21cb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e222b110-e9cc-451a-bb1d-a848b855d1a5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313bfee4-9630-417c-a67c-c5eb941d6c18",
        "cursor": {
          "ref": "f8fef54f-ab79-42da-8efe-e85609a47321",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "dbf02831-5fb8-4eae-a69a-295fa56ca9a3"
        },
        "item": {
          "id": "313bfee4-9630-417c-a67c-c5eb941d6c18",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "52a2858d-ddfb-4ce1-94b2-5658a3fa85ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85695cb0-e829-4933-8541-e0f68ec00923",
        "cursor": {
          "ref": "203c1eeb-3437-4ff8-8c0e-d15dc00d79dc",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9ae78b9d-7cf5-48fb-ad22-240511605872"
        },
        "item": {
          "id": "85695cb0-e829-4933-8541-e0f68ec00923",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0dd08652-f764-423c-9901-ee3a968b95e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3030873b-f9ab-43ab-949d-1c0db994c759",
        "cursor": {
          "ref": "31cbfe84-ca70-4e58-a0ef-8a45d80a0079",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c16ecd88-ac92-41af-ad90-dde5fbdbf654"
        },
        "item": {
          "id": "3030873b-f9ab-43ab-949d-1c0db994c759",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8e680730-5dfb-4fd8-b309-0a7893703cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3610bb23-bfc5-4b8b-999a-5c186f964dc8",
        "cursor": {
          "ref": "958b30b3-5a6b-4545-b25c-4a8a2e37144a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "278aa813-e30e-4bd0-8365-354df4be6a95"
        },
        "item": {
          "id": "3610bb23-bfc5-4b8b-999a-5c186f964dc8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fa35b36c-5087-4f8f-9a94-6a9878a98df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549924cd-8dc1-4542-9b03-54f7cb9b5086",
        "cursor": {
          "ref": "11070d25-872f-41cd-be28-8e1074be8121",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e1c3ec54-e173-461b-91fe-498315a9486a"
        },
        "item": {
          "id": "549924cd-8dc1-4542-9b03-54f7cb9b5086",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "499a2ab2-ceb1-4e7f-a009-95aa2c95f2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4041dd21-151c-4f98-9e3c-53fb7df86487",
        "cursor": {
          "ref": "b4ec215f-ca68-419d-b75c-506fe36217f7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "500ce94c-bb99-4397-a80a-48ab6557557d"
        },
        "item": {
          "id": "4041dd21-151c-4f98-9e3c-53fb7df86487",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f58301f6-44f2-4f47-9472-1e67ebeb274a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049d777e-e236-43e8-a716-b2eeae244dd4",
        "cursor": {
          "ref": "578dca43-148e-4a5d-9cd6-db1809ef822d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a4177a4e-236f-4928-b44f-116e82c4119f"
        },
        "item": {
          "id": "049d777e-e236-43e8-a716-b2eeae244dd4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b4864c0a-1e00-494a-925c-9e2d6c998b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ff52ef-9d23-4190-8c33-1825315f8bd3",
        "cursor": {
          "ref": "1d868685-a31c-436a-9cb7-7268883f062e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1684f0b1-a1ab-479e-9474-362e897b7495"
        },
        "item": {
          "id": "53ff52ef-9d23-4190-8c33-1825315f8bd3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ed8f4661-f675-439e-aad8-d25eb06dd8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a8bd31-c97a-421c-b057-cf8de7b4fe41",
        "cursor": {
          "ref": "91405742-aa12-4912-90cb-73c75ae35b26",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bba46ee7-10f6-4ac3-8078-e8533971ddbb"
        },
        "item": {
          "id": "25a8bd31-c97a-421c-b057-cf8de7b4fe41",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2bd5a04c-f7b4-4e7f-bee8-3984935eef46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1259ea-d73d-4bf5-a4c5-949c5aded110",
        "cursor": {
          "ref": "c0d612df-cf76-4825-9868-ce47113a3ab8",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3abf7d57-3d98-4894-a7e8-83c6dbf258e5"
        },
        "item": {
          "id": "1a1259ea-d73d-4bf5-a4c5-949c5aded110",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b6471769-fbcc-4c5d-be23-ae531eb935ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76688e29-2d3a-4323-a973-35a21ed5fd66",
        "cursor": {
          "ref": "f2839943-70cf-4039-98e8-67b7a6377751",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4f2957ed-528f-42c8-92c6-326cfbe5c3ca"
        },
        "item": {
          "id": "76688e29-2d3a-4323-a973-35a21ed5fd66",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c6206f6f-6603-4815-8240-b29e86a3dc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922e6573-ebfe-45f8-895b-4a7686e9e269",
        "cursor": {
          "ref": "b9c17f7d-1a99-4cc2-9fe2-f798024bb7c5",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3cc4ca8a-7f15-4e1d-82d4-b643466b3aed"
        },
        "item": {
          "id": "922e6573-ebfe-45f8-895b-4a7686e9e269",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0db94157-4372-45fa-ae9e-0234b529eb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57da982d-eb7e-4198-9962-84ecdd78301b",
        "cursor": {
          "ref": "ee2838f5-f81b-4025-8247-866d0a241216",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9fcef9fe-9e6c-4579-a16e-905193c7237d"
        },
        "item": {
          "id": "57da982d-eb7e-4198-9962-84ecdd78301b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a111e2c2-a453-4eab-b019-486489371d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4000944-74fc-4600-9bf7-d8e6fdf1b01c",
        "cursor": {
          "ref": "7d932172-d6d1-4468-be83-e7d2b1365dcc",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1dc27b49-e833-4945-98f7-a9238451bcc9"
        },
        "item": {
          "id": "b4000944-74fc-4600-9bf7-d8e6fdf1b01c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5b9010a6-c732-41d2-9212-e661e9deeb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d15ba3-aff6-4a56-9fbc-9c538125fafe",
        "cursor": {
          "ref": "29025b67-abb0-4a5f-b940-47b0d294105b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "26aab845-7992-4182-99af-570bc68f1399"
        },
        "item": {
          "id": "84d15ba3-aff6-4a56-9fbc-9c538125fafe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b6af7039-8b11-4bde-80ba-1f2474326035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca57ea77-a000-435f-a33f-1054a9960b6b",
        "cursor": {
          "ref": "cf29d12b-38c5-4623-a6f5-4d3a7da5b54f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "163316bc-e5f6-4b47-9c98-8376ba0a4ffd"
        },
        "item": {
          "id": "ca57ea77-a000-435f-a33f-1054a9960b6b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a543edec-2012-40d2-9129-59e624bfea71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d6ff96-9aaa-4f22-b8f8-e129a5e0c5c0",
        "cursor": {
          "ref": "85ad591b-1ed3-47e0-944a-302353aa78a3",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "16dfb549-d772-4dc7-bed9-280785469d02"
        },
        "item": {
          "id": "51d6ff96-9aaa-4f22-b8f8-e129a5e0c5c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e86c42f6-9fc8-4fe3-ac1f-2770d268e211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0e5b93-6372-4b3a-aa99-a123cd16c12e",
        "cursor": {
          "ref": "529ac47b-3177-4981-9318-f193c3e0fcb8",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c241d177-c612-4220-b6dd-e4dda929da98"
        },
        "item": {
          "id": "7a0e5b93-6372-4b3a-aa99-a123cd16c12e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "186cf804-1810-4d89-b517-a4238d788112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b38073e-a28c-43f4-9f70-47e4a06d92c6",
        "cursor": {
          "ref": "ebc606a1-cf63-48f9-a4e9-2f8c8710dfa2",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c80268bc-984f-43a8-a508-69fafe2a263f"
        },
        "item": {
          "id": "2b38073e-a28c-43f4-9f70-47e4a06d92c6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a3f1b47d-d11d-4189-a28e-3d25842d8999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17cac2a-bb53-4afa-852c-58a39c4e50de",
        "cursor": {
          "ref": "76a9fde2-3879-4532-a991-d2e7d49899c3",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9ee8a778-2559-46c3-a1cd-cd1834211d1f"
        },
        "item": {
          "id": "b17cac2a-bb53-4afa-852c-58a39c4e50de",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e4dd7991-e4cc-4062-9996-8b8bf78f306b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1596998f-338b-4aaa-b305-d3f907ebf9de",
        "cursor": {
          "ref": "3f747db5-43e3-42a2-8b8a-553261091351",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9ab88d96-5231-4867-8539-b030142703bd"
        },
        "item": {
          "id": "1596998f-338b-4aaa-b305-d3f907ebf9de",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "53aa0f32-e6ad-45fb-a652-c79727f37a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d663b490-5ecc-4b62-95ca-0d7012b61b3c",
        "cursor": {
          "ref": "bf4f21b5-10e0-419b-aa5b-d3e62e4d5800",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "858c7efd-1a07-4065-b7a1-516e203efd9e"
        },
        "item": {
          "id": "d663b490-5ecc-4b62-95ca-0d7012b61b3c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f3d77bf9-bc8d-4fb6-ace4-636d9397469e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a84ddc-1729-45f5-b691-80189de4caa2",
        "cursor": {
          "ref": "04e08607-7bff-4555-bc9b-72458eb7b72e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a9cabab0-8db0-4357-a96d-59dff67741d8"
        },
        "item": {
          "id": "36a84ddc-1729-45f5-b691-80189de4caa2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ca7762f7-4638-4fca-8863-b81830d13ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdc9197-92ea-4395-889a-d1ce028b026c",
        "cursor": {
          "ref": "6e1fa597-9d32-488f-93ae-0f43f2b5815f",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b13bf4b1-34a0-49a1-ae36-4a88a8097a7b"
        },
        "item": {
          "id": "1fdc9197-92ea-4395-889a-d1ce028b026c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "74b371b2-d733-4425-be03-7388013d0272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b631cbc-4cf2-41ad-b143-06a38169c99b",
        "cursor": {
          "ref": "cb2340c1-90ab-4530-adc8-fb3b976b33fc",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8b69c308-8de9-4cca-8f5e-c750c25210e5"
        },
        "item": {
          "id": "7b631cbc-4cf2-41ad-b143-06a38169c99b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0dd71988-5dc1-4812-9930-d3ded6f846f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc320e94-e301-4fdc-ba21-52574b427d07",
        "cursor": {
          "ref": "b00e2789-371f-48e7-9341-87b0ac8883a4",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dddd49bb-7597-459b-84c2-24764b40ace7"
        },
        "item": {
          "id": "bc320e94-e301-4fdc-ba21-52574b427d07",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "09870df6-1116-4c56-beec-84058edc8f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df263aa9-9663-4d15-b6ec-23a516901a2a",
        "cursor": {
          "ref": "617bd9b0-30ef-4e5c-8b2e-81c0f9bbe1cc",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "858ff35f-595b-4370-b152-3d2001b10ade"
        },
        "item": {
          "id": "df263aa9-9663-4d15-b6ec-23a516901a2a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "18fc289c-7820-414b-8563-a82f49042e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f367bc8-9340-4592-b1d5-f8d77eb44615",
        "cursor": {
          "ref": "445dc621-a299-4782-9440-d79e4f5b5650",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ec8c94d8-4cf0-4613-8ae3-2b5bafb311ff"
        },
        "item": {
          "id": "2f367bc8-9340-4592-b1d5-f8d77eb44615",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3a1ad5a2-0c25-4ad2-8983-146f17ff2402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa530f6-079d-46a6-999c-22cab7c1286c",
        "cursor": {
          "ref": "cf0553b6-22e3-4db9-b04b-1c5ced0a980b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f65b23fd-7695-4c88-b025-dfaaa0691c66"
        },
        "item": {
          "id": "7fa530f6-079d-46a6-999c-22cab7c1286c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "62f0d414-378f-4f76-b71a-fc9474d4c6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cacc0e-ef9c-4cc8-b267-78a5d6025c60",
        "cursor": {
          "ref": "d1aad8b9-ab2d-4109-b802-663019791872",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "419dc19f-ed9e-431f-85fa-8dc8141190a1"
        },
        "item": {
          "id": "28cacc0e-ef9c-4cc8-b267-78a5d6025c60",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fa2b56af-e8b1-4998-a9ca-f1735a168784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3065bc31-6dc3-4b7f-bfdd-3d2fd8ffbe86",
        "cursor": {
          "ref": "de1648ea-5f29-4210-8da8-f2b2e0e444f5",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "69731c69-36cb-4b6f-ac82-4a20a787e98d"
        },
        "item": {
          "id": "3065bc31-6dc3-4b7f-bfdd-3d2fd8ffbe86",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f156026b-0696-44a2-a57a-82f44d6431ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3562e21c-1b2b-432d-9c50-f23962ed321c",
        "cursor": {
          "ref": "04b162d7-72b3-4f7d-8a34-75f75db36f58",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0ae70c65-f173-4cbe-a6ce-07f6651580d4"
        },
        "item": {
          "id": "3562e21c-1b2b-432d-9c50-f23962ed321c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "604da399-34d6-49e8-b934-a42bf8a33705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbf194b-631e-4d83-9fdd-8871a9d99ec2",
        "cursor": {
          "ref": "5edaafed-d219-4282-b03e-61ccbd60938c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1133c9bd-ddc8-43fc-bfab-b4f81d2f12b9"
        },
        "item": {
          "id": "fbbf194b-631e-4d83-9fdd-8871a9d99ec2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e47f9e6e-d16a-43e1-869d-db5bf08554a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417d1936-425f-45aa-903f-ef6f589bc905",
        "cursor": {
          "ref": "e2411f28-8164-4285-abbf-e85705d08d00",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "66f0f251-9ab0-4ca3-9c1f-bffce1241a2b"
        },
        "item": {
          "id": "417d1936-425f-45aa-903f-ef6f589bc905",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b64fc8c7-f9bb-4208-9aca-9964216df0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfeae2e-e7c1-4f72-ae8f-a3592290620b",
        "cursor": {
          "ref": "af2a977c-36ec-41fe-8ef4-d136e8fd7078",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "28c02ecb-f445-4184-af68-cf0c851d47e2"
        },
        "item": {
          "id": "dcfeae2e-e7c1-4f72-ae8f-a3592290620b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "003b825a-507e-4405-aa85-d214e1ee9c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd208b84-4f39-4956-b861-e3229e0887e4",
        "cursor": {
          "ref": "25a521f7-0aa2-4fe4-9131-9828e2321873",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9a5cf272-b991-44e9-8507-a8b4faf20e85"
        },
        "item": {
          "id": "dd208b84-4f39-4956-b861-e3229e0887e4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "320327b9-f7a1-4796-b6c8-73b4af300751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577fbd36-2009-49d9-bf3d-0335d4131bb9",
        "cursor": {
          "ref": "34540c27-3f53-4c9b-8123-cd6e62e01d86",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8bbfcbcd-3fba-4c08-87d3-a9bdefc4b880"
        },
        "item": {
          "id": "577fbd36-2009-49d9-bf3d-0335d4131bb9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "146de215-3d15-4df1-899b-1a8ed4ef0b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd4e444-2187-4730-8d03-364ce53755d0",
        "cursor": {
          "ref": "6e28c096-6795-4952-8961-bceb97357d4c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0af4c81a-c245-48fb-9ffc-56084b2617ec"
        },
        "item": {
          "id": "7dd4e444-2187-4730-8d03-364ce53755d0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9c3df1b1-1229-4de3-88d5-89bda2328f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5393d39-706a-4ef4-a20e-d0788e0e65ff",
        "cursor": {
          "ref": "84577edd-9720-4d9e-b6b9-f2abd57479df",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "12295a28-324d-496f-a158-bab6d3a3d2f2"
        },
        "item": {
          "id": "e5393d39-706a-4ef4-a20e-d0788e0e65ff",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d1c0c4ad-fa3c-4867-abd4-813bd7d907c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f8c8ce-21b0-4e74-8dd6-3f8b10b1bb50",
        "cursor": {
          "ref": "9044526e-2cfa-4c55-a8ee-0ee87c9ffe4f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "25493663-07a4-4693-933b-0dc5a5203df1"
        },
        "item": {
          "id": "87f8c8ce-21b0-4e74-8dd6-3f8b10b1bb50",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a5da1c4c-9647-4c72-9f7b-2a09be00862e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521d1618-10ec-4d93-af94-0be3f15b6187",
        "cursor": {
          "ref": "da5027de-3c91-417f-bf51-91429e22a97b",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fbc94eb2-c00a-46c4-b143-1dc030be3ee5"
        },
        "item": {
          "id": "521d1618-10ec-4d93-af94-0be3f15b6187",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f25bf35d-c46e-48af-a8b9-b5a01991a767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f1b6ef-a386-4368-b6f5-fc36c5bca3c9",
        "cursor": {
          "ref": "f7e2f884-33d3-44ac-8fce-df5ec0025d18",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "759d757e-7281-4aa0-8008-05c0fd680422"
        },
        "item": {
          "id": "54f1b6ef-a386-4368-b6f5-fc36c5bca3c9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9a7c31f0-1e66-4f49-86ca-24df87ae3d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c14ef8a-1964-48a0-bfd1-f24f226d9b77",
        "cursor": {
          "ref": "e03e20e8-2c4d-49d0-b769-de4337e8963f",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4a5b8803-3573-495c-9183-4f5b6080a6cf"
        },
        "item": {
          "id": "8c14ef8a-1964-48a0-bfd1-f24f226d9b77",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7edb35cc-61fb-4a27-b5a7-4be3720548f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5b6e52-e77d-45c3-9954-0c3efee1f3d8",
        "cursor": {
          "ref": "0803d103-cff2-4ac8-8b6a-551f8a6c956f",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f2d9eec2-14a1-4266-8981-a5ab33beb83f"
        },
        "item": {
          "id": "fa5b6e52-e77d-45c3-9954-0c3efee1f3d8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a4cf1f47-7edd-4c93-9a34-d1aea8060645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262d7e4a-7666-4126-8b2a-d6b619fca390",
        "cursor": {
          "ref": "2e6139f8-fefb-4511-9eb8-80b25c4bafe4",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0c0cc990-32c4-4f9b-9eea-faf5340ac982"
        },
        "item": {
          "id": "262d7e4a-7666-4126-8b2a-d6b619fca390",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "52e51d42-849c-431e-b4b1-a071fec9318b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab427cac-75c8-44cd-a957-c2874e74355e",
        "cursor": {
          "ref": "20117c3d-6ab5-4749-b0af-aec149dcd7ba",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "76137d63-5554-4149-98a6-64fdf8fe3ffa"
        },
        "item": {
          "id": "ab427cac-75c8-44cd-a957-c2874e74355e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e58e3e64-7c91-4f35-97a3-f6e74427f0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2c56e6-07ba-4ca8-b841-905626118cf6",
        "cursor": {
          "ref": "e35bb020-76a0-41a9-a01f-a35c607b5783",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1a778f9b-3241-415f-ad78-76dc0d91e039"
        },
        "item": {
          "id": "2c2c56e6-07ba-4ca8-b841-905626118cf6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c7c7cdbd-29cc-43d9-83fb-648048c8f29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae506773-40d2-426a-9a5d-5e7a83293c98",
        "cursor": {
          "ref": "80ea8986-2457-436e-89d7-e9e1a16a05ce",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c87e7b10-2884-4ec4-9653-7543cefa1739"
        },
        "item": {
          "id": "ae506773-40d2-426a-9a5d-5e7a83293c98",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d3031045-1c39-4fd6-badd-ec1c1ec23c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cce3d1d-604d-4ff7-b9c5-c4f408cfbfa9",
        "cursor": {
          "ref": "100d045d-ec87-41c2-9a3b-aa899741e20d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "36da94b9-97a6-491d-b028-814775f4bf8b"
        },
        "item": {
          "id": "7cce3d1d-604d-4ff7-b9c5-c4f408cfbfa9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1feb9db2-ea80-48f0-95e8-256d80e9d03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ece25cc-a55c-476c-b474-7e89a55e81ae",
        "cursor": {
          "ref": "5ea3847a-ab37-496b-83aa-d2609850ded0",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8dc42d08-b7f6-49c2-a9d3-320d67d3c6aa"
        },
        "item": {
          "id": "7ece25cc-a55c-476c-b474-7e89a55e81ae",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "34978204-de1c-4f27-b91b-af91b0d5fa8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3960097f-946d-4685-b5c8-00cdd2dc068c",
        "cursor": {
          "ref": "a3aeff2b-df99-42db-8c17-2ee608be4ab0",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "796764b4-9c92-4964-8bcd-5e0613c7c0c0"
        },
        "item": {
          "id": "3960097f-946d-4685-b5c8-00cdd2dc068c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "420ba897-d2ae-454b-9bc6-c1d789e81bb6",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40eff14-6a7c-4299-8578-f6e1192a4ba7",
        "cursor": {
          "ref": "acb14e50-6363-49f1-890f-3b22f6fbe9c5",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "28b34315-ec2f-46fb-9ad1-72d066741d75"
        },
        "item": {
          "id": "a40eff14-6a7c-4299-8578-f6e1192a4ba7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "72828e0a-b552-46fc-abe5-5dc2b5daecfa",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef6e644-24e3-4ef3-ad99-76353c703add",
        "cursor": {
          "ref": "c3b84e04-c5e0-43b6-adc8-bdd9b106fef3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0c5f9194-eca9-47d7-9724-3e39ae47fbbb"
        },
        "item": {
          "id": "aef6e644-24e3-4ef3-ad99-76353c703add",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "08be97b4-6268-4b9c-93aa-af7d0d95590f",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9dddb7-94e0-4de6-a8f8-3306f336d63e",
        "cursor": {
          "ref": "cf8b8510-e9fa-428c-9416-29d33dfc5699",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "46452f7d-1470-4091-a083-97dd81d7f280"
        },
        "item": {
          "id": "7e9dddb7-94e0-4de6-a8f8-3306f336d63e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "150e794c-2027-4686-8123-f4e7db018199",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "409060c7-1044-4ddf-91be-c502816802fb",
        "cursor": {
          "ref": "976f72a8-1569-4b64-b56e-7c31e8452a31",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "eb086dee-a23a-445e-9be9-299ca09d6d27"
        },
        "item": {
          "id": "409060c7-1044-4ddf-91be-c502816802fb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "264dad45-f921-4d9d-b031-f22202261128",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e7c463-24e0-41a9-ac12-faab8a22b539",
        "cursor": {
          "ref": "6538a901-4ed4-4e91-8ab2-372679897097",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f6304915-9085-4c97-96c0-524c7836f6d7"
        },
        "item": {
          "id": "98e7c463-24e0-41a9-ac12-faab8a22b539",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "46b7c084-f892-41c2-89e5-b61a16f9b486",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d75974f-1626-4684-923f-d1713277dd34",
        "cursor": {
          "ref": "2bdff919-bd3a-43a9-8f25-ec5cf2347165",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "43bef2cf-5c61-4461-8410-44d59dbef043"
        },
        "item": {
          "id": "5d75974f-1626-4684-923f-d1713277dd34",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6a2cae07-7125-4718-9ad5-b551ab3e8f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de158a6f-1ace-4c2b-9241-4da08120cb81",
        "cursor": {
          "ref": "e322f414-63f7-4814-921e-a4c014adb43a",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c0da37f2-944e-47bb-8d5c-186085a9c5d5"
        },
        "item": {
          "id": "de158a6f-1ace-4c2b-9241-4da08120cb81",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b31e15b2-94aa-42f7-ba53-7111a550af64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54af5f0b-8d22-422e-bccb-0c70ef889e48",
        "cursor": {
          "ref": "aa6fd92b-b7b7-41b2-a694-0c467c65f0f5",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ec0689e7-61ec-4a5e-8035-a9c23a0c8c53"
        },
        "item": {
          "id": "54af5f0b-8d22-422e-bccb-0c70ef889e48",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cfd77bc1-6fe3-4b05-8c5d-5cbff19d7cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcb6ea8-1d06-4ca1-bdef-233161052416",
        "cursor": {
          "ref": "532298e9-dad2-496d-a87b-1d0edd098c1f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4b3484a3-7223-46c1-938b-7e43b3fe3cc7"
        },
        "item": {
          "id": "0dcb6ea8-1d06-4ca1-bdef-233161052416",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "76319a59-e3e9-4cfe-81b8-2e90a535283c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4634b47-5346-4785-ab1b-32c381ee912f",
        "cursor": {
          "ref": "85917528-a7c8-4b19-bf2f-f9f2655223df",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ff28c8ff-fabe-47f7-86a3-350eff3e5043"
        },
        "item": {
          "id": "d4634b47-5346-4785-ab1b-32c381ee912f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d33cc60b-fc56-46dc-ba34-a89caef8bfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5533c4-d9fb-40a6-8f49-7ef78053499f",
        "cursor": {
          "ref": "f07d55fb-19b5-486a-9663-d422c9b639db",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ed55ea1f-796e-46b3-9364-e6eb0b63182e"
        },
        "item": {
          "id": "ac5533c4-d9fb-40a6-8f49-7ef78053499f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5d8b766c-93c6-46db-a6ab-a43478942069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb03b9f-41eb-4c22-bc9e-48b9a06da667",
        "cursor": {
          "ref": "df350d9c-2e3b-4669-8f64-7f3416aa6b1d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "af23680c-d97c-457c-b0b3-ca54900069e6"
        },
        "item": {
          "id": "0eb03b9f-41eb-4c22-bc9e-48b9a06da667",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8840ce47-841e-4c0b-ba99-34337e091f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5bb115-a326-4193-8e7d-10bc1fcb5466",
        "cursor": {
          "ref": "2e0faed2-dcaa-43f0-885b-7d93ad3b66e8",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e3db6b34-f188-4a42-9345-f1ecd6066c45"
        },
        "item": {
          "id": "2b5bb115-a326-4193-8e7d-10bc1fcb5466",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "680412da-18ad-4575-af94-61300b9b557c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1397b078-896d-4fd9-9cfd-70c4ee87be17",
        "cursor": {
          "ref": "955dd7df-4751-4f5e-9df2-2d2f6df8f9c7",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "437df178-ca1a-48be-8e8d-46ce6e3b960a"
        },
        "item": {
          "id": "1397b078-896d-4fd9-9cfd-70c4ee87be17",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9a2aa676-21e9-40e9-8afb-6c87790c15ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22fd0d0-2d15-4cef-b5cb-7caef7d4ef4e",
        "cursor": {
          "ref": "367cc9bd-a55f-4255-92ac-98641fbc4df0",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c20e4b36-98c7-4bad-b9d8-7f2a63a96bcb"
        },
        "item": {
          "id": "f22fd0d0-2d15-4cef-b5cb-7caef7d4ef4e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3b639373-ddf8-41ec-8ab7-9b0f8e615c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40bfdf2-79d4-4954-bb3b-55e05d28e2e7",
        "cursor": {
          "ref": "decba61d-20a3-416c-aae8-b6f0e231879e",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bd510260-c148-477b-9d62-34b289c978ec"
        },
        "item": {
          "id": "d40bfdf2-79d4-4954-bb3b-55e05d28e2e7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "db8f04b7-f055-4d0a-9c99-dba02b1ef3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12628fcc-bc47-4014-bcb6-2a6f015efcdd",
        "cursor": {
          "ref": "71a8bf98-ba6c-4910-98b7-72af428096b1",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5a5e5f69-6e0d-4dcb-8818-8149516a61c7"
        },
        "item": {
          "id": "12628fcc-bc47-4014-bcb6-2a6f015efcdd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "21fae251-9727-4ba5-b9a3-55d5f99951d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b454ac8-0770-4a38-b15f-df32f4220156",
        "cursor": {
          "ref": "e6a60a48-b5d4-4774-9583-3f8e400e3cc6",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "00f9fe8d-182f-404c-b74b-b2b3e5ff645a"
        },
        "item": {
          "id": "2b454ac8-0770-4a38-b15f-df32f4220156",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "49dd90d6-9dd0-43e1-bd79-bc96557ed5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b47296-d7ae-4edc-88cf-4bce776d8a44",
        "cursor": {
          "ref": "c797e931-6b97-4ede-a01d-8744e84264ad",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "367918ea-2b36-4087-88a0-085aad971a89"
        },
        "item": {
          "id": "d6b47296-d7ae-4edc-88cf-4bce776d8a44",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8b0a3efd-d2bc-4e53-a004-e3ebbd9b666a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ec1f3d-6005-4aaf-8641-1b62706099ed",
        "cursor": {
          "ref": "562015a9-5766-4735-91bf-340ea903f0f8",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3ed40b7d-067a-459e-8c3f-55d4445ab1f5"
        },
        "item": {
          "id": "e6ec1f3d-6005-4aaf-8641-1b62706099ed",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a77c5b3a-4f9e-47cd-812c-c0ad54448614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549cb7f1-48a1-4ea2-a264-b7bf7771ab6c",
        "cursor": {
          "ref": "c65fdcbe-8311-49cb-adca-c8d50a194eb1",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b6bccaa1-839b-4c76-88ac-4253992c7a20"
        },
        "item": {
          "id": "549cb7f1-48a1-4ea2-a264-b7bf7771ab6c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "93c2711c-58e7-40b3-a8f2-1aa0ebc6b102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea81434f-50c7-4b32-bad6-69b25e878413",
        "cursor": {
          "ref": "f64f5a47-b444-44bb-8ec3-475aafc89799",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "31e21262-0846-4871-b169-92c95094a19b"
        },
        "item": {
          "id": "ea81434f-50c7-4b32-bad6-69b25e878413",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9d50a6c7-0c2e-46ab-9892-f0f07cba0b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ad9d72-2ab2-452d-8534-83659c4c93c3",
        "cursor": {
          "ref": "b1a154fc-9238-480d-945a-ed5e815d19c1",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3f06bd6a-4758-454e-8914-464a0fd09bd6"
        },
        "item": {
          "id": "a9ad9d72-2ab2-452d-8534-83659c4c93c3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bed83fe7-232d-4111-b618-c7889725c99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8036a06-6ac4-4037-8b9b-419714e9256e",
        "cursor": {
          "ref": "e2752b23-7eb7-4472-b00b-227c0033046d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9d58fadc-b77e-4121-9ed5-47d5d0ca091a"
        },
        "item": {
          "id": "d8036a06-6ac4-4037-8b9b-419714e9256e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7bc337c5-63a0-4e04-b90a-b4afcd53155e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5555aea0-0fd5-432f-9aea-497c00a3369c",
        "cursor": {
          "ref": "aa4c1027-fac7-4499-81e3-0b3f201f10ff",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d4cb30ee-6b0a-4e23-9d2a-9914ba9d273a"
        },
        "item": {
          "id": "5555aea0-0fd5-432f-9aea-497c00a3369c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "310404b3-35a9-4f87-b99c-4395ad93982b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecd7875-9716-4d2f-8d47-e26c93b2dc92",
        "cursor": {
          "ref": "3638664a-eb79-40ea-9237-16b19d61fdcf",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "199a47b1-59a8-4a35-b3b9-7898f5cba5ec"
        },
        "item": {
          "id": "3ecd7875-9716-4d2f-8d47-e26c93b2dc92",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4a647be6-0752-4af1-836b-8c6b2757e52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5f7e41-2e76-4aeb-8738-f4207271cb4b",
        "cursor": {
          "ref": "99d44439-6ce5-4306-9536-ac67f35b5af3",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ee01d086-b7bf-46e5-888b-195f4ee17186"
        },
        "item": {
          "id": "ee5f7e41-2e76-4aeb-8738-f4207271cb4b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1dead7b7-1e81-4f58-8fd9-de7ebea282b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9690ec30-3a65-414b-8b8d-74cf2f94eeae",
        "cursor": {
          "ref": "a960d421-2ffc-44b1-ae90-951177675841",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dfe7efb0-3dec-4b6a-b5d3-e4e9eec8eaf7"
        },
        "item": {
          "id": "9690ec30-3a65-414b-8b8d-74cf2f94eeae",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "66bc69cb-6a4d-49b6-8107-10efcee7be8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90e80bb-f626-43b8-848c-e9aa643577c5",
        "cursor": {
          "ref": "5dd3d3f3-96d2-4270-83f1-842549d22bdf",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "95c6e072-de19-42ac-ab96-9216c3682ca3"
        },
        "item": {
          "id": "c90e80bb-f626-43b8-848c-e9aa643577c5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1c569e4f-b7d4-4a13-b577-735d6c6e73ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d88d23-13e7-46c7-b2ab-cd7cbda5f5b9",
        "cursor": {
          "ref": "9439d9ce-2962-4b32-af84-9339da9f80eb",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9deb849c-3894-4fbb-b576-fb42acdfe701"
        },
        "item": {
          "id": "22d88d23-13e7-46c7-b2ab-cd7cbda5f5b9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3cee02c7-42c7-466b-ada8-270d9cd9d38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dee7a3-438e-465a-919b-6ba7d90c4e9e",
        "cursor": {
          "ref": "b71f1ae7-f5be-408b-bb66-e47975bd4c28",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "172ae1f1-b2ce-4b23-8e65-528c60178e3d"
        },
        "item": {
          "id": "59dee7a3-438e-465a-919b-6ba7d90c4e9e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "25495431-318f-4189-ba8b-69f8869d0654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d6cacf-15a9-491a-af45-4d45482f4a39",
        "cursor": {
          "ref": "cbec176a-ffae-4b8a-8c47-e15021269155",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f4401a8a-35bc-41d7-82ab-eee717c6f9a1"
        },
        "item": {
          "id": "a1d6cacf-15a9-491a-af45-4d45482f4a39",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2064f3ff-ecda-4da5-9dae-11fca99a931c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19fa1ea-3321-447e-a0f1-996e6954bb68",
        "cursor": {
          "ref": "a28fad78-2d44-41fd-81d4-8eaa3ca2f741",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "282290c1-ca63-4e4f-9d8d-012ea7574d89"
        },
        "item": {
          "id": "e19fa1ea-3321-447e-a0f1-996e6954bb68",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7f14d545-0def-41a1-b6a5-f28df0c43f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febb28e9-9302-42f0-8481-b0fd4bcace36",
        "cursor": {
          "ref": "d8280b39-167f-4f36-9097-361377be86a9",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6731f448-e9aa-475d-8908-56e8e69c21b9"
        },
        "item": {
          "id": "febb28e9-9302-42f0-8481-b0fd4bcace36",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "48ed0047-3f75-4b21-9c85-c7b990b40030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549fc08c-a0a6-4fae-a7cc-790535a5a31f",
        "cursor": {
          "ref": "af5e327e-36e0-48e6-93f6-580cb942a57c",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5a738c0b-21fa-4852-8b75-edbb97ad0373"
        },
        "item": {
          "id": "549fc08c-a0a6-4fae-a7cc-790535a5a31f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e7af58a0-afd7-42ae-a701-3e481baa5080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe4bc38-bb54-4230-b258-4212a11e798e",
        "cursor": {
          "ref": "40ac10de-f4f5-444a-97e2-800e3c605323",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d5319a4b-4a23-4510-b57a-48cb875ce7c0"
        },
        "item": {
          "id": "1fe4bc38-bb54-4230-b258-4212a11e798e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d2d6ffb2-f972-48ce-b8f0-4056fe966036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea876bc-a480-411a-921d-bfb7146da7bd",
        "cursor": {
          "ref": "e48ff9ec-d9e8-4b60-b51f-265fe93e2c85",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3ef941be-a272-42a1-ade9-a4364d2180f3"
        },
        "item": {
          "id": "5ea876bc-a480-411a-921d-bfb7146da7bd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "aada9995-7cea-4113-850c-7e35898d09c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b985da3-e162-4155-b4c5-9d83293853c4",
        "cursor": {
          "ref": "b5f8dca3-ce9d-4132-9d64-dc6083fcb9e6",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6d815d29-a9aa-46b0-96f7-23318bcd6d90"
        },
        "item": {
          "id": "6b985da3-e162-4155-b4c5-9d83293853c4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fe42ead8-f42c-48de-abf3-a9a46ffb6744",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dbc5b1-59f1-4006-8219-6c9cc3e7da7c",
        "cursor": {
          "ref": "7e7b8f7d-f128-4b7c-8014-a314d23dfa80",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ccb3a8b2-ad2b-4edc-ab41-be0867811f05"
        },
        "item": {
          "id": "d8dbc5b1-59f1-4006-8219-6c9cc3e7da7c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7368fcd6-e2fc-4163-8bab-947c5ef5bae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365cae5c-bc55-4769-9b01-8f207126d970",
        "cursor": {
          "ref": "57fd91d5-38cf-4971-af10-39980afc4090",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f37fbbb3-467e-4625-9d94-5ed1b4c261de"
        },
        "item": {
          "id": "365cae5c-bc55-4769-9b01-8f207126d970",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4457d661-a139-4607-87a5-48b54eeee49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93de4b9a-ba9b-483b-8a47-ca48448e2d90",
        "cursor": {
          "ref": "40371908-ae58-4220-85f3-2f3b9b95cba9",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fba1e0e2-d2c8-4a72-acc0-4eae408b0bad"
        },
        "item": {
          "id": "93de4b9a-ba9b-483b-8a47-ca48448e2d90",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5af1dd32-30e7-400a-a8dd-b756808e87f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508aed97-4cf3-4fff-8d1d-8f15c63e788d",
        "cursor": {
          "ref": "2d942527-3fe6-4976-844c-e69ca6168ba4",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fd997128-6af6-4154-95cd-fef5f45d31b0"
        },
        "item": {
          "id": "508aed97-4cf3-4fff-8d1d-8f15c63e788d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "89328080-fe4c-4dd5-991b-65ea7b46d590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a637c3d2-45c2-4184-8542-a638fd2465e7",
        "cursor": {
          "ref": "7ea4a0e8-fa16-43c3-a8ae-d9c005710c2f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a7356b9e-a94a-405f-adf0-8b2a5adba9ae"
        },
        "item": {
          "id": "a637c3d2-45c2-4184-8542-a638fd2465e7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3582d2cb-c11a-4f19-9368-3153f92fa401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62002257-9dc3-4ded-966e-0ed3cb6aa1f3",
        "cursor": {
          "ref": "e5ac3b96-274f-43f8-83da-51957d3a2f15",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "33477a95-92ae-4eaf-97f4-5dcfb6e0388d"
        },
        "item": {
          "id": "62002257-9dc3-4ded-966e-0ed3cb6aa1f3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6f899f9a-bed2-44e2-8450-1a06a783743e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b95d422-32e7-4855-bb1e-5cb9099ee16b",
        "cursor": {
          "ref": "05ce0f4c-3dc4-4d71-9b3d-776b7497d905",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "98c3f71f-7243-4c9a-8f87-0e6043858cc7"
        },
        "item": {
          "id": "8b95d422-32e7-4855-bb1e-5cb9099ee16b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9dbdcd65-e375-44ec-9416-a39614e8fed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5241aec2-62c2-4427-aefc-c9de758ea4bb",
        "cursor": {
          "ref": "64725c40-faa0-4146-b381-e4137d988b6f",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "192799b7-433a-4153-96d1-b16743b1b7bc"
        },
        "item": {
          "id": "5241aec2-62c2-4427-aefc-c9de758ea4bb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "18a42713-32ff-4b7a-9f14-0ce9f5ec724d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74ecb8a-fe5b-4c69-b7c2-a17131fd6b67",
        "cursor": {
          "ref": "6a564379-d6ea-4b5e-851f-7ee39d8eee0b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d95bf81e-160e-4a0f-938b-83e3660296e7"
        },
        "item": {
          "id": "b74ecb8a-fe5b-4c69-b7c2-a17131fd6b67",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "63aa5aaf-28e7-4000-bd96-d0e4dcd24e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df53100-56e9-4ab1-bdc6-e88b24c9924d",
        "cursor": {
          "ref": "a75cd447-ecab-4364-a4fe-2602c1e62c9a",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cbb8aa78-1ce9-464a-b0fb-ee52aafb2d10"
        },
        "item": {
          "id": "9df53100-56e9-4ab1-bdc6-e88b24c9924d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e075ca83-7932-48f2-8371-f92cfe5eafe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1021b931-9163-4047-a4bb-979980ce720c",
        "cursor": {
          "ref": "38a9145e-eaef-4de7-95d8-cd826d9f0377",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e51316c9-2af9-4d31-8f74-f33f6f4143c8"
        },
        "item": {
          "id": "1021b931-9163-4047-a4bb-979980ce720c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f32c91be-d91c-48a5-98eb-50433ce6c5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcc6aa8-7b19-4221-8900-825150f86b0a",
        "cursor": {
          "ref": "ee5af5f2-e061-459e-89ba-f7ad63e3a3ad",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4a605af1-051c-459c-be57-f415815fd1f8"
        },
        "item": {
          "id": "8fcc6aa8-7b19-4221-8900-825150f86b0a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9283d196-d61a-48a4-9f8e-a620cad6875a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a926e374-a318-475a-96ef-7a9756518cdb",
        "cursor": {
          "ref": "682cc715-071e-4e33-b718-4d377a98f1c5",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4f7961a5-6722-4205-a85e-aa19b746c836"
        },
        "item": {
          "id": "a926e374-a318-475a-96ef-7a9756518cdb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b8158bc4-790c-4ba4-81fc-9076512f01b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06372eb-91f2-4bdc-bf7d-cfe48cd8e527",
        "cursor": {
          "ref": "ee63cd4f-aa35-46fa-a1a2-0df8c4f3a033",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c5d47096-5741-4d43-a218-75860f547b72"
        },
        "item": {
          "id": "b06372eb-91f2-4bdc-bf7d-cfe48cd8e527",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dc88f4fc-2f55-47a3-a894-4af99ab3622b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3728903-7c4c-412b-a8d2-c89b67b575b2",
        "cursor": {
          "ref": "19408f6e-f8d7-47c1-94f2-d23c3ba4e1dd",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bc016d1d-6194-42a2-ac3d-12c43e20a730"
        },
        "item": {
          "id": "a3728903-7c4c-412b-a8d2-c89b67b575b2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "20ebd732-f32f-4aa1-9dde-b7e14aefd1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab1862f-d4c5-4de7-be80-331ae0a31309",
        "cursor": {
          "ref": "d7320e4f-9fc4-411f-873a-1e98171ea9e3",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "21b5e1fa-e528-4b06-9501-64c550fc8828"
        },
        "item": {
          "id": "1ab1862f-d4c5-4de7-be80-331ae0a31309",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0e1917dc-1228-4eaa-a22c-5859e5b5d2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45237ce4-209f-40aa-b8f3-ab0de2745e81",
        "cursor": {
          "ref": "f2280d74-cdf6-4310-a89e-641e34c8970c",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a49e32c4-c497-4791-bdd3-e93bcc7e0e4a"
        },
        "item": {
          "id": "45237ce4-209f-40aa-b8f3-ab0de2745e81",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d69cbd5f-17a4-45de-b4ba-b65c7f7d4267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966849a5-eff9-424c-9ab1-a03f8b28ca8f",
        "cursor": {
          "ref": "704c3d6c-fc11-4baa-8433-557c4ed477f3",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ba166676-8f74-4bf3-a601-59864cc125fc"
        },
        "item": {
          "id": "966849a5-eff9-424c-9ab1-a03f8b28ca8f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f54457e2-ee16-482b-8c01-cda47002ba58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df290de-9a82-489b-80eb-ae0e5ae9273c",
        "cursor": {
          "ref": "17b9ebe1-1185-4a4e-9418-688535fce632",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "18ac3e1a-263d-4c22-b516-5ec278befc28"
        },
        "item": {
          "id": "5df290de-9a82-489b-80eb-ae0e5ae9273c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1aac1715-1315-4399-b9d1-66293cd9c7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6adc98-20e4-46f7-9e9d-3e3dabd9fb4d",
        "cursor": {
          "ref": "90d916a0-53a5-4b10-992f-36c2d14e4595",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "75a93a4c-1382-40c6-9904-3b4f0c901c73"
        },
        "item": {
          "id": "0b6adc98-20e4-46f7-9e9d-3e3dabd9fb4d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5def314e-eb73-4f42-83f2-0635f335ea9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc3e9f8-4924-4be7-9732-5121150306ad",
        "cursor": {
          "ref": "4a3b79bc-296e-47ff-8e54-38f3b51d604f",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4411c1af-a36e-498e-879e-0257264b3f16"
        },
        "item": {
          "id": "8cc3e9f8-4924-4be7-9732-5121150306ad",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0a8d16aa-5803-4878-a09b-5ac6b35e1bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c488d1-2536-49ea-9823-d9bb29224ae2",
        "cursor": {
          "ref": "aaf69c0e-a15a-4229-902b-d284aeb08921",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fe681788-f42e-4406-8a52-2c88d9679a36"
        },
        "item": {
          "id": "24c488d1-2536-49ea-9823-d9bb29224ae2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3638bfa0-cc12-47e2-8f58-d0ad3bbe2704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2358fdaa-9af8-4436-98a3-982f01ac3387",
        "cursor": {
          "ref": "38543fcb-a462-432d-98d5-dcf468f20461",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8a824939-fba7-491f-8724-5494730038c0"
        },
        "item": {
          "id": "2358fdaa-9af8-4436-98a3-982f01ac3387",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e70594d5-44b7-4969-a9e9-9c641eb45164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a8fb47-9379-41f8-9438-b0fa611ad8c6",
        "cursor": {
          "ref": "424ef8f4-e7eb-42e3-9143-0245fc5ae845",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d935d713-f60e-4596-85c6-331955dbbdf9"
        },
        "item": {
          "id": "29a8fb47-9379-41f8-9438-b0fa611ad8c6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "76fc6abc-dc2e-4ef7-a48f-74047eb5bf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb40c840-4c92-47a0-9859-0f3001c1ed0d",
        "cursor": {
          "ref": "2dba4918-a0fd-4175-a90d-3c449c5c37b9",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "03622f3f-13fc-4a13-a590-1fdfc3389a52"
        },
        "item": {
          "id": "eb40c840-4c92-47a0-9859-0f3001c1ed0d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9c1f983e-cbc8-41e3-93ec-50ff7df69347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4b62cc-faf5-473f-99f9-e3d5273fedae",
        "cursor": {
          "ref": "04c198ed-5e08-4070-b7d1-7fa8b338caf6",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2f1bf756-f1e4-4244-9009-683770eb1d26"
        },
        "item": {
          "id": "2d4b62cc-faf5-473f-99f9-e3d5273fedae",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5bb1948c-0f65-4ae0-abc2-7c79cafc94f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c75d59c-ddff-4755-b238-95741d2189a7",
        "cursor": {
          "ref": "fbe83141-61c5-4fea-a948-16481db4067b",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e91f61de-e98d-42be-a7bf-e3b07b51801a"
        },
        "item": {
          "id": "6c75d59c-ddff-4755-b238-95741d2189a7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "42ff98b6-05e8-4013-aee0-b6ab635970d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc84d518-014f-4a1b-9a5b-3ffac8e929ed",
        "cursor": {
          "ref": "9fa19814-1d66-48bd-8fa4-ef52830875a3",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7874d145-0175-4220-b8b0-3bff51f1e327"
        },
        "item": {
          "id": "cc84d518-014f-4a1b-9a5b-3ffac8e929ed",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "efcfe0ca-8977-4230-92ce-68abd0bbcb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdb9971-4aba-4044-94d5-f5e6823bbbf8",
        "cursor": {
          "ref": "0a6ef1c4-6adf-46a4-9c3f-2b7c75aa311c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "de1180ad-3830-4c0e-af8b-913408a650c8"
        },
        "item": {
          "id": "1cdb9971-4aba-4044-94d5-f5e6823bbbf8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b79a11cc-7570-47b7-9e84-c6bf06502062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1c0eb8-a04d-439a-99ef-e44f2ce8b6d3",
        "cursor": {
          "ref": "eb443dc7-75c7-4a06-a829-98f2229d3d74",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1e3152b3-7d9a-4d71-aee8-d0db5d238a12"
        },
        "item": {
          "id": "1c1c0eb8-a04d-439a-99ef-e44f2ce8b6d3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3d055b44-2622-45db-abc1-b6134d3ab703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ad17f7-509a-4e6c-ac91-874b87017b4d",
        "cursor": {
          "ref": "783718b1-db58-44d3-8f89-03932cf5134f",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "31ab13d2-8783-4123-b7eb-2ee28178c873"
        },
        "item": {
          "id": "e1ad17f7-509a-4e6c-ac91-874b87017b4d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b566fbfe-6374-459b-836c-addc8c8f6371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433f8a92-d73a-41a4-b9c6-2014cfbd85ab",
        "cursor": {
          "ref": "c187f1bc-fd77-4fe2-8124-0a9a3bf52f51",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "da87fe79-38b5-4e59-a133-201adf4bc906"
        },
        "item": {
          "id": "433f8a92-d73a-41a4-b9c6-2014cfbd85ab",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "84564b86-7337-4b3e-a3c3-2dda4549f366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82d8f96-9a31-4592-8add-ab8efda08f36",
        "cursor": {
          "ref": "4d779d79-e5f6-491f-badf-b91b0e345ea1",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2124ae88-0898-4974-b8d7-3df179125a2e"
        },
        "item": {
          "id": "a82d8f96-9a31-4592-8add-ab8efda08f36",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4c676b7e-3c96-4677-990e-11f7e060763a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d30bac5-e42d-403f-bfdc-ddfe9148e10a",
        "cursor": {
          "ref": "3d3fc242-3daf-4974-9b3d-88ea071ea8db",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b0436f0f-2ad9-4a4e-a813-a6b6bc92bdae"
        },
        "item": {
          "id": "9d30bac5-e42d-403f-bfdc-ddfe9148e10a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c657b1a8-554c-4d1b-a18d-8a5d3012fb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e76963-7c2f-4be5-b4db-578534c21eb6",
        "cursor": {
          "ref": "13c7920b-e3f3-418d-9224-a0d90eaead3c",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8c70f8e3-169e-4b21-a2e1-ada88651b9af"
        },
        "item": {
          "id": "49e76963-7c2f-4be5-b4db-578534c21eb6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "51075ff5-4830-4f48-855b-89dcabd3b411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2151b68-212e-4205-b6b8-c2589d2943fa",
        "cursor": {
          "ref": "ffc1a0aa-7625-492b-9c50-c6016ebb2d3f",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "74185720-8a7f-44eb-a63c-1e366076a269"
        },
        "item": {
          "id": "a2151b68-212e-4205-b6b8-c2589d2943fa",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "91c9a2ed-f34a-4de6-a64d-adb01129762f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561e35f9-9f89-43e4-96ce-aeb37c93e1bf",
        "cursor": {
          "ref": "7b7fff50-2309-4f74-a22e-f5b1478f6214",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ceddcd13-5e80-4975-8799-814aa089560f"
        },
        "item": {
          "id": "561e35f9-9f89-43e4-96ce-aeb37c93e1bf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0072a036-a384-4938-96b7-86c580b88a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c1f068-e7b0-4092-be07-d556a5cbb170",
        "cursor": {
          "ref": "bc14cfc8-ffdd-482c-ae91-2d5105112587",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "108a0f9c-7bc7-4ddf-80b8-3cf91dece93d"
        },
        "item": {
          "id": "37c1f068-e7b0-4092-be07-d556a5cbb170",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "20111e8c-2830-4374-b5f2-d025f1cddd85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d9c2dc-2957-4098-ab1e-753b7728a1bc",
        "cursor": {
          "ref": "614e5329-85dc-40a2-918d-d2522629a785",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8ced2dc8-2c0f-4e21-820a-43ac4ec9f2e3"
        },
        "item": {
          "id": "e5d9c2dc-2957-4098-ab1e-753b7728a1bc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dd36c6cf-9548-40b8-8ca0-456a3e006e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213281c0-b295-41c5-939e-c2917b83f7c2",
        "cursor": {
          "ref": "f16786f0-fddc-4827-9054-7efc841d4f50",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2d8dacc6-ccae-440a-9c4a-65d2d631ae5c"
        },
        "item": {
          "id": "213281c0-b295-41c5-939e-c2917b83f7c2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "783063d9-ba63-439a-8b44-40c43221f2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07af1f17-27b3-470b-be4f-2e4810cfeec3",
        "cursor": {
          "ref": "4f24ec59-a335-43d2-b261-203d4b1205af",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "73aadacf-33e5-467e-a767-9411a5e1bfb4"
        },
        "item": {
          "id": "07af1f17-27b3-470b-be4f-2e4810cfeec3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c56c4cc8-785c-4c64-8612-63a17f52796d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aa1114-2af3-44f0-8692-ab56b7973cae",
        "cursor": {
          "ref": "79fa04cf-290a-443f-a5fb-406d9f31c49a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "049c6995-71af-4412-98b6-08e614ec7f34"
        },
        "item": {
          "id": "32aa1114-2af3-44f0-8692-ab56b7973cae",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2138aa9b-5869-400a-806b-205b2ed39651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa0f7c3-8475-4694-9233-c7f6a3b85bec",
        "cursor": {
          "ref": "ec5454e6-eb5c-444c-b446-6b796dc08976",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "18eedd9c-10a4-4b63-bfdf-a971360840cc"
        },
        "item": {
          "id": "0aa0f7c3-8475-4694-9233-c7f6a3b85bec",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "837aaa1e-4178-4958-b531-9197e1ffc91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e42d47-2e40-4b5c-ad43-4e139d78514d",
        "cursor": {
          "ref": "18489b3b-5324-403c-8056-9743da9ae8de",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f7a23c4a-b7ba-47bd-b0cf-774c10135a92"
        },
        "item": {
          "id": "c5e42d47-2e40-4b5c-ad43-4e139d78514d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "158372a8-bf71-45da-bf28-1c66ee7217df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17841cab-b9d6-43fa-ad69-c529eb2feffa",
        "cursor": {
          "ref": "c6e0d752-d121-4f68-88ed-1241049da90b",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d64b322a-9f67-41b5-abc1-d32223de2cfd"
        },
        "item": {
          "id": "17841cab-b9d6-43fa-ad69-c529eb2feffa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4e38162a-466e-41c1-8f7f-c66486f8fc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf85468-0813-4558-b483-caf2693a384b",
        "cursor": {
          "ref": "a2b273a3-829e-4daa-9b02-72a92160bef1",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d197db38-5e07-4245-8786-11284c7a86ed"
        },
        "item": {
          "id": "eaf85468-0813-4558-b483-caf2693a384b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "859572c6-4a30-4e08-997a-b72d83cb18b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f05500-581f-411f-b952-186796c17260",
        "cursor": {
          "ref": "3d4261db-3c8b-47ef-a66d-53ff688640ba",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7ecc7740-8d6d-45ec-94bf-5979a2f6f618"
        },
        "item": {
          "id": "68f05500-581f-411f-b952-186796c17260",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b2cb6a85-98ca-4220-b915-ff25471a1bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb80481a-f1ab-4eea-a4c0-6f6d3763b626",
        "cursor": {
          "ref": "b9d531f1-ef83-4a88-a446-039169d545ac",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bc8e5371-9a6b-428e-9d1a-da602ef3a208"
        },
        "item": {
          "id": "eb80481a-f1ab-4eea-a4c0-6f6d3763b626",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c1c5afba-ebcf-4c86-9e30-d4d5ac8f4a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69fd311-4a14-4136-8449-783bde0cc770",
        "cursor": {
          "ref": "e7c36650-0d2d-48c6-9f91-e2577e443816",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dd922b93-ac86-4627-b8aa-a51567277c26"
        },
        "item": {
          "id": "b69fd311-4a14-4136-8449-783bde0cc770",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "df45cc3a-af2a-4dce-83db-f4e347676e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd88a73c-b1a9-4eaf-ac55-4f47d42abf5e",
        "cursor": {
          "ref": "4ca32d4a-e405-4c36-a837-85bd5be608f7",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d16b0301-31ea-47fe-b928-ba04ab0e32bc"
        },
        "item": {
          "id": "fd88a73c-b1a9-4eaf-ac55-4f47d42abf5e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "01512864-2d70-4b38-b9a8-df42ee7bafd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb98d73-a7c7-4a14-9dd0-230f58eaecde",
        "cursor": {
          "ref": "6a454241-8284-44b8-92b2-9361ed358686",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a2694c4e-460f-4f12-a8fe-c37992e118da"
        },
        "item": {
          "id": "9bb98d73-a7c7-4a14-9dd0-230f58eaecde",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1d9d865e-768f-46ad-9034-735c57c9f28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c6f2a2-233e-44de-a99b-8c95963df5f7",
        "cursor": {
          "ref": "9e70d6d7-ee2b-4903-9863-113e1ee6c520",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "de3c37b9-9938-4d2e-b0ed-84bbb4b909e2"
        },
        "item": {
          "id": "96c6f2a2-233e-44de-a99b-8c95963df5f7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fed8619b-9c08-4259-aa15-ae92912353fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bfca57-22d9-4300-9082-08e7040cb636",
        "cursor": {
          "ref": "0e175a7d-b939-4ea5-8e82-fd47c5f1dd7b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "559241db-152f-46bd-9efb-711ac57027ac"
        },
        "item": {
          "id": "87bfca57-22d9-4300-9082-08e7040cb636",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3ebe3576-9ec6-4b8e-8ffb-6e39c02bf5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c611ef5b-425f-4593-8c41-dda032408d4c",
        "cursor": {
          "ref": "2a1b2dcd-4580-411c-95bf-600badc904bf",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ae524eb7-68e6-456e-8e7c-9b8b708aba0f"
        },
        "item": {
          "id": "c611ef5b-425f-4593-8c41-dda032408d4c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "47795549-5424-4cc9-8513-5f2795302c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f0e518-8fc4-470c-9a7b-4563ceb134c4",
        "cursor": {
          "ref": "15e684e9-bce4-4ab4-87e0-9690ce728113",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d55210f2-b2cd-48c9-9689-faebec2f7545"
        },
        "item": {
          "id": "f2f0e518-8fc4-470c-9a7b-4563ceb134c4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a83e5e83-ae3f-4f60-b324-044c8e040a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad635486-b517-41f1-ad18-0efa1b6e3c97",
        "cursor": {
          "ref": "c29e0253-8ceb-4eed-8bd3-39b135eccb6d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b06b28e0-169f-4b38-8329-d21661ba4e0e"
        },
        "item": {
          "id": "ad635486-b517-41f1-ad18-0efa1b6e3c97",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "13bcf8ea-ece4-4292-bcac-4761b5ca7f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4910da0-c89a-4fd3-a590-2eb765a90edb",
        "cursor": {
          "ref": "78530dc2-f732-41c6-b325-68d2ddf95d34",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5391fb8a-9c74-407e-b600-6bc614ca1f15"
        },
        "item": {
          "id": "c4910da0-c89a-4fd3-a590-2eb765a90edb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ff79e347-4441-4164-82fd-aaf3625529b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bed879c-c93f-4c2d-a6fd-10932c5591b7",
        "cursor": {
          "ref": "eef31ae3-7363-4421-b617-9e6c90e36039",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4695ee6c-42f8-4dbf-be9d-82ef7add0316"
        },
        "item": {
          "id": "5bed879c-c93f-4c2d-a6fd-10932c5591b7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e9f115c6-7381-4863-85fe-fad6bfe73d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5641213-3203-4de3-bf7c-dbd7416ad42a",
        "cursor": {
          "ref": "72697dc9-f3c3-43b6-982b-97725433cb25",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "31f50248-eb2d-4f0b-9f01-c735ad23b746"
        },
        "item": {
          "id": "c5641213-3203-4de3-bf7c-dbd7416ad42a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "467d1202-6d68-4df8-9c03-d4e43ab8f607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d5cf6c-c7b4-4a04-9cce-5012b861e313",
        "cursor": {
          "ref": "dec85edf-cf7d-47bd-8964-a392ea03f850",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "55533596-fca2-4d7f-9ee6-814bcecda20c"
        },
        "item": {
          "id": "72d5cf6c-c7b4-4a04-9cce-5012b861e313",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "99c52945-dbed-41f1-b186-cbaf6dcbe20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f66aa7a-39bb-4b8e-98b9-057becb218cb",
        "cursor": {
          "ref": "0a421fb2-4bf1-46d8-bde6-62cbfd916792",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3d4f976d-7784-42b6-8c27-8b26ba6f8891"
        },
        "item": {
          "id": "9f66aa7a-39bb-4b8e-98b9-057becb218cb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "22cec9bb-dad6-409b-a92d-5abb6ae93101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfded949-34f5-4ab5-90da-c782912a078b",
        "cursor": {
          "ref": "a10bb841-4d16-4432-9742-b91df920d479",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "36506bae-2ba5-47ae-a059-e2a5414affe8"
        },
        "item": {
          "id": "bfded949-34f5-4ab5-90da-c782912a078b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2035dd6e-2f14-46b6-8194-c4098118d20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18a0f69-a9f6-48b0-9a74-3b62dec3b995",
        "cursor": {
          "ref": "b6ab996b-7b2c-4384-9054-8bf3138035dd",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dc3a8a2f-0632-4be8-b976-6f589356e485"
        },
        "item": {
          "id": "b18a0f69-a9f6-48b0-9a74-3b62dec3b995",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a7822616-1820-4011-880f-f1f0521983dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb842f4-eff8-4132-bba6-a589b872ed51",
        "cursor": {
          "ref": "4e329e72-fdc3-4d44-ac92-62a68ce67c1e",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b70e3586-ac03-4455-812f-14e828051b4b"
        },
        "item": {
          "id": "efb842f4-eff8-4132-bba6-a589b872ed51",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3f1cfbe4-2133-4fc5-a5eb-193127a1193a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77eee017-7edd-4198-a633-c549c98258a4",
        "cursor": {
          "ref": "0de7deaa-8bbb-40f6-a023-e15116b590c3",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "efcdf422-5eb4-499f-aeb1-ad472b18ef01"
        },
        "item": {
          "id": "77eee017-7edd-4198-a633-c549c98258a4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b3b57969-c78b-417e-8063-1c4e9b4b7d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7408bc41-27a9-4c62-ae89-780953928d46",
        "cursor": {
          "ref": "1493818b-aa7f-473b-9c84-ec16c44cbd89",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6b279816-1112-4158-8978-370f0022a900"
        },
        "item": {
          "id": "7408bc41-27a9-4c62-ae89-780953928d46",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e8c334b2-ac1e-41f3-81bc-0191fd36fb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45ec695-39e8-48aa-9ab1-1cc3b63f53d9",
        "cursor": {
          "ref": "b3d52960-c70b-4deb-8afc-f07cecd26549",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "16367f69-eb41-4fa3-b1e9-a16e2c4a3082"
        },
        "item": {
          "id": "a45ec695-39e8-48aa-9ab1-1cc3b63f53d9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7d8fdcd0-7504-44e0-b9bc-aad364fe79e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2daacb1-ca5a-4b1a-b1f3-d5a83120c2ba",
        "cursor": {
          "ref": "3a84517f-eed2-499d-a7ff-2772e03fc938",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a49085d1-c8ab-4846-8ebc-fe6920648151"
        },
        "item": {
          "id": "d2daacb1-ca5a-4b1a-b1f3-d5a83120c2ba",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8f190021-a81c-4d8d-8e91-34fb76ae6aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e63b3ea-9cbe-4dcb-9ba0-33ac71c0fa53",
        "cursor": {
          "ref": "410ff5de-361c-4cfa-996e-1d06b94341f8",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "778838a1-74c8-4bf6-9dc4-c95f7d7ea1bf"
        },
        "item": {
          "id": "2e63b3ea-9cbe-4dcb-9ba0-33ac71c0fa53",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "552292dd-7197-409c-b289-9ae3100c481b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4556961-8a60-4871-a166-0ac023574663",
        "cursor": {
          "ref": "903b1943-698d-4ae3-98db-25a7fdccaa27",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "649bac36-3d07-4fe1-981a-34e7d7c0a420"
        },
        "item": {
          "id": "b4556961-8a60-4871-a166-0ac023574663",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3044bd18-f1ac-4c32-a7de-c810cd359121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8ce421-188d-4422-988a-123f896f2be1",
        "cursor": {
          "ref": "1d90cd4c-6631-4ec2-89c5-9d4559c56dc3",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4f80a37b-9553-4fb8-9567-af6e87716173"
        },
        "item": {
          "id": "2c8ce421-188d-4422-988a-123f896f2be1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c851a3e2-0ccf-4747-8f8d-7ec8cc75d031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e7bd59-7110-45a4-b747-a1bf0f96f46b",
        "cursor": {
          "ref": "5f75591e-ca3b-4fd7-93f4-ea68392db8e7",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9a581cd8-b627-4ecb-8ba9-2fb66e8ede0e"
        },
        "item": {
          "id": "e1e7bd59-7110-45a4-b747-a1bf0f96f46b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d7170133-2608-4b94-9ac6-2fa3a5128f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d51440b-6b37-4f72-8ac6-9285742c8f07",
        "cursor": {
          "ref": "1e344dd5-30f5-487b-886e-e01230ac809b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2c307a7e-833f-46e6-bab7-82bf8ab8463e"
        },
        "item": {
          "id": "4d51440b-6b37-4f72-8ac6-9285742c8f07",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "01106387-264b-4c5e-b5d0-12a665482247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582b5f63-8d40-4a90-81a1-d955e916c9f2",
        "cursor": {
          "ref": "8533ff6b-a4ca-4a18-af05-905ba297d68a",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1294e5ae-d399-472f-8d1e-c64a32cc8e31"
        },
        "item": {
          "id": "582b5f63-8d40-4a90-81a1-d955e916c9f2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8fda12f4-a648-4e4b-a9e7-322645c48362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da018e8-b352-456f-ac8b-ca826a1b175f",
        "cursor": {
          "ref": "1bb6180d-a97d-4c73-9e6f-5ebcb784a4ac",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cca8dc34-c588-43e6-9846-ef739d33eb9f"
        },
        "item": {
          "id": "8da018e8-b352-456f-ac8b-ca826a1b175f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d6ffd7ea-4fd5-4280-983b-c60916e75656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c373b9-0b48-474b-9427-26c1d9d0a2f7",
        "cursor": {
          "ref": "acd09880-de09-4ed2-9e5a-bf9e954eb4a0",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bafd31b6-94aa-4450-92b2-3184a356b80c"
        },
        "item": {
          "id": "77c373b9-0b48-474b-9427-26c1d9d0a2f7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "65c06090-4b88-499c-b407-4db941608fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1f3053-56dc-4a27-8071-8261b37d6c1d",
        "cursor": {
          "ref": "9e831218-8068-444d-8498-ce09b0d94155",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "799c8c17-0143-4d53-8ee0-f76ab86efd92"
        },
        "item": {
          "id": "5f1f3053-56dc-4a27-8071-8261b37d6c1d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d562946c-ce50-4da1-b132-8d61276b1369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33267d12-36b2-4735-bca9-ad1bc64aa4bd",
        "cursor": {
          "ref": "d053fd4e-7912-495e-93ed-15dcfc2040f5",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4aad47e4-fd27-474c-85ef-8a43f0c25e40"
        },
        "item": {
          "id": "33267d12-36b2-4735-bca9-ad1bc64aa4bd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6ea8f3eb-d640-4ca0-a33e-5cfb399bb1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663f6a7b-0d28-4f55-9493-07f539af5f36",
        "cursor": {
          "ref": "fcf9c5da-70b0-4a7c-81a0-ab97643b26e1",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "da015300-516c-46b6-8788-42702a21804d"
        },
        "item": {
          "id": "663f6a7b-0d28-4f55-9493-07f539af5f36",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "75dc1767-a679-47f6-9e40-921883160c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fe084f-7c27-4387-893b-0ee5ec9d628a",
        "cursor": {
          "ref": "60710d0e-2cf8-4fe1-938b-2ff1325a0c8e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c71e9c91-ff16-4c64-a47d-30a464047bb0"
        },
        "item": {
          "id": "46fe084f-7c27-4387-893b-0ee5ec9d628a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cfff6e59-ff03-4abc-abc2-d6238a4df026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08c3ff2-cc83-4437-8eab-489742e12956",
        "cursor": {
          "ref": "936c671b-ea23-444c-ae22-db431ea4c35c",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "500abd6d-ceab-409b-854a-eb11f8be225a"
        },
        "item": {
          "id": "a08c3ff2-cc83-4437-8eab-489742e12956",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "06fd73cf-c403-4145-84e4-e81d6b0dd6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e838d7-368b-4f23-8538-c0845ab9b3b1",
        "cursor": {
          "ref": "7b0f975d-b80f-4829-997e-af65faad69c4",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7fcc8022-caf8-4b62-a6b7-90603936e721"
        },
        "item": {
          "id": "a8e838d7-368b-4f23-8538-c0845ab9b3b1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0659bb68-3642-4f2f-838b-752e6f45e164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ae67dc-93b0-43b5-b9a3-42fdbf97da21",
        "cursor": {
          "ref": "29b34a60-ef4b-4d36-bc6a-a4746df062e8",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c777233d-f410-4d2d-bd4d-fdc4dc8c7c67"
        },
        "item": {
          "id": "f1ae67dc-93b0-43b5-b9a3-42fdbf97da21",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9e23ce41-dfe5-43b0-b825-857e84aae208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d72ee71-0f76-4fed-8687-27cada0ec210",
        "cursor": {
          "ref": "9fe0da13-fa8b-4d75-bcf6-601e81bc5e37",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c5d14ff5-3daf-4a87-8c1d-77b561883a22"
        },
        "item": {
          "id": "5d72ee71-0f76-4fed-8687-27cada0ec210",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8a58b05d-362a-4f6d-a96c-b18e005dabf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbda247-aed4-4555-a635-e08ee35f00b9",
        "cursor": {
          "ref": "454e5317-1485-415c-88dc-ad442bc1f52d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "af7d4760-5ef2-4e11-98a6-995de79786a5"
        },
        "item": {
          "id": "4fbda247-aed4-4555-a635-e08ee35f00b9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "766e3153-6b1c-48e1-94cb-45cf645e07b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e421ee0a-cf40-4133-90eb-2d4038ad1025",
        "cursor": {
          "ref": "4339ea2c-0141-42da-aad8-e3a1d9a275bc",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4489abb9-844a-42bd-8b78-25c29d3a87f8"
        },
        "item": {
          "id": "e421ee0a-cf40-4133-90eb-2d4038ad1025",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4511e7c3-5538-45c4-b802-5c8056a688d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559f37fe-36b8-4d6c-bf4e-eec02045f8af",
        "cursor": {
          "ref": "ab552280-e342-40a6-8971-c9e045e93613",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a04fbba3-7132-4adb-8080-a624fcf430ab"
        },
        "item": {
          "id": "559f37fe-36b8-4d6c-bf4e-eec02045f8af",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "351c5263-f12f-4e7e-939e-d06ca7ce5dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1716098-c607-4d4c-b4e8-64c36cd58f58",
        "cursor": {
          "ref": "8e644d3b-e7cb-46f2-b7b6-6691c4aa0a81",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c36a6ca1-e92d-49e7-8948-8830babbadb2"
        },
        "item": {
          "id": "f1716098-c607-4d4c-b4e8-64c36cd58f58",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6f5392a2-7400-4916-982c-11852322f5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64873d9a-01f1-4ffd-bde1-79974a8ac58a",
        "cursor": {
          "ref": "41ebbc91-2bcc-4599-b0c8-1ba21e7959ff",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "43d5bac3-a0cb-427f-a47c-fb4eef8e422f"
        },
        "item": {
          "id": "64873d9a-01f1-4ffd-bde1-79974a8ac58a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1b76b0ba-15ae-4476-9cc9-a0a49f870452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35a962f-06ef-4d87-8f7f-198c43b40ac1",
        "cursor": {
          "ref": "36db1841-d708-4eee-85ac-7f9320c78f93",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6705f478-4ed4-49e0-9555-0240a3a4256c"
        },
        "item": {
          "id": "c35a962f-06ef-4d87-8f7f-198c43b40ac1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "22e9b413-0f56-45ed-8d35-02036eb0eb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e71d16d-2a5f-40be-867e-3700ef309a1f",
        "cursor": {
          "ref": "2b6d4063-4f19-455c-b93b-7dca9d282564",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3ee5edd4-3a63-4c61-9fdb-5ff5c45be0bb"
        },
        "item": {
          "id": "2e71d16d-2a5f-40be-867e-3700ef309a1f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "11736001-e041-4f6d-a624-9a9e7afd7bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e24a027-4827-4613-ad8a-4a27191c8215",
        "cursor": {
          "ref": "2d1b00cf-857f-4358-a125-02b773be5c84",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4c126302-9195-4843-a66b-f33cc7c77a28"
        },
        "item": {
          "id": "7e24a027-4827-4613-ad8a-4a27191c8215",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1e4ec638-4926-44a1-b761-30510dad6f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b049547-0a6e-47f6-bff1-b7ec0784e167",
        "cursor": {
          "ref": "9f89bdcf-2b2b-4c1f-9241-a0f6aa6d558b",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c536578d-7092-452b-9544-d09afa9d6098"
        },
        "item": {
          "id": "1b049547-0a6e-47f6-bff1-b7ec0784e167",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "79eb94ad-30bb-45a3-8caa-2b933df09981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5289103-1fc6-4f53-9d1e-181a50ce5240",
        "cursor": {
          "ref": "7dbaf3fa-6821-4173-887b-d9ca5e012df6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a95dfad7-75fa-4a3f-a41f-a8f6f9eca769"
        },
        "item": {
          "id": "a5289103-1fc6-4f53-9d1e-181a50ce5240",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "337e72a2-77c7-43c9-8364-80437b7aae58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72486143-4549-4ec0-a086-a62b21e405b3",
        "cursor": {
          "ref": "145224d7-1385-4f39-9458-365c5a0570a7",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f5bcb5f5-ba8f-429b-9934-8d3a41727f25"
        },
        "item": {
          "id": "72486143-4549-4ec0-a086-a62b21e405b3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f175b02a-364f-4b64-a02e-8675759f7d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb8011c-bfcb-4d57-ab34-0b0f13754b1e",
        "cursor": {
          "ref": "38081b2e-5bde-42a2-8709-c5bb9c0f9cf2",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c0b47a8c-42de-4f53-8a9e-5c0896121fe4"
        },
        "item": {
          "id": "ccb8011c-bfcb-4d57-ab34-0b0f13754b1e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "faa770a5-3b9f-40b8-a6e3-0006dcdfeaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68955a1-4614-4a2b-a19f-bee5fdfa7fed",
        "cursor": {
          "ref": "aea3a84a-a9ee-4e9a-b689-25ad4e054a86",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "99803aa9-c6ea-4fa4-a0d0-a1ce19403112"
        },
        "item": {
          "id": "a68955a1-4614-4a2b-a19f-bee5fdfa7fed",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "167a37fc-db81-44d7-9e3a-1c00d8df3203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cc9d48-a77c-487f-bc35-3c8b31f53f31",
        "cursor": {
          "ref": "9b8f4af7-dea5-4050-a03c-b5b7e289bd62",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cd460771-647f-45c0-9b64-58db9196f228"
        },
        "item": {
          "id": "61cc9d48-a77c-487f-bc35-3c8b31f53f31",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8d0879cb-d7b2-44b4-957c-ae73af132f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b25d16-731d-4e50-a519-4c641075bcf2",
        "cursor": {
          "ref": "e81e9073-9d2d-4ed3-a0fa-66439cf2fa6b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0d2f136e-86d8-4ff7-820b-99d639d1d918"
        },
        "item": {
          "id": "f9b25d16-731d-4e50-a519-4c641075bcf2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b22437ba-6219-4f62-830d-bae75f320889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650a52cb-aa68-441f-93a5-acb5c3759aa5",
        "cursor": {
          "ref": "32a4fc11-5e2c-4825-a9d0-2fe1ef5e08e7",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a8aff8c7-baab-41b1-bb61-8845c2b40f7c"
        },
        "item": {
          "id": "650a52cb-aa68-441f-93a5-acb5c3759aa5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ecd49b82-b317-4fd4-a4d0-4f2f7f3aadd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd9ecfc-5ee4-4e1e-9225-64c4b45b54ad",
        "cursor": {
          "ref": "9e84f1d7-1890-4932-8dd6-af5c28ff68d5",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dad3e62c-0d43-4d38-9233-e723ef9a599f"
        },
        "item": {
          "id": "efd9ecfc-5ee4-4e1e-9225-64c4b45b54ad",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ab0ca460-0ce3-46d4-b9c3-1f76fd78e076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb550124-9c39-40f5-9983-80c7ee1824cd",
        "cursor": {
          "ref": "4e398a7d-9aee-4972-a1d5-3d01d95e36f7",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "32057ed7-1386-4271-9ec5-82284f0840c4"
        },
        "item": {
          "id": "fb550124-9c39-40f5-9983-80c7ee1824cd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "253491b7-0c34-4724-b4f1-9013f448c8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667d0e65-ed24-4a76-8053-d32c75b3e8af",
        "cursor": {
          "ref": "33d2f728-6768-40ee-803a-e9106cbdcfac",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c94eb31c-994b-4cde-8463-17a3881c14fd"
        },
        "item": {
          "id": "667d0e65-ed24-4a76-8053-d32c75b3e8af",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cba56ef6-1f24-487d-a42c-149c0245987f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48cce3e-b4e1-42d5-9f9d-0a80c80447ea",
        "cursor": {
          "ref": "b5e28945-5832-4525-bb38-007d83ab459f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3ce1a6ab-d5cf-480e-b333-3fde63accad1"
        },
        "item": {
          "id": "a48cce3e-b4e1-42d5-9f9d-0a80c80447ea",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dff96b37-5cd2-40a8-a748-661adbc0f894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d13de72-8398-4c54-b4b8-108f3caf23f1",
        "cursor": {
          "ref": "a9ca8f50-9a18-4923-ac40-f83d3a755c7b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8b99b445-2967-460e-bdc7-0f34e87b468d"
        },
        "item": {
          "id": "3d13de72-8398-4c54-b4b8-108f3caf23f1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "404fa53b-2cf1-475c-997d-81113880a7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7a0da5-8237-4e7d-91ba-eab07db34e41",
        "cursor": {
          "ref": "1e31689f-2167-43f5-b583-928024bae32a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3d509e4f-59d2-4e1c-9200-efe63d5c12d2"
        },
        "item": {
          "id": "ef7a0da5-8237-4e7d-91ba-eab07db34e41",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c5536292-0727-49b5-9ee7-c5a4c63c5be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bd961e-d42a-4e77-b266-f726ca984145",
        "cursor": {
          "ref": "ce70fe84-0cc5-488b-9038-5fbc7383d523",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ce59ff64-4f27-4d6d-a44c-ea2816cef24f"
        },
        "item": {
          "id": "49bd961e-d42a-4e77-b266-f726ca984145",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b7685e97-6806-49fd-b020-05f1272015ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d77cc8d-9a80-4481-b35d-3427ed29c9ce",
        "cursor": {
          "ref": "22c4c8b8-497b-4cb0-b907-d8d0d3088239",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "76d76f95-4d83-4d5f-8ed5-7448df46cba5"
        },
        "item": {
          "id": "8d77cc8d-9a80-4481-b35d-3427ed29c9ce",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d8ba5822-61d1-4f53-963b-c7c75e238a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6111330a-00c1-4956-9550-f33eab6d3d81",
        "cursor": {
          "ref": "6685e209-6f3a-4422-a3b1-d4284de1e713",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "892b971b-2586-497e-95ab-4a46e7561afb"
        },
        "item": {
          "id": "6111330a-00c1-4956-9550-f33eab6d3d81",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "269b62d9-e26b-4915-a6d5-919724e1b5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb2fc09-355a-4c18-813a-b2cb52003d8c",
        "cursor": {
          "ref": "a8f41e6e-3d50-48e9-af65-79fab8264ec2",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0078a74e-2397-4ad0-85ee-9e604dca76c9"
        },
        "item": {
          "id": "adb2fc09-355a-4c18-813a-b2cb52003d8c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1b3a95f6-1d3c-494b-802f-9d62911bdde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce71b8a-fd73-44a1-8c36-9f97bf80cce2",
        "cursor": {
          "ref": "1d9ba113-f2c1-4526-9c1f-dd390bbebbaa",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "bd301d23-dad9-473a-94ff-bf37e6c92169"
        },
        "item": {
          "id": "cce71b8a-fd73-44a1-8c36-9f97bf80cce2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7b7e7190-544e-4928-ac2c-656ea0ee4688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243a4f7d-ac96-46a1-a45f-471577a202c4",
        "cursor": {
          "ref": "e15ce6eb-0498-42b2-8b00-e535e136e1ea",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "af9443d1-1e20-43af-9662-5db3e0793828"
        },
        "item": {
          "id": "243a4f7d-ac96-46a1-a45f-471577a202c4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "91e3adc0-7e27-49d7-a13d-0c5533f0ea71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b197a07-a5d3-4bbb-82b4-36fe580578a1",
        "cursor": {
          "ref": "7cc8ff11-e7c1-4ed7-ac3a-5e36d95faa7f",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bad52dfe-091f-44e3-ae00-32a0fb69755d"
        },
        "item": {
          "id": "0b197a07-a5d3-4bbb-82b4-36fe580578a1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5272f022-f511-4cc7-aa27-dd0f1315f07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366d72f4-a23f-420c-bd31-fdb44ee98880",
        "cursor": {
          "ref": "46ba0bfe-66b7-4311-b452-e971d08ec998",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "65fcd0a7-9e3d-45bc-9691-e7af7ae20be2"
        },
        "item": {
          "id": "366d72f4-a23f-420c-bd31-fdb44ee98880",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bbe2f085-2943-4851-8e28-98d7a21976de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ffcab9-c806-4ae7-ab32-08524af75320",
        "cursor": {
          "ref": "a357fd07-2245-40bf-932b-4798b3b87815",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8cf3b38b-1c3c-4051-ad31-cadea7f4ec1d"
        },
        "item": {
          "id": "86ffcab9-c806-4ae7-ab32-08524af75320",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "92be696b-e268-47da-8f48-3eedaeb0559c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0e3ad0-f3c9-4169-853e-775f592795e0",
        "cursor": {
          "ref": "567686e6-7a0c-4dde-9878-7b9179ff3adf",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2fd9df0c-5079-48c0-80b0-268a7a273c58"
        },
        "item": {
          "id": "bf0e3ad0-f3c9-4169-853e-775f592795e0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8be5feee-c716-470e-9739-31ab101d07f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4154a7c-2296-4d8e-bd04-990ac6fed08e",
        "cursor": {
          "ref": "483019f7-bd1d-4d45-b9b2-2f269c445321",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6236a86b-6cdb-4404-82a3-d7b54e25b261"
        },
        "item": {
          "id": "e4154a7c-2296-4d8e-bd04-990ac6fed08e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "99b9b415-baff-4a96-8879-fce47a0376f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a90ccf-85be-41b6-a7e2-9f5dac6480ee",
        "cursor": {
          "ref": "66153400-de7d-48fb-ade8-c3aac556b9d8",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b20ed2f8-638c-4603-9f6f-8f9915fb18f9"
        },
        "item": {
          "id": "77a90ccf-85be-41b6-a7e2-9f5dac6480ee",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5ab60472-b4ad-4f35-8f74-0374125df28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6bc090-4292-4f88-9d67-7d0a0b861e4c",
        "cursor": {
          "ref": "f919c430-0e44-403c-bd12-eb416b995d3e",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "15265a17-df20-4a99-a6a0-4f64aeeb0601"
        },
        "item": {
          "id": "1a6bc090-4292-4f88-9d67-7d0a0b861e4c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ba7f6a9c-a8ff-4dcc-b869-47d6f29924c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd077145-2604-4740-afac-be65e9d22ff1",
        "cursor": {
          "ref": "284cf5c1-3c2a-49b8-bd93-a44e91c0e69c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9a417f51-32a7-4285-96b1-415846d284b0"
        },
        "item": {
          "id": "bd077145-2604-4740-afac-be65e9d22ff1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ce91a179-0a00-4b2f-aef1-5ecf6dac2fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27074cf9-ea52-45ab-bdd9-34edc75f05cd",
        "cursor": {
          "ref": "50a23e18-ac98-44a4-97f0-99fe862924bd",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3ccf064c-4c68-4fae-ac53-bb0cad7067ec"
        },
        "item": {
          "id": "27074cf9-ea52-45ab-bdd9-34edc75f05cd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6310909a-098a-4373-a54a-ad5d1480aeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a33f7a-fbef-4419-b672-3d7e7017bcba",
        "cursor": {
          "ref": "0daef109-ac72-4559-8443-9da606032854",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "286c912e-05b2-44ce-af6d-074244d02905"
        },
        "item": {
          "id": "e6a33f7a-fbef-4419-b672-3d7e7017bcba",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5a1c5024-5d1c-4a6d-8ed2-8ddee653c152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32f6d14-ea5f-4886-99e2-62237c3b6699",
        "cursor": {
          "ref": "4bfc1366-3d31-413a-9fdb-6c69506e3c5b",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ae0efca2-029b-4a79-8ba7-4976bdc107cc"
        },
        "item": {
          "id": "b32f6d14-ea5f-4886-99e2-62237c3b6699",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3fb68492-cad2-4a43-ad66-224d44dcaaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd8e615-7621-4fcb-8f2d-5a67f60ed5f9",
        "cursor": {
          "ref": "6aa45191-81a0-443b-a3f5-e87250c6e09b",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9b61f173-2f82-4552-a162-0202d0c8ee30"
        },
        "item": {
          "id": "7dd8e615-7621-4fcb-8f2d-5a67f60ed5f9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "61f4df5a-02ba-451c-813b-3710fefce587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd15effe-72af-4118-8036-fec16daceb10",
        "cursor": {
          "ref": "7fdea52c-ff83-4e24-9781-93ed196fabba",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b4881b46-6b5f-4ae5-b77b-1a356489b0fa"
        },
        "item": {
          "id": "bd15effe-72af-4118-8036-fec16daceb10",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4d01b458-f223-4992-b672-9f4fe3d918ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a3f42a-00d5-41c2-b477-ed1c14e22423",
        "cursor": {
          "ref": "8e0b3ff6-c72b-429a-add0-dd8b37ac07c7",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "40ac2e0c-acbb-49ea-97f1-65cc15090189"
        },
        "item": {
          "id": "a6a3f42a-00d5-41c2-b477-ed1c14e22423",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c7350dbd-d930-430e-9531-087329cb260b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5157176d-3823-4a4a-beab-18eb59e0ba75",
        "cursor": {
          "ref": "bb1a0e2f-a5ff-462f-b175-8abf98047b4a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b32d1edf-65ef-4ea6-878d-e17c6a9919b5"
        },
        "item": {
          "id": "5157176d-3823-4a4a-beab-18eb59e0ba75",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "589f9f3d-fca2-45d7-8d02-2b487af7f312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3543e29e-586c-4383-9b3a-1e044b4817b5",
        "cursor": {
          "ref": "450a73bf-f33a-4e3f-b3be-2161b9c33284",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ddb87205-6f06-4055-918d-a6238b5b92f8"
        },
        "item": {
          "id": "3543e29e-586c-4383-9b3a-1e044b4817b5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e1eca67b-159f-45c9-b1a3-4fd3c8650d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288009dd-e5dd-447b-8f90-7ccb0a0adef0",
        "cursor": {
          "ref": "b8220011-8734-4f41-a5d3-59d3b3aa5519",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d02e775c-4115-4ebd-8292-22776f50a34a"
        },
        "item": {
          "id": "288009dd-e5dd-447b-8f90-7ccb0a0adef0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d869401c-33a4-4795-bac7-cc760cf1f60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06fdc40-cb85-41a2-a1f5-1ad4f2015cb2",
        "cursor": {
          "ref": "2475675e-c729-4038-b3a1-ed572e9a3d7f",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4421b1e9-f053-4436-8597-61dd26f109de"
        },
        "item": {
          "id": "c06fdc40-cb85-41a2-a1f5-1ad4f2015cb2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "643c9dfe-260d-4233-8002-a3839495a64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021f70c8-5e25-4d09-9c7a-aa74dc83e428",
        "cursor": {
          "ref": "9e8e25d4-0fee-4045-83fa-d0f20e57c3b1",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4ddf85fd-a4e7-4028-8818-fceee3556815"
        },
        "item": {
          "id": "021f70c8-5e25-4d09-9c7a-aa74dc83e428",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0c07f30e-3f86-4e58-9ed7-dcba6ec7b886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073d8ca7-2337-4a2f-8a81-d875d0f5da0e",
        "cursor": {
          "ref": "da9522ff-ae86-40fd-99f4-c388088c0421",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "acc67607-5c1d-40cc-81a6-b3a2bf903a56"
        },
        "item": {
          "id": "073d8ca7-2337-4a2f-8a81-d875d0f5da0e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "31686955-3a43-4c98-9c90-7f7085acc8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f39cf58-9780-4616-8e9e-50a68e63bffa",
        "cursor": {
          "ref": "1b37c349-2528-4c92-b38e-a791c8cb3933",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e2a0d14f-fac3-4608-9cc6-f75ecb5a125f"
        },
        "item": {
          "id": "8f39cf58-9780-4616-8e9e-50a68e63bffa",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3954f94f-3901-4498-a516-59ccae13bf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1f180c-d8a9-4a53-a743-232ca4cf6114",
        "cursor": {
          "ref": "43f775c0-a380-4cba-a2be-997b555bc1ad",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7a68de6f-68cd-4b93-94cd-0c435db0b4a0"
        },
        "item": {
          "id": "5b1f180c-d8a9-4a53-a743-232ca4cf6114",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "af9375bc-4ebf-4b00-b372-3e377a162a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f123c2-06a1-42d7-ae88-20979b17553c",
        "cursor": {
          "ref": "bd2fc3d5-c6d4-4057-a4f9-1bd3bb24a765",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1022fb10-2706-4aad-972e-5d9d87f095dc"
        },
        "item": {
          "id": "c2f123c2-06a1-42d7-ae88-20979b17553c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d8620e84-291a-4766-810d-06cd638ed25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03062bc3-6e83-466e-b41d-0230ff07c156",
        "cursor": {
          "ref": "21cf0aa4-34ec-40a3-968c-5a1ece731acc",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "dae93acd-a6e9-4f33-afe5-01735b2837bc"
        },
        "item": {
          "id": "03062bc3-6e83-466e-b41d-0230ff07c156",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "735830aa-f24d-44e7-825e-2dd8e10bace8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa752f2e-35ab-44dd-bee5-03b924955c4a",
        "cursor": {
          "ref": "de16bb1b-d1f9-4993-8cda-9ec2f4bc4c0a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7a038349-de93-4c24-aaa6-438e76e83ee6"
        },
        "item": {
          "id": "fa752f2e-35ab-44dd-bee5-03b924955c4a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4a1b4bff-4edd-4063-9db5-036a08600104",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcd0424-ba3d-4817-83b5-05be11f1e699",
        "cursor": {
          "ref": "6d92f61e-0252-420a-8575-e9294abbcb21",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c4a504ba-ebd4-4b51-acea-bd697b83ddff"
        },
        "item": {
          "id": "9fcd0424-ba3d-4817-83b5-05be11f1e699",
          "name": "credentials_verify"
        },
        "response": {
          "id": "45c6cc85-fdf2-4f04-99df-4e11e1b82aa9",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c3f4d8-94f6-4259-b34e-ce94a45d32e1",
        "cursor": {
          "ref": "2aaf80fe-ba58-4eb9-9521-1c9386e9d79f",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "68a9ce89-115c-4464-9862-e506865e6cca"
        },
        "item": {
          "id": "83c3f4d8-94f6-4259-b34e-ce94a45d32e1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8bf0d572-7873-4a22-8816-8128d71ec65b",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6862be-2ada-4da5-b4f2-1b88b4b73966",
        "cursor": {
          "ref": "9e6895e4-2a8a-49f3-87bc-f0a95bd6e028",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ec5976d1-b220-4a13-a7fe-819f64b90b4f"
        },
        "item": {
          "id": "2d6862be-2ada-4da5-b4f2-1b88b4b73966",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "150cce91-72e7-4145-b208-8c7ad7a3f571",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6862be-2ada-4da5-b4f2-1b88b4b73966",
        "cursor": {
          "ref": "9e6895e4-2a8a-49f3-87bc-f0a95bd6e028",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ec5976d1-b220-4a13-a7fe-819f64b90b4f"
        },
        "item": {
          "id": "2d6862be-2ada-4da5-b4f2-1b88b4b73966",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "150cce91-72e7-4145-b208-8c7ad7a3f571",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e78d0d7-880d-4373-9f8f-219598cb05c2",
        "cursor": {
          "ref": "fa1884c5-8e96-49ce-8d3b-b47b6ec85c4c",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8e4fa5ae-6f1a-427d-ae44-d3c4238369bf"
        },
        "item": {
          "id": "1e78d0d7-880d-4373-9f8f-219598cb05c2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a34f2bae-0774-40a8-8f26-2f3a71b6a7e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f13f8f-48f7-4b35-82ea-d49c328ec218",
        "cursor": {
          "ref": "ab0028ea-a34a-49bf-b6aa-35d8184fe0fe",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "85f68330-6446-43f7-b60f-71db177ecfae"
        },
        "item": {
          "id": "46f13f8f-48f7-4b35-82ea-d49c328ec218",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "35bb8c1c-baf2-4b4c-be7a-16d4331af6b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}