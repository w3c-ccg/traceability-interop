{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "05447486-c88d-41ad-8e1d-2f4dcc8af20a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "19c260b4-dd06-417c-9837-7973a3512611",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b9bed18-5083-4cf0-b7e6-7d17e2ebb740",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b9acccf4-0ec3-4e65-87b5-85f67ba6d068"
                }
              }
            ]
          },
          {
            "id": "333d3634-ddb2-45a1-a7d3-d423046be358",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85928aa6-e093-4315-a598-0ab8baf0a767",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "769245b6-bbff-4d1a-8551-5855029297ec"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b07b56ad-fc72-4704-aa4b-f61f9c99f674",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1d8f9ba6-1cd5-48f7-b944-980f33fe6538",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eac0d94b-4e38-44ea-8ac7-35abc8712304",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66d2a0ff-4620-4710-aab0-32244bdd3be8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e5b0ccb-0800-4550-b96e-4ae00695928e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64757cbd-e7fe-4dca-be01-d05e432ae6c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7fb9660d-6cbe-43de-b092-5066dbdabd38"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8de8d04c-1450-4a0d-b0b4-3660f8922fb6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d93285f5-2d0d-41c2-8232-f2a1e1350fbd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ec7b43e-6223-4fc6-a20a-9259595a487d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bcf9fe13-6275-4ff3-8c22-d9d30ae9b9a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4edf1068-20fa-4438-aa6f-e56e50b78696",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16c2f172-2da7-4e5d-9e75-dc8eeafacb82"
            }
          }
        ]
      },
      {
        "id": "ec656ca2-6ef3-4321-b88f-ed02b4e69b19",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2a78ff14-b7e7-49ad-9a7a-8f52ec9bc71f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ae4113b-3f67-4671-af9b-434281e73f33",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e61a48f-7f47-4994-80a6-4cdd59844117",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0267580e-cf64-4485-88e6-7b8ad011bbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "694bcfd9-0abc-438b-942e-8d483984d1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ced20d-e417-40a4-a67b-e9a5efde6b47",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07afad8d-91b0-41bd-a746-7b01efd76a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b8e0ed8-4ca1-4aa8-b462-670e8d088858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825350d0-97b0-4445-b0cc-b9f645c83564",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e90af98-87ab-4149-b2d8-9e7125fea490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14c2a56d-8751-4b71-b363-c4b2648dde35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da0cbc6b-db8d-4154-a300-be18a6634905",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b03ba0bc-b505-4d7f-ae16-cd6a2ba73834",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d919b31b-9032-466d-abf1-e6c83dfb29c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d31e1cf-2b0e-42fb-a6ca-4cb4b9f62712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fc1645-1d6e-483a-91c6-2bab36cf3db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a569d6-2227-42b8-abd9-be6ecacd45c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5be94be-7c72-4936-9288-7aced00a2e54",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81ab3d3-5f00-4ceb-9454-5367b9cdb27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27fb2c2e-398e-4cd8-9d7c-44018251981c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1543cb6a-a738-4359-8ce3-da58998c4566",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ab4324bb-ff7d-47b7-9edd-65a721730815"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1c9ef37d-13d8-4166-9594-cebb37832ea0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "272c08fc-3198-4a2a-b563-59cd8da58070",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5880518c-e506-4c06-87f3-40e1a8ca61fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f690a0c4-5988-42aa-ad5b-3938aa9e2d86"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe3e8d3d-9b53-4515-a2ea-f7f8e89bb3f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "fca65ce3-0c10-46ef-ac12-6fcc29158ce4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c12a4b6b-80ab-49d8-a172-35718454becc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34a62faa-d30a-496e-9dc6-5df0e1d05c65"
            }
          }
        ]
      },
      {
        "id": "949906b4-a5a4-4d0c-8097-d5c840245c4e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "721c116b-93b6-4568-8cd4-a4504d4bdbbc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae9db63e-d53c-41ba-a3fe-fa19984f7a72",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2ed6bea1-6f1c-4489-8b3a-deda6fd478f5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d71897-6383-4420-b67c-0ebed1875cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e1e4d4-1ddd-4588-9da6-61574246e6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72067499-073e-4671-98ba-0468db3e592d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41ced997-7579-46d1-bff5-3749c242edfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd5423f-497c-4695-92bc-04d8d1bd5dc1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9598f6d9-d44a-4f16-b034-12ac8e36ee05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61528ec0-b20f-4e94-9fe6-5fb7c0fdcb06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6886f1bc-de9f-42b4-8b5f-2688977a9732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f0dccca-4714-4c4b-a74b-ca71b1c3096f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b41b88f-d28b-4824-ac69-ad3118144b08",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d8650b-5f1d-4edc-a968-8f8caaf65bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661c81a5-04f1-4721-95e9-5de5f00a53dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bec110-7a4d-4f28-b4df-081a4131862e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d956829-48cb-4dc0-b844-621165bd62af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc42c73-d642-4692-810e-197792f494f8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b726f596-2de1-434f-8cb2-616da128b857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27d286b-57df-47a6-bae9-1764324f303a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1710e1d5-5808-4940-a729-51666f390679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c520960-b84a-4d0c-85a0-9f85f7e371ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58900133-5b14-4695-9585-ce9ab0058478",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39dfc77-6f2f-49af-b965-84a81802a3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1913f82-7b72-4f5b-9aff-90a103d2a2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c268153-2abb-4c0e-882f-118ff4637a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0333d575-ee30-4547-a06b-48a3d1b06b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3364744f-7bb3-44c2-9db3-6a5a462d4bbe",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12133954-4c3b-4c78-9d88-91040fc1b8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b0a266-5e03-46fe-8251-0c6a2a42deb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54eb8515-7dff-4be5-8bbf-108799e7ee77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5992f6ea-3d88-41cd-a3d6-3554f569229c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab6f8e9-dfc2-4a46-9206-512ec1a9e687",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfe20f9-697d-44a3-a53e-25b671b4f097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb56a992-5e37-4a21-8ef8-d152e6b95afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b99199-8ad0-42bc-a8c7-7da9df1bb791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "480f3a5b-2977-4eba-91e4-8e7eabece1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcab4a69-a541-4946-85c5-75c32e6bfce0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5230ae2f-5b66-4ce8-8176-bb9899564a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b6dcea-e100-4585-a198-f019f874d184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d096e417-1ae4-4bf0-a0f6-b425d4cd14c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f9f7236-5ca6-46c8-8e4c-9eca3b6c3df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b82189-3eff-4f63-84d2-df7b61a4263c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b72280-07b0-40c1-951b-f2271e63f657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b40bb7-5b84-49f2-8f7b-90857e7d4539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc65992-6236-45a9-bf11-ad91a152debb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "208db931-7361-4c8f-91ce-197cf08a8323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aeb703e-f140-4e7f-a00d-d9f0814c19cc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1070f85e-b661-474e-9692-17fbd733d005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10dfb853-b323-4a5c-bbd8-6170986d0693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc635814-614e-48aa-ab7f-d13095eb0240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f136ec3-7508-4ce7-b80d-6b4be0aeb929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6d84d6-92eb-4136-853b-d166fa857676",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b55022-1b0e-4c9f-828c-fc7eda730cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d7a22f-4add-4033-96bf-ac90c6aff921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650f8ceb-7cba-4526-864f-3a2aacc1ce33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45a56078-2cae-4b84-9759-0c9c105de7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c1357a-561b-46e4-9da0-2a87cc0cb7a1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56357bf6-7bdf-4d66-be1d-7ffac27164b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6b1050-d340-46ab-a9e7-457559e079af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7c7aae-ff37-489b-b843-8315752486ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93814194-9007-4013-9396-e93a8fc39307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a9d39a-8233-40fa-b06c-f2ad9813ffeb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d41586-194d-4281-b731-69fba2c67ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4a7b22-3b8a-4ef9-a3d2-f756e7326d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83fa71b-2185-4768-9974-038f3ec06e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30a3c688-1f04-44c1-afde-ce6e7f2ffc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465bd9cc-a176-483e-a900-c8223a0f17cd",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512f9815-6a48-41eb-a238-a5b8cb980ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1977d428-6371-47cd-92bd-343f1e43e291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092df434-cadf-4b5d-9ab6-b50b48a60575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "530256c3-549b-474f-b16a-6f60e065b959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c777449f-3ec8-4fb8-96c1-c212483fb888",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0702ba-105c-4b8c-86d3-27e5802a6822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a00d177-3d51-475f-8a21-35de12eb64bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7d3c71-dbf8-4ede-9a99-944d1b401326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea1cac5d-bff4-45ee-95b4-1a17e124058d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4795eaf4-c797-4d37-b762-893d8567e02f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a52cd5-d6eb-474d-9141-d93e89be67fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2c897d-5249-4e85-97d9-84548ee2a51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a1bd6b-6001-483d-9e7f-cb839ff99aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b3ed72e-4189-4a0b-97bc-e6f36e670584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977e620c-52e2-48aa-ae58-199cfe4ed00c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2b0cad-750b-474e-ac41-5b417b9b2ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2f18da-c837-473e-8059-2fef1881e05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e907f5c6-9ac7-4f79-bce0-6ce0b25611f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2094132e-fe65-4bdf-9d9a-78b66f09983e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb5ec90-a34c-4192-8b6e-273e8fa8b971",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8942d354-e70b-4eea-a8cd-cbd3aff91455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e312631-488d-48b5-a603-7e437a267ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafa17e4-2306-4e7a-ab46-02b93f0e2d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee26746d-a7bf-43bc-89c1-2c31c9bd38d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dee1be-aeb3-4029-869e-956d08e48868",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26502127-f122-4a6c-981c-3f29e4bd71bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2dda113-9d2d-40f7-abbd-cc3322f507b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb5fc67-c89d-48e5-b79f-fa5fc5e7f13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7f451e8-aff6-47e7-8f3a-6f78175828fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aade649-7f30-4be6-9ab9-94d448f9c617",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a676937c-172f-4407-bb17-e01c7d2425f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6bbd5f-f1ef-40e3-8420-25599f77678c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34111c25-0fe2-4932-996a-c9ab4122d347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf68609d-bfab-49f5-be44-0a3ebec2a837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd78368-b1a8-40ef-b173-403a2a3aad8c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5829cc0-7d04-4674-a4e3-71387dd06ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11df0e85-e6c4-4a1d-a68b-513cf5154c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a70c023-6510-46d1-ad8b-4b5052465a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d43a9610-fe02-4591-a898-f86ad0ee10a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e71c07d-67d4-40e5-9605-a084c0d5447f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05087d6a-38b2-4265-9e10-f4546d66bac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386d907f-94ad-44c1-8ca2-4296355a93d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2a5b86-2d90-47b3-ac98-a357bac62c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53b87645-1c54-4625-bfd6-f7feadf682e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfff80c-56ae-4326-8884-f24f29ef0ac0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3073bfde-bb7c-4a34-8c2c-9d6d5422393c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cc0105-a37a-4214-bf44-5dc273987927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9ba649-50af-4427-a14e-9e3af1719692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6ea452-e6bb-450b-a19a-a1ebae1cf063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d5dde3-32a8-40fa-8e12-3bf7fe49d6d7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca3333b-5a01-4613-9f35-cc86fd6be06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef83fdc7-2e81-411e-9217-f8732cfa7784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c797e2-da78-4a03-a26d-4e38d08ef911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d79792-ba77-4fc5-b984-a21c9a3c6b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26cbc5d-ade5-4a04-a509-37c7c1b6a0c7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f411a3-de02-40f3-a095-2fd7dc6995f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad9348d-24e2-45ae-a598-552c4bba6b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9906e590-e839-47ca-9e8c-db3a6d8b7cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "165b8669-6e3d-4410-a49b-b56f645a7541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb325493-0124-40df-aa1a-ebc7d9cf42ab",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50122fef-952f-41f8-b40e-fbc1aef0659e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db87ddc-f4f8-4938-8a78-cb79cd08c16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287d7c5d-578b-4e5f-aedd-d08770067160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "40370e38-f989-4630-8bd3-13417bfb0542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e823532d-9b5e-47f4-a7ec-455b6b139a85",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eca84cb-ff96-409b-b305-d5de1e63eee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a72b7fc-61e7-4862-afac-04f8e28ee45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7144e2-8c27-4f9e-976b-f33d27a8f914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "888165b3-0d8f-4e0a-974a-b8d837a43ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab63a64-5756-474b-84f3-909096c0342b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7659239-5ecd-4083-97c5-01eee421d4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fb9a7c-7193-45a5-aaa7-0c992f4e5275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a3c63b-cd73-4801-a1d2-9acc73fcb9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "210bea4f-01b4-40af-a4e0-be161fc378fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033b5e5e-6e8c-4fd9-8d6b-f563d577d177",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaeb3ae-81b1-4d44-8bad-ce2342458819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4169e979-1f4e-49eb-8b2d-1c2cd1330eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa294a70-7a66-4373-98a8-fbeaaeb5141f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1558d037-87fa-4a59-b37c-3161ebe4fded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9719f05e-1560-43cf-befb-e2b67b6b2d75",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b197646c-1d66-43f0-a1fb-b22fb02a8e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a130dbb-041c-4212-b2bd-b15390e44d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8675df-dc2c-4c97-8b3c-9e6a679503bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "372a4d93-d2c9-4162-a881-6f303dd35eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdd6b80-9817-4666-a254-6efd64df4593",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d80708-808d-4819-ad7e-600bd6ec1da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567a8f01-018b-4e28-bf98-e6c235b44d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cec38a7-27cf-48b1-9c5d-609116f18b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c995eff4-9fc5-48e2-934e-1468862c18cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1868189e-1bf8-4851-b023-566365213ce9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0310d29f-fd7c-4c9e-924d-e022cd9fa4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71483933-ebff-4968-aa8e-979bad35a096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7210570-070d-469d-a8ed-bbf68374785a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "06a97b8f-09a0-424a-a757-a6c8ba744e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cedbe2a-fd1a-4495-859f-a820b0c9358c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60013523-25ec-4001-b9b0-6c16da12fa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0334c683-cfa2-4c6c-9f8e-eb4e4a5a1d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f302aa-61a5-4ff8-8414-345211451e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaea41ac-89e7-4e1f-a106-f9b03428e24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439f71bc-d144-45e2-914c-81c4ac6d999d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd968b0-5e66-4f68-82a9-df42e829e1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d235e3e2-2a59-414d-9845-5ae6bf2f66a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fad924-51be-42d6-bf02-21b854b9a968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b40e065-d487-4e83-9b8a-d6f374544d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7c3d98-99b9-4632-b0c6-ae9b1b284f5c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f5cd92-6bd5-4a05-bc01-1304ff7989fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e111b64-3f94-40b1-b7ad-6676cf5cee5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae9eb14-007b-4f53-a975-e679af733b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d1d42e-3c5c-4426-9d43-c10972d02722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dc2d91-cbd0-48ca-84c5-ae0510d52206",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63312b39-67bd-4c49-8f81-91dee4db59f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae56838-4419-44a3-954a-091aa98672b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4b0f3f-3fa7-4d46-bd14-350a79e63b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5c3f47-8c04-4093-a4c1-29f08d76242c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37de5801-b337-44b0-b015-3b946ec83d1e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c107954-bc89-4873-9853-692423c863ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de68158-68b5-4127-9b01-43ec6dbaf12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6971831-5716-4ce2-996e-478ddbd28829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e79a3227-ae75-4536-b647-30c7894dba1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8917c64f-21c1-4eb9-bd30-3589392fa22a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562c0059-707a-4a7c-bd42-7e884555334d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba9e61a3-a181-46f5-9c14-c8eeda39c77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ac47b8-ff94-4a64-9507-c56a52c4f121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8e9e9e-3b78-4221-80bc-2a0a93055f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a28a56b-fa3f-4b02-825c-01957ac1bf81",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c398932-2007-4bd1-9e4b-640c9be7767b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3427b68-d526-4bb3-95d9-364f2f974797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46796702-bcae-40cb-87ff-60933b62386d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4de6e30-878e-4dcd-8d0e-4acc32cded63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c38651b-e86b-4b28-be5a-64bd52a86a05",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8511e8e3-a548-4e71-8e49-1126d0d5d883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2672860-707d-4595-96d0-6f0ab4f4c806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617c991f-4e39-41d0-89a4-89b5a8539ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2d8d97-47b7-45ac-86de-2c624ac1a4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7470b19f-c46f-444f-9114-88b805b68d6b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224a33cf-15da-49ce-b07b-2a57ccf8a1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b05d69c-f151-4480-9da7-6ff99940a045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83301a8c-6b3f-4e9b-8dc8-10403f77d3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e80b471-689b-45f7-9fe4-94183cf97121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979a8a9b-5683-433a-9fa3-33c2e1d141b0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f26211-c86f-4fb8-a46f-802ec5744640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a7b8d1-2f3f-4a2e-8f4e-9bd64c5bcad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21d41b3-b4b0-4814-a2cd-8c509e36153c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c65cfe-c3bf-41e5-a890-776d96a97447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a6cd68-c905-443e-8dd5-e62a2e9496d2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1043ab68-0f93-488d-a640-554fbe52b409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d37ebd9-3d13-422f-b501-c83242b763ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135b1752-aa0d-48dd-abf6-b0540c05126b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f1abd5-1edf-4ce5-a49e-a98b8d772585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a378c17b-b5f2-4147-b34c-699b477edc3e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76ce761-cbf6-4ac9-a42b-e5e6436a71ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295a5546-f996-415d-9af3-f333a2bcf866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b63942-dc60-465f-b604-3e3e0fd7ccd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "90d12922-c779-4c1e-8493-f718ff06f8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a5f988-df71-4dc5-91c0-2fc691ae22eb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e836d7-647e-400c-a382-e70d335aed35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812f8b86-4d00-4a5e-9dec-f0275b1f82f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22ef988-a665-445e-b7a5-862fbd7ee402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa57a7e-93f8-4698-9d1c-2c9fd11bd1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fa4915-ba48-4d6a-889f-97e18b92f6f9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3235a1a7-66ac-4fc6-9fbc-8617b106276d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8966d036-f891-4c7e-a168-980e62476778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb3a0a1-73eb-4ab1-91f3-65bc8e817724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e51f831-d939-43bb-8c55-3324c6f42dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2c050b-ab41-4117-88a3-b1aa36800699",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5b2818-b8c4-4ce1-832d-4421aca650a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0519d5ae-3c58-43ac-a63f-125d01826db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9df1a29-b49a-4a11-a72c-016cdd7cfc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3051fd62-aedd-4645-aa9f-1954c96db69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa011ca-2de1-4c99-9caa-5dc8190da430",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2edaa0-8bf3-43a1-a662-55e8b5f6a280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e05cc2e-c7a5-4b47-a803-e7ec9e00b951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e9b4bb-d4a3-4d8c-9c10-eab6e750d44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dfc552-f355-4d4e-aa73-d1cd9b037a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70996e52-9231-423c-b570-0717571ed7fb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375b1774-b1b9-466f-8e04-44924c476e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1b79ae-45ef-4b99-8dcf-b9e9c42853e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fff484-814c-4816-afed-dc2394b3b2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06b5166b-00e4-4137-9924-f2832e42479d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e7ed81-2322-4989-b0af-dad7829ee5a4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25be7f9-0b0b-4655-ad9e-546253d7c6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36131f49-1136-4b88-ad41-e0c2ae8d65f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2945784e-bf68-435a-91ec-57aaa83b9a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0739f3-6c73-49fc-98a3-46bed7c53444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa1e79e-25ff-47a1-ad10-d3b185b012d4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26b07c5-dbf4-4d46-91bc-7b8ac7acbc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead9d014-38cd-44ea-a7a2-e814437149ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a75c962-1f0e-49c1-b2f6-2873fc1e2f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7746c5-4f14-49fc-9dd6-92a995b57972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac0776a-fb74-4e62-a093-a9f15a1f6ef1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b69869-93fc-4609-a899-d809dd2b63a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf684c26-37e0-4ecc-a3e1-6b465294d19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c334d08-03c4-4172-b9e3-567a9294f68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a59edc1e-acf8-4bdb-bcd5-1df784ea51dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87401561-35ec-4b50-8ff5-6292cb257e33",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7bbc1c-6e11-4bfb-8d5d-a364a7d94090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb7ca0d-1dcb-4c22-a1b7-6b63b9880e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b028ee-8c95-4aaa-bf93-241b8b75b4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6090de58-da19-4bf2-b552-9384f4bd8348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee3893b-d9e4-48d6-b5c0-384d3eb5237a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc00576-49c3-4653-bcb3-84f02018a0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52727caa-aca5-4018-8271-73aaf0b14d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea663e1c-d567-49f9-8a89-27e0b445c8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4f8fc4-193a-49df-9684-37723fdc1245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6481530c-f303-4439-8c07-dcc2619ff988",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d85f1d-bb93-432c-b0bc-20d491ccb474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572c6587-a5f0-45e4-adf3-51c1123759ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4b10c7-341d-45d2-aa10-859d2a4dbba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "599e0f22-8c84-4956-b7d9-b6467c0268f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22a383e-7b8f-4cb2-864f-217366f0794e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cefd76-afa4-44a9-b0cb-af4e7e0359c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbf3e37-584c-4731-a9cf-435b89fdda83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52309c4b-f2be-4604-8b3d-8a41372bc61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0497b7bb-de46-47ad-84cd-d4b6a83b06fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfa7e8d-4988-4505-9fdd-330f5232eef9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b783443e-fdb2-4301-a1ea-13f1f68bd6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d865acd-e9f6-470a-ae6e-f53805e1059f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39366c7c-e902-419a-8635-e9e894df5b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac8eeb0-5db8-4e01-84d2-5a9ba14f7206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9105ea1b-2a9c-41d5-a517-791834b757a9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b69a1d-d6c5-4964-8bb2-74159ad16a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650c55f0-5d1e-491e-9266-0a98a78f57cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4ce647-0eb8-4bcf-8082-696b3ac5d630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9195a065-03cd-46fc-bf3c-654c5745a955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef10962-d9c2-47fc-87c9-416b21fb9a34",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d9061c-a0c9-44ca-aad3-fb0db26430b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a03f9ef-9b68-47ac-864b-305e3c95be8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dcccb7-afe4-4996-8068-9f319cc0437f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "01726b8b-57d9-4f39-9f7b-e95ed7066229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0027a44c-28b8-4766-9594-4073d0383b47",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab24545-2d3d-4f97-9a7f-7fd2c4397c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6f12d9-dce6-48b3-b81f-59bd02c65f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9f1724-ef8d-4eba-af80-bc7298d15e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "da175fd2-5677-416a-8338-7c2f2a9dee99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62b5679-0090-48d8-8d3f-b252344181c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac87b27b-83b1-4e32-9162-d711eff828aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95421ada-29ca-4be0-8109-2cdd91cf79b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456251d4-9792-4ce2-85ed-eb48ed2d2d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3356920a-7a42-49d1-88ca-149bfedde02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e938e5-63f9-4d29-988a-089dfe310cc5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3442dfb-8da8-402d-855c-d40b650183e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ba1d39-466b-48bc-b8a9-5d547c2da789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed4c3f2-ea68-4b7f-acc9-a48698159423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "66bea06c-c2a3-4e3a-8b6b-5cfa65159e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1fa605-042c-44e0-820c-3c7323071c7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db30725c-783c-402c-a07f-5fbe2219265b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7bd52c3-cebe-46fb-b13b-b7946485e57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca935cf-5cdb-4245-8d5c-a85ffa180c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab73762d-29f1-4d9a-9059-f383ce63b51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47802620-d5e8-4a7a-a8ac-ea0c93485143",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830b9826-765b-4b4a-a8f0-8cd9892db503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4f7193-ce49-4efb-83fa-34adfa1a229d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77683836-cc63-49e0-85d1-bd660c2fc526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9613c2e1-7bb0-4daa-9f07-ee335f2dfbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387ab8cc-c2a3-4cca-ae22-9134c6203679",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f3daa4-94ad-4d44-8119-23a1fbaad97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bc6564-cdd4-470c-84bf-4b2dd645f553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79d86af-a33b-43a9-b488-ca8180fd56c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "abc3ac21-dff5-4de9-82da-b9865b9c98a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5c2a67-6949-4de4-9708-0b54cab9be81",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4a0b4c-e380-4732-9915-fddcfca18731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38f2222-23ee-44e2-ae56-4bcb6614375b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1855e75d-d66e-484e-8870-f80ce34cef18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0ed586-9083-4cfd-a89d-060b8103497a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe811ac-0837-4660-ae65-ff0eb80a5b0d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e89a71a-3d7f-4bf1-872d-1e28194ec790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbadf506-7d51-40ba-9abd-7c1f8682719c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30932e11-2596-4322-b973-13df0370051d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e63c4b39-a58e-4bba-aa09-ac328dd35a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f583cba2-15a3-443c-9172-65fef0a66cec",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9502d7-2eb9-4130-a0a3-73226f3dbc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2610887b-bc4d-44e9-b090-731f15def155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ac6582-c60b-480b-b522-d78dde62df28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5929bf13-b6a3-4da2-8822-523adf3c8d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d86a86-0e27-4f82-b240-4f1f45e1a952",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00166c8-c8b1-4e3d-946e-86885d08e9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41f6ae7-b7cb-4893-963c-1a76913675a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7ccb1f-dd87-4d8b-95a0-3c19528a2952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6172b13-4b0f-4cbd-98cd-f2775a7bd588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b012c23-b7c8-4dea-ae1d-c8bb8335a236",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b881cbe-c350-46ec-8b62-8f95c3913019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555c65a8-604e-4f4e-acbe-6d3dc0f91172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbedece-1a24-439b-b67c-f10f404cf3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ecd9140-a9c7-4de3-9116-233ff367dc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091d242b-325c-434d-9f7b-30ea0547c34e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bcde78-ad1d-48ee-b197-0d69687c8172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30e9c4e-35c4-40ee-9ea2-182e95219f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22467a8-236e-4312-98d8-4c849804d9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7d0aec-a8a4-41e5-aa5c-02fc9c4587c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d65c9a9-2489-4633-a2ba-818df1907ad5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853214dd-340d-49fd-8332-d6571a1402f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc27fb28-c1a0-42e1-90ca-bdc77ff34581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab61469-77c6-4b8d-8a5f-ecbfd19938e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1296dd20-05e7-44b8-ba68-b0eea97decc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8a1c48-b0a3-4d63-85bb-18df65591b28",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca72e3c4-eac8-4377-a48b-6bad04740cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9810b8f7-1598-4ceb-a05b-204cdba1d7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d8051e-8be9-4363-82eb-c3d204c6c42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f680bb-0d72-46b6-aab1-b54250dc61ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dbbdcf-03e0-4814-a1c1-9eea1fd9b114",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef65b1c0-30b1-4441-9071-bb197c18ab64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ad3841-a7a3-477b-a9cc-b0a115f24229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52a1028-c14b-487f-8124-9bbe7d70161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8dcd1b-dd97-43c3-b2f4-f2ec1943c45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43be24fb-b668-4206-8bd7-7938ffddef24",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b41f82-1ac0-445e-a0b8-931765942f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780dbd35-2660-4e2b-94db-b07ec30b39fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ea1d49-7739-4e58-ad06-9dcc77c3426e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10cb2234-2d4f-4d49-9558-72c3dd875135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08848ba7-022e-44a6-a6dd-1f688036d22a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f561d4c3-9223-45ee-8195-c3cd591cde1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6e5a07-9d84-40a2-a6a8-c84a0d6cf930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036388b7-1998-42a9-93fd-90a3c0ec98e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad42fb2-b5ff-4d10-af8e-b7cca2b06db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e30b8de-98ee-4088-aa0e-171945267956",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889091ed-5895-46c5-b082-d4f93143195a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb75a03-c435-4ce5-9682-c9480c9b7686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346e62a5-a69b-4e39-9770-ae461ed74ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab54e0b8-8d61-4625-b540-3c78a70e3020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb103505-6b6c-432a-8c95-356094788991",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2bf0e0-14f7-4176-a843-31c3c20d8020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19010a11-5a42-4a54-ac6b-1d754fca50eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c319eb12-2988-4bef-969c-403b0dd103d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe6bee0-54ab-4bd4-b803-aaeb6cd4525e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3768f924-d05f-451a-a7a0-ad1ba6cc21e4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d833ea5-497f-4474-aac6-a92821c6b05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be10d40b-2017-43af-935e-5c20c889be3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08efd871-e1c1-4405-8c78-7aac3a407e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff922f35-4c7b-4c67-b367-e7353f90dded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e84b94f-8858-49c9-8a94-f8633f356124",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f6beee-31e2-48b0-8a80-65e391a40aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6eb58fe-8c27-4102-9d35-162ee8b6bf2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579c3b23-8aea-4b6e-a95e-bbb42d2a1e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "653ed0ee-a9de-4778-b3c2-e2af36f232bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f9f0f7-d8ba-4f8e-a78b-f28264b3adb0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e8c7f4-6c7d-4e97-88e7-eee1d692d678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150ce259-af5d-4254-9f9e-cfd5ab5bf330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe73a64-4550-426d-bcac-2c90c7aefb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2379739-25f4-4dca-a9c3-f0c03b6b4fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25169256-7545-41e1-8034-67823c750478",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e65774-c725-4187-9d45-4b2aac58a950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce03eec-0063-4e74-b7f8-8149c6d952a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2ba8e3-98de-4f23-b78e-49f4b08a2b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "efdc3052-04a3-4526-9807-a6e9ea5dddfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2596b6c-8cdb-44c6-adba-2cb64e3276b7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345a8570-2771-4abf-b05d-4e4bd850731c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a207ed-9ba5-4c98-88f5-f4b0c5b93fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604e7481-f84f-454b-a825-4ce6262d82ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f44bca3-16ac-4980-8143-f4f62bde6466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c419ce-6dc8-4516-ba72-5aeb2ae294f8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397f2e1a-2dea-4376-88ef-dbc8691c666e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbb843e-ffe8-41dd-9051-daaa131f4ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bcdabe-da40-4152-8a25-5306a4037e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "163e953e-ae3c-489b-ba4a-d91bc788d46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a71170a-362c-4c83-9f8b-e086d012c25c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd09c3ab-6491-4dcf-9b16-75ecb3dcbce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f748c8-13dc-4f70-9146-5d78f401d02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462e91d9-62d8-420c-8f29-c6b712541e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70c617aa-6c3f-4356-a1c1-0828d0953f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cb03c0-69bb-4c90-ad69-384bcd759b7a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36357a38-3947-450c-8ab2-506052a7fdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7907efda-c678-49dc-be9f-5f4ea2e8a95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d254c65a-3484-45eb-876f-0c849f0cf809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f490fc8a-8cec-4803-b4fe-d0cc20ad8ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60ca38a-a299-4992-adbb-98e85905b981",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2770c5-6510-4071-b5aa-5aff0712f6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b194aaf-8c66-499c-ae1e-aebe176370c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639f4bbb-fd01-4953-b019-53a56edc6c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "930551b2-297a-4d43-862d-fb9817d3eaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f94cdb-5ae5-4e4f-bc5e-7e20a00739b5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac86cfc-cf74-4292-8de8-f1905c4a5489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976781cc-fc88-4557-be86-b35cac89527e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d094105c-27be-407b-8bfe-cf0cd2698eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e4199d-93bf-4076-a92c-38e5e354661c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b9c01b-549e-477e-bfea-abe837255748",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91a8d5b-04d4-4fb7-9ef4-81c68f065a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6e1ef5-2288-400b-95d1-f634f4a51dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eff78e4-2911-428f-8caa-3bcae4885459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "27be185c-0618-48d2-88b5-4722c7827ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded52a50-70c2-4f62-8674-85eaaa285f2e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67eed712-5d75-41b8-b4f9-eb46c687b876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2129f331-2ba2-4967-93d0-4386a283f465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3073b873-eae3-44dd-9062-2d2a6928c95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3538776-03f8-4e5a-95b3-d545b385ba8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe31db65-a885-4e35-ae0c-3fa129d3f74a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5d317e-04e3-4b93-bc12-a8ca98c898cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab04631-9ddc-42c2-ab94-7e1861296cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14b0116-eaeb-4e6d-babc-f36e8effc476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26cb2d83-53be-4c55-9709-a1117121388d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7569cf98-812d-4800-bef6-cba173d9f29f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c7fae8-99ae-48dd-b37f-89f80ac55448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44923d34-b7f1-4cc5-b397-d677ef764a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9db8e04-b0fe-472e-9cb5-ed4aaf3f6f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3e0bfd-37ac-404b-94c1-13287f4f8c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a86889-f667-4449-91d2-9b6f5aa6373d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfcdbfb-aa94-4eac-91c6-cbfb34fd452e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5ae521-df41-4fdf-8092-9a4ac72791a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fcb3fc-964f-4ed8-90fe-324f7e88bbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6723a7b-e548-4b36-bfd8-a6bf26766e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cea5a4-e3da-4567-9256-a6a572bf3067",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cda2ab-ef04-443c-9109-c749c87c1aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8fcf1c87-9b18-442d-bd01-7e66710057d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666060ae-1007-4e01-afb8-b737629a76c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5926da3-a0a1-48bd-83ba-7d0f01102b3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9dd8098b-45e8-4613-b652-20cdf11f56b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be85bc50-6174-4e2a-956c-0f5f746b979a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231e9c01-995a-44d7-b234-7c48e9c31299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da7c3e62-3f76-4d57-83cf-b21f57cd7ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c72422c-ed0a-4fbc-827b-f007f5be7cca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "6b211c6c-314f-4a7e-b364-774476188784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c0efcb-1269-4de4-810d-84357dfc9421",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e96973-cc95-461f-bccc-f42c83aeac1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16efc982-21bf-4b3c-9e30-ef05c4a27bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca3b21c-f1ff-4b55-9664-c718f8b9e0f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e05056c6-c53f-40c0-883b-9c41fdc9036e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "452a5ad3-0830-4dc8-aae6-0dbb6c73a613",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7755ba76-7e59-4bca-ab9c-d4a53c59d6da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "667fdd25-48b8-4eef-86ef-bb5f30f657dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c83338c-bdfe-4f2c-8007-a6ab1e9ea66a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e2b5270-174f-4d70-bf4e-dd8969959fc5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "623226f7-8806-4cf8-8328-eb3cc58832bc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1fb5db1-5db2-4a92-bcc7-ce4d3d3c2c8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3597293b-7283-4cfb-81ff-9e11af966d84"
                }
              }
            ]
          },
          {
            "id": "003a3206-d6d6-4c7a-baf2-62e517986dab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64b9f1ef-3b11-44e5-8159-2d4b48e1ba42",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dbe9d17-b7ff-40c7-93b2-aa6eccfe81ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "049a0413-d4cd-426e-abdd-8c9f57d5eadb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41daf52f-d0fa-4893-836c-76911519d42b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79e8c5b1-9cb0-40d3-8e87-47cac874dc67"
                    }
                  }
                ]
              },
              {
                "id": "98093833-3c7e-4ffe-8df3-f8a78aea9948",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "280da34d-c66a-436c-8d0d-37dc038a0dcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0180f398-0c52-4d5e-8628-bce3c6986bd7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2806846b-493f-4786-8b25-9f69927b22f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16ad614a-90bc-42ce-a523-73a34ac7d54a"
                    }
                  }
                ]
              },
              {
                "id": "c44722c9-b5a8-4452-8d56-fdb55851e0e3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01e540cd-7e0e-47d3-99d4-140290e96226",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d396690d-38cd-436d-890d-885161bf2bb5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16599369-7e7a-4bae-8a3c-6ef19f40b0e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6bcc4c3d-f16d-49c4-a850-ff274142b13d"
                    }
                  }
                ]
              },
              {
                "id": "af6ecb58-8558-4349-bae3-f070715524f0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efdd09c0-e94b-4556-824f-237903239cab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa882dfe-2dad-4e4a-8992-09d98b7ce13f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0fbb60c-76a8-4425-8159-496029e7c010",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2bace6b1-ffc8-4201-89ea-43487b26595e"
                    }
                  }
                ]
              },
              {
                "id": "5dcb1ea6-c061-43c8-bcff-f426e69bd63e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4249be20-be71-4671-99dd-e3b442bfde25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6eaec146-73a2-4488-9442-526f23ddb620"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "485704d6-8fcd-489e-a1aa-05600c833264",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "19eb0468-f591-4963-b7d6-9869b8dfb55a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cab502c0-7790-4168-8414-92a99322c20b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b15b0ecb-c648-4525-9513-7ccd86f9bb62"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c594c824-cd11-4410-9efa-a3669141d6ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5981d54-0e85-45bf-a61c-f86b7002cccd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7a5f91d-649c-4812-bdd9-200b7665685e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "101e98cc-be8b-4e22-b4b8-a537562ac34a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0223d49d-a245-45fb-9d2b-0ac429f44651",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1327b78e-c6f7-4998-8a56-68d0e62870a6"
            }
          }
        ]
      },
      {
        "id": "7afc6c15-1feb-4c07-805a-6eedcd523e7e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7f72dea3-56b4-4b9f-bfb7-706310d99514",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de50a545-9698-4515-9677-81db0cb616a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b3cb5a0-606f-45c6-bf71-396667dc3546",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653e40e2-010a-44d1-949c-9f4c049847c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ea26ce-f81a-4df2-a730-a7b86cfbd7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4d8618-d0a3-4641-a5ac-d950627ead48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d14713-d0ef-447d-bfa2-fba7d970b365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2000ab15-ec41-41db-abb1-ffe62ec40ae7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f278f93d-390b-46bf-9e7d-100f733ae898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f61fc77-6073-4f52-977b-a968e1cc6d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7413d8-a761-4d29-9e3a-0cb667861632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d56355fc-3777-4e49-9994-caad437be101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845d3c91-1ce4-419c-b423-b7bf50b43736",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c8e536-950e-45c1-9627-d9163051b22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35f3349-99ad-4259-a4c6-3d11c015a01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0faa85-417c-4787-b261-5cf8c96bd29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9fe40a-1c90-478b-89b7-82cf32a6ae9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d49e6c4-c53a-48a3-91f2-be0882ee7fd7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d985b6-155c-4777-a7ee-60c68fd16961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc703e85-fec1-410b-bbd0-6e10e12a362d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bf9bed-9e8d-49f6-b3c8-4d0ae482f815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "936b7a36-7661-4430-93eb-b7685a2c1574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4b2602-d9c4-48f3-bdd2-e42ca65d1109",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1384f5-dffd-4242-b0c8-10023b006b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce14800d-9132-4f1b-9ab7-f3bdd2610fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282f1398-f721-41c9-848a-c4e2d259e591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2933d59-bac0-43e2-9db6-24354d45be37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f51a011-7121-4633-8bbf-81318a78175e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da60c6a-525f-4519-b350-ae1f3dde15de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5af5534-b743-4921-a93f-98d56b21941b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a915bc-c338-4821-8f32-5d17da76ab9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7412e9e-6a3b-43b0-bb6d-f8618c508f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e94ed2-d2b2-4fcd-aa53-ee4d1176c958",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c6c8fa-219c-4887-be33-3338f3929cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20665d28-38a8-44c7-8ff6-a147a60caa0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd93c3fe-d194-48b5-8e92-6e41fca06a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c68eca33-9480-4da1-b861-6ba8bc1d46d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb42c12-e5ce-4504-bdf7-6a1b4a268f4c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8001418-1bdb-4da6-bd56-2837b044f01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6026ff2-13c9-44ff-8fa8-fc825e853331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa4c79f-a444-4584-9f17-96d5b7a978cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90636166-8ed1-4c6a-af03-1e6cd84d8df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e314c9a-ad9d-43ad-8740-800cd3cd5362",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ab7001-7f4b-4587-b7d1-0090d8025bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8901789a-f3f2-4112-bb91-af3fbf1ea84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87875945-7b3c-40d3-b107-3a4ee1a18a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04717b12-14d0-4a32-a593-f9a41a4fc947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04a3578-e62c-48d1-b5d3-9c42d05ccf4d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3484588f-4483-46c8-ba6c-b3a0b82a67c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dda5f11-de29-4fab-a606-a3d830edd14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfce065-8ae6-4f0f-aadb-059191b84a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "927d294c-ec38-476d-93b8-2079b0211077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8797fda9-5184-4267-b042-9abd4bdd3496",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a877dac-3c99-4beb-8b59-cf748baa2952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76eafda1-0ea8-4308-81c4-ad421ce999cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27363a8-38f0-49b5-b201-1fd5190eef07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d6ebc9-8fdb-4320-be8a-2e468a763eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38158dca-6062-41a3-9369-3999376ad12b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeaa6055-d314-49fd-9655-73910f7cd5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9033faec-9928-44ac-98f0-7ce1be0ba178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38622277-bedf-474d-ac21-ac0171ddb9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e50f4dd-8c1e-45e9-841e-71cdb2efb83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f027a1-b4ad-44ea-8a87-1abe429bef46",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fff3600-34a9-40bd-a707-c6de82e2dd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff31c7a1-9dca-47e8-adbd-a4a0ab27abba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3337442-1913-44bc-b914-3e92746c202a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9439c3-bde4-4875-adc3-3819518df848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3a1e4d-ede2-4e20-9e6a-538bdc2a4e84",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdb41b7-53f1-436c-baa1-018b902fcec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7382e0-eb76-4406-8613-6cb8f43266dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f061cb9-d7c8-4e88-94d1-0d5bde82db4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca184ec3-4ea4-448f-b08a-934de413b4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdcde97-112f-4f09-9ef8-51f35a3362c9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd81673-886c-4ca8-b942-fe0a460ba259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d052055-a399-46c6-902a-6ecee84488ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c386227e-4a4b-4daf-988e-9fc104ac247a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "47691a11-a925-4606-91a3-eb0881c2e95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239be41c-0a76-4a24-8a55-e34f8ff45c47",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc189e9-d973-4398-818c-8750936717dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0592afae-2000-43f6-8a35-387056dc5dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e395a42-325c-40d9-956d-aee5669a28d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b97fd17-4f7a-493f-914b-5977e6308621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709ca0ff-1e28-450a-a937-fa25a5941803",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698af974-9749-481e-a2de-69de1eaf0b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4387253b-20d3-4542-bace-4611d0e9bd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e5e4c0-70ad-4670-aa65-4fc859c682c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd869dcb-6854-497b-9e1c-62b49e73a192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34118da-f7cb-4085-8eb2-1dbaa65c6d1b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316b71d5-f4b0-4540-83c4-07c7bf0d4e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2936cdfb-03a5-4e69-a543-302a3ff00324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a3f91e-ec0a-4231-8886-928451f81af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb8b4b1-0065-4170-9a1c-2b34371a2741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909b374a-586e-4568-9ab7-9f3d413d5bd4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09aee7b-c20c-4f45-9cef-f12bd77e794e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884babbc-395c-4fa8-b462-f158e233b089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88749a82-a401-4bc2-a12b-7690a3b252b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f86cc1-a408-44f2-a06f-74563f1b5140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5a59fa-a528-40aa-b7fa-13c2d2975ee4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08ebf6a-0070-4b0d-9d09-644267170c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43cf4ec2-bcc0-4698-a8f6-4084e29bb3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17692754-5ee2-43ac-8add-440439e9169d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c57c9c44-196d-407f-ad96-027c0b195136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5231c1c-7c1b-4ade-b4a1-383ac64810bf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002b765d-0270-4b5e-962c-8bae261920ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f92461-4120-4b47-9aac-453f4ec43f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28335cd-e3d8-4240-ab7b-45b4daa19413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a47dab7e-af23-4962-bb84-932104cab9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7881a95-a423-462b-9f22-f6f924a74144",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fba51b0-6e76-4eb0-9a49-da045e9887af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cd8493-a43b-4cb1-aa51-2c4b862e99bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2868c156-afa2-460a-b7e5-62dbcb69e28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe8af25-34c6-4d60-a244-03f1b1fb0b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e9b158-004b-463c-b3db-8e9f2fee41ec",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd4a8fc-3614-486b-93ed-1b3c1cf21f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb31127d-8422-4c47-a602-6d70b201a9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f77e433-abda-488c-96bb-e188cab35712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e905fd7-5e30-4a1d-b450-5d0487c7be37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dd43ea-b603-43fb-a748-840f6a412b4d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fabbbf0-2e8e-4661-a84a-0c97e1b640ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700db949-fce7-4a6f-aa08-4c88b0c332c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbaf493-d99b-40b1-a8ff-bf19f13ac867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0048fb8c-2ca8-48d7-99f0-d93ff0ec35eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c60bb7-0e25-4245-b70b-9debe6fd278b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561d12ae-4d71-4f4e-980a-4615d84fccd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0433b4-b71d-4f0c-b9bf-545827c1e9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27642119-1d8e-48e8-8a71-23997af8aff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e630ec1f-764f-4585-955c-2a1a48f2cbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6951eae2-2170-4270-8f72-bd4c1e80a802",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39813235-a7ed-40d4-aced-45381375658c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d408f241-e2f4-4782-8f05-c571fa551f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3827aa2b-19f2-4f65-bebb-7765b9254cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e170e406-69c0-426a-9d8a-e6f30fe6f3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4958fcee-eea0-4122-8b83-6f0cebdc7aea",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2261c694-80e0-4942-a602-5aeeae14b6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0bfdaf-8155-421d-a22a-4ee369227619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab224e73-ff48-4d8f-938d-1847c42a5081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8df123-1e5e-4508-9b56-d9e74441682e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f64191-aa9d-43e9-8877-caf17026656e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52913ee-fe3b-481a-9989-d6ea0c61582d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ad4212-1c83-4811-9820-da6dd9e0d0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff2f994-cefa-4ffb-8bcc-e708cc00983d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a0bc1f-3797-4d89-acc2-f883badb6df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6caa9e-6a21-411c-906b-1c95ed668614",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f15b4f-55e7-49fe-a023-82b5ba2a8b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64bc2e1-31d3-4d42-ad4b-ea50abee1568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c096efd-2ba0-43c6-a3ca-713de1e4e53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a5ba5a-c94f-49b1-9218-aff11a52c727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9be4e0-432c-46ab-92bb-b30ff8d21f75",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634b6fa3-f714-4821-9766-fe62688e1b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f774e19-74e0-4b8d-9165-00f2527a35ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220db6b3-16b0-40ce-b150-c95da55d3bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e774ea7-c69d-4195-a8f4-9dbb88c1144d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbc77a4-c85a-47ec-b870-b6fd9ccc2cb4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2443bd39-724e-4eae-8a59-d4037cd28d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0fab58-de78-4983-badd-80995f3b78a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1159bde2-7bcf-4a2a-81ad-e956d2bf7022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48b75ad8-b481-434f-bfcd-a645b7baa8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3213b5dc-71a2-4512-9604-0b98bedc8574",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731ebdfe-2583-4365-a9b9-f74d9684ffde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbe7738-2e6a-4f3b-8b9b-47e3bfed8451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142e32b6-db70-4786-903c-fe8f4d0c2e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b49350d3-e939-476c-89ca-01c555916b85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0799e64e-2e44-4cf0-a187-dce303f4742f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94117ccd-a93d-4147-ad0d-172074d63574",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674eff04-7c1e-4f7c-8a08-a98398dac169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f0ff68-74dc-46ff-8980-e2d20d78e313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b5797f-de8b-4bae-b940-c1d1146b6a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5b69557-bee6-403d-b372-9988a5365f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6a9551-372e-4e86-b972-1f877721d1ca",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fc45a7-02f2-4cf1-9c64-4661be06254f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "af0f14d0-d288-42e7-8ad7-2edcee8806fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c3bfe0-c8fa-42a6-aa5a-af44ddc563b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b63675ad-dadf-4cb5-8a9e-fcad62eefeb4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a38e3dc2-3891-47a2-a8ea-9beeb0b320ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77b0fd91-4ef8-4f44-b147-83347587176a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ee64535-1564-4c43-92dd-93f31d5a0129",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dab09f9-33a6-455f-81c1-2885ca3a7bde"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "597ef50a-d5e8-4e1e-84d7-6116d5b272d1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "45c6fa90-50b2-40f8-9720-784a168df0c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1371160-2d75-4a0b-b707-8ad746c01056",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c33cb091-cb11-4f72-993d-e102be83953f"
            }
          }
        ]
      },
      {
        "id": "76fe0dbf-cf27-42f8-b2aa-9b70ad3cba1c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b1e5c4ce-8a15-4902-84f6-bdaa2233ec0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0d0e47c-bea2-4fd8-8cfd-732016adbf1d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fe046b27-e203-470a-b896-2462d38ee487",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fd2e23-a60c-4d49-95a1-58ff3e8850af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6868b9e6-2291-41fc-8724-003ed0a810b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5c399e-814c-4c4f-8583-199d2b3319e6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dc5211-ce02-4bea-a7d6-c9104be38be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a1a0f8-439b-44ff-bf51-e18280d2a777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845a126c-1485-4638-afa5-8be55abaf8f2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2768970f-3760-497b-af16-df62b70f13d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d257ed-b717-426d-a25c-a150ed3d3085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea8d632-8711-4c17-a09d-17a631e3696d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ff32f2-3bff-4a17-89d5-3f02a21af0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4eb2535-5b02-4e55-b6ea-6d946eacb38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709c670b-b3ed-4a89-bdeb-0094780423bc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c31ce83-6813-4fae-b1fa-1f8818ebb28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b192951-4213-48d5-8c0a-e28e9445d376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d577147-be75-46be-ac56-e24923128af1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d1ddcc-9bd5-4150-9041-5e6ef0312b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8318f7e-d9c6-42e7-81ae-94907d15b8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b8c55f-ae87-49f1-b045-8c261c6fd2d1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051024c0-cc72-4172-a440-e54f88734dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d702a2bd-9366-4922-b120-f3cc9a49ef16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702462f2-7aa3-4e0e-a29d-6791cdae78f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48c2afe-6e3f-4fea-a161-f1b825c2b7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141269c1-2bca-4d1a-a751-5a5e9f1374e2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49a852a-c994-4869-aa32-fd091e1052cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a24e40c5-26fa-4662-b39a-a67acdb3e2f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b683dfb-2dc8-40ad-820c-3ae705706e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230589e7-7fd3-49d7-b7cf-fdd5a86d63ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d69c75-3f04-497c-81cb-51f34186140d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243f8eec-2e64-4cd3-97fa-a7252e5e749d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "687493ad-a5bc-4b28-aa3e-0e01dc4c8383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b46271-c303-4917-93dd-6f3e891bf835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424ee981-6884-4878-b9e2-a49c5f79d86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93d4c1d-0d6d-49ed-b202-96475f2db03b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1cd77d-e345-4baa-bb42-6f0395655ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3434bfaa-0a66-4586-8264-2bcee22f2436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef775ced-ca2a-464c-84cc-08af97d4add5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f7ca3f-c434-43c9-b7ae-f1399471b0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209205ad-cd56-4471-b613-7e005c7ec2e7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548063ff-3358-415d-8269-a2fb261985c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58f345b-9c02-4d68-85cc-3839a1e0aa65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cc944b-daec-4d15-8464-cb89f2b52d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c94d220-1d44-45ab-b036-1b1f016ae119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a04211-baff-4960-ad6e-ca84fe29c4db",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b245a496-11b9-4915-921d-5dcffc3438a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35536f26-5038-4a0a-acf6-17abac338a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551e0832-0069-4e37-9aaa-8902fa8bba72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b341c871-577b-4ab4-aa65-39d0b7382c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e0806f-d25c-4c3f-ab13-4165fdee6d08",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd80274-f06e-4d82-bdac-093cb6c7c98a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "092601d2-327e-477e-977c-8d82b11bd10d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8020fee-f288-441d-9105-1f714caafb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b324070a-9f0f-4deb-a973-f67107a4b223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2eb2fca-d3bd-4fbc-b2bc-cad11f42dea6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369f0f3f-93ca-4afc-8d3d-4118083f2dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7bd3292-3aef-4f71-9ab5-aad2a76fb0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623719b1-8390-478e-bd4d-593fe90d3267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7675cc5f-f324-4587-b404-c8cffd544088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8254dd-b3ff-4c6e-b608-abf576799edf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d036369-986a-416d-afa5-a3c94b8c54a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "207f1868-66f3-415f-a59e-5b8dab347552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb1016c-3eaa-4b5b-9ff4-5a4f938dacd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e944a084-d401-421c-86a0-cb2fa2ec3b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c6ca39-7793-42df-b4bb-2aa7ff40bfc3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f327939-4b20-4f05-86b9-b8c9ec541e7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f5fa53f-8451-488e-96d1-27ebe64b9e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03857ee1-bdd9-45a3-8992-fa469207ae04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e8af5c-60dc-4122-a297-acb3a5a9ac5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30c0fde-7fd0-4024-ba2e-2d1b4500be6d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6fd41b-1a19-4f7a-8d8f-79603e1b5363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef80162-a05c-4bb6-adf9-63eada2d427e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b41b72c-c893-4f12-b6f5-629a8c85229c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d5ee27-4f45-40bf-8d18-8d581cb0491d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db0c9ba-70b5-4c23-ab8c-3864ac4fb137",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9635d5-1193-4a2a-96cd-9fe9e46b6980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcaf8251-0406-4a9c-bdea-3c82830eee50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef3fa00-d6d4-4593-8cd3-69a924b765bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178efa6e-4451-4a95-8248-1404ee896e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7142bb48-0d89-40fe-a473-9a9a9e0463c8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a8adfb-0092-4239-a361-f080a806e55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9b7bdc-e714-4729-9681-f1f7f11875a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4a3003-7663-4eab-9190-d013141f6d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f430473b-4688-4769-a0eb-23639a532182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef72c5fc-de80-46da-becc-5745ff2b127d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48938879-1b8c-401b-ae71-b5a6be900177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a642a7-cb2a-4ecb-859e-35927af516e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77eb866-3593-4701-8cdd-19cf3caf3479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24363d9-f163-4331-90f9-46d157af102e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d63562-ca04-4834-a0f2-d59df28f746e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d75f0e-f8a4-40e2-a12d-f1a5044f63a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07eb05dc-bb37-4e39-90ac-2c1eb6cceca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3b2da8-e0d8-4faf-ba39-1609869e6d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e054fc2b-3498-4e19-95ab-acf9359d15be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8950c36d-6c7f-47f5-a0f5-7ea674e0b8e0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9eb760-13a5-434f-8eee-c91ad06343f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a453aa75-d7c5-4776-a6b5-b5bad776c9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e808189-10dc-446a-971d-7fbd8a00c48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3a2ecb-2399-481c-93a1-1d480a9de2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dc2def-6681-4f79-9039-ddeb0c04d36f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201a1711-b209-4aae-b433-28d417322b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babf8f38-736a-44c0-85c3-5e912932a38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f4c97a-3c7d-4ebe-83fb-5d2900daf93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f331cd-bce5-4900-81cd-1f292ed1e32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2e31bc-c41a-487c-8605-cbca754a8642",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4b2c81-cf25-4667-abc1-aed3083ccd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c1bf80-7ea0-4bbd-a273-c68478d17ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff35e62-1774-478e-9afb-b034ef677010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee00ec99-b073-40c5-848a-724b79a4c8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42adcb98-e07c-4ec0-9ad5-22d6644153c9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9006bb9c-e038-4976-a2ea-bf8db52736bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afae9ace-8081-44b6-9506-06142b231b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748a518c-0b35-454d-959e-6c57dfae0f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959c38cd-3de8-4fa5-819b-39eea5755f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317c4d92-0ab1-4029-96ce-8127ce69747a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44a6d52-2821-4ada-a55d-9fdf903ff276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93327d9c-4ebe-4883-b155-b1dae42bb34b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7618290-014d-42c6-ba52-676cc4f105b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576893c3-a6ea-4afd-96d7-a3ebf3e3ce41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2855e511-9bb8-4f21-8b9e-bc61cc62d16b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748bb247-0762-46d7-ae5c-837df255d5aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c47fce7-3d32-49c6-b02d-5d77cdee9a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c26b3e8-9f05-49b0-b330-1afa729db261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615b97ee-9f15-484b-a6c4-a7fa04bd4416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfc8d0f-3e66-4c18-99e0-96c3f12da12a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636038c2-e53a-485e-94a5-54cc901a9f9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6f97ccf-f948-477f-ac9b-a06e6ae12238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81a5a6e-a676-4bdd-b142-a18b547e56d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba3b0ce-993b-4369-82e7-08f31fd5b4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5c9e43-a1e4-4fe6-8662-30fec250e3fd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a44a96-f1da-4b5c-9e7c-85b0c94502e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621df2d4-7720-4870-833f-43a925db48df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e958d86-9f47-4ee3-b008-a8fc8882915e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b760c6-b56c-45a0-8ec4-eaa57b8beeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1d5a0d-1f83-48d5-a732-9755e9530dc3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c078446-3053-4fb2-b2d2-826a42d72332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edff85b9-4870-4a89-9e1b-a4278d6d8bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67aa5a7-ef2b-4171-a2cb-d2a796146cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e6529e-4bec-4078-9b57-19559eab23c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad2d5cb-d6f8-44e8-bbce-fccefd82708a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e40d05a-b8c1-498d-ae2a-b5d795e48948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b0f480f-9c37-44f0-a1e1-a9ffb3ff4e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89d2ca0-282e-46ea-8ed4-c52f2fe101e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b6fc4b-2fb8-4ea8-ab7d-e7555c66782d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c8bbd5-f889-4ab2-94d0-a7f7cd7c6caa",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2941641-3dfe-4cb4-a267-42ce9f637bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3939200b-e341-4740-a4d1-bf2a956d74ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf55ccc8-f9aa-4dd1-bebc-c421a0ea0f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d730f329-db4c-4613-aa3c-82899bfe853b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861e7b3a-6931-4093-a33e-03fe08d8ea32",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9013fac-8722-4510-a128-8f3145aacdf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f9d3ebe-46e8-4660-97f2-7a1f704ede9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c626e694-f804-44ce-a9a7-68cabe2a4d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea7dc71-565e-49c2-b53f-9680e8296252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fee3076-a958-4eb9-88f3-42676d0b6a7b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddc35ad-1cfb-4f6a-842a-ded9bd956a51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ecf605a-da2f-4773-9802-3c9aa21bdd36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa2714b-5875-4b44-95dc-3004a5abe487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be38dd61-e161-42a8-9fef-5573644f5fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ba14bd-3dae-4eb6-ae11-3f5e63d3ccb9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df481b5a-f2f4-4d9e-ba6b-ae301bec5b74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "082990f5-85e8-4c7d-a695-15ccbb653c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8126fc-69fa-4f08-860e-b0b5e3248847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f18e2e4-bf90-4a19-be93-6aa7f4fa7f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d880c22-990c-4ec7-a50e-6748e11157b9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253130bf-e396-4ded-a2a1-b15b8d4be046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0eac5f6-788d-4b1b-81ff-a5d67cf73682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8caf16-3e77-4afd-9f23-da58acd240f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e0b6db-2300-4c93-bb1e-df9ecbb93430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406dd40b-f498-491a-93a8-022b4cad617d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ce6762-198f-45d6-b01f-1076a9a028e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd521d73-3c09-4690-b75d-5bb894641f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9787e373-b822-4ffa-87d1-9bfecb89a139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47570ea2-b686-40bb-9a43-395f1320f774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c9d91a-f1aa-4b34-94ec-f6bae06e4be9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ced1958-64bd-4de5-a8c8-f10eed78f34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b98b69-4d25-4a2b-a6f2-cd13be6a3d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13883c93-351c-43c0-9a2c-742b5b298c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d326f43d-71dc-4d47-8024-db159a95d9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752a4a01-6792-4808-a2fe-e96058016841",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ef5a47-5940-430b-bb8f-a1056c4d968e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4ab1b7-38dc-48eb-a645-fb34b1631a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fdffc9-79d9-4357-95c2-d8f0c7fa7b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cd9c23-2c54-467c-9c9b-f47ccf9fc9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293c2197-3017-4254-a815-59e493c0cd3f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c99b65-30aa-4083-8b1a-5916cdfee1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8ad0b5-6063-4ef2-afa4-ceeaa0658c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740543a0-a06e-4668-96d6-e56a5837cad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a550ab9-d9e4-4eeb-9898-0af61b2edc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0737afa-202d-44e9-8279-3f36f3d0ccf1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57a70b9-5d9c-4365-adf4-e1c57328dde7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9dcaaaf-255a-4d9c-8367-0ef4bb5234d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d417121-0251-4a36-ad85-c461ff53cecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5508c42d-2592-41b2-b8bf-87c39283a6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920827e6-d248-40fe-bd83-3dbcbd50886c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f5a39e-f299-4451-a1d4-a9b599577336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f8ff08-4ee8-41bb-8040-9810ac90e6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37baaf88-5a6d-4e70-bf1e-bafeaab4ffce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51964bc-721f-4842-94b0-2d3fa91871ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb427a7-b794-44a4-b4de-548d55ccd80c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da43347a-1a25-4470-b21f-bd16bf467de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be3fadc-b793-42c3-970f-4fcac729ba89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e77507-f567-44b1-976f-337902e5a215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313a6fba-89d6-4228-9600-7cb28f9e30fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e0c8f8-183e-40e2-a6ee-c970a50dcab8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec42caca-cfdb-411a-8460-84057e0f70a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c626ffb-36de-4e1c-b5af-1445d2f511e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5086e4ea-a724-43b3-9c2c-279d55ba6e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f9f8b4-8ed4-492f-96e8-d1c465f350ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a10533-f94d-4adc-bd63-5e094b04fc51",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc2a139-6ac2-40ab-aadd-066754b85611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466f55d9-a47c-437a-b96f-5e0d665e17ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f04ecaa-8da9-4d5d-9e03-83ecf471c0f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7757dfa-89ee-4b10-ad7e-e477f580aaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f940b5-58e8-4ec6-a327-62b806a95aee",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fe446b-635c-4ff7-af9a-ca105d736817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de77995-8881-4288-8a7d-ebbc40249410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0156c43-9fee-4e58-87c7-96a9278e7db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97443061-a5f9-4533-93f9-54bae1735d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba073f41-c341-4240-b207-0c1746f2c596",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894782c4-b1a2-4db6-a5b4-42d6d894994c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28ffa90-4c38-49b1-990a-91cf34418026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcdf025-6749-4ba8-8b59-a0f233fdf4ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a8912c-3f70-4417-aeb8-1a55e2bcc40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad77806d-3a9d-4853-9dd2-98b170d8cf52",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0c49b0-b5a9-4892-b5dd-1f392e3322e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c9581a-34dc-4dea-ad72-1ab14fb4c578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e368ef86-a773-4ea9-a015-dc7e5ee4ae38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0306e804-af70-4e6a-8ed6-ee9a6933ebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a720fae-4903-4198-9bf7-fa2c15018634",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4799b64f-c080-4ad7-9dd3-3aeeba476676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d32fb20-7311-4638-8eea-465d624eb334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3105a3e6-625e-43bd-a177-6ea4306d4a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ed3f5b-91bb-48c0-a62a-e2f55683c220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6501ea33-c3f1-442e-b0ce-e2ddf7db22dd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112976ab-ccd1-464c-9f54-3c56bce43801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a7dc2f-5656-4d75-b071-45ab31661e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f1657d-b3d4-4810-9664-dfdfd201f09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1424932a-8309-4e02-aa68-befd7c93b437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ba1cda-84bc-4886-a904-414d4ae8a2ad",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ef851f-d8e3-4e2f-881a-e0a7ec8fd178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47445286-94ff-40fa-97ef-a1dfef2c8442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b023ac-ead1-4df1-aa5a-847cef997ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2f8783-e933-4c10-ac86-c99b0752faa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00aa48a0-f292-4470-b13f-edd0c06bfc84",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e712c8-77e4-41f0-b663-5ca7f9f04564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63da85cb-5364-4dbb-a423-0af7da05f4c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906e0cdc-a60b-4199-a430-48949859132b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fa9b43-6ca1-48f0-b3e1-a9526c695156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4167c3ba-54ec-421a-ab3d-541b866d757d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a38c305-9490-475b-ac3e-7a75c029f5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ca2f39-2291-471b-b57d-7695674d1934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670e0df0-8a5e-40c2-b4e0-eeb5d3f11d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8120056e-0548-444a-bd50-1f3d10d35c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5413396-58d8-43fd-a89f-fc9999415888",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0f8806-a415-4dc1-8737-00dee55c2166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937c2273-ec76-4c76-aaaf-9d5dac8e5b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83ea516-edfd-475a-b7b9-42a8757bf754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af7dea3-80cb-494f-9abf-d29e6d978750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f8509d-c822-4c00-a966-a52300cf68ee",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3271f372-be92-454e-9ffb-a77770484764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be286533-37e1-4367-8e55-dc7b4c362e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c60f1d5-e5b5-4d44-97e7-fcb91000c0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f0494d-8097-4ce8-81d8-37aeb6334ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d50a853-b1ef-483a-816a-75d63828302e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddcd51f-3eb0-4d72-a83c-0e4ed01f2553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8321ee8-e313-41e6-8082-b9862c4241a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad52b01-e0cf-4241-864f-5ef210bfe58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1c49be-b87b-436b-a85b-a029d9fbedba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2394b8-ddca-415e-bfc8-cd9c825f1fc2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eecdf46-ffcf-4158-aeb8-8578eed46f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd168238-c3d6-451a-a372-606902064ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f553616a-f093-416d-9080-38e85a398255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed4f80c-343b-425c-846a-8291ca686f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043e8bc1-c4d3-4f50-a3c7-75ddb3ea693b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93459c6-5561-4002-ad69-e442916033df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c753b05-8d39-4dec-925a-6a9a9bd11e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4c54fd-1bc1-41e7-86d5-94ab898f32df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dc4e4c-af1c-4403-949b-81de8f2c5613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078c614c-7921-4054-b239-6046f4fc8438",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fc7388-23fd-4ba5-b5a8-53b8dba301c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad031c43-d5f6-4443-94eb-91a7d120b775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daab9d45-8dc3-427f-b38b-cc77dcd9089d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e1359f-187c-4efb-a9c7-f2683f2ada03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e9d0ec-a497-478a-a022-69ca3d4747f6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abf4803-6329-403a-9322-1cc4d865c7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f058643d-f94b-49eb-8d1d-7ed5d7b928ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71469e49-1dcf-459c-9cd3-3ff5ecd83aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988dc517-e84c-4c60-8bb6-25109ecebbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e92671f-4d0e-4d81-86b1-6a53d87ac8a4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c574b693-777b-44f5-80c5-77d452586e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2cd3d7-c9b9-4e56-b2cf-07c867ae704d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96389775-e48d-430d-9407-7daf6affb04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a9bad3-8bd3-4615-abdc-c6f4b522863f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c191db8b-e311-4806-9da1-21e3f6653725",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efffe59-18c0-4d3e-b64b-02273fbb415c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0a096a-23ea-4e87-ae88-62350d53dda8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19441afd-0d9a-4407-a50b-8de53d7778d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316bd720-86ae-4c1a-9530-64bb3655bc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf9f985-6157-4f64-9be3-8d9c30afea4b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f36c6d-88b2-4a50-9386-188879d1041a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a5cecf-55b2-4b88-b38c-7352cad649eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c223aa-d45c-451d-88cd-c99db598268d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3c7cfa-a1da-44ca-90d4-3a7f5dc71774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102e3271-8bc6-4f34-b8b0-dc0b5bbad870",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d830a9e8-2c1e-422f-b615-e08d387079b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71fcff3e-7b7c-489e-b6c8-56f012fc6c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba4754b-a6d6-4641-b2f5-373334c026da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1d9acb-795a-4d9e-b410-bea9aa2012f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38b35b0-92a8-4894-b26b-c2e9a42fa564",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e469f8d7-8b42-4e36-abc2-407dfcf24c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e86530-f556-4952-8fa0-ecb1a291b314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835843b7-dfe5-468a-b967-7443bc5dea73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9393ed6d-13ac-4c20-a06f-a7a3ebc101a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7629bf6c-0511-4f59-9114-c48639b6ef32",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a6c1a0-f062-4ceb-898b-d39bc58f048e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "113ed2a8-705e-40fa-8f6e-849bb84d6aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6472754-aa1b-4e1f-bbfd-9f9e9a9cf5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2363e1b-2801-42f3-92d0-4217d8d4957c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3809f346-e715-4c70-a666-9d9e4a9f69d3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa3d45e-ecbc-46d8-bada-d83290a56ad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4a68d2d-fbae-456b-a22c-dbd3f8ce8ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1d40bc-5517-4ac2-b0da-da8aa4c0b53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ee0227-2207-4108-8580-d19b6082679c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4fdcd9-bebd-46fd-b0c7-78ae258996dd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca56d21-e008-4e0f-94aa-1cc0a991c3b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0793cf50-b039-4083-9665-2f549b23e1cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7bdff0-bc38-4627-992a-c7974c012914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32329cdd-7ada-45bd-939c-52d1f4586933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7938d1d8-d540-4c28-9bd1-61484839eb6d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb5b783-05da-4098-b47f-22ad65069f09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b9a08db-7857-46f8-befa-f1bc72d344c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d32d08-ad07-4ee1-8e4e-7a1e520814f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07e4867-30e5-4289-aeb5-f62592c6650b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18835b04-9c42-45c5-a30e-98bab3bced8c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfde0862-3860-42a2-87f7-c171c82b96ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a4166e9-3f94-44e1-b5c9-1cfaff249f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6ae853-a3f0-44f7-a549-7caadb3560cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de77c73e-5f82-4614-a2e0-e95fd920f3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb8cc44-c43c-4e53-99f3-c3ec76c2e5cf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f476616-eda5-4797-8d35-ab0c193d929d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a79fe1-975a-47b9-8b83-0ed01f48f757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c039068-082c-4295-883e-4b24bd7d2af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d87b27-0fe8-41f9-85c6-a62e27f090ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009efefa-7f3a-4c21-a33b-d17d88b4db30",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c0492b-6877-411c-90ab-b8fe6b37a80c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13c33a37-f37c-40a1-8f75-00634b2d47e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397d1a3d-4cf5-4e86-97c7-bb3dc3fb21c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d606ae3-852e-4059-a3ff-5c64b127ed71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ed9bad-94e4-4b9c-9d18-8f7ab1f87623",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82512539-8a88-4993-92ea-7809c56d6290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d67c8cf-f73a-4d0a-9948-a28032856d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d572c76-a692-4d12-b46f-6737df19c4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6e7303-1600-43c2-af2c-1aa62bf18102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e91e21b-9153-4db2-97cd-57091d7db00f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f01dd9d-a3fc-4cc5-8d6f-3700c5b93255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e72f1650-2235-45be-922e-03f76bdbdd27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b574ebe-2c03-44b0-8d3d-18c9593f5154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437c9160-530b-4395-9012-93cccd76647d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7373fa93-6ecc-4ea3-a103-efccd090d2a8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ede0a2-6efe-47c3-99a6-cf04575dc249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b052de6-e8bb-4c80-91ac-24eb95ac97e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2125a0cb-3fc0-4a04-b416-7647dfee11ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40ebded-f08d-4349-9403-2170893ada36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1881c9f-a549-4dbb-b0cf-2b260e71ba2b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f9f38a-d752-4707-998e-e4b2969a8395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c343aaec-0585-411f-ba5d-6c694d62a16c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9535684-f944-425f-a0e6-3d2094cc2a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcf0aa4-ad3d-46eb-8868-075164824d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b45691-ec1f-46f6-a5c3-22d780a598bf",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810a0e73-8f68-4a41-97c5-50a2d9813a30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcd21e51-7cb7-4aee-8a12-b365d5441208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862ea48d-e044-408c-8ac1-ce136ee2538c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5575c23d-6e9a-4626-a57b-437fac5f4a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fadb4bf-dce9-4129-83d4-3a633af97929",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbd08d7-ee24-41df-92c2-b9217422b873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed25ff8f-e0c4-402d-b7ac-1c0af623495e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2ff565-c27c-46cd-963d-c0b1f8140c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00fac950-8775-472d-a7e6-28df0827f073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470ff78a-b09d-4294-bd02-c0ec2cfef4b0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05085e80-6fc8-4940-802a-ab3c5a914d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fc6fce0-d4dc-4c54-a28c-aec4349cef5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62a7801-a5a6-44ae-8636-1111130ff14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3892ca0-54cb-40fd-81b0-7ce2d04390b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f4ff25-f28e-4380-aa44-f2d79ff24db3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd2978a-7915-4737-a027-319dbbf6b529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b73ab8-7903-4a0e-966d-aa2a20cb0734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619853d8-6e95-4a64-90be-d942a2fede56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf00007e-8661-4c59-84f4-97de475f06d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e810559f-6c77-4dea-bf13-92db6f39f641",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37dcdf2-3b15-4cdf-a22f-bc2c88230edd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "908960d6-2d29-4180-8afd-99dc6b0b1fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a07e78a-e418-4904-8f9e-c34a419ba4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef874b6-5f17-4e83-b75b-2eb0c1b54f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4d3a2e-7cb6-41b8-8df7-10fb90d196c1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf984a6-5a8f-406d-9c61-31a831a33a8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "393789fd-6c1f-4fcb-9370-be3acef351f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf31e6c5-4f3b-4075-a70c-358f927e7c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efa6f0f-1b8d-443d-9791-1cfee110c402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1dbc4c-e652-4e6b-b394-4e46739a25c2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388b124d-ed92-43ab-bc65-9ff84f236fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b42899-37cc-4fc7-b9c5-7905a8cf9f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f4ba74-1ee5-4766-a644-b13548013b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3392dd5-e39c-49fb-8b6b-e003602b049f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53ac5ba-0157-4882-888a-a36a8565f921",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0925f3-2c52-4025-b582-d9b1439ce6f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b7f19a-9ee9-4ae4-9d8f-fcc8ca8b5264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c2cccf-eb10-49bb-a2e2-1a96d7481602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02614497-377e-4e1e-aac7-7bfa4714e4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa35ebb-bb2a-4637-badf-dedfa2a62e44",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2637dfe7-1646-442f-bd97-9d11b4d20373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "878f983c-f166-4b7f-a07c-51595b636a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39602d68-00f3-4fc6-a082-60bb4752c179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b876a7-18fd-4700-9b82-a58e2103b076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce5075f-519d-478e-8316-23851cfab69d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec5639a-d525-48e6-8c19-7ad173c6759e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea6c5568-93a8-4036-9946-e13a124c7f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99a304b-f23d-46bf-bc29-eeb03f5096da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34691674-aed3-4f15-9900-1caa1096d022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503ead85-7d5f-4549-874c-08505b838252",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e7626d-e1fb-4a8b-98a6-7d7518ae5768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc71be0-2621-4342-9bb5-3b720c59d7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fa5fc3-3d9c-4c9b-a230-95af6d5b67fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d352b3c2-840b-462f-9036-87d671383443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86789196-2e89-4b0c-970c-566bcc332478",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b372836-bd78-48f5-b542-aa967f13d9cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "405a8f3d-2386-4c47-b4fa-559f7df57c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1172b568-b67d-46e7-84de-54f4141d3eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2dcdc0-d944-469f-9e8b-75364df861ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45299137-7dc7-430c-b077-ffb25ef88594",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64087fe-ce4b-4305-950b-11f9674d33e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f5ade3-8dc1-45fe-ba1f-4cbfe61744d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c38622-5adc-42a7-a926-a87417a8e4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fb1735-78fc-4a35-9c33-258db2db06ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab18aa9-1f54-49f2-9b6a-35c068507a43",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b87af38-3ffd-441a-92a5-de62de2ef81c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe9d423-87ce-48cc-a293-5a5905c2cf70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b4c7c6-fbbf-4da7-bde0-7948f4433184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbebde6-e618-4664-ac78-ba079645f7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f682a827-ab91-4c6d-8ad9-60e68c813cbe",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2852780-2eb7-4970-83b6-e2c9032e5d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c9f826-cab3-4070-92c7-2f187118f548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d83e96-61ce-410b-8db1-3d0874662666",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127f9c9e-5daa-47cb-a515-86101438c49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53061d45-43ab-4c6e-81ee-e0498ed52c26",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d87269c-d015-483f-a819-d64f2375e177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10b3c870-f96e-4a0d-b400-665edfd4385e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fe59bc-f6cc-4983-9d74-ebcd92075c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58d6d6d-fa5a-4e51-a189-6c7af760ba43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbccb33a-ab47-4b8c-9e0a-aac7286e0cf9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b174b251-bb03-40f7-b5fb-8769bbdf04fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ed8a817-31ff-4edc-8d8e-53f7293ce249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a80ea83-533c-4346-ac55-632c79d074c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0496ab1d-9879-45b3-9d60-93af5d0577c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5b132b-560f-4c50-a0b4-437450f6d05c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7211100e-fda5-475d-b6b1-dc1644723cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d89a58-de23-458f-b22c-9f32aec7b35f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451b9869-0d54-4604-b9db-2260448ef329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad21c39f-75de-4935-b889-a2a68b93b032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ee64da-b096-4994-8d7c-803a52f28223",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b76c660-73e6-48e0-a497-12f9547d48b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4efb75f4-87ea-43a1-89d0-cde8758765b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a3c0ac-03aa-48c1-afe1-a0046701807b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3fc840-7427-473e-8d76-ccb9b0dcc7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a01ff38-8255-4e95-a4d6-c2fed3d1769d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c309091-ac37-43bb-b587-1bb8c016ca70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11252a66-f843-49ed-8492-c25f0c9c8cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7310bfe3-ee47-4803-9971-2efd1df0ca84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb91d7f-91b3-4b08-8e42-771144b04db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac7e4bb-ef87-4523-8fc1-005cbb077cc9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c25039-9093-45f9-b2f0-bbbc344e496a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ef3c893-0af0-487d-8039-93c48030f063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51300b93-a4cd-4f4c-9395-bc94b08e1038",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62661326-d752-4d47-9d6b-7247807f01c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a5ceff-35a1-40e7-ac89-831a8b5717c5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee914e4c-f74f-40bd-95e8-0984f0ee5c6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e781f087-68ad-4473-bda5-aa4a62980c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517b3ee1-1eb9-4459-829c-d953266f23a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c0fc66-095f-45f0-be0c-0cdee38015ae"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb4287a1-aa6c-4629-94db-a8b13dd2a32d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4e14e95-dc21-4dd1-ade1-bb51fda76866"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5ef4be5-b1b7-4f19-bb67-caf55b39d3be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "896362f5-a3d0-485d-8c46-976c602d94a3"
                    }
                  }
                ]
              },
              {
                "id": "e63e625b-6f35-4e6f-b013-d94a578b17c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3922fb0-786d-429f-a97c-72e243ba410f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236e7af7-60a2-43a2-9de4-cc2bdb432ada",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3bba38ed-b4db-4dc5-b025-b2f98f3f4fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b4e5f9-2cc0-43a3-9764-4a5d831d095a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4126869-eda1-4fc6-90bb-67bc56a1f2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdb8c34-3717-4422-8816-69c37784fd25",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5550db-8960-482e-86d8-221d9f63f94c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "473481a3-3c7b-4036-8ee8-4bef428c21c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adeb703-0249-448d-8a85-d3db17dd1f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8aaa2440-11e5-403c-a913-d785dfe11d55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "187d4083-0dc6-4be2-9d9d-92e6fdd7165d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed46164f-5964-4b4b-b995-8c13ad305669"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a828103f-5a3a-4b25-8ad4-cb8346a1b53e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30bcd085-326f-4fba-b9ed-b8e378092a23"
                    }
                  }
                ]
              },
              {
                "id": "dfb175a8-ddd1-4a05-81d3-507c9a1f5bcc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c76915b7-ae9f-41e6-abb7-cd15622d88f0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92b5a8a-bb59-4da6-92ca-54a1f076bca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6a60c6ad-b2c0-4bd4-8318-b842fcd3b777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e93b014-5292-403a-999f-5005608b12b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da15decf-bf0c-4e8f-a5e5-e905a652be93"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b0a9c040-117c-4dae-93b0-3ff9fef24197",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91c977ce-eee0-4c8c-a1d7-7e635ccd8efb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d28de802-80c1-4a8d-a12b-9ade4cded382",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "df4c3cf0-d85d-431b-b48f-592041ad705b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "342f7b75-518f-4ce4-8039-cc4817fec47e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "779d6698-7eba-44b7-90df-2e43403b0fdb"
                    }
                  }
                ]
              },
              {
                "id": "9d34398c-089a-4b3e-9dae-56bb77ec4328",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "307cadce-9ba6-459e-bdaf-c0a8a9a8847f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6f9a444c-00c2-4900-9aa5-428452ceb0f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c82b8a52-c05c-4043-8713-efb5e40ad125",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e9661a7-d549-4205-a48a-686ad5d5b5e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf6981be-cebd-492b-8f95-2683b850c2ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "db8d34ba-7fae-4ffc-a8bc-62f061d59d09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cecc313-abb7-4b1d-b554-42afcda18ab6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f810658-d568-44f8-a84e-7e8ab63b0990"
            }
          }
        ]
      },
      {
        "id": "37b0ffcb-ab33-4506-841d-6f6e146017bc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1e88d683-5b0d-4876-a997-b8347facaa9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f5ba83f-8288-4f9b-a7d4-da545bb65d93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb396e99-654a-4a19-9bae-9a08f446f057",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b587af8d-a30d-4f0f-b2df-9567eb6d7b53",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f672a935-b398-4d7f-b858-455aea586f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01bee62-4321-40c1-8df3-7fda921e163a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69258039-bc7c-4c5a-ad6b-1d96e6b23e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8973745-b68c-42dd-a83b-9a3083fad843",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50b0794-294d-4e06-9c0b-fbbe4dd7b74c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "455754bc-afbd-4de3-9e94-6fa634d842c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52e878e-2b86-4380-aef9-fb45411b8065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "706440ba-6b0d-4700-8813-961308c7721e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4e2d322-b3ad-470c-af86-2c5c18c62934",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "116643ea-8344-4ba6-afb2-44cd4b2bde96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29e30918-da89-40c2-bc9e-d52261388c9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa36c43e-b2a9-4bc8-97d2-ea965578416a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3e85b01-c1b2-4c7e-8bc1-33dc753ae319",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b1189291-2fe3-4144-b72e-7f9f4eea81b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31cc3e3f-b149-46cf-a92c-bf1c1743647a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09b82bb8-9467-41af-bc6b-b5d221473330"
            }
          }
        ]
      },
      {
        "id": "cf69f340-e4f4-48ec-9fc1-1365f5b7a9d6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "16430754-d9a8-41c1-9335-31729a279fa6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43a46b1c-c622-4721-b09f-e31f05e35bd6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9616981a-7153-40fa-bc34-558b7301b3e0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42860ccd-f037-477a-ad31-6e741d143e0c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e25ad691-663b-440a-a6dd-d46e7a3986b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49885b25-7467-47f3-b220-05b23867d028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40800446-425b-46a4-9a50-f1c84fe7d82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e418538b-1371-46e8-b54f-aaa338aaadea",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7c4db1-543c-4db5-a107-c620245574be",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "24b75905-ad5d-44ad-ba1d-c6159f57fdf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430304b5-17ad-4034-852a-e66ca84ca65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3976def9-5d98-4b67-b660-fbc0cc42cb02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84eab990-ca05-41c7-9921-3591d5c05c32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67178e1b-6429-4fc5-a514-b02ea7e57653"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d366e0f-defe-43d1-964a-eaee20073446",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65612407-102e-46eb-b90a-426e971642f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d7f5d04-81f3-4b37-8c09-a3385bcc33b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "63ac5036-b09d-45ec-8790-856df59e9b26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34356437-59bd-487a-85f3-5368621a1b7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "910c0833-4349-4919-8a62-054af34bad47"
            }
          }
        ]
      },
      {
        "id": "858526e6-65fd-4839-9bcd-bd1bda771e88",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3961cc42-0d33-46f7-b615-f6b1ec9ff748",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ab6a968-3c3e-4a46-90e5-839743c7ccf0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aaf68c63-dc5a-48f7-9170-3775aa953942",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf6e4b5-2084-4f4f-add9-842f3bf4eaf7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d4d1807f-c2c1-4ab3-b129-ce16e9ef0c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09dabe7-7c15-4afa-bbdc-2e5e0b1eaeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "938eaf99-055d-4914-a840-14d7cf67b066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82cd85b-e7ae-4e77-bfc7-b43f41a44ace",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83983eeb-8acc-4314-91bd-8d877e9d637f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a2606f52-809a-46ae-b132-c9e9d46a98e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3657dfe-7d5f-465b-9976-ba1ffcc6589a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdc7a0bc-2db9-4e66-9801-0ab5a7c54b11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4981015a-5f08-43a9-8aae-893798f2c0ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0ba314f-5cb8-42bf-99b6-f885900cface"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "339cbddb-9774-4a7e-8b66-6a82ca0f5e83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86a7f72e-1080-4e73-8b66-dc624a596a70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ded051c-18ee-4f75-addd-38864988f8f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e79ad4cd-afdd-447c-85ea-95a2814e23db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cc322a2-51fb-49ce-8d3f-0a022c344edd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17d32880-46b9-4bba-b093-c3e125b7361f"
            }
          }
        ]
      },
      {
        "id": "a0c47581-9d23-4277-947b-6dbdc332894f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "027a5ef9-c49c-435f-a450-53a885a6f595",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c55e1887-eca1-4ebe-94ae-74f18807d78f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d9cbe611-5067-4548-8e78-012c7ecbfb6c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94855e30-cf57-4fd0-8714-e1d8b2e61ec1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6e5312e-78ee-42c8-b59d-642b9a191c0f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 632.1374045801526,
      "responseMin": 7,
      "responseMax": 6837,
      "responseSd": 750.55646291318,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1674607117595,
      "completed": 1674607297041
    },
    "executions": [
      {
        "id": "19c260b4-dd06-417c-9837-7973a3512611",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8baf43d4-1832-4390-8aae-6ca7a317d057",
          "httpRequestId": "6def843b-ff17-46d5-98c2-36baacf621e6"
        },
        "item": {
          "id": "19c260b4-dd06-417c-9837-7973a3512611",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "19fadbdf-3e1a-4e01-808e-b0826998fca8",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 0
        }
      },
      {
        "id": "333d3634-ddb2-45a1-a7d3-d423046be358",
        "cursor": {
          "ref": "23ffbdd1-3de3-4556-b42b-beccba156515",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f3122fea-dcea-4784-ab17-07e61af04c30"
        },
        "item": {
          "id": "333d3634-ddb2-45a1-a7d3-d423046be358",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7e2de811-707a-4411-a82b-db650f61cebd",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "eac0d94b-4e38-44ea-8ac7-35abc8712304",
        "cursor": {
          "ref": "3634f500-0898-4cf9-b923-19689cc59f2c",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "afb05485-2b2f-4c9e-a5a7-a2f8e74cdfcf"
        },
        "item": {
          "id": "eac0d94b-4e38-44ea-8ac7-35abc8712304",
          "name": "did_json"
        },
        "response": {
          "id": "c5180058-d640-4487-becf-9a138deb4362",
          "status": "OK",
          "code": 200,
          "responseTime": 752,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e61a48f-7f47-4994-80a6-4cdd59844117",
        "cursor": {
          "ref": "f90170cc-9726-4fe5-83d1-e4f6c81a7aa3",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "64c62912-ec2f-4bcd-bf55-153f3f8fbd93"
        },
        "item": {
          "id": "6e61a48f-7f47-4994-80a6-4cdd59844117",
          "name": "did:invalid"
        },
        "response": {
          "id": "aff51fde-b10b-46b1-9293-9af4d7756f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e61a48f-7f47-4994-80a6-4cdd59844117",
        "cursor": {
          "ref": "f90170cc-9726-4fe5-83d1-e4f6c81a7aa3",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "64c62912-ec2f-4bcd-bf55-153f3f8fbd93"
        },
        "item": {
          "id": "6e61a48f-7f47-4994-80a6-4cdd59844117",
          "name": "did:invalid"
        },
        "response": {
          "id": "aff51fde-b10b-46b1-9293-9af4d7756f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ced20d-e417-40a4-a67b-e9a5efde6b47",
        "cursor": {
          "ref": "27727be5-da56-4739-ab5f-3d571c840983",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8e5c3460-b023-4d85-9284-de5051467c35"
        },
        "item": {
          "id": "52ced20d-e417-40a4-a67b-e9a5efde6b47",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "678e9260-0afc-451f-829e-1810a1fecbe2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 621,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825350d0-97b0-4445-b0cc-b9f645c83564",
        "cursor": {
          "ref": "7ebe5d7e-dc03-4046-8990-205898096237",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3652b8f3-37dd-4a99-bc5e-fba894e1a4e9"
        },
        "item": {
          "id": "825350d0-97b0-4445-b0cc-b9f645c83564",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5830f337-aee3-4814-b9aa-d1dc804f16b0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 525,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03ba0bc-b505-4d7f-ae16-cd6a2ba73834",
        "cursor": {
          "ref": "ebc1c7c9-eba1-42f0-b07f-e99917ac35fb",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8ac6d85d-f28c-4001-936f-c48f61838216"
        },
        "item": {
          "id": "b03ba0bc-b505-4d7f-ae16-cd6a2ba73834",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f0b0553c-5640-4f7a-bfa9-fa15e63967c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5be94be-7c72-4936-9288-7aced00a2e54",
        "cursor": {
          "ref": "70cf6f51-242d-4a05-bca4-89ed944ee3d5",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8ee482f1-7dc5-490d-adb5-85c1e68784cd"
        },
        "item": {
          "id": "c5be94be-7c72-4936-9288-7aced00a2e54",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "63d62de1-0670-4512-9b94-a2449f817c9a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 520,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5be94be-7c72-4936-9288-7aced00a2e54",
        "cursor": {
          "ref": "70cf6f51-242d-4a05-bca4-89ed944ee3d5",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8ee482f1-7dc5-490d-adb5-85c1e68784cd"
        },
        "item": {
          "id": "c5be94be-7c72-4936-9288-7aced00a2e54",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "63d62de1-0670-4512-9b94-a2449f817c9a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 520,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272c08fc-3198-4a2a-b563-59cd8da58070",
        "cursor": {
          "ref": "36b335d6-8122-473c-ae8a-9477ab741a1e",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a8f88f6d-e841-428f-972c-5b397d613823"
        },
        "item": {
          "id": "272c08fc-3198-4a2a-b563-59cd8da58070",
          "name": "identifiers"
        },
        "response": {
          "id": "a1acf36d-4207-4cb6-b0e3-e0a82ec2be72",
          "status": "OK",
          "code": 200,
          "responseTime": 841,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed6bea1-6f1c-4489-8b3a-deda6fd478f5",
        "cursor": {
          "ref": "1c51728f-8024-4007-a6bb-46dc401b7eb7",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7e26c9d7-75a2-4622-8c12-e19ff33d3c44"
        },
        "item": {
          "id": "2ed6bea1-6f1c-4489-8b3a-deda6fd478f5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "919130fb-aa3d-4d2f-9650-3a4a96d8d0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed6bea1-6f1c-4489-8b3a-deda6fd478f5",
        "cursor": {
          "ref": "1c51728f-8024-4007-a6bb-46dc401b7eb7",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7e26c9d7-75a2-4622-8c12-e19ff33d3c44"
        },
        "item": {
          "id": "2ed6bea1-6f1c-4489-8b3a-deda6fd478f5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "919130fb-aa3d-4d2f-9650-3a4a96d8d0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd5423f-497c-4695-92bc-04d8d1bd5dc1",
        "cursor": {
          "ref": "f6c97943-ce4e-426b-aee5-c8f6d8c158f1",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "64323aef-0399-47b2-b8e3-674765730834"
        },
        "item": {
          "id": "9dd5423f-497c-4695-92bc-04d8d1bd5dc1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1936ce02-c077-43b9-9fc5-2d1a2bd9be11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b41b88f-d28b-4824-ac69-ad3118144b08",
        "cursor": {
          "ref": "2e3b88b3-284f-47d9-83eb-efa30270d1a0",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c1870236-5516-4f66-af82-e6b7a01ac162"
        },
        "item": {
          "id": "3b41b88f-d28b-4824-ac69-ad3118144b08",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "d2076e1f-55a4-4d42-a8a6-65c87c5717e7",
          "status": "Created",
          "code": 201,
          "responseTime": 2485,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "abc42c73-d642-4692-810e-197792f494f8",
        "cursor": {
          "ref": "dc5b2638-61d0-4fb8-b50f-086b5ecb2efa",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "be5940ce-7c3d-483e-afa0-575bd17f1542"
        },
        "item": {
          "id": "abc42c73-d642-4692-810e-197792f494f8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4f922a53-2958-461c-8bd6-b2e0d8b4f67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58900133-5b14-4695-9585-ce9ab0058478",
        "cursor": {
          "ref": "a9c2b39c-03cd-4b62-9f92-cb48502c7114",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5b54f53e-4da7-486d-ab6c-908b7f2e2cae"
        },
        "item": {
          "id": "58900133-5b14-4695-9585-ce9ab0058478",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "aee7baea-db14-430b-825b-1ab3a5c4622e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3364744f-7bb3-44c2-9db3-6a5a462d4bbe",
        "cursor": {
          "ref": "c8b53943-7f6c-4f59-9c22-f5208994551a",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c28dc0fd-0da1-433e-b147-a5b3c1d4594c"
        },
        "item": {
          "id": "3364744f-7bb3-44c2-9db3-6a5a462d4bbe",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d8af270b-bc0c-4712-bcd7-7ae7484fcef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab6f8e9-dfc2-4a46-9206-512ec1a9e687",
        "cursor": {
          "ref": "63fdd56b-bc93-4ac9-8148-be499af57e41",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fc3d9dfd-f883-4aab-9b78-222752b58688"
        },
        "item": {
          "id": "cab6f8e9-dfc2-4a46-9206-512ec1a9e687",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7302f33e-aa01-4f56-9604-c1285447d88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcab4a69-a541-4946-85c5-75c32e6bfce0",
        "cursor": {
          "ref": "79124d0a-3007-44bb-8c8c-bef0d899d47d",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fb4e3f94-a9d8-4bfb-aeba-a6a57844e6fa"
        },
        "item": {
          "id": "fcab4a69-a541-4946-85c5-75c32e6bfce0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "79aad2d7-e03a-4919-9bce-54b91a915332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b82189-3eff-4f63-84d2-df7b61a4263c",
        "cursor": {
          "ref": "2903402f-09b2-4292-988c-a7aaad8e1bd2",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f77760df-de56-4e45-9cf4-2bfde1ae2247"
        },
        "item": {
          "id": "58b82189-3eff-4f63-84d2-df7b61a4263c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "69d1a694-3dfc-4c1f-86d1-0c1c02062ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aeb703e-f140-4e7f-a00d-d9f0814c19cc",
        "cursor": {
          "ref": "5d398ac0-5af4-4aa1-a472-434a4a1f5a04",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cb981792-b7bd-4752-9d94-94cec2adb445"
        },
        "item": {
          "id": "7aeb703e-f140-4e7f-a00d-d9f0814c19cc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bb3a4398-e1a1-4d5f-8ece-b2cc54ac77e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6d84d6-92eb-4136-853b-d166fa857676",
        "cursor": {
          "ref": "25da5419-0d1c-4ff7-ac89-c834f890eecd",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "63c419f2-6c1f-4805-81e1-6899574b3053"
        },
        "item": {
          "id": "ee6d84d6-92eb-4136-853b-d166fa857676",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f67fedca-017a-4f41-8a79-df00214650f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c1357a-561b-46e4-9da0-2a87cc0cb7a1",
        "cursor": {
          "ref": "ed39ab6c-0167-4855-9f84-243e5a42ced2",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a5114f63-b9e2-4274-a8dd-43b14fe3aaef"
        },
        "item": {
          "id": "e8c1357a-561b-46e4-9da0-2a87cc0cb7a1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7be50ade-9c10-4f5a-87d5-120cf0d0477d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a9d39a-8233-40fa-b06c-f2ad9813ffeb",
        "cursor": {
          "ref": "48af5b6c-8de6-47f4-a20c-38542146eb15",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b2249cde-b4c2-49e5-87dd-1f01785d8bbc"
        },
        "item": {
          "id": "80a9d39a-8233-40fa-b06c-f2ad9813ffeb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e8b9883e-7129-44b0-801d-f8762fe5bf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465bd9cc-a176-483e-a900-c8223a0f17cd",
        "cursor": {
          "ref": "fbc488b1-0c00-4ab3-80cc-9b2c5745fe88",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "55264785-bf68-45b3-b720-3e3d35ca3397"
        },
        "item": {
          "id": "465bd9cc-a176-483e-a900-c8223a0f17cd",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "d045af23-5b1f-42e0-88ff-c4f6642756fb",
          "status": "Created",
          "code": 201,
          "responseTime": 4760,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "c777449f-3ec8-4fb8-96c1-c212483fb888",
        "cursor": {
          "ref": "78140727-f722-4cf0-aeaa-a46307c65306",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b47da2cf-312a-4d66-9d7a-5a57c1c730e7"
        },
        "item": {
          "id": "c777449f-3ec8-4fb8-96c1-c212483fb888",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f1c10313-7b11-44a2-bae3-92b24f463bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4795eaf4-c797-4d37-b762-893d8567e02f",
        "cursor": {
          "ref": "44c5d81b-b84f-4290-9188-b0dc96c33dae",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "53e37f89-da16-41df-bc49-d85562252903"
        },
        "item": {
          "id": "4795eaf4-c797-4d37-b762-893d8567e02f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4d835099-f63b-4782-8cb2-026e8cdf3b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977e620c-52e2-48aa-ae58-199cfe4ed00c",
        "cursor": {
          "ref": "195b5783-d170-4ffb-9d8f-0f9c97c6476e",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1d914d40-8347-4b8d-8644-5dc301b130e7"
        },
        "item": {
          "id": "977e620c-52e2-48aa-ae58-199cfe4ed00c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "793e1b6c-150d-439e-b1f3-f29172987eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb5ec90-a34c-4192-8b6e-273e8fa8b971",
        "cursor": {
          "ref": "e518e646-c045-49cc-8d7a-f8d52cc02514",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "677f3d1f-a174-4aa2-9d09-a931537b5eef"
        },
        "item": {
          "id": "6eb5ec90-a34c-4192-8b6e-273e8fa8b971",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5ab46b4a-0dfb-4044-ac1d-d57c9f3c66d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dee1be-aeb3-4029-869e-956d08e48868",
        "cursor": {
          "ref": "9b9858e8-9b64-4a8a-aff5-b19c017bbb3f",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "67fe8de1-8a13-4d14-a58d-0ce9b09fc96f"
        },
        "item": {
          "id": "51dee1be-aeb3-4029-869e-956d08e48868",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4a5af3a6-7847-4f37-997a-9c13961a244d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aade649-7f30-4be6-9ab9-94d448f9c617",
        "cursor": {
          "ref": "b404dc87-f272-4b1a-a0bb-70186cc0fa29",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6d8f7d79-d4c2-40ba-b228-63b01a568da6"
        },
        "item": {
          "id": "8aade649-7f30-4be6-9ab9-94d448f9c617",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "25cd8dd1-a9ca-4dd0-bb92-61869036d6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd78368-b1a8-40ef-b173-403a2a3aad8c",
        "cursor": {
          "ref": "b77f00ab-a0cb-4093-8b0f-2eb85fb43e63",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6967712e-c2aa-462f-b775-67e88ccea28b"
        },
        "item": {
          "id": "5dd78368-b1a8-40ef-b173-403a2a3aad8c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cd55cbdb-1110-4b4b-968c-04d85637fc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e71c07d-67d4-40e5-9605-a084c0d5447f",
        "cursor": {
          "ref": "1808aba3-4f30-417b-8e07-a0cef3fdd25a",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f449d507-1af5-4a89-a102-1e11eb0fc479"
        },
        "item": {
          "id": "4e71c07d-67d4-40e5-9605-a084c0d5447f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "710f3ea0-f872-45eb-b61c-c5b535bb5171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfff80c-56ae-4326-8884-f24f29ef0ac0",
        "cursor": {
          "ref": "226358fe-a15a-4027-9cc5-f517939e9dc0",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0c32ea06-9cf7-44e5-a260-604a9e1a6b64"
        },
        "item": {
          "id": "9dfff80c-56ae-4326-8884-f24f29ef0ac0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b1b61511-f3e3-4cbb-9617-a41f62b4034b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d5dde3-32a8-40fa-8e12-3bf7fe49d6d7",
        "cursor": {
          "ref": "85f41509-847e-4f3f-9c45-ac7d53c76e06",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5a2cad00-1347-44e6-b3ca-71f0d2ce698d"
        },
        "item": {
          "id": "b9d5dde3-32a8-40fa-8e12-3bf7fe49d6d7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "02901dfc-9218-4573-bdd1-09f73cfc5e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26cbc5d-ade5-4a04-a509-37c7c1b6a0c7",
        "cursor": {
          "ref": "8ee1da9f-25c3-4e6a-9a20-c6af3a94e245",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c5ed620b-cc32-44fe-8939-65c7f15fcc07"
        },
        "item": {
          "id": "e26cbc5d-ade5-4a04-a509-37c7c1b6a0c7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "baa9850e-0574-4fca-bd61-696d519e3ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb325493-0124-40df-aa1a-ebc7d9cf42ab",
        "cursor": {
          "ref": "6f4ce882-a639-42e5-bffc-129917710c97",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a44ffce8-bbe7-4b90-8898-3ba99d120be4"
        },
        "item": {
          "id": "fb325493-0124-40df-aa1a-ebc7d9cf42ab",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dfac401d-67e6-4660-b600-a1f860e4ce76",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 3170,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "e823532d-9b5e-47f4-a7ec-455b6b139a85",
        "cursor": {
          "ref": "a2db7867-4fd3-423d-a700-26405773d776",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3f2db377-a056-4041-bf85-8284e9d4c899"
        },
        "item": {
          "id": "e823532d-9b5e-47f4-a7ec-455b6b139a85",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "010aec54-db53-4b54-aa44-8e279408a49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab63a64-5756-474b-84f3-909096c0342b",
        "cursor": {
          "ref": "a01a29bb-b4d4-4516-9c7d-1ac2241c6899",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ec603786-2f7d-45e5-81cb-fb91c7bb9d57"
        },
        "item": {
          "id": "dab63a64-5756-474b-84f3-909096c0342b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2341c6e4-ab2b-42cf-a392-2bcef520b8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033b5e5e-6e8c-4fd9-8d6b-f563d577d177",
        "cursor": {
          "ref": "f768f832-ccf6-4fd4-b98a-c396e3ac8486",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fdd762f5-9420-4426-bf9d-2a7e999a4aa6"
        },
        "item": {
          "id": "033b5e5e-6e8c-4fd9-8d6b-f563d577d177",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a5a48581-0267-4641-8746-149b9d3ca971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9719f05e-1560-43cf-befb-e2b67b6b2d75",
        "cursor": {
          "ref": "bdda81e0-8871-43f3-9aeb-dccde99482fb",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "141903f2-36b4-4d20-ae7a-5beb16022459"
        },
        "item": {
          "id": "9719f05e-1560-43cf-befb-e2b67b6b2d75",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1c97d40e-94c7-42e1-9769-830fabada0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdd6b80-9817-4666-a254-6efd64df4593",
        "cursor": {
          "ref": "3aa49b5a-38ab-4f53-8bb9-c70914e7b6af",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "751401c1-7c3f-44cf-bb4b-81b9d6a6b2e9"
        },
        "item": {
          "id": "1cdd6b80-9817-4666-a254-6efd64df4593",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f9516d8f-8c14-47f0-86d7-ca499950cfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1868189e-1bf8-4851-b023-566365213ce9",
        "cursor": {
          "ref": "04652682-3399-4f20-b59d-dfaf54a3a9ad",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6a53c41b-41d1-482f-9938-53f27ca4333d"
        },
        "item": {
          "id": "1868189e-1bf8-4851-b023-566365213ce9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5e342346-fc47-46b0-87ec-d079f173a3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cedbe2a-fd1a-4495-859f-a820b0c9358c",
        "cursor": {
          "ref": "8337128c-059b-4487-acf7-0d860636693f",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4111c74b-14b1-435b-aa40-b17fded1e6d6"
        },
        "item": {
          "id": "8cedbe2a-fd1a-4495-859f-a820b0c9358c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "58f8c569-0395-491c-83a6-60c1f7351142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439f71bc-d144-45e2-914c-81c4ac6d999d",
        "cursor": {
          "ref": "fc287452-6105-418d-bc4a-1c39be0d2506",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0b287b80-fb99-41b4-a0f5-d985a08e4f73"
        },
        "item": {
          "id": "439f71bc-d144-45e2-914c-81c4ac6d999d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d4093799-3858-46a1-aa29-6bd6563a36d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7c3d98-99b9-4632-b0c6-ae9b1b284f5c",
        "cursor": {
          "ref": "093b9940-c6a4-4477-9ae5-9dfca18dceaf",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4fba6601-f608-4409-80b7-59ddc2d78e18"
        },
        "item": {
          "id": "5e7c3d98-99b9-4632-b0c6-ae9b1b284f5c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "191ab227-2475-4455-a2d0-f6f46d2fc4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dc2d91-cbd0-48ca-84c5-ae0510d52206",
        "cursor": {
          "ref": "d7bc139c-2386-447a-8c9f-4e9a3363b021",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4af2a891-6897-454a-853d-77e3e1ca0c7e"
        },
        "item": {
          "id": "a5dc2d91-cbd0-48ca-84c5-ae0510d52206",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "91406432-fc0b-44c7-9773-63af77946cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37de5801-b337-44b0-b015-3b946ec83d1e",
        "cursor": {
          "ref": "e319a3bf-64b5-4a36-8cdc-a0f55196848e",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7375042c-6399-46ec-8ff7-e82dfb25aed8"
        },
        "item": {
          "id": "37de5801-b337-44b0-b015-3b946ec83d1e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1e794225-af0b-4e6b-9fc7-139becbbfa8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8917c64f-21c1-4eb9-bd30-3589392fa22a",
        "cursor": {
          "ref": "9e82b56d-4ff8-4a3c-a145-fac02327dc3b",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4fb8e459-fe99-4b50-834c-e80149f8f80f"
        },
        "item": {
          "id": "8917c64f-21c1-4eb9-bd30-3589392fa22a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d14dfbdc-7e42-4ded-8020-dddfa2a0922d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 615,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a28a56b-fa3f-4b02-825c-01957ac1bf81",
        "cursor": {
          "ref": "f31fc974-eb05-41c1-89ea-5c0d35f97afb",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4cedd00b-2275-44a2-9db8-24a546665332"
        },
        "item": {
          "id": "1a28a56b-fa3f-4b02-825c-01957ac1bf81",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b2996854-6e4b-4cf2-be39-d0cb6788068c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 534,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "1c38651b-e86b-4b28-be5a-64bd52a86a05",
        "cursor": {
          "ref": "5b992afc-0d36-4da7-9487-eaa26ca030b1",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "003a6e3a-2d74-428a-8b25-526a24f023b6"
        },
        "item": {
          "id": "1c38651b-e86b-4b28-be5a-64bd52a86a05",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "07f344cd-08f4-4d4b-a588-32a5417c3134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7470b19f-c46f-444f-9114-88b805b68d6b",
        "cursor": {
          "ref": "28fd1f30-ab40-4c55-b46d-1e3638c92fb6",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9a67ac53-7b80-4004-ba0f-d7a24d9908e9"
        },
        "item": {
          "id": "7470b19f-c46f-444f-9114-88b805b68d6b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c1d28084-9856-4a2c-9ef9-939a051a6b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979a8a9b-5683-433a-9fa3-33c2e1d141b0",
        "cursor": {
          "ref": "2652c2a0-32ce-4b49-b9eb-bc7ddd4faeb0",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0d6eddcb-3018-445b-8159-a5d7ffb885d8"
        },
        "item": {
          "id": "979a8a9b-5683-433a-9fa3-33c2e1d141b0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "05201685-5fc7-4df2-8ed4-aef640ebd210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a6cd68-c905-443e-8dd5-e62a2e9496d2",
        "cursor": {
          "ref": "d6a9a442-b8c6-4a53-a671-99115383031e",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7ad7972b-49de-4c6f-831f-0535c4009336"
        },
        "item": {
          "id": "18a6cd68-c905-443e-8dd5-e62a2e9496d2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ef29b568-aaec-4c19-b8de-aeb2b53c1f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a378c17b-b5f2-4147-b34c-699b477edc3e",
        "cursor": {
          "ref": "9a901fdd-cb83-4c95-b9e2-e68e80c859fe",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "07cad00d-8838-402c-a059-6643fad2f31b"
        },
        "item": {
          "id": "a378c17b-b5f2-4147-b34c-699b477edc3e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2fca5d44-2473-4b2b-ba32-5097e7117bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a5f988-df71-4dc5-91c0-2fc691ae22eb",
        "cursor": {
          "ref": "18382db0-661d-4fd8-a6be-92a70e8a3d33",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fc062381-dab2-4784-a09f-18b7ebacaabb"
        },
        "item": {
          "id": "93a5f988-df71-4dc5-91c0-2fc691ae22eb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0a35477f-7725-4bdf-8bc3-0fbfb145ddbd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 591,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fa4915-ba48-4d6a-889f-97e18b92f6f9",
        "cursor": {
          "ref": "213c3f33-1824-4507-a941-01418955fdd6",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8aac16d4-d529-4927-82cf-56b82ce0a8eb"
        },
        "item": {
          "id": "88fa4915-ba48-4d6a-889f-97e18b92f6f9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3b70b281-c473-433e-a501-c07cd016980b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2c050b-ab41-4117-88a3-b1aa36800699",
        "cursor": {
          "ref": "76a764ff-a14a-4010-98c8-926d6a0c8c65",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5bd39d80-6491-4011-833e-10e3717fe42f"
        },
        "item": {
          "id": "eb2c050b-ab41-4117-88a3-b1aa36800699",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "26d6ffd6-e21f-4796-8453-df5fae028935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa011ca-2de1-4c99-9caa-5dc8190da430",
        "cursor": {
          "ref": "6671140f-d0f0-42dd-99d7-b682a3127cfa",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ed94bdbf-f98d-44d5-a754-f84858f71701"
        },
        "item": {
          "id": "ffa011ca-2de1-4c99-9caa-5dc8190da430",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "91a27bed-74f0-4764-acde-96c1084a59fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70996e52-9231-423c-b570-0717571ed7fb",
        "cursor": {
          "ref": "f194853b-ef09-4836-86c2-ff2a3a6e1c2a",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "075da8b8-948a-4283-bcbe-0dd106f4c006"
        },
        "item": {
          "id": "70996e52-9231-423c-b570-0717571ed7fb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e4a0293e-efa2-42e3-960d-b2abdd5a9cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 929,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e7ed81-2322-4989-b0af-dad7829ee5a4",
        "cursor": {
          "ref": "362f618d-afc1-4903-a6f5-5f9300708f5a",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "df7fde73-1ce9-4887-8755-182fac03a96b"
        },
        "item": {
          "id": "c9e7ed81-2322-4989-b0af-dad7829ee5a4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "54c4d8d6-6083-4d51-b017-221b82d1136d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa1e79e-25ff-47a1-ad10-d3b185b012d4",
        "cursor": {
          "ref": "b5897010-cd67-488f-98da-4498b1b5e302",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "678b8c62-c4db-45fc-9c3f-55936bd5dc23"
        },
        "item": {
          "id": "6fa1e79e-25ff-47a1-ad10-d3b185b012d4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5650402e-3e4b-4130-84fa-8a08f96021e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac0776a-fb74-4e62-a093-a9f15a1f6ef1",
        "cursor": {
          "ref": "ba0b2267-19cc-4d10-b7b8-3bce8d163a30",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fd2d67ed-b204-464b-a1bf-ca2ee757de44"
        },
        "item": {
          "id": "bac0776a-fb74-4e62-a093-a9f15a1f6ef1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9dfa227d-e624-4709-b666-25c16f443bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87401561-35ec-4b50-8ff5-6292cb257e33",
        "cursor": {
          "ref": "e0df58cb-be47-4d90-84dd-44a087b54c69",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6396ac37-6cfd-4b9f-9f23-78e949026509"
        },
        "item": {
          "id": "87401561-35ec-4b50-8ff5-6292cb257e33",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4aa4ab42-3d84-4a7f-8e65-c8750ed3661d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee3893b-d9e4-48d6-b5c0-384d3eb5237a",
        "cursor": {
          "ref": "c9d5afa5-c8b3-447b-9f98-e35c4712be54",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ca296f6f-586d-4c49-b61a-bbcf49ba26e7"
        },
        "item": {
          "id": "cee3893b-d9e4-48d6-b5c0-384d3eb5237a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "11135785-a024-4161-b097-74e67ea3f74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6481530c-f303-4439-8c07-dcc2619ff988",
        "cursor": {
          "ref": "b65d2113-61fd-4d82-9370-e0498cb874f7",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "60389a83-7431-4f34-8232-4f38134ba3c6"
        },
        "item": {
          "id": "6481530c-f303-4439-8c07-dcc2619ff988",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8b7b5713-e06d-4048-af76-596e917469eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22a383e-7b8f-4cb2-864f-217366f0794e",
        "cursor": {
          "ref": "307b91cb-4ee3-4e10-bbfc-a795055ca549",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "671732e1-07d9-4cc9-8bbf-93835cf64689"
        },
        "item": {
          "id": "c22a383e-7b8f-4cb2-864f-217366f0794e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dc9684e6-b9d6-4e27-b9c3-f29029ab26e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfa7e8d-4988-4505-9fdd-330f5232eef9",
        "cursor": {
          "ref": "14b93bc7-ed9b-4818-bbae-735bfcd72b17",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a9b7324b-2445-47a7-8eaf-576c28705275"
        },
        "item": {
          "id": "1dfa7e8d-4988-4505-9fdd-330f5232eef9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "16981483-746c-4e0e-8153-0ec00681da04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9105ea1b-2a9c-41d5-a517-791834b757a9",
        "cursor": {
          "ref": "631beed5-3d08-4e14-b0d0-e9a31d96be3a",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "588e2ad1-fdf3-4adb-ab5b-fe80de9ce29b"
        },
        "item": {
          "id": "9105ea1b-2a9c-41d5-a517-791834b757a9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "13ccbe42-0f75-4b8d-b022-8d42339d4478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef10962-d9c2-47fc-87c9-416b21fb9a34",
        "cursor": {
          "ref": "924007ee-7f70-4237-9e4a-a25b228b8933",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "18f30531-923b-4596-a354-81621686db67"
        },
        "item": {
          "id": "5ef10962-d9c2-47fc-87c9-416b21fb9a34",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1fb036f4-03a7-43e0-b0f0-55ff1e851610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0027a44c-28b8-4766-9594-4073d0383b47",
        "cursor": {
          "ref": "f28d8b91-44d8-4ae4-bc32-ce86cfc2bc99",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4c5aa423-eb93-4f96-99fb-a86c5542ae8d"
        },
        "item": {
          "id": "0027a44c-28b8-4766-9594-4073d0383b47",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4e3e78f9-45d5-4e89-a00f-589d09acb321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62b5679-0090-48d8-8d3f-b252344181c2",
        "cursor": {
          "ref": "cbc103c3-bd84-4e45-a02b-ed575fdc725d",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "02ac99a9-0302-4387-a909-80e7e1bd536e"
        },
        "item": {
          "id": "b62b5679-0090-48d8-8d3f-b252344181c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "65451009-dd08-4b12-8aaa-32fa485266a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e938e5-63f9-4d29-988a-089dfe310cc5",
        "cursor": {
          "ref": "9feb6473-e0f7-4d41-a593-775b280735ec",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6f8c3fd5-f05b-4ac1-baa5-1d57c12b2147"
        },
        "item": {
          "id": "a1e938e5-63f9-4d29-988a-089dfe310cc5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6dc80e8e-fd59-4b71-83f6-d9b68ec74088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1fa605-042c-44e0-820c-3c7323071c7f",
        "cursor": {
          "ref": "785217d2-9e1d-4d88-80a6-b3f09c47aac9",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c966f71a-d7d5-47c8-87cf-8cd04855fc79"
        },
        "item": {
          "id": "9c1fa605-042c-44e0-820c-3c7323071c7f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "054a7b26-6742-417c-9066-c763699719d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47802620-d5e8-4a7a-a8ac-ea0c93485143",
        "cursor": {
          "ref": "e70a967e-5828-434c-ad69-6c5b58387d8b",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cfb1a4ec-654d-4aaf-9dda-9df34bd15ac9"
        },
        "item": {
          "id": "47802620-d5e8-4a7a-a8ac-ea0c93485143",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "915aacb4-bf0b-49dc-81c9-740c0dfdd7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387ab8cc-c2a3-4cca-ae22-9134c6203679",
        "cursor": {
          "ref": "4d489762-0dd0-41e5-b52c-f28af337be68",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "57e2332b-d584-4af3-9c45-0c8e143e4f3e"
        },
        "item": {
          "id": "387ab8cc-c2a3-4cca-ae22-9134c6203679",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a2a22c40-34ae-40d3-acdf-9c260b2693e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5c2a67-6949-4de4-9708-0b54cab9be81",
        "cursor": {
          "ref": "d731cb68-60c1-4694-8d4b-7a8f41127fee",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ca2fc8c1-ef7e-4579-94d7-058aecf1ae5e"
        },
        "item": {
          "id": "9f5c2a67-6949-4de4-9708-0b54cab9be81",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "07ccffb0-27d5-4c77-9d5a-7dd3e70b26bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe811ac-0837-4660-ae65-ff0eb80a5b0d",
        "cursor": {
          "ref": "e873f48d-c4af-4521-8b51-b4ac96fa609a",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8f86f994-6cd7-4052-b54d-55e42f8bb2b1"
        },
        "item": {
          "id": "4fe811ac-0837-4660-ae65-ff0eb80a5b0d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f09b889a-cb13-43ef-90f9-9a1edd85d158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f583cba2-15a3-443c-9172-65fef0a66cec",
        "cursor": {
          "ref": "28fd453f-f94f-40dc-b87e-b2e6254ff363",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "61da1843-49d9-482b-9049-fd59f11d2952"
        },
        "item": {
          "id": "f583cba2-15a3-443c-9172-65fef0a66cec",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "de53e1a0-7acf-4bbb-9a2b-9cf32888d721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d86a86-0e27-4f82-b240-4f1f45e1a952",
        "cursor": {
          "ref": "082141f2-9f4a-42d1-a469-706dfdb71ac3",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3b6826b3-282e-433d-b40e-45910badb4b3"
        },
        "item": {
          "id": "05d86a86-0e27-4f82-b240-4f1f45e1a952",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bc7caee0-582e-4ed6-aa3a-76a5038bbc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b012c23-b7c8-4dea-ae1d-c8bb8335a236",
        "cursor": {
          "ref": "f011e137-9658-4cdb-8ce7-7ff7be95dc52",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "da140cd9-d3b3-4ec7-97b3-d9583238bf8b"
        },
        "item": {
          "id": "7b012c23-b7c8-4dea-ae1d-c8bb8335a236",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a47f2ed9-76db-47bd-93e2-473685089aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 986,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091d242b-325c-434d-9f7b-30ea0547c34e",
        "cursor": {
          "ref": "1f10f17e-59da-432e-b381-71dee4591e76",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d9867e9b-110d-417d-90c6-8bc465fe81c4"
        },
        "item": {
          "id": "091d242b-325c-434d-9f7b-30ea0547c34e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "98e43c65-8291-4ee2-bd9c-88f141d552e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d65c9a9-2489-4633-a2ba-818df1907ad5",
        "cursor": {
          "ref": "6742d671-1ec9-4adb-867b-ba9d2110c1f1",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "72f60d39-3905-4aa4-8326-b73e95ef0b8c"
        },
        "item": {
          "id": "4d65c9a9-2489-4633-a2ba-818df1907ad5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0e2b95ef-5f24-49e7-83ad-54a1489ee004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8a1c48-b0a3-4d63-85bb-18df65591b28",
        "cursor": {
          "ref": "607bdac9-1eac-43c9-bb48-7595663335bc",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "534f1789-0f3a-43ca-b8e0-f1d1925bbf4e"
        },
        "item": {
          "id": "6a8a1c48-b0a3-4d63-85bb-18df65591b28",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "91050e02-91a5-4d42-b083-69835f7c87c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1096,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dbbdcf-03e0-4814-a1c1-9eea1fd9b114",
        "cursor": {
          "ref": "18b895ba-6524-4492-bb78-8c7e396707a3",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4e54fdc5-4c31-4dfe-beac-5ac4a04924a1"
        },
        "item": {
          "id": "e1dbbdcf-03e0-4814-a1c1-9eea1fd9b114",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8d4f34b9-ffa1-4aed-a532-81b6868af65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43be24fb-b668-4206-8bd7-7938ffddef24",
        "cursor": {
          "ref": "5d8e898e-6341-434a-9c2c-664b51c82df5",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2dbe6f33-3378-458b-a181-5d4dc31ec61b"
        },
        "item": {
          "id": "43be24fb-b668-4206-8bd7-7938ffddef24",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f0148f79-8fc6-4a46-b4a5-6472431bb67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08848ba7-022e-44a6-a6dd-1f688036d22a",
        "cursor": {
          "ref": "4265d5a2-e20e-48c0-bde1-514f0e59ea06",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "862e8e1e-dc1f-47e1-91b3-2d728e8b9d6d"
        },
        "item": {
          "id": "08848ba7-022e-44a6-a6dd-1f688036d22a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3a0774b8-b9f4-4acf-9298-56efeca17877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e30b8de-98ee-4088-aa0e-171945267956",
        "cursor": {
          "ref": "0b6b0b70-93cd-4278-9e71-ea45336d80e0",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e1266921-2dd2-478d-88df-321a733b78b2"
        },
        "item": {
          "id": "0e30b8de-98ee-4088-aa0e-171945267956",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7bde1680-fbb4-45c1-9a9a-48b291189859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb103505-6b6c-432a-8c95-356094788991",
        "cursor": {
          "ref": "fa7b947c-2e42-4f2b-bd06-f8968f762983",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "931d86ca-5263-4cc6-b588-f1224a8a2d3e"
        },
        "item": {
          "id": "fb103505-6b6c-432a-8c95-356094788991",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "667fac6f-7162-4665-8d68-667f84d98818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3768f924-d05f-451a-a7a0-ad1ba6cc21e4",
        "cursor": {
          "ref": "96080fc4-b2b4-41ae-9158-2850e519ef0f",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "57a2dfa3-c6b2-411e-97aa-c14d3ed263d5"
        },
        "item": {
          "id": "3768f924-d05f-451a-a7a0-ad1ba6cc21e4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b32c9341-9dfc-44de-878b-665ea7bb8671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e84b94f-8858-49c9-8a94-f8633f356124",
        "cursor": {
          "ref": "5849a5a6-08ba-45b3-b23d-b63385e4e8d8",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "19d6aa5a-e91d-4c83-903c-68991d203949"
        },
        "item": {
          "id": "2e84b94f-8858-49c9-8a94-f8633f356124",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d8ea00d3-0c27-480f-b0cc-a61900d4460a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f9f0f7-d8ba-4f8e-a78b-f28264b3adb0",
        "cursor": {
          "ref": "883d3737-ebb8-4cd4-8e9a-b1e0dbea4a25",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cf890bb0-d060-4e27-bc04-32ee87e18257"
        },
        "item": {
          "id": "47f9f0f7-d8ba-4f8e-a78b-f28264b3adb0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "66b4c43c-a6cb-4ebb-b508-608d112daaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25169256-7545-41e1-8034-67823c750478",
        "cursor": {
          "ref": "6e46df69-6c66-415a-968b-ab5aaed3481e",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cd313fea-9349-49e8-8899-3213e1fff515"
        },
        "item": {
          "id": "25169256-7545-41e1-8034-67823c750478",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1706bc7c-a5b0-49b6-a5ac-200969d5f5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2596b6c-8cdb-44c6-adba-2cb64e3276b7",
        "cursor": {
          "ref": "d3d4bc61-078c-4182-8fe7-0a1034f77bac",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8d8578d8-aad9-45b2-87e3-c330b66f6313"
        },
        "item": {
          "id": "f2596b6c-8cdb-44c6-adba-2cb64e3276b7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "337275c4-cd77-4f2f-86f1-5aad9f7d9eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c419ce-6dc8-4516-ba72-5aeb2ae294f8",
        "cursor": {
          "ref": "52e46046-c4ef-44e9-8b80-785e4c8d17ea",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "78cc84db-63e7-4531-b8c6-16af1a9aec5e"
        },
        "item": {
          "id": "f6c419ce-6dc8-4516-ba72-5aeb2ae294f8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d08f4a9c-a41c-473c-9393-66e5578446b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a71170a-362c-4c83-9f8b-e086d012c25c",
        "cursor": {
          "ref": "8b1a42cb-bb4c-4d04-b7cf-f30fccba7019",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e15214dc-b79e-4cef-8951-08c7539f153a"
        },
        "item": {
          "id": "8a71170a-362c-4c83-9f8b-e086d012c25c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "185b42d0-9c4b-42a7-98ae-997a5eb61433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cb03c0-69bb-4c90-ad69-384bcd759b7a",
        "cursor": {
          "ref": "5865fa56-ae7a-4da8-93d6-c467637b499a",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fe8f0377-0d6e-4e2a-acc1-6e45fa3897be"
        },
        "item": {
          "id": "25cb03c0-69bb-4c90-ad69-384bcd759b7a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "530f78b3-2cc2-49ca-b314-eb22ce412309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60ca38a-a299-4992-adbb-98e85905b981",
        "cursor": {
          "ref": "9059f027-f737-459d-a2e2-ad63ffe728c2",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8b137f71-fb8a-4d71-a04f-4e4f675c0f3a"
        },
        "item": {
          "id": "b60ca38a-a299-4992-adbb-98e85905b981",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "19c67eba-cf7e-48a6-8a1a-452af1c4625f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f94cdb-5ae5-4e4f-bc5e-7e20a00739b5",
        "cursor": {
          "ref": "d4463a47-be06-4cfd-972b-6f2bd56f5ac5",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ee3832c4-3208-4583-b1ef-1c9c3b8c763c"
        },
        "item": {
          "id": "d3f94cdb-5ae5-4e4f-bc5e-7e20a00739b5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "dbd3ebcc-d567-456a-96d7-2ed3a1b9b79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b9c01b-549e-477e-bfea-abe837255748",
        "cursor": {
          "ref": "2ed9c8c5-f602-4df1-a1b6-90ae88c70822",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bd6b14b1-6222-4c0e-83b2-29e4f8768c6d"
        },
        "item": {
          "id": "91b9c01b-549e-477e-bfea-abe837255748",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ce4ba834-593e-4f78-86f9-9f9757bd39d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded52a50-70c2-4f62-8674-85eaaa285f2e",
        "cursor": {
          "ref": "24a01d78-b5f6-49e7-a3e7-7a4d5729ff72",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "95ff3c5c-4008-4e92-be93-d31ca7938a9f"
        },
        "item": {
          "id": "ded52a50-70c2-4f62-8674-85eaaa285f2e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4853e2e6-4b87-4494-b026-30bbd69de671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe31db65-a885-4e35-ae0c-3fa129d3f74a",
        "cursor": {
          "ref": "9a761703-b6a6-447d-a4b8-a35029af561c",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "638a3218-49f9-4e27-996e-2b32fa607a9c"
        },
        "item": {
          "id": "fe31db65-a885-4e35-ae0c-3fa129d3f74a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "09f13751-bc41-4b50-ad3c-3bfb48c1e7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7569cf98-812d-4800-bef6-cba173d9f29f",
        "cursor": {
          "ref": "df5ea3ca-bd19-409e-9cd2-ab9af855e0f4",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "32730c5a-7c87-4a48-b5f0-00abf9db194e"
        },
        "item": {
          "id": "7569cf98-812d-4800-bef6-cba173d9f29f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "82330f27-bb90-46d3-8ba9-68d1694336e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a86889-f667-4449-91d2-9b6f5aa6373d",
        "cursor": {
          "ref": "f514880f-7d90-4a98-9843-2e328e23a0b6",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b9d0035b-4549-44d8-8759-20467a3ef252"
        },
        "item": {
          "id": "04a86889-f667-4449-91d2-9b6f5aa6373d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d10cdda6-3dc7-4f52-8ba2-f3f2accaf427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cea5a4-e3da-4567-9256-a6a572bf3067",
        "cursor": {
          "ref": "70723004-54a5-4e9f-846d-9f6a8a72334a",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e038c7cd-e771-46f6-be5b-1680c216b2e2"
        },
        "item": {
          "id": "12cea5a4-e3da-4567-9256-a6a572bf3067",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7b496dc2-639a-4314-a61a-2dba14d57ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be85bc50-6174-4e2a-956c-0f5f746b979a",
        "cursor": {
          "ref": "58d9a80f-546d-4b44-88f3-4ed8934e9bc9",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cf030585-cfb6-4091-b4f8-8b30f60dcc4e"
        },
        "item": {
          "id": "be85bc50-6174-4e2a-956c-0f5f746b979a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bb83a1ee-feee-45e4-95c1-dd52e3e7c566",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c0efcb-1269-4de4-810d-84357dfc9421",
        "cursor": {
          "ref": "ca3ac758-a0d0-4154-be96-da6bd3627f48",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f2265a04-4298-417d-a3d0-d73f176c3fb0"
        },
        "item": {
          "id": "38c0efcb-1269-4de4-810d-84357dfc9421",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "03d00e6b-b92c-4efb-8729-4e3d8ea75cd8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 528,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b9f1ef-3b11-44e5-8159-2d4b48e1ba42",
        "cursor": {
          "ref": "c1c93e82-f1ec-4786-8dac-3f88cf4b914f",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "155380da-eb17-49d1-b1cf-8df57a12ceb1"
        },
        "item": {
          "id": "64b9f1ef-3b11-44e5-8159-2d4b48e1ba42",
          "name": "credentials_issue"
        },
        "response": {
          "id": "309fc963-4687-45c9-9b54-d4d0e0bc6d4b",
          "status": "Created",
          "code": 201,
          "responseTime": 3662,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "98093833-3c7e-4ffe-8df3-f8a78aea9948",
        "cursor": {
          "ref": "348507af-4d05-431c-9769-ecd71a4f2c26",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d524d4e3-40bf-4680-a740-958259245d6e"
        },
        "item": {
          "id": "98093833-3c7e-4ffe-8df3-f8a78aea9948",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8089efb7-745b-4b0a-983e-da0e2be99d90",
          "status": "Created",
          "code": 201,
          "responseTime": 3961,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "c44722c9-b5a8-4452-8d56-fdb55851e0e3",
        "cursor": {
          "ref": "d1b7fd64-84ee-4d76-a9ba-dff95a072380",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f1e423b5-9c70-4d0b-9600-c9588247e44b"
        },
        "item": {
          "id": "c44722c9-b5a8-4452-8d56-fdb55851e0e3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d34c4562-67db-485c-8152-dcdaa41dec2a",
          "status": "Created",
          "code": 201,
          "responseTime": 5064,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "af6ecb58-8558-4349-bae3-f070715524f0",
        "cursor": {
          "ref": "1b9c7567-f09e-4476-b4b4-08f6ed6e9ada",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7774b140-6e5a-4bb8-8ffb-00ff709f5b54"
        },
        "item": {
          "id": "af6ecb58-8558-4349-bae3-f070715524f0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "72f5eb8b-a2d2-4a23-bd87-cc400fc61a80",
          "status": "Created",
          "code": 201,
          "responseTime": 5554,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "5dcb1ea6-c061-43c8-bcff-f426e69bd63e",
        "cursor": {
          "ref": "0c418753-b396-418a-9dbe-0322abd3a695",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2213647d-4d64-4e13-ab05-d203738ce39b"
        },
        "item": {
          "id": "5dcb1ea6-c061-43c8-bcff-f426e69bd63e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3ccac0f9-4b7c-43d4-88a2-d74eea40e4a8",
          "status": "Created",
          "code": 201,
          "responseTime": 6837,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "3b3cb5a0-606f-45c6-bf71-396667dc3546",
        "cursor": {
          "ref": "38917244-94f4-46fd-b538-e1de5ce1dcd9",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e3609f4c-e937-40ee-871c-5aaed78e341a"
        },
        "item": {
          "id": "3b3cb5a0-606f-45c6-bf71-396667dc3546",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cc594f4f-29a6-4d96-9fee-e88cb569fe42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3cb5a0-606f-45c6-bf71-396667dc3546",
        "cursor": {
          "ref": "38917244-94f4-46fd-b538-e1de5ce1dcd9",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e3609f4c-e937-40ee-871c-5aaed78e341a"
        },
        "item": {
          "id": "3b3cb5a0-606f-45c6-bf71-396667dc3546",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cc594f4f-29a6-4d96-9fee-e88cb569fe42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2000ab15-ec41-41db-abb1-ffe62ec40ae7",
        "cursor": {
          "ref": "4e59f024-cc89-4f42-8599-e8e1679ac3b5",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7767e8d2-98e9-4b56-a47c-7fa348400e2b"
        },
        "item": {
          "id": "2000ab15-ec41-41db-abb1-ffe62ec40ae7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0e2cf261-de57-432f-932e-be9184e8353c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845d3c91-1ce4-419c-b423-b7bf50b43736",
        "cursor": {
          "ref": "4595cf42-dfca-47b0-8889-1425dadb7d4b",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0e71553d-988a-4a6a-93e2-18d05e2302bc"
        },
        "item": {
          "id": "845d3c91-1ce4-419c-b423-b7bf50b43736",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b0615721-533a-4a49-84b5-2b20c307aece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d49e6c4-c53a-48a3-91f2-be0882ee7fd7",
        "cursor": {
          "ref": "0175d0e2-fc5e-4b5c-9df2-de81f9919c3d",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5901baf9-f8a2-423e-a2ae-18cacbb302f7"
        },
        "item": {
          "id": "4d49e6c4-c53a-48a3-91f2-be0882ee7fd7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "46d3b915-4306-4265-a6ce-e607c464df79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4b2602-d9c4-48f3-bdd2-e42ca65d1109",
        "cursor": {
          "ref": "e449ec3b-4569-4ea9-9c5f-73f3ac7a9258",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1346bca0-47d2-43ae-a710-0fc60167400d"
        },
        "item": {
          "id": "6e4b2602-d9c4-48f3-bdd2-e42ca65d1109",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c1a2a2da-80e4-465e-86b7-432b5c1cb36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f51a011-7121-4633-8bbf-81318a78175e",
        "cursor": {
          "ref": "ccd35258-5838-4bce-a3cd-ee4bf86853a6",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2b30c763-b06a-465c-adf2-f6954ae839c6"
        },
        "item": {
          "id": "8f51a011-7121-4633-8bbf-81318a78175e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3547f9a2-466e-4ece-88bb-59eff093f63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e94ed2-d2b2-4fcd-aa53-ee4d1176c958",
        "cursor": {
          "ref": "2a74416f-6121-4f41-aa36-71e59bc56caa",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "32dbae97-ac5d-47ca-93d8-19f8b082f815"
        },
        "item": {
          "id": "50e94ed2-d2b2-4fcd-aa53-ee4d1176c958",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d42c4287-ba3b-4302-8849-4839aeb68aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb42c12-e5ce-4504-bdf7-6a1b4a268f4c",
        "cursor": {
          "ref": "21781bed-7aa0-4bb2-ad3a-a5e342d0ff9c",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b6c63b32-c02b-4da4-b9f2-4f0313967318"
        },
        "item": {
          "id": "8fb42c12-e5ce-4504-bdf7-6a1b4a268f4c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5d71c37a-1411-40f3-910e-2c4864a4652a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e314c9a-ad9d-43ad-8740-800cd3cd5362",
        "cursor": {
          "ref": "9dfd1322-f2e6-409a-93cc-56f780371367",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6f31fee4-0864-4731-9d50-0ae38a3ea232"
        },
        "item": {
          "id": "4e314c9a-ad9d-43ad-8740-800cd3cd5362",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0953bbfb-205b-47c3-bcc6-46cf607ce766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04a3578-e62c-48d1-b5d3-9c42d05ccf4d",
        "cursor": {
          "ref": "a6904b44-8b9b-4149-9882-08b718fd5fd2",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b1eb9d74-c394-400f-b755-e2cc55815506"
        },
        "item": {
          "id": "b04a3578-e62c-48d1-b5d3-9c42d05ccf4d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f6d71be5-3c8d-4c6a-80ad-c51ca89502ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8797fda9-5184-4267-b042-9abd4bdd3496",
        "cursor": {
          "ref": "06526b87-ba38-4bd0-8d38-8aa9998ad29f",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "45bcc4da-8a9f-40bc-b882-13edb5253d25"
        },
        "item": {
          "id": "8797fda9-5184-4267-b042-9abd4bdd3496",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f44e1c98-4b3d-449e-87bf-825bfb2b3831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38158dca-6062-41a3-9369-3999376ad12b",
        "cursor": {
          "ref": "3863f5bb-1cd5-41cd-8246-0461d662e66a",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2ed1c0de-cc4a-4351-87a4-cb77d55b5d14"
        },
        "item": {
          "id": "38158dca-6062-41a3-9369-3999376ad12b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e953b026-7ec9-4779-8672-3beda27a8504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f027a1-b4ad-44ea-8a87-1abe429bef46",
        "cursor": {
          "ref": "d25e8cdb-53a9-4562-9bb9-88f0c0226ee8",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9c6f44fb-2022-4678-b820-eaee3667b48d"
        },
        "item": {
          "id": "19f027a1-b4ad-44ea-8a87-1abe429bef46",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3b8afa5e-1d5b-4c11-810e-089debad604b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3a1e4d-ede2-4e20-9e6a-538bdc2a4e84",
        "cursor": {
          "ref": "3a43637f-cef8-4e8c-aa4d-231e0d5f6503",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "82c3d171-805b-4ddc-9e51-3c5eab0c5b6d"
        },
        "item": {
          "id": "6d3a1e4d-ede2-4e20-9e6a-538bdc2a4e84",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "be410f54-32e9-459d-b2e6-6a0dd2c44475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdcde97-112f-4f09-9ef8-51f35a3362c9",
        "cursor": {
          "ref": "6e93b618-dc21-4bc0-9d30-a61ab29b71aa",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1ced8b7d-399a-499f-8cd5-d3c328c03d5b"
        },
        "item": {
          "id": "ecdcde97-112f-4f09-9ef8-51f35a3362c9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5253893d-9361-4c07-ad45-d58beffb3299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239be41c-0a76-4a24-8a55-e34f8ff45c47",
        "cursor": {
          "ref": "a4f1dba1-010f-42eb-a813-9fafd1786138",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fab03bdd-5121-495f-b501-197a7e708af7"
        },
        "item": {
          "id": "239be41c-0a76-4a24-8a55-e34f8ff45c47",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d6a9f0c9-d982-47c6-ab32-4cacb5bb11bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709ca0ff-1e28-450a-a937-fa25a5941803",
        "cursor": {
          "ref": "0b223810-9e20-4147-b4e2-a19f19bffc65",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2a32479c-c43b-4407-8904-164a55397ba6"
        },
        "item": {
          "id": "709ca0ff-1e28-450a-a937-fa25a5941803",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0bbc4e05-daab-4926-a48d-b87b82a460d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34118da-f7cb-4085-8eb2-1dbaa65c6d1b",
        "cursor": {
          "ref": "07bc7786-4a8c-4f1a-b5a1-238d6906cbd7",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "803ae794-2fbf-4afc-ab41-f11ad9b6f99e"
        },
        "item": {
          "id": "f34118da-f7cb-4085-8eb2-1dbaa65c6d1b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b3884c56-51b2-4339-947b-2cd9b327baf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909b374a-586e-4568-9ab7-9f3d413d5bd4",
        "cursor": {
          "ref": "e0ddbf85-6294-4fc7-a2b8-a7d967671f29",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f743469d-02e2-40ac-ab06-0e88ff338791"
        },
        "item": {
          "id": "909b374a-586e-4568-9ab7-9f3d413d5bd4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2d904eb4-f1f8-4a12-8250-ebf9696d6fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5a59fa-a528-40aa-b7fa-13c2d2975ee4",
        "cursor": {
          "ref": "dc8884e9-ac04-4bc8-a7ef-3cedebb1833a",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7d6aa867-d265-41e9-b615-c035ee4b4fbd"
        },
        "item": {
          "id": "5d5a59fa-a528-40aa-b7fa-13c2d2975ee4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "497cb436-17f2-4fa5-a2df-249f5fb589a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5231c1c-7c1b-4ade-b4a1-383ac64810bf",
        "cursor": {
          "ref": "c345d9a8-5695-4c6f-a208-2a319d0b6b2d",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1f92e74d-75d7-4ecf-ad92-ec6a0f7b4abf"
        },
        "item": {
          "id": "b5231c1c-7c1b-4ade-b4a1-383ac64810bf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4f6c3fa3-6bbc-46d3-bd7e-ad748ad8df5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7881a95-a423-462b-9f22-f6f924a74144",
        "cursor": {
          "ref": "7dacc261-11e9-4b09-b864-902e1d784027",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c6c6db9d-1006-4c70-bef6-81a79cbeb7ae"
        },
        "item": {
          "id": "d7881a95-a423-462b-9f22-f6f924a74144",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8a2867ae-9435-4244-b0fd-c77680d95acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e9b158-004b-463c-b3db-8e9f2fee41ec",
        "cursor": {
          "ref": "7e720a22-1b67-405a-a14f-790fa76a73d8",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ef667ef6-21f6-4034-925f-d1acc9df236d"
        },
        "item": {
          "id": "d6e9b158-004b-463c-b3db-8e9f2fee41ec",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3bbbee46-2fda-45f3-adca-8df87c360160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dd43ea-b603-43fb-a748-840f6a412b4d",
        "cursor": {
          "ref": "c93fc0f0-e2bb-42c1-b4a2-bb1a530fbaca",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "edd31468-21c8-4ef0-bb88-75f8760c236f"
        },
        "item": {
          "id": "67dd43ea-b603-43fb-a748-840f6a412b4d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e5aaaab5-b015-4688-84ae-2ca9486a355d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c60bb7-0e25-4245-b70b-9debe6fd278b",
        "cursor": {
          "ref": "0e1a7b55-9de1-4d8a-8a8f-f4f0f5e909cf",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "55a27139-5ebe-4fae-9261-7d26d065026a"
        },
        "item": {
          "id": "23c60bb7-0e25-4245-b70b-9debe6fd278b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a0812f37-a18c-4eba-98bb-37a447b088ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6951eae2-2170-4270-8f72-bd4c1e80a802",
        "cursor": {
          "ref": "6366e458-f37c-4c35-a08a-1ad30a2fe18f",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7d2117b1-adec-41ba-a046-066161b4e557"
        },
        "item": {
          "id": "6951eae2-2170-4270-8f72-bd4c1e80a802",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "98a21e2e-703b-4873-b64d-cae82228d03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4958fcee-eea0-4122-8b83-6f0cebdc7aea",
        "cursor": {
          "ref": "011dc40f-bfbd-408c-aa5d-60a81461402c",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e9242ead-5a3e-4feb-a73a-51f7e178c347"
        },
        "item": {
          "id": "4958fcee-eea0-4122-8b83-6f0cebdc7aea",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "531c6631-3c74-4659-898a-aea44d1b583c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f64191-aa9d-43e9-8877-caf17026656e",
        "cursor": {
          "ref": "0b99bf06-28b7-4807-99ca-33211aba7acd",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c7755d5d-3ddc-46e3-bcd2-ab1fa2047240"
        },
        "item": {
          "id": "f2f64191-aa9d-43e9-8877-caf17026656e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "99383ea7-99da-4a37-bf6b-13253c3f5470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6caa9e-6a21-411c-906b-1c95ed668614",
        "cursor": {
          "ref": "82507954-b151-4895-97d5-1945b2a368b4",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fb790e8f-5968-4c8f-934e-95fe85a221df"
        },
        "item": {
          "id": "0b6caa9e-6a21-411c-906b-1c95ed668614",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d328228d-fb56-44a6-b3c1-aab84a0b1afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9be4e0-432c-46ab-92bb-b30ff8d21f75",
        "cursor": {
          "ref": "990f7f5a-c077-4372-a4db-10c024ba4e40",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4b0c2dc1-fe06-429c-979b-8db9f9cc5f3c"
        },
        "item": {
          "id": "4b9be4e0-432c-46ab-92bb-b30ff8d21f75",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5a3fb5e7-5161-47fe-85e5-cff4a316557d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbc77a4-c85a-47ec-b870-b6fd9ccc2cb4",
        "cursor": {
          "ref": "67dca271-2b7a-4009-9570-def48ce8fceb",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "12d0cb25-74f0-4c18-8ce6-02c8be49a8af"
        },
        "item": {
          "id": "8dbc77a4-c85a-47ec-b870-b6fd9ccc2cb4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "78edb12d-ec55-4a13-8543-e4a80f5d0dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3213b5dc-71a2-4512-9604-0b98bedc8574",
        "cursor": {
          "ref": "6b091aac-8658-4796-9eee-8718aa9973f2",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "01a0198d-b688-4b06-80b0-8ed6c603070c"
        },
        "item": {
          "id": "3213b5dc-71a2-4512-9604-0b98bedc8574",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d4e7a138-5a09-48e4-b412-6d9cd1ed89cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94117ccd-a93d-4147-ad0d-172074d63574",
        "cursor": {
          "ref": "55f43c95-d966-4b45-ae4d-13f7aa1370b9",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4a322ea4-7f0d-4b5d-a0e8-5661d62f9ca5"
        },
        "item": {
          "id": "94117ccd-a93d-4147-ad0d-172074d63574",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7083f3e2-8dc5-4ad9-98bf-f78eb096f068",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6a9551-372e-4e86-b972-1f877721d1ca",
        "cursor": {
          "ref": "e2903287-f7fc-460f-9ad6-35bcb18cc611",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "48de3539-28a6-4ac4-9364-e5ccdc54692e"
        },
        "item": {
          "id": "fd6a9551-372e-4e86-b972-1f877721d1ca",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "01b75dd6-011c-4edd-a5ea-237c2998597f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 586,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe046b27-e203-470a-b896-2462d38ee487",
        "cursor": {
          "ref": "4a91778b-f338-4050-b974-602e7aed5fd1",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ddd2afa4-0a9f-4b77-9474-6f1becb21386"
        },
        "item": {
          "id": "fe046b27-e203-470a-b896-2462d38ee487",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "933f07eb-d8ee-4c62-a84e-004e7becdb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe046b27-e203-470a-b896-2462d38ee487",
        "cursor": {
          "ref": "4a91778b-f338-4050-b974-602e7aed5fd1",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ddd2afa4-0a9f-4b77-9474-6f1becb21386"
        },
        "item": {
          "id": "fe046b27-e203-470a-b896-2462d38ee487",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "933f07eb-d8ee-4c62-a84e-004e7becdb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5c399e-814c-4c4f-8583-199d2b3319e6",
        "cursor": {
          "ref": "af0e31a7-1999-42ab-859a-643022929a0b",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ac25e2dc-060e-4473-a36d-22f2c636e57c"
        },
        "item": {
          "id": "0f5c399e-814c-4c4f-8583-199d2b3319e6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fa1b78e1-ef63-49db-a16b-b39c9e6c9791",
          "status": "OK",
          "code": 200,
          "responseTime": 315,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "845a126c-1485-4638-afa5-8be55abaf8f2",
        "cursor": {
          "ref": "acae2cdc-3bce-4eea-b0af-0e01fd64bcc3",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e763d695-76ed-4f77-a368-0f995cd0c681"
        },
        "item": {
          "id": "845a126c-1485-4638-afa5-8be55abaf8f2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8ef987cf-560c-444b-b452-1476b869cde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea8d632-8711-4c17-a09d-17a631e3696d",
        "cursor": {
          "ref": "6757b7d1-4a6c-4465-b1a0-ec94115602b3",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f3a790f7-3d37-436b-8c13-9a312fd68ea0"
        },
        "item": {
          "id": "6ea8d632-8711-4c17-a09d-17a631e3696d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0004a02e-5bb9-41a0-8a7e-892708e89d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709c670b-b3ed-4a89-bdeb-0094780423bc",
        "cursor": {
          "ref": "de546549-041b-449c-893a-f2bafe08e571",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d7bf1db0-da7b-4850-af70-1b688f139b64"
        },
        "item": {
          "id": "709c670b-b3ed-4a89-bdeb-0094780423bc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e3db4624-03ad-4815-9494-bd9a18b58a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d577147-be75-46be-ac56-e24923128af1",
        "cursor": {
          "ref": "29a85857-7e84-44fc-bc3c-077d89a629d2",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "56aafec2-002d-4391-a8f4-3028f8e1ebe4"
        },
        "item": {
          "id": "4d577147-be75-46be-ac56-e24923128af1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f3e0008f-aaa4-439a-a746-c86be264048a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b8c55f-ae87-49f1-b045-8c261c6fd2d1",
        "cursor": {
          "ref": "125073c3-a561-4713-8d17-68c617bc1bbd",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e2a925eb-6818-4d37-a56c-a5aad14ac8fc"
        },
        "item": {
          "id": "b3b8c55f-ae87-49f1-b045-8c261c6fd2d1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "daad982f-2d5d-4360-95fe-2f9c61b4e89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141269c1-2bca-4d1a-a751-5a5e9f1374e2",
        "cursor": {
          "ref": "2492efcb-5bb3-475c-b1aa-cc032580fc85",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b82cafd5-c9b6-447a-85ed-54b70134d212"
        },
        "item": {
          "id": "141269c1-2bca-4d1a-a751-5a5e9f1374e2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2bb528ef-8d8c-4269-ace4-5425a4f45b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d69c75-3f04-497c-81cb-51f34186140d",
        "cursor": {
          "ref": "59b3ffa3-1d80-4570-b5c1-6d01b2e2696c",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d68ca458-3f1f-4ce3-8e50-d2d903959581"
        },
        "item": {
          "id": "33d69c75-3f04-497c-81cb-51f34186140d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1a7142e8-6d1c-4034-964f-5f4303bb997c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93d4c1d-0d6d-49ed-b202-96475f2db03b",
        "cursor": {
          "ref": "e244c12d-873a-440c-a76b-fdb44794df1a",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9d5e06b6-b5b7-4db6-9d7b-69f7757bb371"
        },
        "item": {
          "id": "b93d4c1d-0d6d-49ed-b202-96475f2db03b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3b3e79cb-6dfb-4ad8-81d3-6fb3b516191f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209205ad-cd56-4471-b613-7e005c7ec2e7",
        "cursor": {
          "ref": "afabb27b-65e9-4013-8e88-582d2774193a",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "387768dc-ca6c-4edc-b291-c48cf9c02a8b"
        },
        "item": {
          "id": "209205ad-cd56-4471-b613-7e005c7ec2e7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "44625125-ef89-4373-9c1f-5dbeb7a67e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a04211-baff-4960-ad6e-ca84fe29c4db",
        "cursor": {
          "ref": "324045d8-d475-4972-96a8-7add1d44d919",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c294222e-fd16-4483-b761-6d4f71509a88"
        },
        "item": {
          "id": "00a04211-baff-4960-ad6e-ca84fe29c4db",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "22310265-e852-4dc9-95ec-0e044f2725a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e0806f-d25c-4c3f-ab13-4165fdee6d08",
        "cursor": {
          "ref": "9140160e-3812-4e35-894b-ae5c52f830e2",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f72b1bb4-d476-41f9-bcf9-f2dbf0657275"
        },
        "item": {
          "id": "35e0806f-d25c-4c3f-ab13-4165fdee6d08",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0dbd6565-6008-4b14-a3d1-a12112d208f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2eb2fca-d3bd-4fbc-b2bc-cad11f42dea6",
        "cursor": {
          "ref": "ac3abc3d-e5e5-4e3b-be83-edb3e9ea35b3",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "56072ff8-f1d5-40a6-b519-2b1b9d5114d4"
        },
        "item": {
          "id": "c2eb2fca-d3bd-4fbc-b2bc-cad11f42dea6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "09ac45dc-ebf9-4605-a5ca-c74c6ab7f175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8254dd-b3ff-4c6e-b608-abf576799edf",
        "cursor": {
          "ref": "22e5fa7d-dda0-4acb-8464-6114d12f54df",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "96eeccfe-2560-4400-ad18-8cc6de07ce7a"
        },
        "item": {
          "id": "5e8254dd-b3ff-4c6e-b608-abf576799edf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f5a286f9-0ffa-4189-927c-0cea7b8eeaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c6ca39-7793-42df-b4bb-2aa7ff40bfc3",
        "cursor": {
          "ref": "03a716bc-3535-4c4b-8252-a0309343e3ab",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d3379e6e-dc1c-42ab-9791-f9e7920cf72a"
        },
        "item": {
          "id": "e8c6ca39-7793-42df-b4bb-2aa7ff40bfc3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a76ebb5c-8e13-42fb-8fcf-5c8f541f3d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30c0fde-7fd0-4024-ba2e-2d1b4500be6d",
        "cursor": {
          "ref": "2515a570-d630-4f80-a05f-646d0690f413",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b9dca9fb-f068-4451-b7ca-6a9ef8651cab"
        },
        "item": {
          "id": "b30c0fde-7fd0-4024-ba2e-2d1b4500be6d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3d6e7ab0-faaa-4c32-a8d2-4effe3396303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db0c9ba-70b5-4c23-ab8c-3864ac4fb137",
        "cursor": {
          "ref": "996feccd-12ba-49ab-a3d8-bfbf6a8f5e6e",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fd854a4d-d622-4bc9-9490-d3ad6d0fa93d"
        },
        "item": {
          "id": "8db0c9ba-70b5-4c23-ab8c-3864ac4fb137",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "9b7bc77c-0a0d-44a6-84bf-875a23c34eaf",
          "status": "OK",
          "code": 200,
          "responseTime": 2068,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "7142bb48-0d89-40fe-a473-9a9a9e0463c8",
        "cursor": {
          "ref": "630bab29-2c15-4aa8-8b51-4ef03e8f1620",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9dab7a70-d554-46d9-974e-d02fa4901ffd"
        },
        "item": {
          "id": "7142bb48-0d89-40fe-a473-9a9a9e0463c8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1facdb54-b7f7-4dd8-9d65-911d2875699f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef72c5fc-de80-46da-becc-5745ff2b127d",
        "cursor": {
          "ref": "3a25ef00-3618-408b-a574-4c769f758d13",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f6830aa7-3712-4787-b66c-4559ddf6e88f"
        },
        "item": {
          "id": "ef72c5fc-de80-46da-becc-5745ff2b127d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7e53e9b0-0462-47e0-b074-4e767f478b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d63562-ca04-4834-a0f2-d59df28f746e",
        "cursor": {
          "ref": "a3872fa8-ff40-4050-a3d0-371fcaab20bf",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3ec0d79e-bf1d-4aa1-b0da-782b174f9668"
        },
        "item": {
          "id": "e2d63562-ca04-4834-a0f2-d59df28f746e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "667c0ca2-5a04-48b8-9e4b-6ae5695998a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8950c36d-6c7f-47f5-a0f5-7ea674e0b8e0",
        "cursor": {
          "ref": "be8df282-adf0-471c-b8c7-a6df98fe3cd9",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6627b3b2-0f80-4a51-a38d-97586ed3abf0"
        },
        "item": {
          "id": "8950c36d-6c7f-47f5-a0f5-7ea674e0b8e0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6fae94b0-ad35-4063-a968-bbcfd7db9958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dc2def-6681-4f79-9039-ddeb0c04d36f",
        "cursor": {
          "ref": "3f9f3113-a28b-447e-959e-f76040a2e562",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a1016c46-c02d-45ca-a5c0-b70d543f8e7b"
        },
        "item": {
          "id": "03dc2def-6681-4f79-9039-ddeb0c04d36f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1e7ca2a3-306b-484a-a45c-15a191a62fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2e31bc-c41a-487c-8605-cbca754a8642",
        "cursor": {
          "ref": "1bfc9371-767c-429b-8555-2ed696bf2b0e",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "27712b68-fd98-427b-8614-77365a66cc55"
        },
        "item": {
          "id": "7e2e31bc-c41a-487c-8605-cbca754a8642",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c894566b-7711-4cf4-a257-6844635ca771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42adcb98-e07c-4ec0-9ad5-22d6644153c9",
        "cursor": {
          "ref": "83b9d5c1-625d-44eb-b0c5-ce086f49daf4",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "eebd639d-4442-4e89-a013-3652e81f4d4b"
        },
        "item": {
          "id": "42adcb98-e07c-4ec0-9ad5-22d6644153c9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "df2ac44e-31aa-4725-b351-8cbf78422eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317c4d92-0ab1-4029-96ce-8127ce69747a",
        "cursor": {
          "ref": "3d9b7b49-b23c-4ddf-8c55-d64d70dd95f2",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2977debd-850a-41d8-b206-5e61487bed2b"
        },
        "item": {
          "id": "317c4d92-0ab1-4029-96ce-8127ce69747a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "22c155c3-00f3-4346-9f7b-35bd437ef40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2855e511-9bb8-4f21-8b9e-bc61cc62d16b",
        "cursor": {
          "ref": "d9fd5ec8-43a3-4890-8b48-8226f2279753",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f003934e-d4f5-4632-88b9-ff94044bc71d"
        },
        "item": {
          "id": "2855e511-9bb8-4f21-8b9e-bc61cc62d16b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0db45c2b-fc21-414a-ab9c-b518bcb1a1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfc8d0f-3e66-4c18-99e0-96c3f12da12a",
        "cursor": {
          "ref": "7f8522a3-3bd7-4516-a508-09049df41094",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "49b56bfb-c84c-4bf4-a064-378a098bc1d2"
        },
        "item": {
          "id": "9bfc8d0f-3e66-4c18-99e0-96c3f12da12a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2f77d9ad-dd62-4f75-888a-296f68ae5ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5c9e43-a1e4-4fe6-8662-30fec250e3fd",
        "cursor": {
          "ref": "49773ff6-6b56-461f-9689-5c8d4bacf1c6",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a11c5203-27bd-49ba-9147-036d58661764"
        },
        "item": {
          "id": "5a5c9e43-a1e4-4fe6-8662-30fec250e3fd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d462d141-cc32-4e5f-bf52-640b3e4a24e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1d5a0d-1f83-48d5-a732-9755e9530dc3",
        "cursor": {
          "ref": "30ef9e02-243d-4c50-8c3f-e4560df56a9a",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1c0fa864-032c-44ae-8940-7b9a30a9e3c5"
        },
        "item": {
          "id": "6b1d5a0d-1f83-48d5-a732-9755e9530dc3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "848b7716-0cd5-437c-beae-89114bb683a3",
          "status": "OK",
          "code": 200,
          "responseTime": 318,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "cad2d5cb-d6f8-44e8-bbce-fccefd82708a",
        "cursor": {
          "ref": "f31ff1bf-c6e2-4f51-abe6-04ef92788b2e",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cd34bb00-7c7f-467f-8703-9518c012ff67"
        },
        "item": {
          "id": "cad2d5cb-d6f8-44e8-bbce-fccefd82708a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1b775588-29a4-4402-ae39-b8b621d01d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c8bbd5-f889-4ab2-94d0-a7f7cd7c6caa",
        "cursor": {
          "ref": "76755fe2-19d9-493c-8aa8-d6c50d5ef6e3",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ac862864-8937-4963-a603-8d3989b613e5"
        },
        "item": {
          "id": "92c8bbd5-f889-4ab2-94d0-a7f7cd7c6caa",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b8701672-871d-45d9-bb96-aa0aa21fcfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861e7b3a-6931-4093-a33e-03fe08d8ea32",
        "cursor": {
          "ref": "cb4a88f8-6ce0-4219-8826-a84f123084eb",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9811a841-e0b2-441f-af23-53a6ec12f362"
        },
        "item": {
          "id": "861e7b3a-6931-4093-a33e-03fe08d8ea32",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "debcef20-ea7d-4e78-aa75-d9bccd6f33f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fee3076-a958-4eb9-88f3-42676d0b6a7b",
        "cursor": {
          "ref": "eeb298e1-4761-4e44-a91d-e415f14c21c0",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d77a4193-c454-45cd-ace0-ad3b907e1fa5"
        },
        "item": {
          "id": "6fee3076-a958-4eb9-88f3-42676d0b6a7b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e4d96f9e-59e4-4907-a8a3-917a8c29ccd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ba14bd-3dae-4eb6-ae11-3f5e63d3ccb9",
        "cursor": {
          "ref": "8dec44ed-c5e6-4d47-8167-59b8c50fe63a",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8f7209c9-d54c-4b13-8cac-defa6e3e5704"
        },
        "item": {
          "id": "33ba14bd-3dae-4eb6-ae11-3f5e63d3ccb9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cb45fd7a-909e-43f5-8e87-63578147a86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d880c22-990c-4ec7-a50e-6748e11157b9",
        "cursor": {
          "ref": "68d43387-840a-4ece-b01b-9882a8eae2ae",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e636f183-184f-4e06-bc06-7ee01e5f537d"
        },
        "item": {
          "id": "2d880c22-990c-4ec7-a50e-6748e11157b9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0770fafb-93e4-4abb-b29c-70927d12712d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406dd40b-f498-491a-93a8-022b4cad617d",
        "cursor": {
          "ref": "5a1a195b-2d6f-48ac-8138-a96c4b812163",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "65093e87-40af-44f5-a7d7-27dab6211ad1"
        },
        "item": {
          "id": "406dd40b-f498-491a-93a8-022b4cad617d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dc4516a7-078b-493f-8312-16d130a935be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c9d91a-f1aa-4b34-94ec-f6bae06e4be9",
        "cursor": {
          "ref": "6c1c28b3-43a2-47f4-a312-b5304ccea4fa",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bddf3bbb-b6f1-40a3-93dc-8cfae83c8855"
        },
        "item": {
          "id": "42c9d91a-f1aa-4b34-94ec-f6bae06e4be9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c3c4f162-8a19-483e-8745-62ccdc218ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752a4a01-6792-4808-a2fe-e96058016841",
        "cursor": {
          "ref": "3b1e5ef9-a617-40cd-bed7-efa9adb78695",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "85ddabc2-57a6-43be-976b-6231c9b11def"
        },
        "item": {
          "id": "752a4a01-6792-4808-a2fe-e96058016841",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "516c74a6-7f26-4e4e-b270-cc2cedb66da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293c2197-3017-4254-a815-59e493c0cd3f",
        "cursor": {
          "ref": "e12a7f68-ff97-4407-9405-09a9ff277ba7",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "85a6e42e-a6b8-4378-9f5d-a656ba4a93b8"
        },
        "item": {
          "id": "293c2197-3017-4254-a815-59e493c0cd3f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2180d3c6-707d-41cd-b881-c32f2e8d4a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0737afa-202d-44e9-8279-3f36f3d0ccf1",
        "cursor": {
          "ref": "9d79076b-01d1-4d64-b287-c5448180b43f",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b370b40f-a919-43b0-b654-bf12bb000aca"
        },
        "item": {
          "id": "e0737afa-202d-44e9-8279-3f36f3d0ccf1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a78ff453-96c7-41f5-ac68-2b25c78f2291",
          "status": "OK",
          "code": 200,
          "responseTime": 365,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "920827e6-d248-40fe-bd83-3dbcbd50886c",
        "cursor": {
          "ref": "2457c113-7558-46a1-83f8-25b11e0d9132",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "80ed2d7d-d9a6-41d6-b883-e5b302c8507a"
        },
        "item": {
          "id": "920827e6-d248-40fe-bd83-3dbcbd50886c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "50d1de00-0dc6-42b9-98d9-3595c3643ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb427a7-b794-44a4-b4de-548d55ccd80c",
        "cursor": {
          "ref": "07d6c6ff-9a9d-4db5-9584-314ba2115187",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7b58c131-db65-43c3-ae70-9dd882d1d882"
        },
        "item": {
          "id": "1fb427a7-b794-44a4-b4de-548d55ccd80c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b702b5fa-b155-4f34-847b-6fe93ce51287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e0c8f8-183e-40e2-a6ee-c970a50dcab8",
        "cursor": {
          "ref": "f407967e-0f26-4252-8a55-ae8b577ca72b",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a7a401d3-cbd4-41e3-bd83-a5e1867ddd18"
        },
        "item": {
          "id": "a9e0c8f8-183e-40e2-a6ee-c970a50dcab8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8beadf03-28d4-426d-a4c1-29e46e7033e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a10533-f94d-4adc-bd63-5e094b04fc51",
        "cursor": {
          "ref": "5544e6e8-3e92-4e0e-8cfa-700cd0179f31",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ebb6e15d-8cd8-41f6-837e-975f616a9666"
        },
        "item": {
          "id": "e6a10533-f94d-4adc-bd63-5e094b04fc51",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "15b7963e-1d60-4a88-8bba-51bc60bb3d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f940b5-58e8-4ec6-a327-62b806a95aee",
        "cursor": {
          "ref": "d8b859d8-0d63-4b9c-ba47-3f3c4d1d8e00",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cf8d6322-a422-436f-82e4-951fe8c3ea5d"
        },
        "item": {
          "id": "c8f940b5-58e8-4ec6-a327-62b806a95aee",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c5dc132c-8149-4332-9a58-0100f1d5e1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba073f41-c341-4240-b207-0c1746f2c596",
        "cursor": {
          "ref": "99101fbd-e56d-4959-9f81-6bc9381d9916",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4d18a2df-e3b7-47e6-b604-321b283a5239"
        },
        "item": {
          "id": "ba073f41-c341-4240-b207-0c1746f2c596",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2312706b-d648-42f4-9d13-b61e708c1478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad77806d-3a9d-4853-9dd2-98b170d8cf52",
        "cursor": {
          "ref": "095ef730-ed26-40d6-9e6c-2972d3ad34a0",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f4cf1ea4-fbc4-4e6d-9798-f65447c3f2a2"
        },
        "item": {
          "id": "ad77806d-3a9d-4853-9dd2-98b170d8cf52",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "07d25540-3fb4-4a00-bfc1-9154db9a034c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a720fae-4903-4198-9bf7-fa2c15018634",
        "cursor": {
          "ref": "49775d79-0ac9-4633-a4fa-dfb880ad822e",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f5ccf467-a2a3-4412-a654-c10e8c85fd95"
        },
        "item": {
          "id": "1a720fae-4903-4198-9bf7-fa2c15018634",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4a57751a-2037-4ef7-9066-b453ea51ade0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6501ea33-c3f1-442e-b0ce-e2ddf7db22dd",
        "cursor": {
          "ref": "3f87db6d-9b97-421d-b4c5-23447e017a15",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "34e26986-55b5-457e-b543-799100a65aa0"
        },
        "item": {
          "id": "6501ea33-c3f1-442e-b0ce-e2ddf7db22dd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2cab887c-79fe-4890-bf78-78f714d6239e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ba1cda-84bc-4886-a904-414d4ae8a2ad",
        "cursor": {
          "ref": "d0d4f1a3-0f3d-451e-a061-590368f995da",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3d4082b5-ff9c-42eb-a613-c8893de207f6"
        },
        "item": {
          "id": "e8ba1cda-84bc-4886-a904-414d4ae8a2ad",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4fe572f5-1d6f-44fc-afb2-a7aafde6c064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00aa48a0-f292-4470-b13f-edd0c06bfc84",
        "cursor": {
          "ref": "b4cd5d4a-8c80-40cf-8bde-f220ab4628b3",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cafcd9a0-cd72-45bc-9975-039b826aa22c"
        },
        "item": {
          "id": "00aa48a0-f292-4470-b13f-edd0c06bfc84",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b9038167-f9eb-4717-88d0-d1cf7d881fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4167c3ba-54ec-421a-ab3d-541b866d757d",
        "cursor": {
          "ref": "294226d4-9322-4e24-8d07-df5c5e7fdffd",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "041f4b82-2cd2-42df-885d-ab75fe62c8ae"
        },
        "item": {
          "id": "4167c3ba-54ec-421a-ab3d-541b866d757d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9b1b09ce-8f80-4a41-bb8a-258b6cb5faf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5413396-58d8-43fd-a89f-fc9999415888",
        "cursor": {
          "ref": "6f8b3b15-fc79-43d3-a213-ec87a2cb9cb0",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "69d48fcb-61de-4755-b343-f4aabff414db"
        },
        "item": {
          "id": "d5413396-58d8-43fd-a89f-fc9999415888",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "245237df-793c-4ec5-af83-eb440bbb5344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f8509d-c822-4c00-a966-a52300cf68ee",
        "cursor": {
          "ref": "47eea289-ac74-4506-ba44-13bb08a5be36",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fedf5a05-52f5-4013-bca2-fd305ebfabca"
        },
        "item": {
          "id": "39f8509d-c822-4c00-a966-a52300cf68ee",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bec4f03d-a1c9-467d-bb32-e14c74ae8009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d50a853-b1ef-483a-816a-75d63828302e",
        "cursor": {
          "ref": "a5893e18-7172-436f-8c08-fa12f5654fa4",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "29d1ec41-63df-49da-9fa0-06af26b7cf89"
        },
        "item": {
          "id": "4d50a853-b1ef-483a-816a-75d63828302e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4b1a5298-aa10-41b0-9d8c-6ab83971c943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2394b8-ddca-415e-bfc8-cd9c825f1fc2",
        "cursor": {
          "ref": "960c6960-3c04-4681-ac3e-660b49b2e1fb",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5fe256fe-961b-404c-bd5d-8e7668e53fa3"
        },
        "item": {
          "id": "fc2394b8-ddca-415e-bfc8-cd9c825f1fc2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b05dcbb0-ea2a-4052-90f7-303d3f259fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043e8bc1-c4d3-4f50-a3c7-75ddb3ea693b",
        "cursor": {
          "ref": "f19ffe7b-b396-4066-9df7-0ef72142639d",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ea305fd6-e425-433a-aee9-0257ba90bca7"
        },
        "item": {
          "id": "043e8bc1-c4d3-4f50-a3c7-75ddb3ea693b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2425f9d3-72ca-4628-b81a-300dff0229c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078c614c-7921-4054-b239-6046f4fc8438",
        "cursor": {
          "ref": "50b39626-e553-4d4c-af18-7a5c1994580c",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "89b9855e-01eb-40ba-abe3-7ffe869f6a12"
        },
        "item": {
          "id": "078c614c-7921-4054-b239-6046f4fc8438",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5e1ea11d-0ecd-4eb0-9ebd-79dde5ae09cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e9d0ec-a497-478a-a022-69ca3d4747f6",
        "cursor": {
          "ref": "eaa68a5a-5de5-4a54-a4f9-387dbff4a84e",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "707eb9c5-b1ce-4e7d-904b-08097fee61eb"
        },
        "item": {
          "id": "24e9d0ec-a497-478a-a022-69ca3d4747f6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1dab12b0-27dd-4f4c-8d95-35ea570d2810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e92671f-4d0e-4d81-86b1-6a53d87ac8a4",
        "cursor": {
          "ref": "fc205257-427f-4b1b-aff8-b8616aa6d913",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2c3fb318-2dbc-4325-9942-feaddb260d9a"
        },
        "item": {
          "id": "1e92671f-4d0e-4d81-86b1-6a53d87ac8a4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1cb93fa3-5ecd-441f-ac41-4be586ac0e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c191db8b-e311-4806-9da1-21e3f6653725",
        "cursor": {
          "ref": "9eecbc17-453c-40aa-a8c0-cb121d029948",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "474505a5-b573-4eff-b1ec-1d0d90de2226"
        },
        "item": {
          "id": "c191db8b-e311-4806-9da1-21e3f6653725",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f4d6ab9c-30b6-4937-a654-ecb76292db8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf9f985-6157-4f64-9be3-8d9c30afea4b",
        "cursor": {
          "ref": "5bfb4ccf-5635-438b-b3e6-30310c2e7889",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "48d1ccce-6b22-45da-9b40-cbe9f11606f6"
        },
        "item": {
          "id": "cbf9f985-6157-4f64-9be3-8d9c30afea4b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bd4868b7-37c0-4604-b5e2-268160f8fa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102e3271-8bc6-4f34-b8b0-dc0b5bbad870",
        "cursor": {
          "ref": "75792e63-4547-4533-ba41-da2cd85d200d",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9128d450-3d12-4487-adc8-103f569ca95c"
        },
        "item": {
          "id": "102e3271-8bc6-4f34-b8b0-dc0b5bbad870",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "840bab2e-a7d4-48b5-b3a8-3ab65c893128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38b35b0-92a8-4894-b26b-c2e9a42fa564",
        "cursor": {
          "ref": "67a40570-795f-4d14-8a53-231faf24660f",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9b5ec4f1-05f3-44e8-bd31-1a3d269896cb"
        },
        "item": {
          "id": "b38b35b0-92a8-4894-b26b-c2e9a42fa564",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "906754b6-dc17-43dc-bd9c-c1981db4ecba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7629bf6c-0511-4f59-9114-c48639b6ef32",
        "cursor": {
          "ref": "e8192ab8-6170-44ce-a072-7515950d2db3",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "afb51599-56ee-49b5-9b8f-5bac26dc4d5e"
        },
        "item": {
          "id": "7629bf6c-0511-4f59-9114-c48639b6ef32",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "579d311b-5687-4597-98fc-5f01d9bd4949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3809f346-e715-4c70-a666-9d9e4a9f69d3",
        "cursor": {
          "ref": "7ea2b31d-b5b5-455d-ab8c-c4199ceaf823",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d889ca9b-54a7-44ae-b5fa-460af2db297b"
        },
        "item": {
          "id": "3809f346-e715-4c70-a666-9d9e4a9f69d3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7c6d92a8-98e9-4451-9f29-4e5fce7622fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4fdcd9-bebd-46fd-b0c7-78ae258996dd",
        "cursor": {
          "ref": "85ed3610-b1cf-456f-b61e-21b277714030",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2b34ee17-734a-4cc1-9d51-cc80c2dff661"
        },
        "item": {
          "id": "8e4fdcd9-bebd-46fd-b0c7-78ae258996dd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "450d23b2-8c4e-4764-b61a-11be0ed6cf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7938d1d8-d540-4c28-9bd1-61484839eb6d",
        "cursor": {
          "ref": "18eb2554-580b-45de-bc10-ddf19590359e",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b0f544ef-c9fe-4d0d-b55e-920838f47b8a"
        },
        "item": {
          "id": "7938d1d8-d540-4c28-9bd1-61484839eb6d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7fb382f9-5b1d-430d-be65-6b18ed7bcbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18835b04-9c42-45c5-a30e-98bab3bced8c",
        "cursor": {
          "ref": "01e8b1ae-60f8-4db1-8dc5-08ce33f33137",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6e4509fd-8d2c-45cb-82c1-f2786a0a1f1c"
        },
        "item": {
          "id": "18835b04-9c42-45c5-a30e-98bab3bced8c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d6ba7b44-b908-448a-8ab0-914ecc9884cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb8cc44-c43c-4e53-99f3-c3ec76c2e5cf",
        "cursor": {
          "ref": "3d456f30-15ba-4d56-a53b-02dedfeafc00",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6f72a93d-b1dd-4d82-a428-f970835753b9"
        },
        "item": {
          "id": "3eb8cc44-c43c-4e53-99f3-c3ec76c2e5cf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6b0ce5e0-a935-44b2-9039-8e6b631e673e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009efefa-7f3a-4c21-a33b-d17d88b4db30",
        "cursor": {
          "ref": "5d3f2a8e-466d-4f98-80d5-c9bb2479d4f0",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2186625d-eb90-4297-96ea-adcb950253fc"
        },
        "item": {
          "id": "009efefa-7f3a-4c21-a33b-d17d88b4db30",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ddbc80b6-affe-4e4c-bc33-8b4b66a6d31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ed9bad-94e4-4b9c-9d18-8f7ab1f87623",
        "cursor": {
          "ref": "8d428878-772c-41ba-a9f7-cd030168bfdd",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6cc29c3d-7451-490c-bd90-8b5f0cc3e20d"
        },
        "item": {
          "id": "26ed9bad-94e4-4b9c-9d18-8f7ab1f87623",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7a30f958-ef54-4f98-a57d-a8ca87705420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e91e21b-9153-4db2-97cd-57091d7db00f",
        "cursor": {
          "ref": "aae07d96-44c4-4c40-a0c5-4d6bc7306a90",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ff89deb2-4c56-44b2-90e7-581175afe50e"
        },
        "item": {
          "id": "4e91e21b-9153-4db2-97cd-57091d7db00f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "de791d8b-dfa6-48e2-9ec1-7e5e1ba27b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7373fa93-6ecc-4ea3-a103-efccd090d2a8",
        "cursor": {
          "ref": "48cb34df-3814-4f89-a643-1de6ca0c3ef5",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0cc400df-bb60-4a3c-94cd-fe6136b2cab0"
        },
        "item": {
          "id": "7373fa93-6ecc-4ea3-a103-efccd090d2a8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "faac9ec6-c892-4256-9258-e4568d43d2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1881c9f-a549-4dbb-b0cf-2b260e71ba2b",
        "cursor": {
          "ref": "c9dcfe08-edc4-43fd-980e-fe5981773953",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1bc9c384-f973-4e90-b2d7-32e2bcdc04f3"
        },
        "item": {
          "id": "e1881c9f-a549-4dbb-b0cf-2b260e71ba2b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "45c9eebf-0a47-4c17-906c-dfa8b4902c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b45691-ec1f-46f6-a5c3-22d780a598bf",
        "cursor": {
          "ref": "4f61f04f-5dcc-48ed-a68b-a4c58f806303",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "63a7d218-48f2-438c-a57b-6302305fdaa9"
        },
        "item": {
          "id": "a7b45691-ec1f-46f6-a5c3-22d780a598bf",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dfc8a4ce-0c56-4f49-9d17-7c4251206ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fadb4bf-dce9-4129-83d4-3a633af97929",
        "cursor": {
          "ref": "a37c469f-f138-401d-8a3d-52a3278ffc10",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "afcab4b3-f1c3-4ec2-a7d7-116eb105700f"
        },
        "item": {
          "id": "4fadb4bf-dce9-4129-83d4-3a633af97929",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c9747d74-49a1-483a-b43b-4afbc412d810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470ff78a-b09d-4294-bd02-c0ec2cfef4b0",
        "cursor": {
          "ref": "01e44701-2d25-486d-85f4-7603e6e6e1a5",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "30c93925-38f8-475d-b54d-b680bc98f00d"
        },
        "item": {
          "id": "470ff78a-b09d-4294-bd02-c0ec2cfef4b0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f84cecfe-d28f-448f-a757-7b66f8dd7858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f4ff25-f28e-4380-aa44-f2d79ff24db3",
        "cursor": {
          "ref": "a7ecf566-f9be-4e6c-9742-9a6b63383d6c",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b8a0919e-0723-44ba-b758-8d95f5236ac7"
        },
        "item": {
          "id": "31f4ff25-f28e-4380-aa44-f2d79ff24db3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5e87eecc-209e-4b8b-a0c0-2a5c21e080b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e810559f-6c77-4dea-bf13-92db6f39f641",
        "cursor": {
          "ref": "d5c37364-ad25-41f1-a149-3768e9cac00b",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "251d7a53-4674-416b-a71e-2e663f7ee24b"
        },
        "item": {
          "id": "e810559f-6c77-4dea-bf13-92db6f39f641",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b2875806-9eeb-4871-a48b-193c11323e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4d3a2e-7cb6-41b8-8df7-10fb90d196c1",
        "cursor": {
          "ref": "7fbe5b38-6eb2-4973-a3b6-e5d2b2575f8a",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "148abbd7-04e6-4683-9332-41b432e2dd7e"
        },
        "item": {
          "id": "8d4d3a2e-7cb6-41b8-8df7-10fb90d196c1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9721d418-a428-48ea-a750-9f7773a59095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1dbc4c-e652-4e6b-b394-4e46739a25c2",
        "cursor": {
          "ref": "782e6e8a-d56e-4baf-9615-725b6e878687",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ec9071e2-8167-4947-b142-762fbc1b73e4"
        },
        "item": {
          "id": "3d1dbc4c-e652-4e6b-b394-4e46739a25c2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9606bbc8-d0d8-486f-a661-6926bccdf063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53ac5ba-0157-4882-888a-a36a8565f921",
        "cursor": {
          "ref": "0c32fefd-2ccd-433d-9ec3-6b5fbc856801",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3b4d1133-8453-4537-a724-0b5722bb1838"
        },
        "item": {
          "id": "f53ac5ba-0157-4882-888a-a36a8565f921",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0f11ca95-2efd-48ae-903b-910d15d0b2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa35ebb-bb2a-4637-badf-dedfa2a62e44",
        "cursor": {
          "ref": "4319915d-60ff-433a-938b-ef4626efd995",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a4b578d3-ff58-4fea-ab29-585ea5bc9409"
        },
        "item": {
          "id": "4fa35ebb-bb2a-4637-badf-dedfa2a62e44",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "dca0d3e6-897e-4af6-8600-d045976ba74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce5075f-519d-478e-8316-23851cfab69d",
        "cursor": {
          "ref": "f3d8b4c3-8afa-4419-b989-8d570b2283bb",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "508eb7ed-c061-44f1-86ea-51de858812e7"
        },
        "item": {
          "id": "6ce5075f-519d-478e-8316-23851cfab69d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "342e666d-7195-47fb-87f1-e1afe36eccb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503ead85-7d5f-4549-874c-08505b838252",
        "cursor": {
          "ref": "7b8dfeae-81f4-4e8d-938b-59a5e744387e",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2b879636-6696-4c7a-8be4-a3437e5fe3b0"
        },
        "item": {
          "id": "503ead85-7d5f-4549-874c-08505b838252",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "303d3f21-8621-4e5f-b9d2-82a6fa2c6711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86789196-2e89-4b0c-970c-566bcc332478",
        "cursor": {
          "ref": "f592cd72-e18a-48ea-80be-094d97806fa6",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c7ae7c67-7f12-43a3-b75f-6f2930aa4935"
        },
        "item": {
          "id": "86789196-2e89-4b0c-970c-566bcc332478",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0d0787e2-ef3d-4e05-8de0-9c695f693703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45299137-7dc7-430c-b077-ffb25ef88594",
        "cursor": {
          "ref": "e9b33af4-533c-46e7-8ee2-aef1ca3ce1f4",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "56aafb30-27c8-40bd-ab6c-2355b7ecebfd"
        },
        "item": {
          "id": "45299137-7dc7-430c-b077-ffb25ef88594",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c17fa356-6f6f-41a0-a7c2-91e089b08e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab18aa9-1f54-49f2-9b6a-35c068507a43",
        "cursor": {
          "ref": "78a157dc-a18b-4817-ae03-bc8f345f0e2d",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a7a157b0-6532-436a-a3f6-77f3c224c388"
        },
        "item": {
          "id": "1ab18aa9-1f54-49f2-9b6a-35c068507a43",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b28acfd4-4924-4d40-b367-49b12fd81c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f682a827-ab91-4c6d-8ad9-60e68c813cbe",
        "cursor": {
          "ref": "7dd2d211-2ee1-475c-a2d0-4a5afa2eb38a",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5535f5d8-e2f6-4110-a092-52da27b0c7a0"
        },
        "item": {
          "id": "f682a827-ab91-4c6d-8ad9-60e68c813cbe",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "69f256b5-fae7-4745-a7ca-63f073ea5f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53061d45-43ab-4c6e-81ee-e0498ed52c26",
        "cursor": {
          "ref": "88191498-d6f3-4cfd-b0d6-df631711fac0",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1cbfc613-7c99-4e52-869f-2f3bd0b12f21"
        },
        "item": {
          "id": "53061d45-43ab-4c6e-81ee-e0498ed52c26",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bd851f8e-d8b7-4968-b27c-197be440c10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbccb33a-ab47-4b8c-9e0a-aac7286e0cf9",
        "cursor": {
          "ref": "857075f6-2d12-4992-9fff-0e3673c8f10d",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "527ae393-e024-4657-98cf-449676c204a4"
        },
        "item": {
          "id": "dbccb33a-ab47-4b8c-9e0a-aac7286e0cf9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "62965378-7381-423c-a1a0-2b38362844b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5b132b-560f-4c50-a0b4-437450f6d05c",
        "cursor": {
          "ref": "9a2740b3-14aa-4a18-b039-c62ead65297e",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6fb02e65-ff50-400d-abcc-e455d2b09873"
        },
        "item": {
          "id": "af5b132b-560f-4c50-a0b4-437450f6d05c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "65047c1f-8b56-4300-8eee-1097f1a91325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ee64da-b096-4994-8d7c-803a52f28223",
        "cursor": {
          "ref": "11a0a261-c600-4c7b-bf75-61918b6cd701",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "536eff6e-7734-46c8-a7f1-5966706ae9ce"
        },
        "item": {
          "id": "36ee64da-b096-4994-8d7c-803a52f28223",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e21bafad-1ae6-40a8-90c5-4167ea61f9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a01ff38-8255-4e95-a4d6-c2fed3d1769d",
        "cursor": {
          "ref": "db4af3c8-a129-44a8-a756-2fd16df07a6d",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3d4011fb-e7da-404a-85c5-a7af9abb4ac7"
        },
        "item": {
          "id": "0a01ff38-8255-4e95-a4d6-c2fed3d1769d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9dbaf6e0-0231-4b89-aeae-2b84cc8b17ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac7e4bb-ef87-4523-8fc1-005cbb077cc9",
        "cursor": {
          "ref": "8ac42c59-27be-47d1-ba8b-f154d1bd2685",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4f4ac9b7-4983-429b-8717-0a82e13c1ac6"
        },
        "item": {
          "id": "0ac7e4bb-ef87-4523-8fc1-005cbb077cc9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "08330a62-25ac-436a-85bb-1a8daa6c6fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a5ceff-35a1-40e7-ac89-831a8b5717c5",
        "cursor": {
          "ref": "0bfb75ea-b3e8-4e7a-a04d-c5f41bc98b46",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "74295972-85af-4cb0-b91a-85217ff35c17"
        },
        "item": {
          "id": "61a5ceff-35a1-40e7-ac89-831a8b5717c5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "113f57dc-fe14-4ee5-aa30-cebef7a9f936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3922fb0-786d-429f-a97c-72e243ba410f",
        "cursor": {
          "ref": "2ea652d8-cea3-46f1-892d-fd2a3c545c12",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7f3d1dbb-a5e8-437f-b3ae-f6534f9bca98"
        },
        "item": {
          "id": "e3922fb0-786d-429f-a97c-72e243ba410f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "eff78747-47ec-45b9-b46a-ce5aeff24e14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdb8c34-3717-4422-8816-69c37784fd25",
        "cursor": {
          "ref": "fd1043bd-2423-47c8-a383-6e53f6a500a6",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ef31a775-20e9-4e61-8c87-5c9a57dbdb16"
        },
        "item": {
          "id": "6bdb8c34-3717-4422-8816-69c37784fd25",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "34a70fcd-2902-4c20-8d5e-abb0288dab78",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 451,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76915b7-ae9f-41e6-abb7-cd15622d88f0",
        "cursor": {
          "ref": "00d33843-5e38-4019-9dc3-34a228ae0b7c",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d4f814f3-cce0-495c-98ba-12098de2b8ce"
        },
        "item": {
          "id": "c76915b7-ae9f-41e6-abb7-cd15622d88f0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8a8019d6-28f9-4422-88b0-0e7d1821c4a3",
          "status": "OK",
          "code": 200,
          "responseTime": 531,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c977ce-eee0-4c8c-a1d7-7e635ccd8efb",
        "cursor": {
          "ref": "ad4e6b6b-429e-451d-a5f0-59618d4f27bd",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "851b3d88-c302-40cb-8639-b0b01a75bb3d"
        },
        "item": {
          "id": "91c977ce-eee0-4c8c-a1d7-7e635ccd8efb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bc436f14-b49c-4cc9-9eb2-9a6c46cc1d21",
          "status": "OK",
          "code": 200,
          "responseTime": 2086,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d34398c-089a-4b3e-9dae-56bb77ec4328",
        "cursor": {
          "ref": "67db86b1-f3e5-4cac-82cc-1d5c9f104b52",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7fc2b578-b3e7-48b8-8e0d-88bb757b8b30"
        },
        "item": {
          "id": "9d34398c-089a-4b3e-9dae-56bb77ec4328",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ae414937-2f8d-430a-b029-8ac38a52b9ed",
          "status": "OK",
          "code": 200,
          "responseTime": 1788,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb396e99-654a-4a19-9bae-9a08f446f057",
        "cursor": {
          "ref": "2d4c7654-837a-4497-8daf-a271235096c2",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8dda3389-42cd-49b4-8835-66bf278be229"
        },
        "item": {
          "id": "bb396e99-654a-4a19-9bae-9a08f446f057",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fa0b7f96-c52f-410a-8230-778975d6e34e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb396e99-654a-4a19-9bae-9a08f446f057",
        "cursor": {
          "ref": "2d4c7654-837a-4497-8daf-a271235096c2",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8dda3389-42cd-49b4-8835-66bf278be229"
        },
        "item": {
          "id": "bb396e99-654a-4a19-9bae-9a08f446f057",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fa0b7f96-c52f-410a-8230-778975d6e34e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb396e99-654a-4a19-9bae-9a08f446f057",
        "cursor": {
          "ref": "2d4c7654-837a-4497-8daf-a271235096c2",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8dda3389-42cd-49b4-8835-66bf278be229"
        },
        "item": {
          "id": "bb396e99-654a-4a19-9bae-9a08f446f057",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fa0b7f96-c52f-410a-8230-778975d6e34e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8973745-b68c-42dd-a83b-9a3083fad843",
        "cursor": {
          "ref": "a70daebb-47b2-4a35-b956-ef3799e4da2d",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "123135e2-6033-4a02-923f-343e4031746c"
        },
        "item": {
          "id": "b8973745-b68c-42dd-a83b-9a3083fad843",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "24f0ff17-8375-414a-adbd-21e57bb57406",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 424,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9616981a-7153-40fa-bc34-558b7301b3e0",
        "cursor": {
          "ref": "cef6db5e-6f65-489b-b989-5be46b91f71f",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9ecb3fb1-9127-432c-a27a-dfed877aa558"
        },
        "item": {
          "id": "9616981a-7153-40fa-bc34-558b7301b3e0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c07d099c-b46d-4917-8f01-fb6a1f45179e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9616981a-7153-40fa-bc34-558b7301b3e0",
        "cursor": {
          "ref": "cef6db5e-6f65-489b-b989-5be46b91f71f",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9ecb3fb1-9127-432c-a27a-dfed877aa558"
        },
        "item": {
          "id": "9616981a-7153-40fa-bc34-558b7301b3e0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c07d099c-b46d-4917-8f01-fb6a1f45179e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e418538b-1371-46e8-b54f-aaa338aaadea",
        "cursor": {
          "ref": "c720f0af-3c54-4487-8728-143496632efc",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "eb1a5932-0f52-4c33-ae53-40f6308eca2e"
        },
        "item": {
          "id": "e418538b-1371-46e8-b54f-aaa338aaadea",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "fa3cb6a5-e799-4aac-8f11-e83d4af28fc7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 671,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf68c63-dc5a-48f7-9170-3775aa953942",
        "cursor": {
          "ref": "b04c84a6-c246-4b0a-b1ba-80885b53f4e3",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bd37e7ed-7da7-4b0c-bf5a-a432ab7ddbc5"
        },
        "item": {
          "id": "aaf68c63-dc5a-48f7-9170-3775aa953942",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "28e1fa8c-8c92-4bb1-8d24-48175940b067",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf68c63-dc5a-48f7-9170-3775aa953942",
        "cursor": {
          "ref": "b04c84a6-c246-4b0a-b1ba-80885b53f4e3",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bd37e7ed-7da7-4b0c-bf5a-a432ab7ddbc5"
        },
        "item": {
          "id": "aaf68c63-dc5a-48f7-9170-3775aa953942",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "28e1fa8c-8c92-4bb1-8d24-48175940b067",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82cd85b-e7ae-4e77-bfc7-b43f41a44ace",
        "cursor": {
          "ref": "2e24fac6-373f-4b7a-9e5b-e4e7f74cb352",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "537bf5e4-6a65-4a62-ad9d-5cf296c07563"
        },
        "item": {
          "id": "d82cd85b-e7ae-4e77-bfc7-b43f41a44ace",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "bd8e07f7-1c34-4167-b2bb-a427ec811093",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 686,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}